{
    "files": {
        "DataStorage.java": "import java.util.concurrent.ConcurrentSkipListMap;\n\npublic class DataStorage {\n    private ConcurrentSkipListMap<String, Integer> storage = new ConcurrentSkipListMap<>();\n\n    public void storeData(String key, int value) {\n        /* write */ storage.put(key, value);\n    }\n\n    public Integer retrieveData(String key) {\n        return storage.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private DataStorage dataStorage = new DataStorage();\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void storeGrade(String subject, int grade) {\n        dataStorage.storeData(subject, grade);\n    }\n\n    public Integer getGrade(String subject) {\n        return dataStorage.retrieveData(subject);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\", 20);\n        student.storeGrade(\"Math\", 95);\n\n        // Perform some unrelated operations\n        System.out.println(\"Student Name: \" + student.getName());\n        System.out.println(\"Student Age: \" + student.getAge());\n\n        // Retrieve the stored grade\n        /* read */ Integer mathGrade = student.getGrade(\"Math\");\n        System.out.println(\"Math Grade: \" + mathGrade);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentSkipListMap",
        "write_method": "put",
        "read_class": "java.util.concurrent.ConcurrentSkipListMap",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentSkipListMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListMap<String, Integer> map = new ConcurrentSkipListMap<>();\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentSkipListMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListMap<String, Integer> map = new ConcurrentSkipListMap<>();\n        ConcurrentHashMap<String, String> hashMap = new ConcurrentHashMap<>();\n        Random random = new Random();\n\n        // Initialize some unrelated data\n        for (int i = 0; i < 10; i++) {\n            hashMap.put(\"hashKey\" + i, \"value\" + i);\n        }\n\n        // Perform some unrelated operations\n        int randomNumber = random.nextInt(100);\n        System.out.println(\"Random number: \" + randomNumber);\n\n        // Write to the original map\n        /* write */ map.put(\"key\", 42);\n\n        // Perform more unrelated operations\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Iteration: \" + i);\n        }\n\n        // Read from the original map\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(\"Value from map: \" + value);\n\n        // Additional unrelated code\n        if (randomNumber > 50) {\n            System.out.println(\"Random number is greater than 50\");\n        } else {\n            System.out.println(\"Random number is 50 or less\");\n        }\n\n        // More unrelated operations\n        for (String key : hashMap.keySet()) {\n            System.out.println(\"HashMap key: \" + key + \", value: \" + hashMap.get(key));\n        }\n    }\n}"
}