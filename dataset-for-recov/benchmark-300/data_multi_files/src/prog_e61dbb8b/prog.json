{
    "files": {
        "DataStorage.java": "import java.util.Hashtable;\n\npublic class DataStorage {\n    private Hashtable<String, Integer> storage = new Hashtable<>();\n\n    public void storeData(String key, int value) {\n        /* write */ storage.put(key, value);\n    }\n\n    public int retrieveData(String key) {\n        return storage.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataStorage dataStorage = new DataStorage();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void storeGrade(String subject, int grade) {\n        dataStorage.storeData(subject, grade);\n    }\n\n    public int getGrade(String subject) {\n        return dataStorage.retrieveData(subject);\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private ArrayList<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public void displayEnrolledStudents() {\n        for (Student student : enrolledStudents) {\n            System.out.println(\"Enrolled Student: \" + student.getName());\n        }\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        student.storeGrade(\"Math\", 95);\n        Course mathCourse = new Course(\"Mathematics\");\n        mathCourse.enrollStudent(student);\n\n        mathCourse.displayEnrolledStudents();\n        /* read */ int mathGrade = student.getGrade(\"Math\");\n        System.out.println(\"Alice's Math Grade: \" + mathGrade);\n\n        // Adding more complexity\n        Student bob = new Student(\"Bob\");\n        bob.storeGrade(\"Science\", 88);\n        mathCourse.enrollStudent(bob);\n\n        System.out.println(\"Bob's Science Grade: \" + bob.getGrade(\"Science\"));\n        mathCourse.displayEnrolledStudents();\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.Hashtable",
        "write_method": "put",
        "read_class": "java.util.Hashtable",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.Hashtable;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<String, Integer> hashtable = new Hashtable<>();\n        /* write */ hashtable.put(\"key\", 123);\n        /* read */ int value = hashtable.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.Hashtable;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<String, Integer> hashtable = new Hashtable<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList and LinkedList\n        list.add(10);\n        list.add(20);\n        list.add(30);\n        linkedList.add(\"First\");\n        linkedList.add(\"Second\");\n        linkedList.add(\"Third\");\n\n        // Writing to the Hashtable\n        /* write */ hashtable.put(\"key\", 123);\n\n        // Performing some operations with ArrayList and LinkedList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"ArrayList element: \" + list.get(i));\n        }\n\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList element: \" + str);\n        }\n\n        // Reading from the Hashtable\n        /* read */ int value = hashtable.get(\"key\");\n        System.out.println(\"Value from Hashtable: \" + value);\n\n        // Adding more complexity with a nested loop\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                System.out.println(\"Nested loop iteration: \" + i + \", \" + j);\n            }\n        }\n\n        // Creating another Hashtable and performing operations\n        Hashtable<String, String> anotherHashtable = new Hashtable<>();\n        anotherHashtable.put(\"name\", \"John\");\n        anotherHashtable.put(\"age\", \"30\");\n        System.out.println(\"Another Hashtable: \" + anotherHashtable);\n    }\n}"
}