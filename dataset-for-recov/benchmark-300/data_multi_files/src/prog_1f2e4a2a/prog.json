{
    "files": {
        "Course.java": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.ArrayBlockingQueue;\n\npublic class Course {\n    private BlockingQueue<Integer> queue = new ArrayBlockingQueue<>(10);\n\n    public void enrollStudent(int studentId) throws InterruptedException {\n        /* write */ queue.put(studentId);\n    }\n\n    public int getNextStudent() throws InterruptedException {\n        return queue.take();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private int id;\n    private String name;\n    private List<Integer> courses = new ArrayList<>();\n\n    public Student(int id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void enrollInCourse(int courseId) {\n        courses.add(courseId);\n    }\n\n    public List<Integer> getCourses() {\n        return courses;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.ArrayBlockingQueue;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            Course course = new Course();\n            Student student = new Student(1, \"Alice\");\n            \n            // Enroll the student in the course\n            course.enrollStudent(student.getId());\n            \n            // Add some unrelated operations\n            ArrayList<Integer> list = new ArrayList<>();\n            LinkedList<Integer> linkedList = new LinkedList<>();\n            for (int i = 0; i < 5; i++) {\n                list.add(i * 10);\n                linkedList.add(i * 20);\n            }\n            \n            // Process the list and linked list\n            for (Integer num : list) {\n                System.out.println(\"ArrayList value: \" + num);\n            }\n            for (Integer num : linkedList) {\n                System.out.println(\"LinkedList value: \" + num);\n            }\n            \n            // Get the next student from the course\n            /* read */ int nextStudentId = course.getNextStudent();\n            System.out.println(\"Next student ID: \" + nextStudentId);\n            \n            // Add more operations\n            for (int i = 5; i < 10; i++) {\n                list.add(i * 10);\n            }\n            for (Integer num : list) {\n                System.out.println(\"Updated ArrayList value: \" + num);\n            }\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.BlockingQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.BlockingQueue",
        "read_method": "take"
    },
    "java_code_simple": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.ArrayBlockingQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            BlockingQueue<Integer> queue = new ArrayBlockingQueue<>(10);\n            /* write */ queue.put(42);\n            /* read */ int value = queue.take();\n            System.out.println(value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.ArrayBlockingQueue;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            BlockingQueue<Integer> queue = new ArrayBlockingQueue<>(10);\n            ArrayList<Integer> list = new ArrayList<>();\n            LinkedList<Integer> linkedList = new LinkedList<>();\n            \n            // Adding elements to the ArrayList and LinkedList\n            for (int i = 0; i < 5; i++) {\n                list.add(i * 10);\n                linkedList.add(i * 20);\n            }\n            \n            // Writing to the BlockingQueue\n            /* write */ queue.put(42);\n            \n            // Processing the ArrayList\n            for (Integer num : list) {\n                System.out.println(\"ArrayList value: \" + num);\n            }\n            \n            // Processing the LinkedList\n            for (Integer num : linkedList) {\n                System.out.println(\"LinkedList value: \" + num);\n            }\n            \n            // Reading from the BlockingQueue\n            /* read */ int value = queue.take();\n            System.out.println(\"Value from BlockingQueue: \" + value);\n            \n            // Adding more elements to the ArrayList\n            for (int i = 5; i < 10; i++) {\n                list.add(i * 10);\n            }\n            \n            // Printing the updated ArrayList\n            for (Integer num : list) {\n                System.out.println(\"Updated ArrayList value: \" + num);\n            }\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}