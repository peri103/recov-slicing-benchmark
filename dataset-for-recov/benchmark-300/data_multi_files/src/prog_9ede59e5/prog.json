{
    "files": {
        "DataManager.java": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class DataManager {\n    private ConcurrentSkipListSet<String> dataSet = new ConcurrentSkipListSet<>();\n\n    public void addData(String data) {\n        /* write */ dataSet.add(data);\n    }\n\n    public boolean containsData(String data) {\n        return dataSet.contains(data);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addData(String data) {\n        dataManager.addData(data);\n    }\n\n    public boolean checkData(String data) {\n        return dataManager.containsData(data);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Creating a student and adding data\n        Student student = new Student(\"Alice\");\n        student.addData(\"testValue\");\n\n        // Creating a course and enrolling the student\n        Course course = new Course(\"Computer Science\");\n        course.enrollStudent(student);\n\n        // Checking if the data exists\n        /* read */ boolean containsValue = student.checkData(\"testValue\");\n        System.out.println(\"Contains 'testValue' in student's data: \" + containsValue);\n\n        // Additional operations to make the program more complex\n        Student student2 = new Student(\"Bob\");\n        student2.addData(\"anotherValue\");\n        course.enrollStudent(student2);\n\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student in course: \" + s);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentSkipListSet",
        "write_method": "add",
        "read_class": "java.util.concurrent.ConcurrentSkipListSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<String> set = new ConcurrentSkipListSet<>();\n        /* write */ set.add(\"testValue\");\n        /* read */ boolean containsValue = set.contains(\"testValue\");\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentSkipListSet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<String> set = new ConcurrentSkipListSet<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        for (int i = 0; i < 10; i++) {\n            list.add(i * 2);\n        }\n\n        // Adding elements to the LinkedList\n        linkedList.add(\"First\");\n        linkedList.add(\"Second\");\n        linkedList.add(\"Third\");\n\n        // Writing to the ConcurrentSkipListSet\n        /* write */ set.add(\"testValue\");\n\n        // Performing operations on the ArrayList\n        int sum = 0;\n        for (int num : list) {\n            sum += num;\n        }\n        System.out.println(\"Sum of ArrayList elements: \" + sum);\n\n        // Performing operations on the LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList element: \" + str);\n        }\n\n        // Reading from the ConcurrentSkipListSet\n        /* read */ boolean containsValue = set.contains(\"testValue\");\n        System.out.println(\"Contains 'testValue' in set: \" + containsValue);\n\n        // Additional operations to make the program more complex\n        ArrayList<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n\n        for (String s : stringList) {\n            System.out.println(\"StringList element: \" + s);\n        }\n\n        // Another ConcurrentSkipListSet for additional complexity\n        ConcurrentSkipListSet<Integer> intSet = new ConcurrentSkipListSet<>();\n        intSet.add(100);\n        intSet.add(200);\n        intSet.add(300);\n\n        for (int num : intSet) {\n            System.out.println(\"IntSet element: \" + num);\n        }\n    }\n}"
}