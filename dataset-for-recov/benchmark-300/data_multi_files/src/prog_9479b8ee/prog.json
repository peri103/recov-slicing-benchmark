{
    "files": {
        "QueueWriter.java": "import java.util.concurrent.SynchronousQueue;\n\npublic class QueueWriter {\n    private SynchronousQueue<Integer> queue;\n\n    public QueueWriter(SynchronousQueue<Integer> queue) {\n        this.queue = queue;\n    }\n\n    public void writeValue(int value) throws InterruptedException {\n        /* write */ queue.put(value);\n    }\n}\n",
        "QueueReader.java": "import java.util.concurrent.SynchronousQueue;\n\npublic class QueueReader {\n    private SynchronousQueue<Integer> queue;\n\n    public QueueReader(SynchronousQueue<Integer> queue) {\n        this.queue = queue;\n    }\n\n    public int readValue() throws InterruptedException {\n        /* read */ return queue.take();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        QueueWriter writer = new QueueWriter(queue);\n        QueueReader reader = new QueueReader(queue);\n\n        // Create a student object\n        Student student = new Student(\"Alice\", 20);\n        System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n\n        // Create a thread to write the value\n        Thread writerThread = new Thread(() -> {\n            try {\n                writer.writeValue(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Start the writer thread\n        writerThread.start();\n\n        // Create a thread to read the value\n        Thread readerThread = new Thread(() -> {\n            try {\n                int value = reader.readValue();\n                System.out.println(\"Value from queue: \" + value);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Start the reader thread\n        readerThread.start();\n\n        // Wait for the threads to finish\n        try {\n            writerThread.join();\n            readerThread.join();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.SynchronousQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.SynchronousQueue",
        "read_method": "take"
    },
    "java_code_simple": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        \n        // Create a thread to write the value\n        Thread writerThread = new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Create a thread to read the value\n        Thread readerThread = new Thread(() -> {\n            try {\n                /* read */ int value = queue.take();\n                System.out.println(value);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Start the threads\n        writerThread.start();\n        readerThread.start();\n\n        // Wait for the threads to finish\n        try {\n            writerThread.join();\n            readerThread.join();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import java.util.concurrent.SynchronousQueue;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        \n        // Create a thread to write the value\n        Thread writerThread = new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Start the writer thread\n        writerThread.start();\n\n        // Some unrelated code to make the program more complex\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n        for (int i = 0; i < 10; i++) {\n            list.add(i * 2);\n            linkedList.add(i * 3);\n        }\n\n        // Print some values from the list and linkedList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"List value: \" + list.get(i));\n            System.out.println(\"LinkedList value: \" + linkedList.get(i));\n        }\n\n        // Create a thread to read the value\n        Thread readerThread = new Thread(() -> {\n            try {\n                /* read */ int value = queue.take();\n                System.out.println(\"Value from queue: \" + value);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Start the reader thread\n        readerThread.start();\n\n        // Wait for the threads to finish\n        try {\n            writerThread.join();\n            readerThread.join();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}