{
    "files": {
        "DataProcessor.java": "import java.util.concurrent.BlockingDeque;\nimport java.util.concurrent.LinkedBlockingDeque;\n\npublic class DataProcessor {\n    private BlockingDeque<Integer> deque = new LinkedBlockingDeque<>();\n\n    public void addData(int data) {\n        /* write */ deque.addFirst(data);\n    }\n\n    public int getData() throws InterruptedException {\n        return deque.takeFirst();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.BlockingDeque;\nimport java.util.concurrent.LinkedBlockingDeque;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        DataProcessor processor = new DataProcessor();\n        Student student = new Student(\"Alice\");\n\n        // Add some scores to the student\n        student.addScore(90);\n        student.addScore(85);\n        student.addScore(95);\n\n        // Process the student's scores\n        for (int score : student.getScores()) {\n            System.out.println(student.getName() + \"'s score: \" + score);\n        }\n\n        // Add data to the processor\n        processor.addData(42);\n\n        // Retrieve data from the processor\n        /* read */ int value = processor.getData();\n        System.out.println(\"Processed value: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.BlockingDeque",
        "write_method": "addFirst",
        "read_class": "java.util.concurrent.BlockingDeque",
        "read_method": "takeFirst"
    },
    "java_code_simple": "import java.util.concurrent.BlockingDeque;\nimport java.util.concurrent.LinkedBlockingDeque;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        BlockingDeque<Integer> deque = new LinkedBlockingDeque<>();\n        /* write */ deque.addFirst(42);\n        /* read */ int value = deque.takeFirst();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.BlockingDeque;\nimport java.util.concurrent.LinkedBlockingDeque;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        BlockingDeque<Integer> deque = new LinkedBlockingDeque<>();\n        List<Integer> list = new ArrayList<>();\n        \n        // Add some elements to the list\n        for (int i = 0; i < 10; i++) {\n            list.add(i * 10);\n        }\n        \n        // Process the list and add elements to the deque\n        for (Integer num : list) {\n            deque.addLast(num);\n        }\n        \n        /* write */ deque.addFirst(42);\n        \n        // Process the deque and print elements\n        while (!deque.isEmpty()) {\n            int element = deque.takeFirst();\n            System.out.println(\"Processed element: \" + element);\n        }\n        \n        /* read */ int value = deque.takeFirst();\n        System.out.println(\"Read value: \" + value);\n        \n        // Additional unrelated code\n        List<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n        \n        for (String str : stringList) {\n            System.out.println(str);\n        }\n    }\n}"
}