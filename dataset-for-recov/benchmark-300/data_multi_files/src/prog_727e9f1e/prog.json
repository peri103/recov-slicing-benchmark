{
    "files": {
        "DataStore.java": "import java.util.TreeMap;\n\npublic class DataStore {\n    private TreeMap<Integer, String> map = new TreeMap<>();\n\n    public void storeData(int key, String value) {\n        /* write */ map.put(key, value);\n    }\n\n    public String retrieveData(int key) {\n        return map.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataStore dataStore = new DataStore();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void storeData(int key, String value) {\n        dataStore.storeData(key, value);\n    }\n\n    public String retrieveData(int key) {\n        return dataStore.retrieveData(key);\n    }\n}\n",
        "Main.java": "import java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        HashMap<Integer, String> hashMap = new HashMap<>();\n        \n        // Adding some unrelated operations\n        for (int i = 0; i < 5; i++) {\n            hashMap.put(i, \"Value\" + i);\n        }\n        \n        // Using the write method\n        student.storeData(1, \"Hello\");\n        \n        // More unrelated operations\n        for (int i = 0; i < hashMap.size(); i++) {\n            System.out.println(hashMap.get(i));\n        }\n        \n        // Using the read method\n        /* read */ String value = student.retrieveData(1);\n        System.out.println(value);\n        \n        // Additional unrelated operations\n        Student anotherStudent = new Student(\"Bob\");\n        anotherStudent.storeData(10, \"World\");\n        System.out.println(anotherStudent.retrieveData(10));\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.TreeMap",
        "write_method": "put",
        "read_class": "java.util.TreeMap",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeMap<Integer, String> map = new TreeMap<>();\n        /* write */ map.put(1, \"Hello\");\n        /* read */ String value = map.get(1);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.TreeMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeMap<Integer, String> map = new TreeMap<>();\n        HashMap<Integer, String> hashMap = new HashMap<>();\n        \n        // Adding some unrelated operations\n        for (int i = 0; i < 5; i++) {\n            hashMap.put(i, \"Value\" + i);\n        }\n        \n        // Using the write method\n        /* write */ map.put(1, \"Hello\");\n        \n        // More unrelated operations\n        for (int i = 0; i < hashMap.size(); i++) {\n            System.out.println(hashMap.get(i));\n        }\n        \n        // Using the read method\n        /* read */ String value = map.get(1);\n        System.out.println(value);\n        \n        // Additional unrelated operations\n        TreeMap<Integer, String> anotherMap = new TreeMap<>();\n        anotherMap.put(10, \"World\");\n        System.out.println(anotherMap.get(10));\n    }\n}"
}