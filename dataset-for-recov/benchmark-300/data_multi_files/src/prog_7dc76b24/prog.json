{
    "files": {
        "DataProcessor.java": "import java.util.Stack;\n\npublic class DataProcessor {\n    private Stack<Integer> dataStack = new Stack<>();\n\n    public void processData(int value) {\n        /* write */ dataStack.push(value);\n    }\n\n    public int getProcessedData() {\n        return dataStack.pop();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Course.java": "import java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName, List<Student> students) {\n        this.courseName = courseName;\n        this.students = students;\n    }\n\n    public void printStudentScores() {\n        for (Student student : students) {\n            System.out.println(\"Student: \" + student.getName());\n            System.out.println(\"Scores: \" + student.getScores());\n        }\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize DataProcessor\n        DataProcessor processor = new DataProcessor();\n        processor.processData(42);\n\n        // Initialize students\n        List<Student> students = new ArrayList<>();\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        student1.addScore(90);\n        student1.addScore(85);\n        student2.addScore(78);\n        student2.addScore(88);\n\n        students.add(student1);\n        students.add(student2);\n\n        // Initialize Course\n        Course course = new Course(\"Math\", students);\n        course.printStudentScores();\n\n        // Get processed data\n        /* read */ int value = processor.getProcessedData();\n        System.out.println(\"Processed Data: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.Stack",
        "write_method": "push",
        "read_class": "java.util.Stack",
        "read_method": "pop"
    },
    "java_code_simple": "import java.util.Stack;\n\npublic class Main {\n    public static void main(String[] args) {\n        Stack stack = new Stack();\n        /* write */ stack.push(42);\n        /* read */ int value = (Integer) stack.pop();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.Stack;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Stack stack = new Stack();\n        ArrayList list = new ArrayList();\n        LinkedList queue = new LinkedList();\n\n        // Initialize some data\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Add elements to the queue\n        for (int i = 0; i < list.size(); i++) {\n            queue.add(list.get(i));\n        }\n\n        /* write */ stack.push(42);\n\n        // Process the queue\n        while (!queue.isEmpty()) {\n            System.out.println(\"Processing: \" + queue.poll());\n        }\n\n        // Add more elements to the list\n        for (int i = 5; i < 10; i++) {\n            list.add(i * 10);\n        }\n\n        // Print the list\n        System.out.println(\"List contents:\");\n        for (Object item : list) {\n            System.out.println(item);\n        }\n\n        /* read */ int value = (Integer) stack.pop();\n        System.out.println(\"Value from stack: \" + value);\n    }\n}"
}