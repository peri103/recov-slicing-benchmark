{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private CopyOnWriteArraySet<Integer> scores = new CopyOnWriteArraySet<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        /* write */ scores.add(score);\n    }\n\n    public CopyOnWriteArraySet<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Course {\n    private String courseName;\n    private CopyOnWriteArraySet<Student> students = new CopyOnWriteArraySet<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public CopyOnWriteArraySet<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course course = new Course(\"Mathematics\");\n\n        course.addStudent(student);\n        student.addScore(95);\n\n        for (Student s : course.getStudents()) {\n            if (s.getName().equals(\"Alice\")) {\n                /* read */ boolean containsScore = s.getScores().contains(95);\n                System.out.println(\"Alice's scores contain 95: \" + containsScore);\n            }\n        }\n\n        System.out.println(\"Course: \" + course.getCourseName());\n        System.out.println(\"Students in course: \" + course.getStudents().size());\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet set = new CopyOnWriteArraySet();\n        /* write */ set.add(1);\n        /* read */ boolean contains = set.contains(1);\n        System.out.println(contains);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet set = new CopyOnWriteArraySet();\n        ArrayList list = new ArrayList();\n        LinkedList linkedList = new LinkedList();\n        \n        /* write */ set.add(1);\n        \n        list.add(\"Hello\");\n        linkedList.add(100);\n        \n        for (Object obj : list) {\n            System.out.println(obj);\n        }\n        \n        for (Object obj : linkedList) {\n            System.out.println(obj);\n        }\n        \n        /* read */ boolean contains = set.contains(1);\n        System.out.println(\"Set contains 1: \" + contains);\n        \n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        for (int num : numbers) {\n            System.out.println(num);\n        }\n        \n        CopyOnWriteArraySet anotherSet = new CopyOnWriteArraySet();\n        anotherSet.add(\"World\");\n        \n        System.out.println(\"Another set contains 'World': \" + anotherSet.contains(\"World\"));\n    }\n}"
}