{
    "files": {
        "DataManager.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class DataManager {\n    private CopyOnWriteArraySet<String> dataSet = new CopyOnWriteArraySet<>();\n\n    public void addData(String data) {\n        /* write */ dataSet.add(data);\n    }\n\n    public boolean containsData(String data) {\n        return dataSet.contains(data);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addData(String data) {\n        dataManager.addData(data);\n    }\n\n    public boolean checkData(String data) {\n        return dataManager.containsData(data);\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        student.addData(\"test\");\n\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        linkedList.add(\"first\");\n        linkedList.add(\"second\");\n        linkedList.add(\"third\");\n\n        for (String str : linkedList) {\n            System.out.println(str);\n        }\n\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(list.get(i));\n        }\n\n        /* read */ boolean contains = student.checkData(\"test\");\n        System.out.println(\"Contains 'test': \" + contains);\n\n        CopyOnWriteArraySet<Integer> anotherSet = new CopyOnWriteArraySet<>();\n        anotherSet.add(100);\n        anotherSet.add(200);\n        anotherSet.add(300);\n\n        for (Integer num : anotherSet) {\n            System.out.println(num);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        /* write */ set.add(\"test\");\n        /* read */ boolean contains = set.contains(\"test\");\n        System.out.println(contains);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        /* write */ set.add(\"test\");\n\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        linkedList.add(\"first\");\n        linkedList.add(\"second\");\n        linkedList.add(\"third\");\n\n        for (String str : linkedList) {\n            System.out.println(str);\n        }\n\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(list.get(i));\n        }\n\n        /* read */ boolean contains = set.contains(\"test\");\n        System.out.println(\"Contains 'test': \" + contains);\n\n        CopyOnWriteArraySet<Integer> anotherSet = new CopyOnWriteArraySet<>();\n        anotherSet.add(100);\n        anotherSet.add(200);\n        anotherSet.add(300);\n\n        for (Integer num : anotherSet) {\n            System.out.println(num);\n        }\n    }\n}"
}