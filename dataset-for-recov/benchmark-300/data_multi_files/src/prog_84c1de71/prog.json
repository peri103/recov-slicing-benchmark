{
    "files": {
        "Student.java": "import java.util.HashSet;\n\npublic class Student {\n    private String name;\n    private HashSet<Integer> scores = new HashSet<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        /* write */ scores.add(score);\n    }\n\n    public HashSet<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Course.java": "import java.util.HashSet;\n\npublic class Course {\n    private String courseName;\n    private HashSet<Student> students = new HashSet<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public HashSet<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course course = new Course(\"Mathematics\");\n\n        // Adding a score to the student\n        student.addScore(95);\n\n        // Adding the student to the course\n        course.addStudent(student);\n\n        // Retrieving the student's scores\n        HashSet<Integer> scores = student.getScores();\n        /* read */ boolean containsScore = scores.contains(95);\n        System.out.println(\"Student's scores contain 95: \" + containsScore);\n\n        // Printing all students in the course\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student in course: \" + s);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.HashSet",
        "write_method": "add",
        "read_class": "java.util.HashSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashSet<Integer> set = new HashSet<>();\n        /* write */ set.add(10);\n        /* read */ boolean containsValue = set.contains(10);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.HashSet;\nimport java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashSet<Integer> set = new HashSet<>();\n        TreeSet<Integer> treeSet = new TreeSet<>();\n        \n        // Adding elements to the TreeSet\n        treeSet.add(5);\n        treeSet.add(15);\n        treeSet.add(25);\n        \n        // Adding an element to the HashSet\n        /* write */ set.add(10);\n        \n        // Checking if the TreeSet contains a specific element\n        boolean containsTreeSetValue = treeSet.contains(15);\n        System.out.println(\"TreeSet contains 15: \" + containsTreeSetValue);\n        \n        // Iterating through the TreeSet and printing elements\n        for (Integer num : treeSet) {\n            System.out.println(\"TreeSet element: \" + num);\n        }\n        \n        // Checking if the HashSet contains the value added earlier\n        /* read */ boolean containsValue = set.contains(10);\n        System.out.println(\"HashSet contains 10: \" + containsValue);\n        \n        // Adding elements from TreeSet to HashSet\n        set.addAll(treeSet);\n        \n        // Printing all elements in the HashSet\n        for (Integer num : set) {\n            System.out.println(\"HashSet element: \" + num);\n        }\n    }\n}"
}