{
    "files": {
        "DataManager.java": "import java.util.HashSet;\n\npublic class DataManager {\n    private HashSet<String> dataSet = new HashSet<>();\n\n    public void addData(String data) {\n        /* write */ dataSet.add(data);\n    }\n\n    public HashSet<String> getDataSet() {\n        return dataSet;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addData(String data) {\n        dataManager.addData(data);\n    }\n\n    public HashSet<String> getDataSet() {\n        return dataManager.getDataSet();\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Computer Science\");\n        Student student = new Student(\"Alice\");\n        course.addStudent(student);\n\n        // Adding data to the student's dataset\n        student.addData(\"Hello\");\n\n        // Retrieving and checking the data\n        HashSet<String> dataSet = student.getDataSet();\n        /* read */ boolean containsHello = dataSet.contains(\"Hello\");\n        System.out.println(\"Contains 'Hello': \" + containsHello);\n\n        // Additional operations\n        Student student2 = new Student(\"Bob\");\n        course.addStudent(student2);\n        student2.addData(\"World\");\n\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student: \" + s.getDataSet());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.HashSet",
        "write_method": "add",
        "read_class": "java.util.HashSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashSet<String> set = new HashSet<>();\n        /* write */ set.add(\"Hello\");\n        /* read */ boolean containsHello = set.contains(\"Hello\");\n        System.out.println(containsHello);\n    }\n}",
    "java_code_complex": "import java.util.HashSet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashSet<String> set = new HashSet<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Adding elements to the LinkedList\n        linkedList.add(\"First\");\n        linkedList.add(\"Second\");\n        linkedList.add(\"Third\");\n\n        // Writing to the HashSet\n        /* write */ set.add(\"Hello\");\n\n        // Processing the ArrayList\n        for (Integer num : list) {\n            System.out.println(\"ArrayList element: \" + num);\n        }\n\n        // Processing the LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList element: \" + str);\n        }\n\n        // Reading from the HashSet\n        /* read */ boolean containsHello = set.contains(\"Hello\");\n        System.out.println(\"Contains 'Hello': \" + containsHello);\n\n        // Additional operations\n        HashSet<Integer> anotherSet = new HashSet<>();\n        anotherSet.add(100);\n        anotherSet.add(200);\n        anotherSet.add(300);\n\n        for (Integer num : anotherSet) {\n            System.out.println(\"Another HashSet element: \" + num);\n        }\n\n        // More complex operations\n        ArrayList<HashSet<Integer>> complexList = new ArrayList<>();\n        complexList.add(anotherSet);\n\n        for (HashSet<Integer> hs : complexList) {\n            for (Integer num : hs) {\n                System.out.println(\"Complex List HashSet element: \" + num);\n            }\n        }\n    }\n}"
}