{
    "files": {
        "DataProcessor.java": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class DataProcessor {\n    private LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n\n    public void processData(int data) {\n        /* write */ queue.offer(data);\n    }\n\n    public LinkedTransferQueue<Integer> getQueue() {\n        return queue;\n    }\n}\n",
        "Student.java": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Student {\n    private String name;\n    private DataProcessor dataProcessor = new DataProcessor();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void processData(int data) {\n        dataProcessor.processData(data);\n    }\n\n    public LinkedTransferQueue<Integer> getQueue() {\n        return dataProcessor.getQueue();\n    }\n}\n",
        "Main.java": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        student.processData(42);\n\n        // Simulating some other operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Adding some more values to the blocking queue\n        for (int i = 0; i < 3; i++) {\n            student.processData(i * 10);\n        }\n\n        // Processing the queue\n        LinkedTransferQueue<Integer> queue = student.getQueue();\n        /* read */ Integer value = queue.poll();\n        System.out.println(\"Value from LinkedTransferQueue: \" + value);\n\n        // Final operation: calculating factorial of 5\n        int factorial = 1;\n        for (int i = 1; i <= 5; i++) {\n            factorial *= i;\n        }\n        System.out.println(\"Factorial of 5: \" + factorial);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.LinkedTransferQueue",
        "write_method": "offer",
        "read_class": "java.util.concurrent.LinkedTransferQueue",
        "read_method": "poll"
    },
    "java_code_simple": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n        /* write */ queue.offer(42);\n        /* read */ Integer value = queue.poll();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.LinkedTransferQueue;\nimport java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n        BlockingQueue<Integer> blockingQueue = new LinkedBlockingQueue<>();\n        Random random = new Random();\n\n        // Adding some random values to the blocking queue\n        for (int i = 0; i < 5; i++) {\n            blockingQueue.offer(random.nextInt(100));\n        }\n\n        // Processing the blocking queue\n        while (!blockingQueue.isEmpty()) {\n            System.out.println(\"Processing value: \" + blockingQueue.poll());\n        }\n\n        /* write */ queue.offer(42);\n\n        // Simulating some other operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Adding some more values to the blocking queue\n        for (int i = 0; i < 3; i++) {\n            blockingQueue.offer(random.nextInt(50));\n        }\n\n        // Processing the blocking queue again\n        while (!blockingQueue.isEmpty()) {\n            System.out.println(\"Processing new value: \" + blockingQueue.poll());\n        }\n\n        /* read */ Integer value = queue.poll();\n        System.out.println(\"Value from LinkedTransferQueue: \" + value);\n\n        // Final operation: calculating factorial of 5\n        int factorial = 1;\n        for (int i = 1; i <= 5; i++) {\n            factorial *= i;\n        }\n        System.out.println(\"Factorial of 5: \" + factorial);\n    }\n}"
}