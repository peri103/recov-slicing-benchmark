{
    "files": {
        "MessageStorage.java": "import java.util.LinkedList;\n\npublic class MessageStorage {\n    private LinkedList<String> messages = new LinkedList<>();\n\n    public void storeMessage(String message) {\n        /* write */ messages.addLast(message);\n    }\n\n    public String getLastMessage() {\n        return messages.getLast();\n    }\n}\n",
        "User.java": "public class User {\n    private String name;\n    private MessageStorage storage = new MessageStorage();\n\n    public User(String name) {\n        this.name = name;\n    }\n\n    public void sendMessage(String message) {\n        storage.storeMessage(message);\n    }\n\n    public String getLastMessage() {\n        return storage.getLastMessage();\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        User user = new User(\"Alice\");\n        user.sendMessage(\"Hello, World!\");\n        \n        // Adding some unrelated operations to make the program more complex\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Performing the original read operation\n        /* read */ String lastMessage = user.getLastMessage();\n        System.out.println(\"Last message: \" + lastMessage);\n        \n        // Additional complexity: creating another user\n        User anotherUser = new User(\"Bob\");\n        anotherUser.sendMessage(\"Hi there!\");\n        System.out.println(\"Bob's last message: \" + anotherUser.getLastMessage());\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.LinkedList",
        "write_method": "addLast",
        "read_class": "java.util.LinkedList",
        "read_method": "getLast"
    },
    "java_code_simple": "import java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedList<String> list = new LinkedList<>();\n        /* write */ list.addLast(\"Hello, World!\");\n        /* read */ String value = list.getLast();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.LinkedList;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedList<String> list = new LinkedList<>();\n        ArrayList<Integer> numbers = new ArrayList<>();\n        \n        // Adding some unrelated operations to make the program more complex\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        // Using another LinkedList for additional complexity\n        LinkedList<Integer> anotherList = new LinkedList<>();\n        for (int num : numbers) {\n            anotherList.addLast(num);\n        }\n        \n        // Performing the original write operation\n        /* write */ list.addLast(\"Hello, World!\");\n        \n        // More unrelated operations\n        int sum = 0;\n        for (int num : anotherList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Performing the original read operation\n        /* read */ String value = list.getLast();\n        System.out.println(value);\n        \n        // Additional complexity: manipulating the LinkedList\n        list.addFirst(\"Greetings!\");\n        System.out.println(\"First element: \" + list.getFirst());\n    }\n}"
}