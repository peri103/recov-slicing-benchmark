{
    "files": {
        "QueueManager.java": "import java.util.concurrent.SynchronousQueue;\n\npublic class QueueManager {\n    private SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n\n    public void putValue(int value) {\n        try {\n            /* write */ queue.put(value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public int takeValue() {\n        try {\n            return queue.take();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n            return -1;\n        }\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.SynchronousQueue;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        QueueManager queueManager = new QueueManager();\n        Course course = new Course(\"Computer Science\");\n\n        // Add students to the course\n        course.addStudent(new Student(\"Alice\", 20));\n        course.addStudent(new Student(\"Bob\", 21));\n\n        // Start a new thread to put a value into the queue\n        new Thread(() -> {\n            queueManager.putValue(42);\n        }).start();\n\n        // Perform some operations with the course\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n\n        // Take the value from the queue\n        int value = queueManager.takeValue();\n        System.out.println(\"Value taken from the queue: \" + value);\n\n        // Perform some more operations\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Print elements from the ArrayList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"ArrayList element at index \" + i + \": \" + list.get(i));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.SynchronousQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.SynchronousQueue",
        "read_method": "take"
    },
    "java_code_simple": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        try {\n            new Thread(() -> {\n                try {\n                    /* write */ queue.put(42);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }).start();\n            /* read */ int value = queue.take();\n            System.out.println(value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import java.util.concurrent.SynchronousQueue;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Adding elements to the LinkedList\n        for (int i = 0; i < 5; i++) {\n            linkedList.add(i * 5);\n        }\n\n        // Start a new thread to put a value into the queue\n        new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }).start();\n\n        // Perform some operations with ArrayList and LinkedList\n        for (int i = 0; i < list.size(); i++) {\n            linkedList.add(list.get(i));\n        }\n\n        // Take the value from the queue\n        try {\n            /* read */ int value = queue.take();\n            System.out.println(\"Value taken from the queue: \" + value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        // Print elements from the LinkedList\n        for (int i = 0; i < linkedList.size(); i++) {\n            System.out.println(\"LinkedList element at index \" + i + \": \" + linkedList.get(i));\n        }\n\n        // Perform some more operations with ArrayList\n        list.add(100);\n        list.add(200);\n\n        // Print elements from the ArrayList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"ArrayList element at index \" + i + \": \" + list.get(i));\n        }\n    }\n}"
}