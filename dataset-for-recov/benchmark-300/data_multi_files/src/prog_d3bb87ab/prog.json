{
    "files": {
        "DataStorage.java": "import java.util.concurrent.ConcurrentHashMap;\n\npublic class DataStorage {\n    private ConcurrentHashMap<String, Integer> storage = new ConcurrentHashMap<>();\n\n    public void storeData(String key, int value) {\n        /* write */ storage.putIfAbsent(key, value);\n    }\n\n    public Integer retrieveData(String key) {\n        return storage.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataStorage dataStorage = new DataStorage();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void storeGrade(String course, int grade) {\n        dataStorage.storeData(course, grade);\n    }\n\n    public Integer getGrade(String course) {\n        return dataStorage.retrieveData(course);\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int courseId;\n\n    public Course(String courseName, int courseId) {\n        this.courseName = courseName;\n        this.courseId = courseId;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCourseId() {\n        return courseId;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course mathCourse = new Course(\"Math\", 101);\n        Course scienceCourse = new Course(\"Science\", 102);\n\n        student.storeGrade(mathCourse.getCourseName(), 95);\n        student.storeGrade(scienceCourse.getCourseName(), 88);\n\n        List<Course> courses = new ArrayList<>();\n        courses.add(mathCourse);\n        courses.add(scienceCourse);\n\n        for (Course course : courses) {\n            System.out.println(\"Course: \" + course.getCourseName() + \", Grade: \" + student.getGrade(course.getCourseName()));\n        }\n\n        /* read */ Integer mathGrade = student.getGrade(mathCourse.getCourseName());\n        System.out.println(\"Math Grade: \" + mathGrade);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentHashMap",
        "write_method": "putIfAbsent",
        "read_class": "java.util.concurrent.ConcurrentHashMap",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentHashMap<String, Integer> map = new ConcurrentHashMap<>();\n        /* write */ map.putIfAbsent(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentHashMap;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentHashMap<String, Integer> map = new ConcurrentHashMap<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList and LinkedList\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n            linkedList.add(i * 20);\n        }\n\n        // Performing operations on the ArrayList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"ArrayList element: \" + list.get(i));\n        }\n\n        // Performing operations on the LinkedList\n        for (int i = 0; i < linkedList.size(); i++) {\n            System.out.println(\"LinkedList element: \" + linkedList.get(i));\n        }\n\n        /* write */ map.putIfAbsent(\"key\", 42);\n\n        // Adding elements to the map\n        map.put(\"key2\", 100);\n        map.put(\"key3\", 200);\n\n        // Performing more operations on the map\n        for (String key : map.keySet()) {\n            System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n        }\n\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(\"Value for 'key': \" + value);\n\n        // Additional unrelated code to make the program more complex\n        ArrayList<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n\n        for (String str : stringList) {\n            System.out.println(\"String list element: \" + str);\n        }\n    }\n}"
}