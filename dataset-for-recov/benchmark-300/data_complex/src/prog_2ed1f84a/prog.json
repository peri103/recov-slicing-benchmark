{
    "java_code": "import java.util.concurrent.ConcurrentLinkedQueue;\nimport java.util.Random;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedQueue<Integer> queue = new ConcurrentLinkedQueue<>();\n        Random random = new Random();\n        List<Integer> numbers = new ArrayList<>();\n\n        // Generate and add random numbers to the list\n        for (int i = 0; i < 10; i++) {\n            numbers.add(random.nextInt(100));\n        }\n\n        // Add numbers to the queue\n        for (Integer num : numbers) {\n            queue.offer(num);\n        }\n\n        /* write */ queue.offer(1);\n\n        // Perform some operations with the queue\n        int sum = 0;\n        Integer element;\n        while ((element = queue.poll()) != null) {\n            sum += element;\n        }\n\n        // Add more numbers to the list\n        for (int i = 0; i < 5; i++) {\n            numbers.add(random.nextInt(100));\n        }\n\n        // Add numbers to the queue again\n        for (Integer num : numbers) {\n            queue.offer(num);\n        }\n\n        // Perform some more operations with the queue\n        int count = 0;\n        while ((element = queue.poll()) != null) {\n            if (element % 2 == 0) {\n                count++;\n            }\n        }\n\n        /* read */ Integer value = queue.poll();\n        System.out.println(\"The value read from the queue: \" + value);\n        System.out.println(\"Sum of all elements in the queue: \" + sum);\n        System.out.println(\"Count of even elements in the queue: \" + count);\n    }\n}",
    "java_code_simple": "import java.util.concurrent.ConcurrentLinkedQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedQueue<Integer> queue = new ConcurrentLinkedQueue<>();\n        /* write */ queue.offer(1);\n        /* read */ Integer value = queue.poll();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentLinkedQueue",
        "write_method": "offer",
        "read_class": "java.util.concurrent.ConcurrentLinkedQueue",
        "read_method": "poll"
    }
}