{
    "java_code": "import java.util.concurrent.SynchronousQueue;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n            ArrayList<Integer> list = new ArrayList<>();\n            LinkedList<Integer> linkedList = new LinkedList<>();\n\n            // Adding elements to the ArrayList\n            for (int i = 0; i < 5; i++) {\n                list.add(i * 10);\n            }\n\n            // Adding elements to the LinkedList\n            for (int i = 0; i < 5; i++) {\n                linkedList.add(i * 20);\n            }\n\n            /* write */ queue.put(42);\n\n            // Processing ArrayList\n            for (Integer num : list) {\n                System.out.println(\"ArrayList value: \" + num);\n            }\n\n            // Processing LinkedList\n            for (Integer num : linkedList) {\n                System.out.println(\"LinkedList value: \" + num);\n            }\n\n            /* read */ int value = queue.take();\n            System.out.println(\"Value from SynchronousQueue: \" + value);\n\n            // Additional unrelated operations\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n            /* write */ queue.put(42);\n            /* read */ int value = queue.take();\n            System.out.println(value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.SynchronousQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.SynchronousQueue",
        "read_method": "take"
    }
}