{
    "java_code": "import java.util.concurrent.ConcurrentSkipListSet;\nimport java.util.Random;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<Integer> set = new ConcurrentSkipListSet<>();\n        Random random = new Random();\n        List<Integer> numbers = new ArrayList<>();\n\n        // Generate a list of random numbers\n        for (int i = 0; i < 10; i++) {\n            numbers.add(random.nextInt(100));\n        }\n\n        // Shuffle the list\n        Collections.shuffle(numbers);\n\n        // Add the numbers to the set\n        for (int num : numbers) {\n            set.add(num);\n        }\n\n        // Write a specific value to the set\n        /* write */ set.add(42);\n\n        // Perform some unrelated operations\n        List<Integer> sortedNumbers = new ArrayList<>(numbers);\n        Collections.sort(sortedNumbers);\n\n        // Print the sorted list\n        System.out.println(\"Sorted Numbers: \" + sortedNumbers);\n\n        // Check if the set contains the written value\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"Contains 42: \" + containsValue);\n\n        // Perform more unrelated operations\n        int sum = 0;\n        for (int num : sortedNumbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of sorted numbers: \" + sum);\n\n        // Print the set\n        System.out.println(\"Set contents: \" + set);\n    }\n}",
    "java_code_simple": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<Integer> set = new ConcurrentSkipListSet<>();\n        /* write */ set.add(42);\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"Contains 42: \" + containsValue);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentSkipListSet",
        "write_method": "add",
        "read_class": "java.util.concurrent.ConcurrentSkipListSet",
        "read_method": "contains"
    }
}