{
    "java_code": "import java.util.Deque;\nimport java.util.LinkedList;\nimport java.util.ArrayList;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        Deque<Integer> deque = new LinkedList<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        Random random = new Random();\n\n        // Initialize list with random values\n        for (int i = 0; i < 10; i++) {\n            list.add(random.nextInt(100));\n        }\n\n        // Add some elements to the deque\n        for (int i = 0; i < 5; i++) {\n            deque.addLast(random.nextInt(100));\n        }\n\n        /* write */ deque.addLast(42);\n\n        // Perform some operations on the list\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                deque.addLast(list.get(i));\n            }\n        }\n\n        // Remove some elements from the deque\n        for (int i = 0; i < 3; i++) {\n            if (!deque.isEmpty()) {\n                deque.removeFirst();\n            }\n        }\n\n        /* read */ int value = deque.getLast();\n        System.out.println(\"The last value in the deque is: \" + value);\n\n        // Additional operations to make the program more complex\n        ArrayList<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n        for (String str : stringList) {\n            System.out.println(str);\n        }\n\n        // More operations with the deque\n        while (!deque.isEmpty()) {\n            System.out.println(\"Removed from deque: \" + deque.removeFirst());\n        }\n    }\n}",
    "java_code_simple": "import java.util.Deque;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Deque<Integer> deque = new LinkedList<>();\n        /* write */ deque.addLast(42);\n        /* read */ int value = deque.getLast();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.Deque",
        "write_method": "addLast",
        "read_class": "java.util.Deque",
        "read_method": "getLast"
    }
}