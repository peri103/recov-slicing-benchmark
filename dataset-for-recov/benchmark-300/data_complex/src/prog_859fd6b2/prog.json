{
    "java_code": "import java.util.concurrent.LinkedTransferQueue;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n        List<Integer> list = new ArrayList<>();\n        \n        // Adding some initial values to the list\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n        \n        // Writing to the queue\n        /* write */ queue.put(1);\n        \n        // Processing the list\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"List value: \" + list.get(i));\n        }\n        \n        // Reading from the queue\n        /* read */ int value = queue.take();\n        System.out.println(\"Queue value: \" + value);\n        \n        // Adding more values to the list\n        for (int i = 5; i < 10; i++) {\n            list.add(i * 10);\n        }\n        \n        // Processing the list again\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"List value after addition: \" + list.get(i));\n        }\n    }\n}",
    "java_code_simple": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n        /* write */ queue.put(1);\n        /* read */ int value = queue.take();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.LinkedTransferQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.LinkedTransferQueue",
        "read_method": "take"
    }
}