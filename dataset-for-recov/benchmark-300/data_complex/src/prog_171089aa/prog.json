{
    "java_code": "import java.util.concurrent.PriorityBlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        PriorityBlockingQueue<Integer> queue = new PriorityBlockingQueue<>();\n        LinkedBlockingQueue<String> stringQueue = new LinkedBlockingQueue<>();\n        List<Integer> numberList = new ArrayList<>();\n\n        // Adding elements to the stringQueue\n        stringQueue.offer(\"Hello\");\n        stringQueue.offer(\"World\");\n\n        // Adding elements to the numberList\n        numberList.add(5);\n        numberList.add(10);\n        numberList.add(15);\n\n        /* write */ queue.offer(10);\n\n        // Processing elements in the stringQueue\n        try {\n            String firstElement = stringQueue.take();\n            System.out.println(\"First element from stringQueue: \" + firstElement);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        // Processing elements in the numberList\n        for (Integer num : numberList) {\n            System.out.println(\"Number from numberList: \" + num);\n        }\n\n        /* read */ Integer value = queue.poll();\n        System.out.println(\"Value from queue: \" + value);\n\n        // Adding more elements to the queue\n        queue.offer(20);\n        queue.offer(30);\n\n        // Polling elements from the queue\n        while (!queue.isEmpty()) {\n            System.out.println(\"Polled from queue: \" + queue.poll());\n        }\n    }\n}",
    "java_code_simple": "import java.util.concurrent.PriorityBlockingQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        PriorityBlockingQueue<Integer> queue = new PriorityBlockingQueue<>();\n        /* write */ queue.offer(10);\n        /* read */ Integer value = queue.poll();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.PriorityBlockingQueue",
        "write_method": "offer",
        "read_class": "java.util.concurrent.PriorityBlockingQueue",
        "read_method": "poll"
    }
}