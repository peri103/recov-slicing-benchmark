{
    "java_code": "import java.util.Hashtable;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<String, Integer> hashtable = new Hashtable<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Adding elements to the LinkedList\n        linkedList.add(\"First\");\n        linkedList.add(\"Second\");\n        linkedList.add(\"Third\");\n\n        /* write */ hashtable.put(\"key\", 123);\n\n        // Processing the ArrayList\n        for (Integer num : list) {\n            System.out.println(\"ArrayList value: \" + num);\n        }\n\n        // Processing the LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList value: \" + str);\n        }\n\n        /* read */ Integer value = hashtable.get(\"key\");\n        System.out.println(\"Hashtable value: \" + value);\n\n        // Additional complex operations\n        Hashtable<String, String> anotherHashtable = new Hashtable<>();\n        anotherHashtable.put(\"anotherKey\", \"AnotherValue\");\n        String anotherValue = anotherHashtable.get(\"anotherKey\");\n        System.out.println(\"Another Hashtable value: \" + anotherValue);\n\n        ArrayList<Double> doubleList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            doubleList.add(i * 1.5);\n        }\n\n        for (Double d : doubleList) {\n            System.out.println(\"Double ArrayList value: \" + d);\n        }\n    }\n}",
    "java_code_simple": "import java.util.Hashtable;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<String, Integer> hashtable = new Hashtable<>();\n        /* write */ hashtable.put(\"key\", 123);\n        /* read */ Integer value = hashtable.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.Hashtable",
        "write_method": "put",
        "read_class": "java.util.Hashtable",
        "read_method": "get"
    }
}