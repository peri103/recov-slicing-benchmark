{
    "java_code": "import java.util.concurrent.DelayQueue;\nimport java.util.concurrent.Delayed;\nimport java.util.concurrent.TimeUnit;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        DelayQueue<DelayedElement> queue = new DelayQueue<>();\n        /* write */ queue.put(new DelayedElement(1000, \"Hello\"));\n        /* read */ DelayedElement element = queue.take();\n        System.out.println(element.getMessage());\n    }\n}\n\nclass DelayedElement implements Delayed {\n    private final long delayTime;\n    private final long expireTime;\n    private final String message;\n\n    public DelayedElement(long delayTime, String message) {\n        this.delayTime = delayTime;\n        this.expireTime = System.currentTimeMillis() + delayTime;\n        this.message = message;\n    }\n\n    public String getMessage() {\n        return message;\n    }\n\n    @Override\n    public long getDelay(TimeUnit unit) {\n        return unit.convert(expireTime - System.currentTimeMillis(), TimeUnit.MILLISECONDS);\n    }\n\n    @Override\n    public int compareTo(Delayed o) {\n        return Long.compare(this.expireTime, ((DelayedElement) o).expireTime);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.DelayQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.DelayQueue",
        "read_method": "take"
    }
}