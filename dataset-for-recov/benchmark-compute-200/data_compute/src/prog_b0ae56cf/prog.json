{
  "Code": "import java.util.BitSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        BitSet bitSet = new BitSet();\n\n        int seed = 1234 * 4321 + 777 + 888 + 999;\n        int bitToSet = (seed % 128) + 5; // Random manipulation to choose the bit\n\n        for (int i = 0; i < 32; i++) {\n            bitSet.set(i, (i % 2 == 0)); // Alternating set of bits\n        }\n\n        if ((bitToSet & 1) == 1) {\n            // Misleading conditional logic\n            bitSet.set(10);\n            bitSet.clear(15);\n            int temp = bitSet.cardinality(); // Unrelated computation to increase complexity\n        }\n\n        // Correct but obfuscated write operation\n        /* write */ bitSet.set(bitToSet);\n\n        if (bitSet.cardinality() > 16) {\n            bitSet.clear(20);\n        } else {\n            bitSet.set(25);\n        }\n\n        // Various operations that don't affect the targeted read\n        System.out.println(\"Bit 5 set: \" + bitSet.get(5));\n        System.out.println(\"Bit 15 set: \" + bitSet.get(15));\n\n        /* read */ boolean ret = bitSet.get(bitToSet); // The read operation\n\n        // Just to make sure it executes\n        System.out.println(\"Read bit \" + bitToSet + \": \" + ret);\n    }\n}\n",
  "Internal Variable": "bits[bitToSet / 64]"
}