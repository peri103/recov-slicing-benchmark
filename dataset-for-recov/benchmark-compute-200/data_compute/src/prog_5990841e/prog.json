{
  "Code": "import java.util.NavigableMap;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        NavigableMap<Integer, String> map = new TreeMap<>();\n        map.put(1, \"A\");\n        map.put(2, \"B\");\n        map.put(3, \"C\");\n\n        /* other operations */\n        int someCalculation = (int) Math.pow(2, 3) + 5 * 3 - 1; // Arbitrary complex calculation\n        boolean condition = someCalculation % 2 == 0;\n\n        /* other operations */\n        map.put(4, \"D\");\n        map.remove(1);\n\n        /* misleading modification */\n        if (condition) {\n            map.put(5, \"E\");\n        } else {\n            map.put(6, \"F\");\n        }\n\n        // Complex logic that indirectly impacts main write point\n        int keyForWrite;\n        if (map.containsKey(2)) {\n            keyForWrite = 7;\n        } else {\n            keyForWrite = 8;\n        }\n\n        /* write point - intentionally complex and obscured logic */\n        Map<Integer, String> subMap = map.headMap(keyForWrite);\n        if (!subMap.isEmpty() && subMap.firstKey() < 5) {\n            map.put(5, \"G\");\n        }\n\n        /* confusing additional operations */\n        map.put(9, \"H\");\n        map.remove(3);\n        if (someCalculation > 20) {\n            map.put(10, \"I\");\n        }\n\n        /* read */ String ret = map.get(5);\n    }\n}",
  "Internal Variable": "NavigableMapEntry[5]"
}