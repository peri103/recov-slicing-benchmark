{
    "java_code": "import java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentLinkedQueue;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentHashMap<String, Integer> map = new ConcurrentHashMap<>();\n        ConcurrentLinkedQueue<Integer> queue = new ConcurrentLinkedQueue<>();\n        ArrayList<String> keysList = new ArrayList<>();\n        \n        // Insert some values into the queue\n        for (int i = 0; i < 5; i++) {\n            queue.add(i * 10);\n        }\n        \n        // Insert keys into the keysList\n        for (int i = 0; i < 5; i++) {\n            keysList.add(\"key\" + i);\n        }\n        \n        // Write to the map\n        /* write */ map.put(\"key\", 42);\n\n        // Add some values to the map using keys from keysList\n        for (String key : keysList) {\n            map.put(key, queue.poll());\n        }\n        \n        // Perform some operations on the map\n        for (String key : keysList) {\n            if (map.containsKey(key)) {\n                System.out.println(\"Value for \" + key + \": \" + map.get(key));\n            }\n        }\n        \n        // Read from the map\n        /* read */ int value = map.get(\"key\");\n        System.out.println(\"The special value is: \" + value);\n        \n        // Perform additional operations\n        map.put(\"anotherKey\", 100);\n        System.out.println(\"Value for anotherKey: \" + map.get(\"anotherKey\"));\n        \n        // Iterate over the map's entries\n        map.forEach((k, v) -> {\n            System.out.println(\"Key: \" + k + \", Value: \" + v);\n        });\n    }\n}",
    "java_code_simple": "import java.util.concurrent.ConcurrentHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentHashMap<String, Integer> map = new ConcurrentHashMap<>();\n        /* write */ map.put(\"key\", 42);\n        /* read */ int value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentHashMap",
        "write_method": "put",
        "read_class": "java.util.concurrent.ConcurrentHashMap",
        "read_method": "get"
    }
}