{
    "java_code": "import java.util.concurrent.ConcurrentSkipListSet;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ConcurrentSkipListSet\n        ConcurrentSkipListSet<Integer> set = new ConcurrentSkipListSet<>();\n        \n        // Initialize an ArrayList\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            list.add(i);\n        }\n        \n        // Initialize a HashMap\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"A\", 1);\n        map.put(\"B\", 2);\n        \n        // Perform operations on the HashMap\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Add elements to the ConcurrentSkipListSet\n        for (int i = 0; i < list.size(); i++) {\n            set.add(list.get(i));\n        }\n\n        // Perform operations on the ArrayList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"ArrayList Element: \" + list.get(i));\n        }\n\n        // Add a specific element to the set\n        /* write */ set.add(42);\n\n        // Perform some unrelated computation\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n\n        // Check if the element exists in the set\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"Set contains 42: \" + containsValue);\n\n        // Additional operation on the ConcurrentSkipListSet\n        for (Integer value : set) {\n            System.out.println(\"Set Element: \" + value);\n        }\n    }\n}",
    "java_code_simple": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<Integer> set = new ConcurrentSkipListSet<>();\n        /* write */ set.add(42);\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentSkipListSet",
        "write_method": "add",
        "read_class": "java.util.concurrent.ConcurrentSkipListSet",
        "read_method": "contains"
    }
}