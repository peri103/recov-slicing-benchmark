{
    "files": {
        "StackOperations.java": "import java.util.Stack;\n\npublic class StackOperations {\n    private Stack<Integer> stack = new Stack<>();\n\n    public void pushValue(int value) {\n        /* write */ stack.push(value);\n    }\n\n    public int peekValue() {\n        /* read */ return stack.peek();\n    }\n\n    public boolean isEmpty() {\n        return stack.isEmpty();\n    }\n\n    public int popValue() {\n        return stack.pop();\n    }\n\n    public int getSize() {\n        return stack.size();\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.Stack",
        "write_method": "push",
        "read_class": "java.util.Stack",
        "read_method": "peek"
    },
    "java_code_simple": "import java.util.Stack;\n\npublic class Main {\n    public static void main(String[] args) {\n        Stack<Integer> stack = new Stack<>();\n        /* write */ stack.push(42);\n        /* read */ int value = stack.peek();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.Stack;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Stack<Integer> stack = new Stack<>();\n        ArrayList<Integer> arrayList = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to ArrayList\n        for (int i = 0; i < 5; i++) {\n            arrayList.add(i * 10);\n        }\n\n        // Adding elements to LinkedList\n        linkedList.add(\"Hello\");\n        linkedList.add(\"World\");\n\n        // Performing operations on ArrayList\n        for (int i = 0; i < arrayList.size(); i++) {\n            System.out.println(\"ArrayList element at index \" + i + \": \" + arrayList.get(i));\n        }\n\n        // Performing operations on LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList element: \" + str);\n        }\n\n        // Using Stack write method\n        /* write */ stack.push(42);\n\n        // Performing additional operations\n        if (!stack.isEmpty()) {\n            System.out.println(\"Stack is not empty.\");\n        } else {\n            System.out.println(\"Stack is empty.\");\n        }\n\n        // More complex logic\n        int sum = 0;\n        for (int num : arrayList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of ArrayList elements: \" + sum);\n\n        // Using Stack read method\n        /* read */ int value = stack.peek();\n        System.out.println(\"Top element of the stack: \" + value);\n\n        // Further operations\n        stack.push(100);\n        stack.push(200);\n        System.out.println(\"Stack size after additional pushes: \" + stack.size());\n\n        while (!stack.isEmpty()) {\n            System.out.println(\"Popped from stack: \" + stack.pop());\n        }\n    }\n}"
}