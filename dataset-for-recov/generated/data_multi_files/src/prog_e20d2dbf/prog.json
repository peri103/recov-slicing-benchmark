{
    "files": {
        "DequeWrapper.java": "import java.util.Deque;\nimport java.util.LinkedList;\n\npublic class DequeWrapper {\n    private Deque<Integer> deque = new LinkedList<>();\n\n    public void addValue(int value) {\n        /* write */ deque.addFirst(value);\n    }\n\n    public int getFirstValue() {\n        /* read */ return deque.getFirst();\n    }\n\n    public void addMultipleValues(int... values) {\n        for (int value : values) {\n            deque.addLast(value);\n        }\n    }\n\n    public void printAndClearDeque() {\n        while (!deque.isEmpty()) {\n            System.out.println(\"Deque item: \" + deque.removeLast());\n        }\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n\n    public double getAverageGrade() {\n        int sum = 0;\n        for (int grade : grades) {\n            sum += grade;\n        }\n        return grades.isEmpty() ? 0 : (double) sum / grades.size();\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        DequeWrapper dequeWrapper = new DequeWrapper();\n        Student student = new Student(\"John Doe\");\n\n        // Add grades to the student\n        student.addGrade(85);\n        student.addGrade(90);\n        student.addGrade(78);\n\n        // Print student's average grade\n        System.out.println(\"Average grade for \" + student.getName() + \": \" + student.getAverageGrade());\n\n        // Add and print values from the deque\n        dequeWrapper.addValue(42);\n        dequeWrapper.addMultipleValues(84, 168, 252);\n        dequeWrapper.printAndClearDeque();\n\n        // Retrieve and print the first value added to the deque\n        int firstValue = dequeWrapper.getFirstValue();\n        System.out.println(\"First value in deque: \" + firstValue);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.Deque",
        "write_method": "addFirst",
        "read_class": "java.util.Deque",
        "read_method": "getFirst"
    },
    "java_code_simple": "import java.util.Deque;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Deque<Integer> deque = new LinkedList<>();\n        /* write */ deque.addFirst(42);\n        /* read */ int value = deque.getFirst();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.Deque;\nimport java.util.LinkedList;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Deque<Integer> deque = new LinkedList<>();\n        ArrayList<String> list = new ArrayList<>();\n        HashMap<Integer, String> map = new HashMap<>();\n\n        // Populate the map with some values\n        map.put(1, \"One\");\n        map.put(2, \"Two\");\n        map.put(3, \"Three\");\n\n        // Add elements to the list\n        list.add(\"Hello\");\n        list.add(\"World\");\n\n        // Perform some operations on the list\n        for (String s : list) {\n            System.out.println(\"List item: \" + s);\n        }\n\n        // Add an element to the deque\n        /* write */ deque.addFirst(42);\n\n        // Perform some operations on the map\n        for (Map.Entry<Integer, String> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Add more elements to the deque\n        deque.addFirst(84);\n        deque.addLast(168);\n\n        // Perform some operations on the deque\n        while (!deque.isEmpty()) {\n            System.out.println(\"Deque item: \" + deque.removeLast());\n        }\n\n        // Insert a delay to simulate complex processing\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        // Retrieve the first element from the deque\n        /* read */ int value = deque.getFirst();\n        System.out.println(\"First value in deque: \" + value);\n    }\n}"
}