{
    "files": {
        "SortedSetManager.java": "import java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class SortedSetManager {\n    private SortedSet<Integer> sortedSet = new TreeSet<>();\n\n    public void addElement(int element) {\n        /* write */ sortedSet.add(element);\n    }\n\n    public boolean containsElement(int element) {\n        return sortedSet.contains(element);\n    }\n\n    public SortedSet<Integer> getSortedSet() {\n        return sortedSet;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int studentId;\n\n    public Student(String name, int studentId) {\n        this.name = name;\n        this.studentId = studentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getStudentId() {\n        return studentId;\n    }\n}\n",
        "Course.java": "import java.util.HashSet;\nimport java.util.Set;\n\npublic class Course {\n    private String courseName;\n    private Set<Student> enrolledStudents = new HashSet<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public boolean isStudentEnrolled(Student student) {\n        return enrolledStudents.contains(student);\n    }\n\n    public Set<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        SortedSetManager sortedSetManager = new SortedSetManager();\n        sortedSetManager.addElement(42);\n        sortedSetManager.addElement(15);\n        sortedSetManager.addElement(30);\n\n        Student alice = new Student(\"Alice\", 101);\n        Student bob = new Student(\"Bob\", 102);\n\n        Course mathCourse = new Course(\"Mathematics\");\n        mathCourse.enrollStudent(alice);\n        mathCourse.enrollStudent(bob);\n\n        // Check if a student is enrolled\n        if (mathCourse.isStudentEnrolled(alice)) {\n            System.out.println(alice.getName() + \" is enrolled in \" + mathCourse.getEnrolledStudents());\n        }\n\n        // Check if the sorted set contains a specific element\n        int checkValue = 42;\n        /* read */ boolean containsValue = sortedSetManager.containsElement(checkValue);\n        System.out.println(\"SortedSet contains \" + checkValue + \": \" + containsValue);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.SortedSet",
        "write_method": "add",
        "read_class": "java.util.SortedSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedSet<Integer> sortedSet = new TreeSet<>();\n        /* write */ sortedSet.add(42);\n        /* read */ boolean containsValue = sortedSet.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.SortedSet;\nimport java.util.TreeSet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedSet<Integer> sortedSet = new TreeSet<>();\n        Set<String> hashSet = new HashSet<>();\n        \n        // Add elements to the HashSet\n        hashSet.add(\"Hello\");\n        hashSet.add(\"World\");\n        \n        // Add elements to the SortedSet\n        /* write */ sortedSet.add(42);\n        sortedSet.add(15);\n        sortedSet.add(30);\n        \n        // Print elements of the HashSet\n        for (String str : hashSet) {\n            System.out.println(\"HashSet contains: \" + str);\n        }\n        \n        // Use a loop to perform some operations\n        for (int i = 0; i < 5; i++) {\n            sortedSet.add(i * 10);\n        }\n        \n        // Check if an element exists in the SortedSet\n        int checkValue = 42;\n        /* read */ boolean containsValue = sortedSet.contains(checkValue);\n        \n        // Print result of the contains check\n        System.out.println(\"SortedSet contains \" + checkValue + \": \" + containsValue);\n        \n        // Print all elements in the SortedSet\n        for (Integer num : sortedSet) {\n            System.out.println(\"SortedSet element: \" + num);\n        }\n        \n        // Perform additional operations on HashSet\n        if (hashSet.contains(\"Hello\")) {\n            System.out.println(\"HashSet contains 'Hello'\");\n        }\n        \n        // Remove an element from the HashSet\n        hashSet.remove(\"World\");\n        System.out.println(\"HashSet after removal: \" + hashSet);\n    }\n}"
}