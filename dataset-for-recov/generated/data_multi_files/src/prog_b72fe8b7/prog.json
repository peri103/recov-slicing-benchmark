{
    "files": {
        "ConcurrentDequeManager.java": "import java.util.concurrent.ConcurrentLinkedDeque;\n\npublic class ConcurrentDequeManager {\n    private ConcurrentLinkedDeque<Integer> deque = new ConcurrentLinkedDeque<>();\n\n    public void addFirstElement(int element) {\n        /* write */ deque.addFirst(element);\n    }\n\n    public Integer peekFirstElement() {\n        return deque.peekFirst();\n    }\n\n    public void addLastElement(int element) {\n        deque.addLast(element);\n    }\n\n    public void printAllElements() {\n        System.out.println(\"All elements in deque:\");\n        for (Integer elem : deque) {\n            System.out.println(elem);\n        }\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public ArrayList<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.LinkedList;\n\npublic class Course {\n    private String courseName;\n    private LinkedList<Student> students = new LinkedList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public LinkedList<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Initialize ConcurrentDequeManager\n        ConcurrentDequeManager dequeManager = new ConcurrentDequeManager();\n\n        // Add elements using ConcurrentDequeManager\n        dequeManager.addLastElement(10);\n        dequeManager.addLastElement(20);\n        dequeManager.addFirstElement(42);\n\n        // Peek first element\n        /* read */ Integer firstElement = dequeManager.peekFirstElement();\n        System.out.println(\"First element in deque: \" + firstElement);\n\n        // Print all elements in deque\n        dequeManager.printAllElements();\n\n        // Initialize Course and Student\n        Course course = new Course(\"Math\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        // Add scores to students\n        student1.addScore(95);\n        student2.addScore(85);\n\n        // Enroll students in the course\n        course.enrollStudent(student1);\n        course.enrollStudent(student2);\n\n        // Print enrolled students and their scores\n        System.out.println(\"Students enrolled in \" + course.getCourseName() + \":\");\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Name: \" + student.getName() + \", Scores: \" + student.getScores());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentLinkedDeque",
        "write_method": "addFirst",
        "read_class": "java.util.concurrent.ConcurrentLinkedDeque",
        "read_method": "peekFirst"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentLinkedDeque;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedDeque<Integer> deque = new ConcurrentLinkedDeque<>();\n        /* write */ deque.addFirst(42);\n        /* read */ Integer value = deque.peekFirst();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentLinkedDeque;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedDeque<Integer> deque = new ConcurrentLinkedDeque<>();\n        ArrayList<Integer> arrayList = new ArrayList<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n\n        // Adding elements to ArrayList and LinkedList\n        arrayList.add(10);\n        arrayList.add(20);\n        linkedList.add(30);\n        linkedList.add(40);\n\n        // Using a loop to add elements to the deque\n        for (int i = 0; i < arrayList.size(); i++) {\n            deque.addLast(arrayList.get(i));\n        }\n\n        // Adding an element to the front of the deque\n        /* write */ deque.addFirst(42);\n\n        // Performing operations on LinkedList\n        linkedList.removeFirst();\n        linkedList.addLast(50);\n\n        // Using the peekFirst method to read the first element\n        /* read */ Integer value = deque.peekFirst();\n        System.out.println(\"First element in deque: \" + value);\n\n        // Adding more elements to the deque\n        for (int i = 0; i < linkedList.size(); i++) {\n            deque.addLast(linkedList.get(i));\n        }\n\n        // Printing all elements in the deque\n        System.out.println(\"All elements in deque:\");\n        for (Integer element : deque) {\n            System.out.println(element);\n        }\n    }\n}"
}