{
    "files": {
        "QueueHandler.java": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class QueueHandler {\n    private LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n\n    public void addToQueue(int number) {\n        try {\n            /* write */ queue.put(number);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public int retrieveFromQueue() {\n        try {\n            /* read */ return queue.take();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        return -1;\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.LinkedTransferQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.LinkedTransferQueue",
        "read_method": "take"
    },
    "java_code_simple": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n        try {\n            /* write */ queue.put(42);\n            /* read */ int value = queue.take();\n            System.out.println(value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import java.util.concurrent.LinkedTransferQueue;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n        ArrayList<String> stringList = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n\n        try {\n            /* write */ queue.put(42);\n            \n            // Adding elements to stringList\n            stringList.add(\"Hello\");\n            stringList.add(\"World\");\n\n            // Adding key-value pairs to map\n            map.put(\"One\", 1);\n            map.put(\"Two\", 2);\n\n            // Processing stringList\n            for (String str : stringList) {\n                System.out.println(\"StringList item: \" + str);\n            }\n\n            // Processing map\n            for (String key : map.keySet()) {\n                System.out.println(\"Map item: \" + key + \" = \" + map.get(key));\n            }\n\n            // Performing some calculations\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n            /* read */ int value = queue.take();\n            System.out.println(\"Value from queue: \" + value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}