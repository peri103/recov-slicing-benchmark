{
    "files": {
        "ImmutableMapBuilder.java": "import com.google.common.collect.ImmutableSortedMap;\nimport com.google.common.collect.ImmutableSortedMap.Builder;\n\npublic class ImmutableMapBuilder {\n    private Builder<Integer, String> builder = ImmutableSortedMap.<Integer, String>naturalOrder();\n\n    public void addEntry(int key, String value) {\n        /* write */ builder.put(key, value);\n    }\n\n    public ImmutableSortedMap<Integer, String> buildMap() {\n        return builder.build();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public ArrayList<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        ImmutableMapBuilder mapBuilder = new ImmutableMapBuilder();\n        mapBuilder.addEntry(1, \"One\");\n        ImmutableSortedMap<Integer, String> map = mapBuilder.buildMap();\n\n        Student student = new Student(\"Alice\");\n        student.addScore(90);\n        \n        // Additional unrelated code to increase complexity\n        System.out.println(\"Student Name: \" + student.getName());\n        for (int score : student.getScores()) {\n            System.out.println(\"Score: \" + score);\n        }\n\n        /* read */ String value = map.get(1);\n        System.out.println(\"Value from ImmutableSortedMap: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMap.Builder",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableSortedMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMap;\nimport com.google.common.collect.ImmutableSortedMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer, String> builder = ImmutableSortedMap.<Integer, String>naturalOrder();\n        /* write */ builder.put(1, \"One\");\n        ImmutableSortedMap<Integer, String> map = builder.build();\n        /* read */ String value = map.get(1);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableSortedMap;\nimport com.google.common.collect.ImmutableSortedMap.Builder;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer, String> builder = ImmutableSortedMap.<Integer, String>naturalOrder();\n        /* write */ builder.put(1, \"One\");\n        ImmutableSortedMap<Integer, String> map = builder.build();\n        \n        // Additional unrelated code to increase complexity\n        ArrayList<String> arrayList = new ArrayList<>();\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        arrayList.add(\"First\");\n        arrayList.add(\"Second\");\n        hashMap.put(\"Key1\", 100);\n        hashMap.put(\"Key2\", 200);\n        \n        // Processing the array list\n        for (String item : arrayList) {\n            System.out.println(\"ArrayList item: \" + item);\n        }\n        \n        // Processing the hash map\n        for (String key : hashMap.keySet()) {\n            System.out.println(\"HashMap entry: \" + key + \" -> \" + hashMap.get(key));\n        }\n        \n        /* read */ String value = map.get(1);\n        System.out.println(\"Value from ImmutableSortedMap: \" + value);\n    }\n}"
}