{
    "files": {
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableListMultimap;\nimport com.google.common.collect.ImmutableListMultimap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String, Integer> builder = ImmutableListMultimap.builder();\n        /* write */ builder.put(\"key1\", 42);\n        ImmutableListMultimap<String, Integer> multimap = builder.build();\n\n        // Create Course and Students\n        Course course = new Course(\"Mathematics\");\n        Student student = new Student(\"Alice\");\n        student.addScore(95);\n        course.addStudent(student);\n\n        // Read the score\n        int score = student.getScores().get(0);\n        System.out.println(\"Student: \" + student.name + \", Score: \" + score);\n\n        /* read */ Integer value = multimap.get(\"key1\").iterator().next();\n        System.out.println(\"Value from multimap: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableListMultimap.Builder",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableListMultimap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableListMultimap;\nimport com.google.common.collect.ImmutableListMultimap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String, Integer> builder = ImmutableListMultimap.builder();\n        /* write */ builder.put(\"key1\", 42);\n        ImmutableListMultimap<String, Integer> multimap = builder.build();\n        /* read */ Integer value = multimap.get(\"key1\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableListMultimap;\nimport com.google.common.collect.ImmutableListMultimap.Builder;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String, Integer> builder = ImmutableListMultimap.builder();\n        /* write */ builder.put(\"key1\", 42);\n        ImmutableListMultimap<String, Integer> multimap = builder.build();\n        \n        // Unrelated code to increase complexity\n        ArrayList<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n        \n        Map<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < stringList.size(); i++) {\n            map.put(stringList.get(i), i);\n        }\n        \n        // More unrelated processing\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \" has index \" + entry.getValue());\n        }\n\n        /* read */ Integer value = multimap.get(\"key1\").iterator().next();\n        System.out.println(\"Value from multimap: \" + value);\n        \n        // Additional unrelated code\n        ArrayList<Integer> additionalList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            additionalList.add(i * 10);\n        }\n        \n        for (Integer num : additionalList) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}"
}