{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        Calendar calendar = Calendar.getInstance();\n        \n        // Add years to the current date\n        /* write */ Date futureDate = DateUtils.addYears(currentDate, 5);\n        \n        // Perform some unrelated operations using Calendar\n        calendar.setTime(currentDate);\n        calendar.add(Calendar.MONTH, 3);\n        Date threeMonthsLater = calendar.getTime();\n        System.out.println(\"Three months later: \" + threeMonthsLater);\n        \n        calendar.add(Calendar.DAY_OF_YEAR, 10);\n        Date tenDaysAfterThreeMonths = calendar.getTime();\n        System.out.println(\"Ten days after three months: \" + tenDaysAfterThreeMonths);\n        \n        // Use another DateUtils method to round the date\n        Date roundedDate = DateUtils.round(futureDate, Calendar.MONTH);\n        System.out.println(\"Rounded date to the nearest month: \" + roundedDate);\n        \n        // Truncate the future date to remove the time part\n        /* read */ Date truncatedDate = DateUtils.truncate(futureDate, DateUtils.MILLIS_PER_DAY);\n        \n        // Print the truncated date\n        System.out.println(\"Truncated future date: \" + truncatedDate);\n        \n        // Perform additional operations with the truncated date\n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.YEAR, 2);\n        Date twoYearsAfterTruncated = calendar.getTime();\n        System.out.println(\"Two years after truncated date: \" + twoYearsAfterTruncated);\n        \n        // Use DateUtils to add days to the truncated date\n        Date tenDaysAfterTruncated = DateUtils.addDays(truncatedDate, 10);\n        System.out.println(\"Ten days after truncated date: \" + tenDaysAfterTruncated);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Add years to the current date\n        /* write */ Date futureDate = DateUtils.addYears(currentDate, 5);\n        \n        // Truncate the future date to remove the time part\n        /* read */ Date truncatedDate = DateUtils.truncate(futureDate, DateUtils.MILLIS_PER_DAY);\n        \n        // Print the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addYears",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}