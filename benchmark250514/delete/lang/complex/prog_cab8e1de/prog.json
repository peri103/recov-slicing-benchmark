{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Initialize a Calendar instance for additional operations\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        \n        // Manipulate the calendar instance\n        calendar.add(Calendar.DAY_OF_MONTH, 5);\n        Date futureDate = calendar.getTime();\n        \n        // Use DateUtils to set specific hour on the date\n        /* write */ Date updatedDate = DateUtils.setHours(date, 10);\n        \n        // Perform some unrelated operations to make the program more complex\n        calendar.setTime(updatedDate);\n        calendar.add(Calendar.MONTH, 1);\n        Date nextMonthDate = calendar.getTime();\n        \n        // Use DateUtils to truncate the date to the nearest hour\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.HOUR_OF_DAY);\n        \n        // Print the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional complex operations\n        calendar.setTime(nextMonthDate);\n        calendar.add(Calendar.YEAR, 2);\n        Date twoYearsLater = calendar.getTime();\n        \n        Date monthTruncatedDate = DateUtils.truncate(twoYearsLater, DateUtils.MONTH);\n        System.out.println(\"Month Truncated Date: \" + monthTruncatedDate);\n        \n        // Further date manipulation and printing\n        calendar.setTime(monthTruncatedDate);\n        calendar.add(Calendar.WEEK_OF_YEAR, 3);\n        Date threeWeeksLater = calendar.getTime();\n        \n        System.out.println(\"Three Weeks Later Date: \" + threeWeeksLater);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        /* write */ Date updatedDate = DateUtils.setHours(date, 10);\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.HOUR_OF_DAY);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setHours",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}