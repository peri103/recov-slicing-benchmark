{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.DAY_OF_MONTH, 1);\n        Date tomorrow = calendar.getTime();\n        \n        ArrayList<Date> dateList = new ArrayList<>();\n        dateList.add(date);\n        dateList.add(tomorrow);\n        \n        for (Date d : dateList) {\n            System.out.println(\"Original Date: \" + d);\n        }\n        \n        /* write */ Date updatedDate = DateUtils.setHours(date, 10);\n        \n        calendar.setTime(updatedDate);\n        calendar.add(Calendar.HOUR_OF_DAY, 5);\n        Date laterToday = calendar.getTime();\n        \n        dateList.add(laterToday);\n        \n        for (Date d : dateList) {\n            System.out.println(\"Modified Date: \" + d);\n        }\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.MILLIS_PER_DAY);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.MONTH, 1);\n        Date nextMonth = calendar.getTime();\n        \n        dateList.add(nextMonth);\n        \n        for (Date d : dateList) {\n            System.out.println(\"Date List Entry: \" + d);\n        }\n        \n        Date earliestDate = dateList.get(0);\n        for (Date d : dateList) {\n            if (d.before(earliestDate)) {\n                earliestDate = d;\n            }\n        }\n        \n        System.out.println(\"Earliest Date: \" + earliestDate);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        /* write */ Date updatedDate = DateUtils.setHours(date, 10);\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.MILLIS_PER_DAY);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setHours",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}