{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Additional code to make the program more complex\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.DAY_OF_YEAR, 1);\n        Date tomorrow = calendar.getTime();\n        \n        List<Date> dateList = new ArrayList<>();\n        dateList.add(date);\n        dateList.add(tomorrow);\n        \n        for (Date d : dateList) {\n            System.out.println(\"Date in list: \" + d);\n        }\n        \n        // Original write method\n        /* write */\n        Date updatedDate = DateUtils.setMinutes(date, 30);\n        \n        // More unrelated operations\n        calendar.add(Calendar.HOUR, 2);\n        Date twoHoursLater = calendar.getTime();\n        dateList.add(twoHoursLater);\n        \n        for (Date d : dateList) {\n            System.out.println(\"Updated Date in list: \" + d);\n        }\n        \n        // Original read method\n        /* read */\n        Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.MILLIS_IN_MINUTE);\n        \n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Further complex operations\n        Date now = new Date();\n        List<Date> futureDates = new ArrayList<>();\n        \n        for (int i = 1; i <= 5; i++) {\n            calendar.setTime(now);\n            calendar.add(Calendar.MINUTE, i * 10);\n            futureDates.add(calendar.getTime());\n        }\n        \n        for (Date futureDate : futureDates) {\n            System.out.println(\"Future Date: \" + futureDate);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n\n        /* write */\n        Date updatedDate = DateUtils.setMinutes(date, 30);\n\n        /* read */\n        Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.MILLIS_IN_MINUTE);\n\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setMinutes",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}