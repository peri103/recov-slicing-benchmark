{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Additional unrelated code to increase complexity\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.DAY_OF_MONTH, 5);\n        Date futureDate = calendar.getTime();\n        System.out.println(\"Future date: \" + futureDate);\n        \n        List<Date> dateList = new ArrayList<>();\n        dateList.add(date);\n        dateList.add(futureDate);\n        \n        for (Date d : dateList) {\n            System.out.println(\"Date in list: \" + d);\n        }\n        \n        /* write */ Date updatedDate = DateUtils.setWeeks(date, 10);\n        \n        // More unrelated code\n        Calendar anotherCalendar = Calendar.getInstance();\n        anotherCalendar.setTime(updatedDate);\n        anotherCalendar.add(Calendar.MONTH, 2);\n        Date modifiedDate = anotherCalendar.getTime();\n        System.out.println(\"Modified date: \" + modifiedDate);\n        \n        int month = anotherCalendar.get(Calendar.MONTH);\n        System.out.println(\"Month of modified date: \" + month);\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.WEEK_OF_YEAR);\n        System.out.println(\"Truncated date: \" + truncatedDate);\n        \n        // Further unrelated code\n        List<Date> allDates = new ArrayList<>();\n        allDates.add(updatedDate);\n        allDates.add(truncatedDate);\n        allDates.add(modifiedDate);\n        \n        for (Date d : allDates) {\n            System.out.println(\"All dates: \" + d);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        /* write */ Date updatedDate = DateUtils.setWeeks(date, 10);\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.WEEK_OF_YEAR);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setWeeks",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}