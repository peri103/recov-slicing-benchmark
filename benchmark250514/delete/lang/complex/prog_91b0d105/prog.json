{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample text\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World'\");\n\n        // Create an ArrayList to store tokens\n        List<String> tokensList = new ArrayList<>();\n\n        // Set the quote character using the write method\n        /* write */ tokenizer.setQuoteChar('\\'');\n\n        // Add some unrelated operations to make the program more complex\n        String[] sampleTexts = {\"Example\", \"Text\", \"Array\"};\n        for (String text : sampleTexts) {\n            StrTokenizer tempTokenizer = new StrTokenizer(text);\n            while (tempTokenizer.hasNext()) {\n                tokensList.add(tempTokenizer.nextToken());\n            }\n        }\n\n        // Perform some operations on the tokensList\n        List<String> processedTokens = new ArrayList<>();\n        for (String token : tokensList) {\n            processedTokens.add(token.toUpperCase());\n        }\n\n        // Output the processed tokens\n        for (String processedToken : processedTokens) {\n            System.out.println(processedToken);\n        }\n\n        // Read the next token using the read method\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token read\n        System.out.println(token);\n\n        // More complex operations\n        int sum = 0;\n        for (String token : processedTokens) {\n            sum += token.length();\n        }\n        System.out.println(\"Total length of processed tokens: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample text\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World'\");\n\n        // Set the quote character using the write method\n        /* write */ tokenizer.setQuoteChar('\\'');\n\n        // Read the next token using the read method\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token read\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setQuoteChar",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}