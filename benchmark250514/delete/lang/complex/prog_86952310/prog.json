{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"apple, banana, cherry\");\n\n        // Create a custom StrMatcher that matches commas\n        StrMatcher commaMatcher = StrMatcher.commaMatcher();\n\n        // Use the setTokenMatcher method to set the custom matcher\n        /* write */ tokenizer.setTokenMatcher(commaMatcher);\n\n        // Additional unrelated code for complexity\n        List<String> fruits = Arrays.asList(\"orange\", \"grape\", \"melon\");\n        for (String fruit : fruits) {\n            System.out.println(\"Processing fruit: \" + fruit);\n        }\n        \n        // Initialize another StrTokenizer with a different string\n        StrTokenizer anotherTokenizer = new StrTokenizer(\"cat; dog; rabbit\");\n        anotherTokenizer.setDelimiterMatcher(StrMatcher.semicolonMatcher());\n        \n        // Process tokens from anotherTokenizer\n        while (anotherTokenizer.hasNext()) {\n            String animalToken = anotherTokenizer.nextToken();\n            System.out.println(\"Animal: \" + animalToken);\n        }\n\n        // Read the first token using the nextToken method\n        /* read */ String firstToken = tokenizer.nextToken();\n\n        // Print the first token\n        System.out.println(\"First fruit token: \" + firstToken);\n\n        // Additional unrelated code for complexity\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Another StrTokenizer with different delimiter\n        StrTokenizer yetAnotherTokenizer = new StrTokenizer(\"lion|tiger|bear\");\n        yetAnotherTokenizer.setDelimiterMatcher(StrMatcher.charMatcher('|'));\n        \n        // Process tokens from yetAnotherTokenizer\n        while (yetAnotherTokenizer.hasNext()) {\n            String wildAnimalToken = yetAnotherTokenizer.nextToken();\n            System.out.println(\"Wild Animal: \" + wildAnimalToken);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"apple, banana, cherry\");\n\n        // Create a custom StrMatcher that matches commas\n        StrMatcher commaMatcher = StrMatcher.commaMatcher();\n\n        // Use the setTokenMatcher method to set the custom matcher\n        /* write */ tokenizer.setTokenMatcher(commaMatcher);\n\n        // Read the first token using the nextToken method\n        /* read */ String firstToken = tokenizer.nextToken();\n\n        // Print the first token\n        System.out.println(firstToken);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setTokenMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}