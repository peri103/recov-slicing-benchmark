{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Add 5 minutes to the current date\n        /* write */ Date updatedDate = DateUtils.addMinutes(currentDate, 5);\n        \n        // Create a calendar instance and set it to the updated date\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(updatedDate);\n        \n        // Add 2 hours to the calendar instance\n        calendar.add(Calendar.HOUR, 2);\n        Date twoHoursLater = calendar.getTime();\n        \n        // Print the original and updated dates\n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"Updated Date (after adding 5 minutes): \" + updatedDate);\n        \n        // Perform some unrelated operations\n        for (int i = 0; i < 3; i++) {\n            calendar.add(Calendar.DAY_OF_MONTH, i);\n            Date futureDate = calendar.getTime();\n            System.out.println(\"Future Date \" + i + \": \" + futureDate);\n        }\n        \n        // Truncate the date to remove seconds and milliseconds\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.MILLISECOND);\n        \n        // Print the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Check if the truncated date is before the two hours later date\n        boolean isBefore = truncatedDate.before(twoHoursLater);\n        System.out.println(\"Is Truncated Date before Two Hours Later Date? \" + isBefore);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Add 5 minutes to the current date\n        /* write */ Date updatedDate = DateUtils.addMinutes(currentDate, 5);\n        \n        // Truncate the date to remove seconds and milliseconds\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.MILLISECOND);\n        \n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"Updated Date: \" + updatedDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addMinutes",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}