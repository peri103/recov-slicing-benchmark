{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrBuilder;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"hello world\");\n        StrBuilder builder = new StrBuilder();\n        \n        ArrayList<String> tokensList = new ArrayList<>();\n        builder.append(\"Initial Builder Content\");\n        \n        tokenizer.setIgnoreEmptyTokens(true);\n        tokenizer.setDelimiterChar(',');\n        \n        for (int i = 0; i < 3; i++) {\n            builder.append(\" Additional Content \" + i);\n        }\n        \n        /* write */ tokenizer.setTokenChar(' ');\n        \n        tokensList.add(\"First Token\");\n        tokensList.add(\"Second Token\");\n        \n        for (String token : tokensList) {\n            builder.append(token).append(\" \");\n        }\n        \n        String firstToken = tokensList.get(0);\n        System.out.println(\"First token from list: \" + firstToken);\n        \n        String secondToken = tokenizer.nextToken();\n        System.out.println(\"Second token from tokenizer: \" + secondToken);\n        \n        String builderContent = builder.toString();\n        System.out.println(\"Builder Content: \" + builderContent);\n        \n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(\"Read Token: \" + token);\n        \n        tokensList.add(token);\n        for (String t : tokensList) {\n            System.out.println(\"Token from list: \" + t);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"hello world\");\n        /* write */ tokenizer.setTokenChar(' ');\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setTokenChar",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}