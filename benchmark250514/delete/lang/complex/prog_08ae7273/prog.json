{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.GregorianCalendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Set the seconds of the date to a specific value\n        /* write */ date = DateUtils.setSeconds(date, 45);\n        \n        // Create a calendar instance and set a specific date\n        Calendar calendar = new GregorianCalendar(2023, Calendar.OCTOBER, 10, 15, 30, 25);\n        calendar.add(Calendar.YEAR, 1); // Add one year to the calendar date\n        \n        // Perform some operations on the calendar\n        int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);\n        System.out.println(\"Day of the week: \" + dayOfWeek);\n        \n        // Use DateUtils to round the calendar date to the nearest hour\n        Date roundedDate = DateUtils.round(calendar.getTime(), Calendar.HOUR);\n        System.out.println(\"Rounded Date: \" + roundedDate);\n        \n        // Truncate the date to remove the seconds value\n        /* read */ Date truncatedDate = DateUtils.truncate(date, DateUtils.SECOND);\n        \n        // Print the truncated date, which should have seconds set to zero\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional operations on the date\n        Date modifiedDate = DateUtils.addDays(date, 5); // Add 5 days to the date\n        System.out.println(\"Modified Date: \" + modifiedDate);\n        \n        // Compare two dates\n        boolean isSameDay = DateUtils.isSameDay(date, modifiedDate);\n        System.out.println(\"Is the same day: \" + isSameDay);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Set the seconds of the date to a specific value\n        /* write */ date = DateUtils.setSeconds(date, 45);\n        \n        // Truncate the date to remove the seconds value\n        /* read */ Date truncatedDate = DateUtils.truncate(date, DateUtils.SECOND);\n        \n        // Print the truncated date, which should have seconds set to zero\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setSeconds",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}