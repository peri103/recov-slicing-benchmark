{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Additional complexity: manipulate calendar\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.DAY_OF_MONTH, 1);\n        Date tomorrow = calendar.getTime();\n        \n        // Further complexity: format date\n        String formattedDate = String.format(\"%1$tm %1$te,%1$tY\", date);\n        System.out.println(\"Formatted Date: \" + formattedDate);\n        \n        // Original write method\n        /* write */ Date newDate = DateUtils.addSeconds(date, 10);\n        \n        // More complexity: compare dates\n        if (newDate.after(tomorrow)) {\n            System.out.println(\"New date is after tomorrow.\");\n        } else {\n            System.out.println(\"New date is not after tomorrow.\");\n        }\n        \n        // Additional date manipulation\n        Date nextWeek = DateUtils.addDays(date, 7);\n        System.out.println(\"Date next week: \" + nextWeek);\n        \n        // Original read method\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, DateUtils.SECOND);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Complex operation: calculate difference in milliseconds\n        long difference = nextWeek.getTime() - truncatedDate.getTime();\n        System.out.println(\"Difference in milliseconds: \" + difference);\n        \n        // Further complexity: add minutes and check equality\n        Date addedMinutesDate = DateUtils.addMinutes(truncatedDate, 5);\n        boolean isEqual = addedMinutesDate.equals(truncatedDate);\n        System.out.println(\"Is added minutes date equal to truncated date? \" + isEqual);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        /* write */ Date newDate = DateUtils.addSeconds(date, 10);\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, DateUtils.SECOND);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addSeconds",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}