{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.StringJoiner;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n\n        // Set a custom token matcher using the write method\n        /* write */ tokenizer.setTokenMatcher(StrMatcher.charMatcher(' '));\n\n        // Unrelated code to demonstrate more complexity\n        String[] words = {\"Java\", \"is\", \"fun\"};\n        StringJoiner joiner = new StringJoiner(\", \");\n        for (String word : words) {\n            joiner.add(word);\n        }\n        System.out.println(\"Joined words: \" + joiner.toString());\n\n        // Another StrTokenizer instance to tokenize a different string\n        StrTokenizer tokenizer2 = new StrTokenizer(\"Apache Commons Lang\");\n        tokenizer2.setDelimiterMatcher(StrMatcher.charMatcher(' '));\n        while (tokenizer2.hasNext()) {\n            System.out.println(\"Token from tokenizer2: \" + tokenizer2.nextToken());\n        }\n\n        // Read the first token using the read method\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token\n        System.out.println(token);\n\n        // Additional logic using arrays\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = Arrays.stream(numbers).sum();\n        System.out.println(\"Sum of numbers: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n\n        // Set a custom token matcher using the write method\n        /* write */ tokenizer.setTokenMatcher(StrMatcher.charMatcher(' '));\n\n        // Read the first token using the read method\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setTokenMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}