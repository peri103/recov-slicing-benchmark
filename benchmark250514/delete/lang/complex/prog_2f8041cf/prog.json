{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.text.SimpleDateFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(new Date());\n        \n        // Set an example date\n        calendar.set(2023, Calendar.OCTOBER, 15); // October 15, 2023\n        Date date = calendar.getTime();\n\n        // Use DateUtils to set weeks\n        int weeksToAdd = 2;\n        /* write */ Date updatedDate = DateUtils.setWeeks(date, calendar.get(Calendar.WEEK_OF_YEAR) + weeksToAdd);\n\n        // Unrelated operations to make the program more complex\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        System.out.println(\"Original Date: \" + sdf.format(date));\n\n        // Manipulate calendar to demonstrate complexity\n        calendar.add(Calendar.DAY_OF_MONTH, 10);\n        Date newDate = calendar.getTime();\n        System.out.println(\"New Date after adding 10 days: \" + sdf.format(newDate));\n\n        // More complex operations\n        calendar.setTime(updatedDate);\n        calendar.add(Calendar.MONTH, 1);\n        Date oneMonthLater = calendar.getTime();\n        System.out.println(\"One Month Later: \" + sdf.format(oneMonthLater));\n\n        // Use DateUtils to truncate the date to the start of the week\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, Calendar.WEEK_OF_YEAR);\n\n        // Output the truncated date\n        System.out.println(\"Truncated Date (Start of the Week): \" + sdf.format(truncatedDate));\n\n        // Additional unrelated operations\n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.YEAR, 1);\n        Date oneYearLater = calendar.getTime();\n        System.out.println(\"One Year Later: \" + sdf.format(oneYearLater));\n\n        // Final unrelated operation\n        calendar.setTime(oneYearLater);\n        calendar.add(Calendar.DAY_OF_YEAR, -100);\n        Date hundredDaysEarlier = calendar.getTime();\n        System.out.println(\"100 Days Earlier: \" + sdf.format(hundredDaysEarlier));\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Calendar;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(new Date());\n        \n        // Set an example date\n        calendar.set(2023, Calendar.OCTOBER, 15); // October 15, 2023\n        Date date = calendar.getTime();\n\n        // Use DateUtils to set weeks\n        int weeksToAdd = 2;\n        /* write */ Date updatedDate = DateUtils.setWeeks(date, calendar.get(Calendar.WEEK_OF_YEAR) + weeksToAdd);\n\n        // Use DateUtils to truncate the date to the start of the week\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, Calendar.WEEK_OF_YEAR);\n\n        // Output the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setWeeks",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}