{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Unrelated code to manipulate a Calendar instance\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.DAY_OF_MONTH, 1);\n        Date tomorrow = calendar.getTime();\n        System.out.println(\"Tomorrow's date: \" + tomorrow);\n\n        /* write */ Date updatedDate = DateUtils.addSeconds(date, 10);\n        \n        // More unrelated code to manipulate another Date instance\n        Date anotherDate = new Date();\n        anotherDate = DateUtils.addDays(anotherDate, 5);\n        System.out.println(\"Date after adding 5 days: \" + anotherDate);\n        \n        // Perform some date calculations\n        long diffInMillies = Math.abs(tomorrow.getTime() - anotherDate.getTime());\n        long diffInDays = diffInMillies / (1000 * 60 * 60 * 24);\n        System.out.println(\"Difference in days: \" + diffInDays);\n\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.SECOND);\n        System.out.println(\"Truncated date: \" + truncatedDate);\n\n        // Additional unrelated code to manipulate the updatedDate\n        Date futureDate = DateUtils.addMinutes(updatedDate, 30);\n        System.out.println(\"Future date after adding 30 minutes: \" + futureDate);\n\n        // Calculate the difference in seconds between futureDate and truncatedDate\n        long diffInSeconds = (futureDate.getTime() - truncatedDate.getTime()) / 1000;\n        System.out.println(\"Difference in seconds: \" + diffInSeconds);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        /* write */ Date updatedDate = DateUtils.addSeconds(date, 10);\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, DateUtils.SECOND);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addSeconds",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}