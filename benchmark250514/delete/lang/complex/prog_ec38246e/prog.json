{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"example\");\n        List<String> tokenList = new ArrayList<>();\n        \n        // Additional code to make the program more complex\n        StrTokenizer tokenizer2 = new StrTokenizer(\"additional example\");\n        tokenizer2.setDelimiterChar(' ');\n\n        while (tokenizer2.hasNext()) {\n            tokenList.add(tokenizer2.nextToken());\n        }\n\n        // Additional unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 4: \" + sum);\n\n        /* write */ tokenizer.setTokenChar('x');\n\n        // More complex operations\n        for (String token : tokenList) {\n            System.out.println(\"Token from tokenizer2: \" + token);\n        }\n\n        // Some calculations\n        double result = Math.pow(2, 3) * Math.sqrt(16);\n        System.out.println(\"Result of calculation: \" + result);\n\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(\"Token from tokenizer: \" + token);\n\n        // Additional loop to process the list\n        for (int i = 0; i < tokenList.size(); i++) {\n            System.out.println(\"Processing token: \" + tokenList.get(i));\n        }\n\n        // Final output\n        System.out.println(\"Program completed successfully.\");\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"example\");\n        /* write */ tokenizer.setTokenChar('x');\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setTokenChar",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}