{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Additional code to manipulate dates\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.DAY_OF_MONTH, 2);\n        Date twoDaysLater = calendar.getTime();\n        \n        System.out.println(\"Original Date: \" + date);\n        System.out.println(\"Date after adding two days: \" + twoDaysLater);\n        \n        /* write */ Date modifiedDate = DateUtils.addHours(date, 5);\n        \n        // More complex operations\n        calendar.setTime(modifiedDate);\n        calendar.add(Calendar.MINUTE, 30);\n        Date modifiedPlusMinutes = calendar.getTime();\n        \n        System.out.println(\"Date after adding 5 hours: \" + modifiedDate);\n        System.out.println(\"Date after adding 30 minutes: \" + modifiedPlusMinutes);\n\n        // Even more operations with dates\n        calendar.setTime(twoDaysLater);\n        calendar.add(Calendar.HOUR, 3);\n        Date twoDaysLaterPlusHours = calendar.getTime();\n        \n        System.out.println(\"Date two days later plus 3 hours: \" + twoDaysLaterPlusHours);\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(modifiedDate, DateUtils.HOUR_OF_DAY);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional unrelated operations\n        Date finalDate = DateUtils.addMinutes(truncatedDate, 45);\n        System.out.println(\"Final Date after adding 45 minutes: \" + finalDate);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        /* write */ Date modifiedDate = DateUtils.addHours(date, 5);\n        /* read */ Date truncatedDate = DateUtils.truncate(modifiedDate, DateUtils.HOUR_OF_DAY);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addHours",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}