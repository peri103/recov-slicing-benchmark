{
    "files": {
        "DateHandler.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class DateHandler {\n    private Date date;\n\n    public DateHandler() {\n        this.date = new Date();\n    }\n\n    public void setMinutes(int minutes) {\n        /* write */ this.date = DateUtils.setMinutes(this.date, minutes);\n    }\n\n    public Date getDate() {\n        return this.date;\n    }\n}\n",
        "DateProcessor.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class DateProcessor {\n    public Date truncateDate(Date date) {\n        /* read */ return DateUtils.truncate(date, DateUtils.MILLIS_IN_MINUTE);\n    }\n\n    public void printDate(Date date) {\n        System.out.println(\"Processed Date: \" + date);\n    }\n}\n",
        "Main.java": "import java.util.Calendar;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        DateHandler dateHandler = new DateHandler();\n        DateProcessor dateProcessor = new DateProcessor();\n\n        // Set minutes to 30\n        dateHandler.setMinutes(30);\n\n        // Perform some unrelated operations\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(dateHandler.getDate());\n        calendar.add(Calendar.HOUR, 5);\n        Date futureDate = calendar.getTime();\n        System.out.println(\"Future Date: \" + futureDate);\n\n        // Truncate the date\n        Date truncatedDate = dateProcessor.truncateDate(dateHandler.getDate());\n\n        // Print the truncated date\n        dateProcessor.printDate(truncatedDate);\n\n        // Further unrelated calculations\n        calendar.setTime(new Date());\n        calendar.add(Calendar.MONTH, 1);\n        Date nextMonth = calendar.getTime();\n        System.out.println(\"Date next month: \" + nextMonth);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setMinutes",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    },
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Set minutes to a specific value using DateUtils\n        int minutes = 30;\n        /* write */ date = DateUtils.setMinutes(date, minutes);\n        \n        // Truncate the date to remove seconds and milliseconds\n        /* read */ Date truncatedDate = DateUtils.truncate(date, DateUtils.MILLIS_IN_MINUTE);\n        \n        // Print the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        Calendar calendar = Calendar.getInstance();\n\n        // Set minutes to a specific value using DateUtils\n        int minutes = 30;\n        /* write */ date = DateUtils.setMinutes(date, minutes);\n\n        // Perform some unrelated operations\n        calendar.setTime(date);\n        calendar.add(Calendar.HOUR, 5);\n        Date futureDate = calendar.getTime();\n        System.out.println(\"Future Date: \" + futureDate);\n\n        // Perform another unrelated operation\n        Date currentDate = new Date();\n        long differenceInMillis = futureDate.getTime() - currentDate.getTime();\n        System.out.println(\"Difference in milliseconds: \" + differenceInMillis);\n\n        // Truncate the date to remove seconds and milliseconds\n        /* read */ Date truncatedDate = DateUtils.truncate(date, DateUtils.MILLIS_IN_MINUTE);\n\n        // Print the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n\n        // Perform more unrelated operations\n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.DAY_OF_MONTH, 10);\n        Date tenDaysLater = calendar.getTime();\n        System.out.println(\"Date ten days later: \" + tenDaysLater);\n\n        // Further unrelated calculations\n        calendar.setTime(currentDate);\n        calendar.add(Calendar.MONTH, 1);\n        Date nextMonth = calendar.getTime();\n        System.out.println(\"Date next month: \" + nextMonth);\n    }\n}"
}