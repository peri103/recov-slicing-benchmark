{
    "files": {
        "DateManipulator.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class DateManipulator {\n    private Date date;\n\n    public DateManipulator(Date date) {\n        this.date = date;\n    }\n\n    public Date setMinutes(int minutes) {\n        /* write */ Date updatedDate = DateUtils.setMinutes(this.date, minutes);\n        return updatedDate;\n    }\n\n    public Date truncateDate(Date date) {\n        /* read */ Date truncatedDate = DateUtils.truncate(date, Calendar.MINUTE);\n        return truncatedDate;\n    }\n}",
        "CalendarHelper.java": "import java.util.Calendar;\nimport java.util.Date;\n\npublic class CalendarHelper {\n    public static Date addHours(Date date, int hours) {\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.HOUR, hours);\n        return calendar.getTime();\n    }\n\n    public static Date addSeconds(Date date, int seconds) {\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.SECOND, seconds);\n        return calendar.getTime();\n    }\n\n    public static Date truncateToHour(Date date) {\n        return DateUtils.truncate(date, Calendar.HOUR_OF_DAY);\n    }\n}",
        "Main.java": "import java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        DateManipulator dateManipulator = new DateManipulator(date);\n\n        Date twoHoursLater = CalendarHelper.addHours(date, 2);\n        Date anotherDate = DateUtils.addDays(date, 5);\n        Date truncatedAnotherDate = DateUtils.truncate(anotherDate, Calendar.DAY_OF_MONTH);\n\n        Date updatedDate = dateManipulator.setMinutes(30);\n\n        Date secondsAddedDate = CalendarHelper.addSeconds(updatedDate, 45);\n        Date dateWithoutHours = CalendarHelper.truncateToHour(secondsAddedDate);\n\n        Date truncatedDate = dateManipulator.truncateDate(updatedDate);\n\n        System.out.println(\"Original Date: \" + date);\n        System.out.println(\"Date Two Hours Later: \" + twoHoursLater);\n        System.out.println(\"Another Date Truncated: \" + truncatedAnotherDate);\n        System.out.println(\"Updated Date with Minutes Set: \" + updatedDate);\n        System.out.println(\"Date with Seconds Added: \" + secondsAddedDate);\n        System.out.println(\"Date without Hours: \" + dateWithoutHours);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setMinutes",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    },
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        int minutesToSet = 30;\n\n        /* write */ Date updatedDate = DateUtils.setMinutes(date, minutesToSet);\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, java.util.Calendar.MINUTE);\n\n        System.out.println(\"Original Date: \" + date);\n        System.out.println(\"Updated Date with Minutes Set: \" + updatedDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        int minutesToSet = 30;\n        \n        // Unrelated code to add complexity\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.HOUR, 2);\n        Date twoHoursLater = calendar.getTime();\n\n        // Manipulating the date\n        Date anotherDate = DateUtils.addDays(date, 5);\n        Date truncatedAnotherDate = DateUtils.truncate(anotherDate, Calendar.DAY_OF_MONTH);\n\n        /* write */ Date updatedDate = DateUtils.setMinutes(date, minutesToSet);\n        \n        // More unrelated code\n        calendar.setTime(updatedDate);\n        calendar.add(Calendar.SECOND, 45);\n        Date secondsAddedDate = calendar.getTime();\n        \n        // Even more unrelated code\n        Date dateWithoutSeconds = DateUtils.truncate(secondsAddedDate, Calendar.SECOND);\n        Date dateWithoutHours = DateUtils.truncate(dateWithoutSeconds, Calendar.HOUR_OF_DAY);\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, Calendar.MINUTE);\n\n        System.out.println(\"Original Date: \" + date);\n        System.out.println(\"Date Two Hours Later: \" + twoHoursLater);\n        System.out.println(\"Another Date Truncated: \" + truncatedAnotherDate);\n        System.out.println(\"Updated Date with Minutes Set: \" + updatedDate);\n        System.out.println(\"Date with Seconds Added: \" + secondsAddedDate);\n        System.out.println(\"Date without Seconds: \" + dateWithoutSeconds);\n        System.out.println(\"Date without Hours: \" + dateWithoutHours);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}"
}