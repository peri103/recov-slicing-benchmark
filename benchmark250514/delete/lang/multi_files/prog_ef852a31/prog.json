{
    "files": {
        "CustomDateHandler.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class CustomDateHandler {\n    private Date date;\n\n    public CustomDateHandler(Date date) {\n        this.date = date;\n    }\n\n    public void addWeeks(int weeks) {\n        /* write */ this.date = DateUtils.addWeeks(this.date, weeks);\n    }\n\n    public Date getDate() {\n        return this.date;\n    }\n}\n",
        "DateTruncator.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class DateTruncator {\n    public Date truncateDate(Date date) {\n        /* read */ return DateUtils.truncate(date, Calendar.DATE);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private CustomDateHandler enrollmentDateHandler;\n\n    public Student(String name, Date enrollmentDate) {\n        this.name = name;\n        this.enrollmentDateHandler = new CustomDateHandler(enrollmentDate);\n    }\n\n    public void addWeeksToEnrollmentDate(int weeks) {\n        enrollmentDateHandler.addWeeks(weeks);\n    }\n\n    public Date getEnrollmentDate() {\n        return enrollmentDateHandler.getDate();\n    }\n}\n",
        "Main.java": "import java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        Student student = new Student(\"John Doe\", currentDate);\n\n        // Manipulate the student's enrollment date\n        student.addWeeksToEnrollmentDate(2);\n\n        // Get the updated enrollment date\n        Date updatedDate = student.getEnrollmentDate();\n\n        // Truncate the updated date\n        DateTruncator truncator = new DateTruncator();\n        Date truncatedDate = truncator.truncateDate(updatedDate);\n\n        // Output the truncated date\n        System.out.println(\"Truncated Enrollment Date: \" + truncatedDate);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addWeeks",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    },
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        /* write */ Date dateAfterAddingWeeks = DateUtils.addWeeks(currentDate, 2);\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(dateAfterAddingWeeks, java.util.Calendar.DATE);\n        \n        System.out.println(truncatedDate);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        Calendar calendar = Calendar.getInstance();\n        \n        // Additional unrelated code: manipulate the calendar object\n        calendar.setTime(currentDate);\n        calendar.add(Calendar.DAY_OF_MONTH, 5);\n        Date fiveDaysLater = calendar.getTime();\n        System.out.println(\"Five days later: \" + fiveDaysLater);\n        \n        /* write */ Date dateAfterAddingWeeks = DateUtils.addWeeks(currentDate, 2);\n        \n        // More unrelated code: format the current date\n        System.out.println(\"Current Date: \" + currentDate);\n        \n        // Additional unrelated code: check if the year is a leap year\n        boolean isLeapYear = calendar.getActualMaximum(Calendar.DAY_OF_YEAR) > 365;\n        System.out.println(\"Is leap year: \" + isLeapYear);\n        \n        // Unrelated code: manipulate another date\n        Date anotherDate = DateUtils.addDays(currentDate, 10);\n        System.out.println(\"Another Date: \" + anotherDate);\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(dateAfterAddingWeeks, Calendar.DATE);\n        \n        // Unrelated code: output the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional unrelated code: calculate the difference in days between two dates\n        long diffInMillies = anotherDate.getTime() - currentDate.getTime();\n        long diffInDays = diffInMillies / (1000 * 60 * 60 * 24);\n        System.out.println(\"Difference in days: \" + diffInDays);\n    }\n}"
}