{
    "files": {
        "CSVConfiguration.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVConfiguration {\n    private CSVFormat csvFormat;\n\n    public CSVConfiguration() {\n        csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreSurroundingSpaces();\n    }\n\n    public CSVFormat getCsvFormat() {\n        return csvFormat;\n    }\n}\n",
        "CSVDataParser.java": "import org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\npublic class CSVDataParser {\n    private List<CSVRecord> records;\n    private HashMap<String, Integer> ageMap = new HashMap<>();\n\n    public CSVDataParser(CSVFormat csvFormat, String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n        records = parser.getRecords();\n        parseData();\n    }\n\n    private void parseData() {\n        for (CSVRecord rec : records) {\n            String name = rec.get(0).trim();\n            int age = Integer.parseInt(rec.get(1).trim());\n            ageMap.put(name, age);\n        }\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n\n    public HashMap<String, Integer> getAgeMap() {\n        return ageMap;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV configuration\n            CSVConfiguration config = new CSVConfiguration();\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\n John Doe , 29\\n Jane Doe , 31\";\n\n            // Parse the CSV data\n            CSVDataParser parser = new CSVDataParser(config.getCsvFormat(), csvData);\n\n            // Access the records and age map\n            HashMap<String, Integer> ageMap = parser.getAgeMap();\n            for (String name : ageMap.keySet()) {\n                System.out.println(\"Name: \" + name + \", Age: \" + ageMap.get(name));\n            }\n\n            // Use the read method\n            CSVRecord firstRecord = parser.getRecords().get(0);\n            /* read */ boolean isConsistent = firstRecord.isConsistent();\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat csvFormat = CSVFormat.DEFAULT;\n            /* write */ csvFormat = csvFormat.withIgnoreSurroundingSpaces();\n\n            // Prepare a sample CSV input\n            String csvData = \"Name, Age\\n John Doe , 29\\n Jane Doe , 31\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat csvFormat = CSVFormat.DEFAULT;\n            /* write */ csvFormat = csvFormat.withIgnoreSurroundingSpaces();\n\n            // Prepare a sample CSV input\n            String csvData = \"Name, Age\\n John Doe , 29\\n Jane Doe , 31\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Add some unrelated complex code\n            ArrayList<String> names = new ArrayList<>();\n            HashMap<String, Integer> ageMap = new HashMap<>();\n\n            for (CSVRecord rec : parser) {\n                String name = rec.get(0).trim();\n                int age = Integer.parseInt(rec.get(1).trim());\n                names.add(name);\n                ageMap.put(name, age);\n            }\n\n            // Process the names and ages\n            for (String name : names) {\n                System.out.println(\"Name: \" + name + \", Age: \" + ageMap.get(name));\n            }\n\n            // Use the read method\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n\n            // More complex code\n            int totalAge = 0;\n            for (int age : ageMap.values()) {\n                totalAge += age;\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}