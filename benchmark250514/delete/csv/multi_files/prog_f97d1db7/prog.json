{
    "files": {
        "CSVConfig.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVConfig {\n    private CSVFormat csvFormat;\n\n    public CSVConfig() {\n        csvFormat = CSVFormat.DEFAULT;\n    }\n\n    public void configureFormat() {\n        /* write */ csvFormat = csvFormat.withAllowMissingColumnNames(true);\n    }\n\n    public CSVFormat getCsvFormat() {\n        return csvFormat;\n    }\n}\n",
        "CSVData.java": "import org.apache.commons.csv.CSVRecord;\n\npublic class CSVData {\n    private CSVRecord csvRecord;\n\n    public CSVData(String[] data) {\n        this.csvRecord = new CSVRecord(null, data, null, 0, 0);\n    }\n\n    public boolean checkConsistency() {\n        /* read */ return csvRecord.isConsistent();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getDetails() {\n        return \"Student Name: \" + name + \", Age: \" + age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Configure CSV format\n        CSVConfig csvConfig = new CSVConfig();\n        csvConfig.configureFormat();\n\n        // Create CSV data and check consistency\n        CSVData csvData = new CSVData(new String[]{\"value1\", \"value2\"});\n        boolean isConsistent = csvData.checkConsistency();\n        System.out.println(\"Is CSV Data consistent: \" + isConsistent);\n\n        // Create a course and add students\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\", 20);\n        Student student2 = new Student(\"Bob\", 22);\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Display student details\n        for (Student student : course.getStudents()) {\n            System.out.println(student.getDetails());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowMissingColumnNames(true);\n\n        // Simulate a CSVRecord for demonstration purposes\n        CSVRecord csvRecord = new CSVRecord(null, new String[]{\"value1\", \"value2\"}, null, 0, 0);\n\n        /* read */ boolean isConsistent = csvRecord.isConsistent();\n        System.out.println(isConsistent);\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowMissingColumnNames(true);\n\n        // Simulate a CSVRecord for demonstration purposes\n        CSVRecord csvRecord = new CSVRecord(null, new String[]{\"value1\", \"value2\"}, null, 0, 0);\n\n        // Additional logic to make the program more complex\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = Arrays.stream(numbers).sum();\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Simulate parsing logic\n        try {\n            CSVParser parser = new CSVParser(null, csvFormat);\n            for (CSVRecord record : parser) {\n                System.out.println(record);\n            }\n        } catch (IOException e) {\n            System.out.println(\"Parsing error: \" + e.getMessage());\n        }\n\n        // More complex operations\n        int factorial = 1;\n        for (int i = 1; i <= 5; i++) {\n            factorial *= i;\n        }\n        System.out.println(\"Factorial of 5: \" + factorial);\n\n        /* read */ boolean isConsistent = csvRecord.isConsistent();\n        System.out.println(\"Is CSV Record consistent: \" + isConsistent);\n\n        // Further operations\n        String[] words = {\"hello\", \"world\"};\n        String sentence = String.join(\" \", words);\n        System.out.println(\"Sentence: \" + sentence);\n    }\n}"
}