{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private StudentCourses courses;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n        this.courses = new StudentCourses();\n    }\n\n    public void enrollCourse(String courseName) {\n        courses.addCourse(courseName);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public StudentCourses getCourses() {\n        return courses;\n    }\n}\n",
        "StudentCourses.java": "import java.util.ArrayList;\n\npublic class StudentCourses {\n    private ArrayList<String> courseList = new ArrayList<>();\n\n    public void addCourse(String courseName) {\n        /* write */ courseList.add(courseName);\n    }\n\n    public ArrayList<String> getCourseList() {\n        return courseList;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV input\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Create a student and enroll in courses\n            Student student = new Student(\"Alice\", 20);\n            student.enrollCourse(\"Mathematics\");\n            student.enrollCourse(\"Science\");\n\n            // Access student courses\n            StudentCourses studentCourses = student.getCourses();\n            ArrayList<String> courses = studentCourses.getCourseList();\n\n            // Additional operations\n            System.out.println(\"Student Name: \" + student.getName());\n            System.out.println(\"Student Age: \" + student.getAge());\n\n            // Print enrolled courses\n            System.out.println(\"Enrolled Courses:\");\n            for (String course : courses) {\n                System.out.println(course);\n            }\n\n            /* read */ String comment = record.getComment();\n            \n            // Print the comment\n            System.out.println(\"CSV Comment: \" + comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV input\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            /* read */ String comment = record.getComment();\n            \n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV input\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Additional complex logic\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord rec : records) {\n                names.add(rec.get(\"name\"));\n            }\n\n            // Process names\n            StringBuilder processedNames = new StringBuilder();\n            for (String name : names) {\n                processedNames.append(name.toUpperCase()).append(\" \");\n            }\n            System.out.println(\"Processed Names: \" + processedNames.toString().trim());\n\n            // More complex logic\n            int sumOfAges = 0;\n            for (CSVRecord rec : records) {\n                sumOfAges += Integer.parseInt(rec.get(\"age\"));\n            }\n            System.out.println(\"Sum of Ages: \" + sumOfAges);\n\n            /* read */ String comment = record.getComment();\n            \n            // Print the comment\n            System.out.println(\"Comment: \" + comment);\n\n            // Additional unrelated logic\n            ArrayList<Integer> ageList = new ArrayList<>();\n            for (CSVRecord rec : records) {\n                ageList.add(Integer.parseInt(rec.get(\"age\")));\n            }\n\n            // Calculate average age\n            double averageAge = sumOfAges / (double) ageList.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}