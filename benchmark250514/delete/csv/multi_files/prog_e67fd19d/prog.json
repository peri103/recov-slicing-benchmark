{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private Map<String, CSVRecord> recordMap = new HashMap<>();\n\n    public CSVHandler() {\n        this.format = CSVFormat.DEFAULT;\n    }\n\n    public void setDelimiter(char delimiter) {\n        /* write */ this.format = this.format.withDelimiter(delimiter);\n    }\n\n    public void parseCSV(String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        for (CSVRecord rec : parser.getRecords()) {\n            String name = rec.get(0); // assuming first column is name\n            recordMap.put(name, rec);\n        }\n    }\n\n    public CSVRecord getRecordByName(String name) {\n        return recordMap.get(name);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private String city;\n\n    public Student(String name, int age, String city) {\n        this.name = name;\n        this.age = age;\n        this.city = city;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getCity() {\n        return city;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            CSVHandler csvHandler = new CSVHandler();\n            csvHandler.setDelimiter(';'); // Set delimiter\n\n            // Example CSV data\n            String csvData = \"name;age;city\\nJohn;30;New York\\nAlice;25;Los Angeles\";\n\n            // Parse CSV data\n            csvHandler.parseCSV(csvData);\n\n            // Retrieve a specific record\n            CSVRecord johnRecord = csvHandler.getRecordByName(\"John\");\n\n            // Create Student object from CSVRecord\n            Student john = new Student(johnRecord.get(0), Integer.parseInt(johnRecord.get(1)), johnRecord.get(2));\n\n            // Additional logic\n            System.out.println(\"Student Name: \" + john.getName());\n            System.out.println(\"Student Age: \" + john.getAge());\n            System.out.println(\"Student City: \" + john.getCity());\n\n            // Read the record as a string\n            /* read */ String recordString = johnRecord.toString();\n            System.out.println(recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with a specific delimiter\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withDelimiter(';');\n\n            // Example CSV data\n            String csvData = \"name;age;city\\nJohn;30;New York\";\n\n            // Parse the CSV data using the format with the specified delimiter\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Read the record as a string\n            /* read */ String recordString = record.toString();\n            System.out.println(recordString);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with a specific delimiter\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withDelimiter(';');\n\n            // Example CSV data\n            String csvData = \"name;age;city\\nJohn;30;New York\\nAlice;25;Los Angeles\";\n\n            // Parse the CSV data using the format with the specified delimiter\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a map to store CSV records by name\n            Map<String, CSVRecord> recordMap = new HashMap<>();\n\n            // Iterate through records and store them in the map\n            for (CSVRecord rec : parser.getRecords()) {\n                String name = rec.get(0); // assuming first column is name\n                recordMap.put(name, rec);\n            }\n\n            // Retrieve a specific record from the map\n            CSVRecord johnRecord = recordMap.get(\"John\");\n\n            // Additional unrelated logic to make the program more complex\n            int sumOfAges = 0;\n            for (CSVRecord rec : parser.getRecords()) {\n                sumOfAges += Integer.parseInt(rec.get(1)); // assuming second column is age\n            }\n            System.out.println(\"Sum of ages: \" + sumOfAges);\n\n            // Read the record as a string\n            /* read */ String recordString = johnRecord.toString();\n            System.out.println(recordString);\n\n            // More complex logic with unrelated operations\n            int maxAge = Integer.MIN_VALUE;\n            for (CSVRecord rec : parser.getRecords()) {\n                int age = Integer.parseInt(rec.get(1));\n                if (age > maxAge) {\n                    maxAge = age;\n                }\n            }\n            System.out.println(\"Max age: \" + maxAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}