{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private StudentCourses courses;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n        this.courses = new StudentCourses();\n    }\n\n    public void enrollCourse(String courseName) {\n        courses.addCourse(courseName);\n    }\n\n    public boolean isEnrolled(String courseName) {\n        return courses.isCourseEnrolled(courseName);\n    }\n}\n",
        "StudentCourses.java": "import java.util.ArrayList;\n\npublic class StudentCourses {\n    private ArrayList<String> courseList = new ArrayList<>();\n\n    public void addCourse(String courseName) {\n        /* write */ courseList.add(courseName);\n    }\n\n    public boolean isCourseEnrolled(String courseName) {\n        /* read */ return courseList.contains(courseName);\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n\n        // Initialize unrelated data structures\n        ArrayList<String> names = new ArrayList<>();\n        HashMap<String, Integer> ageMap = new HashMap<>();\n\n        // Populate the ArrayList\n        names.add(\"Alice\");\n        names.add(\"Bob\");\n        names.add(\"Charlie\");\n\n        // Populate the HashMap\n        ageMap.put(\"Alice\", 30);\n        ageMap.put(\"Bob\", 25);\n        ageMap.put(\"Charlie\", 35);\n\n        // Use the write method\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Process the names list\n        for (String name : names) {\n            System.out.println(\"Processing: \" + name);\n            if (ageMap.containsKey(name)) {\n                System.out.println(name + \" is \" + ageMap.get(name) + \" years old.\");\n            }\n        }\n\n        // Create a CSVRecord object for demonstration purposes\n        String[] headers = {\"Name\", \"Age\", \"Country\"};\n        String[] values = {\"Alice\", \"30\", \"USA\"};\n        CSVRecord csvRecord = CSVFormat.DEFAULT.parse(new java.io.StringReader(\"Name,Age,Country\\nAlice,30,USA\")).getRecords().get(0);\n\n        // Additional processing unrelated to CSV\n        int sumOfAges = 0;\n        for (String name : names) {\n            sumOfAges += ageMap.get(name);\n        }\n        System.out.println(\"Total sum of ages: \" + sumOfAges);\n\n        // Use the read method\n        /* read */ boolean isMapped = csvRecord.isMapped(\"Name\");\n\n        // Output the result of the read operation\n        System.out.println(\"Is 'Name' mapped in CSV record: \" + isMapped);\n\n        // Further processing\n        for (int i = 0; i < names.size(); i++) {\n            System.out.println(\"Name at index \" + i + \": \" + names.get(i));\n        }\n\n        // Student enrollment demonstration\n        Student student = new Student(\"Alice\", 30);\n        student.enrollCourse(\"Math\");\n        System.out.println(\"Is Alice enrolled in Math? \" + student.isEnrolled(\"Math\"));\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        \n        // Use the write method\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n        \n        // Create a CSVRecord object for demonstration purposes\n        String[] headers = {\"Name\", \"Age\", \"Country\"};\n        String[] values = {\"Alice\", \"30\", \"USA\"};\n        CSVRecord csvRecord = CSVFormat.DEFAULT.parse(new java.io.StringReader(\"Name,Age,Country\\nAlice,30,USA\")).getRecords().get(0);\n        \n        // Use the read method\n        /* read */ boolean isMapped = csvRecord.isMapped(\"Name\");\n        \n        // Output the result of the read operation\n        System.out.println(isMapped);\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        \n        // Initialize unrelated data structures\n        ArrayList<String> names = new ArrayList<>();\n        HashMap<String, Integer> ageMap = new HashMap<>();\n        \n        // Populate the ArrayList\n        names.add(\"Alice\");\n        names.add(\"Bob\");\n        names.add(\"Charlie\");\n        \n        // Populate the HashMap\n        ageMap.put(\"Alice\", 30);\n        ageMap.put(\"Bob\", 25);\n        ageMap.put(\"Charlie\", 35);\n        \n        // Use the write method\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n        \n        // Process the names list\n        for (String name : names) {\n            System.out.println(\"Processing: \" + name);\n            if (ageMap.containsKey(name)) {\n                System.out.println(name + \" is \" + ageMap.get(name) + \" years old.\");\n            }\n        }\n        \n        // Create a CSVRecord object for demonstration purposes\n        String[] headers = {\"Name\", \"Age\", \"Country\"};\n        String[] values = {\"Alice\", \"30\", \"USA\"};\n        CSVRecord csvRecord = CSVFormat.DEFAULT.parse(new java.io.StringReader(\"Name,Age,Country\\nAlice,30,USA\")).getRecords().get(0);\n        \n        // Additional processing unrelated to CSV\n        int sumOfAges = 0;\n        for (String name : names) {\n            sumOfAges += ageMap.get(name);\n        }\n        System.out.println(\"Total sum of ages: \" + sumOfAges);\n        \n        // Use the read method\n        /* read */ boolean isMapped = csvRecord.isMapped(\"Name\");\n        \n        // Output the result of the read operation\n        System.out.println(\"Is 'Name' mapped in CSV record: \" + isMapped);\n        \n        // Further processing\n        for (int i = 0; i < names.size(); i++) {\n            System.out.println(\"Name at index \" + i + \": \" + names.get(i));\n        }\n    }\n}"
}