{
    "files": {
        "CSVConfiguration.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVConfiguration {\n    private CSVFormat format;\n\n    public CSVConfiguration() {\n        this.format = CSVFormat.DEFAULT;\n    }\n\n    public void configureFormat() {\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n    }\n\n    public CSVFormat getFormat() {\n        return format;\n    }\n}\n",
        "CSVDataParser.java": "import org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CSVDataParser {\n    private List<CSVRecord> records;\n\n    public CSVDataParser(String csvData, CSVFormat format) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        this.records = parser.getRecords();\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV configuration and configure format\n            CSVConfiguration config = new CSVConfiguration();\n            config.configureFormat();\n\n            // Sample CSV data\n            String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse CSV data\n            CSVDataParser parser = new CSVDataParser(csvData, config.getFormat());\n            List<CSVRecord> records = parser.getRecords();\n\n            // Create student list\n            List<Student> students = new ArrayList<>();\n            for (CSVRecord record : records) {\n                String name = record.get(0);\n                int age = Integer.parseInt(record.get(1));\n                students.add(new Student(name, age));\n            }\n\n            // Use read method on the first record\n            /* read */ boolean isConsistent = records.get(0).isConsistent();\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n\n            // Print student details\n            for (Student student : students) {\n                System.out.println(\"Name: \" + student.getName() + \", Age: \" + student.getAge());\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n            // Prepare a sample CSV input\n            String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Use read method on the first record\n            /* read */ boolean isConsistent = records.get(0).isConsistent();\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n            // Prepare a sample CSV input\n            String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Initialize additional data structures for complexity\n            ArrayList<String> names = new ArrayList<>();\n            ArrayList<Integer> ages = new ArrayList<>();\n\n            // Get the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Process the records and populate additional data structures\n            for (CSVRecord record : records) {\n                names.add(record.get(0));\n                ages.add(Integer.parseInt(record.get(1)));\n            }\n\n            // Use read method on the first record\n            /* read */ boolean isConsistent = records.get(0).isConsistent();\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n\n            // Print the names and ages\n            for (int i = 0; i < names.size(); i++) {\n                System.out.println(\"Name: \" + names.get(i) + \", Age: \" + ages.get(i));\n            }\n\n            // Additional logic to manipulate and display data\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            System.out.println(\"Total age: \" + totalAge);\n            System.out.println(\"Average age: \" + (totalAge / ages.size()));\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}