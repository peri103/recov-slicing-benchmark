{
    "files": {
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private int age;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "CSVProcessor.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CSVProcessor {\n    private CSVFormat format;\n\n    public CSVProcessor() {\n        format = CSVFormat.DEFAULT;\n        /* write */ format = format.withDelimiter(';');\n    }\n\n    public List<String> parseCSV(String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        List<String> recordStrings = new ArrayList<>();\n        for (CSVRecord record : parser) {\n            recordStrings.add(record.toString());\n        }\n        return recordStrings;\n    }\n\n    public CSVRecord getFirstRecord(String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        return parser.getRecords().get(0);\n    }\n}\n",
        "Main.java": "import java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create students and courses\n            Student student1 = new Student(\"John Doe\", 20);\n            Student student2 = new Student(\"Jane Smith\", 22);\n            Course course = new Course(\"Computer Science 101\");\n\n            // Enroll students in the course\n            course.enrollStudent(student1);\n            course.enrollStudent(student2);\n            student1.enrollInCourse(course);\n            student2.enrollInCourse(course);\n\n            // Create CSV data and process it\n            String csvData = \"name;age;location\\nJohn Doe;30;USA\\nJane Smith;25;Canada\";\n            CSVProcessor csvProcessor = new CSVProcessor();\n            List<String> recordStrings = csvProcessor.parseCSV(csvData);\n\n            // Read the first record\n            CSVRecord firstRecord = csvProcessor.getFirstRecord(csvData);\n            /* read */ String recordString = firstRecord.toString();\n\n            // Output the first record\n            System.out.println(\"First record: \" + recordString);\n\n            // Output all records\n            System.out.println(\"All records:\");\n            for (String recStr : recordStrings) {\n                System.out.println(recStr);\n            }\n\n            // Output enrolled students\n            System.out.println(\"Enrolled students in \" + course.getCourseName() + \":\");\n            for (Student student : course.getEnrolledStudents()) {\n                System.out.println(student.getName() + \", Age: \" + student.getAge());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom delimiter\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withDelimiter(';');\n\n            // Create a sample CSV string\n            String csvData = \"name;age;location\\nJohn Doe;30;USA\";\n\n            // Parse the CSV string using the format with the custom delimiter\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String recordString = record.toString();\n\n            // Output the record string\n            System.out.println(recordString);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom delimiter\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withDelimiter(';');\n\n            // Create a sample CSV string\n            String csvData = \"name;age;location\\nJohn Doe;30;USA\\nJane Smith;25;Canada\";\n\n            // Parse the CSV string using the format with the custom delimiter\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Process each record and store their string representations\n            List<String> recordStrings = new ArrayList<>();\n            for (CSVRecord record : parser) {\n                recordStrings.add(record.toString());\n            }\n\n            // Unrelated complex logic\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 1; i <= 10; i++) {\n                numbers.add(i);\n            }\n            int sum = 0;\n            for (int number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n            // Read the first record\n            CSVRecord firstRecord = parser.getRecords().get(0);\n            /* read */ String recordString = firstRecord.toString();\n\n            // Output the record string\n            System.out.println(\"First record: \" + recordString);\n\n            // Output all record strings\n            System.out.println(\"All records:\");\n            for (String recStr : recordStrings) {\n                System.out.println(recStr);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}