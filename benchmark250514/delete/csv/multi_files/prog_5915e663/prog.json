{
    "files": {
        "CSVOperations.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CSVOperations {\n    private CSVFormat format;\n    private CSVParser parser;\n    private List<CSVRecord> records;\n\n    public CSVOperations(String csvData) throws IOException {\n        /* write */ this.format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n        StringReader reader = new StringReader(csvData);\n        this.parser = new CSVParser(reader, format);\n        this.records = parser.getRecords();\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n\n    public CSVParser getParser() {\n        return parser;\n    }\n\n    public void close() throws IOException {\n        parser.close();\n    }\n}\n",
        "DataManager.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\npublic class DataManager {\n    private ArrayList<String> names = new ArrayList<>();\n    private HashMap<String, Integer> ages = new HashMap<>();\n\n    public void processRecords(List<CSVRecord> records) {\n        for (CSVRecord rec : records) {\n            String name = rec.get(\"Name\");\n            int age = Integer.parseInt(rec.get(\"Age\"));\n            names.add(name);\n            ages.put(name, age);\n        }\n    }\n\n    public void displayData() {\n        for (String name : names) {\n            System.out.println(\"Processing name: \" + name);\n        }\n\n        for (String name : ages.keySet()) {\n            int age = ages.get(name);\n            System.out.println(name + \" is \" + age + \" years old.\");\n        }\n    }\n}\n",
        "Main.java": "import java.io.IOException;\nimport java.util.List;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            String csvData = \"Name,Age\\nJohn Doe,30\\nJane Doe,25\";\n            CSVOperations csvOps = new CSVOperations(csvData);\n            DataManager dataManager = new DataManager();\n\n            List<CSVRecord> records = csvOps.getRecords();\n            dataManager.processRecords(records);\n            dataManager.displayData();\n\n            /* read */ String comment = csvOps.getParser().getHeaderComments().get(0);\n            System.out.println(comment);\n\n            csvOps.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV input\n            String csvData = \"Name,Age\\nJohn Doe,30\\nJane Doe,25\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data using the format\n            CSVParser parser = new CSVParser(reader, format);\n\n            // Read the first record and get the comment\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String comment = parser.getHeaderComments().get(0);\n\n            // Print the comment\n            System.out.println(comment);\n\n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV input\n            String csvData = \"Name,Age\\nJohn Doe,30\\nJane Doe,25\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data using the format\n            CSVParser parser = new CSVParser(reader, format);\n\n            // Create a list to store names\n            ArrayList<String> names = new ArrayList<>();\n            // Create a map to store ages\n            HashMap<String, Integer> ages = new HashMap<>();\n\n            // Iterate over records to populate names and ages\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"Name\");\n                int age = Integer.parseInt(rec.get(\"Age\"));\n                names.add(name);\n                ages.put(name, age);\n            }\n\n            // Perform some operations on names\n            for (String name : names) {\n                System.out.println(\"Processing name: \" + name);\n            }\n\n            // Perform some operations on ages\n            for (String name : ages.keySet()) {\n                int age = ages.get(name);\n                System.out.println(name + \" is \" + age + \" years old.\");\n            }\n\n            // Read the first record and get the comment\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String comment = parser.getHeaderComments().get(0);\n\n            // Print the comment\n            System.out.println(comment);\n\n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}