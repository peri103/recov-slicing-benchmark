{
    "files": {
        "CSVConfiguration.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVConfiguration {\n    private CSVFormat format;\n\n    public CSVConfiguration() {\n        this.format = CSVFormat.DEFAULT;\n    }\n\n    public void setEscapeCharacter(char escapeChar) {\n        this.format = format.withEscape(escapeChar); /* write */\n    }\n\n    public CSVFormat getFormat() {\n        return format;\n    }\n}\n",
        "CSVProcessor.java": "import org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class CSVProcessor {\n    private CSVConfiguration config;\n    private List<CSVRecord> records;\n\n    public CSVProcessor(CSVConfiguration config) {\n        this.config = config;\n        this.records = new ArrayList<>();\n    }\n\n    public void parseCSVData(String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), config.getFormat());\n        this.records = parser.getRecords();\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n\n    public String getFirstRecordAsString() {\n        CSVRecord record = records.get(0);\n        return record.toString(); /* read */\n    }\n}\n",
        "Main.java": "import java.io.IOException;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV configuration\n            CSVConfiguration config = new CSVConfiguration();\n            config.setEscapeCharacter('\\\\');\n\n            // Create a CSV processor\n            CSVProcessor processor = new CSVProcessor(config);\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn Doe,30\\nJane Smith,25\";\n\n            // Parse CSV data\n            processor.parseCSVData(csvData);\n\n            // Retrieve and print the first record\n            String firstRecord = processor.getFirstRecordAsString();\n            System.out.println(\"First Record: \" + firstRecord);\n\n            // Additional operations on the records\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord record : processor.getRecords()) {\n                names.add(record.get(0));\n            }\n\n            // Print names\n            System.out.println(\"Names: \" + names);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withEscape",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with escape character\n            CSVFormat format = CSVFormat.DEFAULT.withEscape('\\\\'); /* write */\n\n            // Create a sample CSV data\n            String csvData = \"name,age\\nJohn Doe,30\\nJane Smith,25\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the first record\n            CSVRecord record = records.get(0);\n            String recordString = record.toString(); /* read */\n\n            // Print the record string\n            System.out.println(recordString);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with escape character\n            CSVFormat format = CSVFormat.DEFAULT.withEscape('\\\\'); /* write */\n\n            // Create a sample CSV data\n            String csvData = \"name,age\\nJohn Doe,30\\nJane Smith,25\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional unrelated operations\n            ArrayList<String> names = new ArrayList<>();\n            ArrayList<Integer> ages = new ArrayList<>();\n\n            for (CSVRecord rec : records) {\n                names.add(rec.get(0));\n                ages.add(Integer.parseInt(rec.get(1)));\n            }\n\n            // Perform some calculations\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) ages.size();\n\n            // Print the names and average age\n            System.out.println(\"Names: \" + names);\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Read the first record\n            CSVRecord record = records.get(0);\n            String recordString = record.toString(); /* read */\n\n            // Print the record string\n            System.out.println(\"First Record: \" + recordString);\n\n            // More unrelated operations\n            ArrayList<String> reversedNames = new ArrayList<>();\n            for (String name : names) {\n                reversedNames.add(new StringBuilder(name).reverse().toString());\n            }\n\n            // Print reversed names\n            System.out.println(\"Reversed Names: \" + reversedNames);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}