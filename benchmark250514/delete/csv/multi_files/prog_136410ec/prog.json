{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class CSVHandler {\n    private CSVFormat format;\n\n    public CSVHandler() {\n        // Initialize CSVFormat with header comments\n        /* write */ this.format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n    }\n\n    public CSVParser parseCSV(String csvData) throws IOException {\n        return CSVParser.parse(new StringReader(csvData), format);\n    }\n}\n",
        "RecordReader.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class RecordReader {\n    private CSVParser parser;\n\n    public RecordReader(CSVParser parser) {\n        this.parser = parser;\n    }\n\n    public String readComment() throws IOException {\n        // Get the first record\n        CSVRecord record = parser.getRecords().get(0);\n        // Read the comment from the record\n        /* read */ return record.getComment();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<String> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollInCourse(String course) {\n        courses.add(course);\n    }\n\n    public List<String> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Course {\n    private String courseName;\n    private Map<String, Integer> studentScores;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.studentScores = new HashMap<>();\n    }\n\n    public void addStudentScore(String studentName, int score) {\n        studentScores.put(studentName, score);\n    }\n\n    public Map<String, Integer> getStudentScores() {\n        return studentScores;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVHandler and parse CSV data\n            CSVHandler csvHandler = new CSVHandler();\n            String csvData = \"header1,header2\\nvalue1,value2\";\n            CSVParser parser = csvHandler.parseCSV(csvData);\n\n            // Use RecordReader to read comments from CSV\n            RecordReader recordReader = new RecordReader(parser);\n            String comment = recordReader.readComment();\n            System.out.println(\"CSV Comment: \" + comment);\n\n            // Create a student and enroll in courses\n            Student student = new Student(\"Alice\");\n            student.enrollInCourse(\"Math\");\n            student.enrollInCourse(\"Science\");\n\n            // Create a course and add student scores\n            Course mathCourse = new Course(\"Math\");\n            mathCourse.addStudentScore(student.getName(), 95);\n\n            // Print student courses and scores\n            System.out.println(\"Student: \" + student.getName());\n            System.out.println(\"Enrolled Courses: \" + student.getCourses());\n            System.out.println(\"Math Scores: \" + mathCourse.getStudentScores());\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV string for parsing\n            String csvData = \"header1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV string for parsing\n            String csvData = \"header1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Initialize an ArrayList and a HashMap\n            ArrayList<String> list = new ArrayList<>();\n            HashMap<String, Integer> map = new HashMap<>();\n\n            // Add elements to ArrayList\n            list.add(\"element1\");\n            list.add(\"element2\");\n\n            // Add elements to HashMap\n            map.put(\"key1\", 10);\n            map.put(\"key2\", 20);\n\n            // Perform some operations on ArrayList\n            for (String s : list) {\n                map.put(s, s.length());\n            }\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Perform operations on HashMap\n            int sum = 0;\n            for (String key : map.keySet()) {\n                sum += map.get(key);\n            }\n            System.out.println(\"Sum of values in map: \" + sum);\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n            System.out.println(comment);\n\n            // Further manipulate the ArrayList and HashMap\n            list.add(\"element3\");\n            map.put(\"key3\", 30);\n\n            // Print elements of ArrayList\n            for (String s : list) {\n                System.out.println(\"List element: \" + s);\n            }\n\n            // Print elements of HashMap\n            for (String key : map.keySet()) {\n                System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}