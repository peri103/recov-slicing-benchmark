{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private CSVRecord record;\n\n    public CSVHandler() {\n        // Initialize CSVFormat with a null string representation\n        format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n        // Create a CSVRecord for demonstration purposes\n        record = new CSVRecord(null, Arrays.asList(\"value1\", null, \"value3\"), format, 0, 0);\n    }\n\n    public void setNullString(String nullString) {\n        /* write */ format = format.withNullString(nullString);\n    }\n\n    public CSVRecord getRecord() {\n        return record;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVHandler csvHandler = new CSVHandler();\n        csvHandler.setNullString(\"NULL\");\n\n        Course course = new Course(\"Computer Science\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        student1.addScore(85);\n        student2.addScore(90);\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Display student scores\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Scores for \" + student.getName() + \": \" + student.getScores());\n        }\n\n        // Use read method to check if a value is set at index 1 (which should be null)\n        CSVRecord record = csvHandler.getRecord();\n        /* read */ boolean isSet = record.isSet(1);\n\n        // Output the result\n        System.out.println(\"Is the value at index 1 set? \" + isSet);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string representation\n        CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n\n        // Create a CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, Arrays.asList(\"value1\", null, \"value3\"), format, 0, 0);\n\n        // Use write method to set the null string representation\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Use read method to check if a value is set at index 1 (which should be null)\n        /* read */ boolean isSet = record.isSet(1);\n\n        // Output the result\n        System.out.println(\"Is the value at index 1 set? \" + isSet);\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string representation\n        CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n\n        // Create a CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, Arrays.asList(\"value1\", null, \"value3\"), format, 0, 0);\n\n        // Use write method to set the null string representation\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Complex logic to simulate some CSV parsing and manipulation\n        try {\n            List<CSVRecord> records = CSVParser.parse(\"value1,NULL,value3\\nvalue4,value5,value6\", format).getRecords();\n            for (CSVRecord rec : records) {\n                for (int i = 0; i < rec.size(); i++) {\n                    if (rec.isSet(i)) {\n                        System.out.print(rec.get(i) + \" \");\n                    } else {\n                        System.out.print(\"NULL \");\n                    }\n                }\n                System.out.println();\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Additional complex logic\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i * 2;\n        }\n        System.out.println(\"Sum of first 10 even numbers: \" + sum);\n\n        // Use read method to check if a value is set at index 1 (which should be null)\n        /* read */ boolean isSet = record.isSet(1);\n\n        // Output the result\n        System.out.println(\"Is the value at index 1 set? \" + isSet);\n\n        // More unrelated complex logic\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Complex logic demonstration: \");\n        for (int i = 0; i < 5; i++) {\n            sb.append((char) ('A' + i));\n        }\n        System.out.println(sb.toString());\n    }\n}"
}