{
    "files": {
        "CSVUtil.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\n\npublic class CSVUtil {\n    private StringWriter writer;\n    private CSVPrinter printer;\n    private CSVFormat format;\n\n    public CSVUtil() throws IOException {\n        /* write */ format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n        writer = new StringWriter();\n        printer = new CSVPrinter(writer, format);\n    }\n\n    public void printRecord(List<String> record) throws IOException {\n        printer.printRecord(record);\n        printer.flush();\n    }\n\n    public String getCSVContent() {\n        return writer.toString();\n    }\n}\n",
        "CSVReader.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class CSVReader {\n    private String csvContent;\n\n    public CSVReader(String csvContent) {\n        this.csvContent = csvContent;\n    }\n\n    public String getComment() throws IOException {\n        CSVRecord csvRecord = CSVFormat.DEFAULT.parse(new StringReader(csvContent)).getRecords().get(0);\n        /* read */ return csvRecord.getComment();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV utility and print records\n            CSVUtil csvUtil = new CSVUtil();\n            List<String> record1 = Arrays.asList(\"value1\", \"value2\");\n            csvUtil.printRecord(record1);\n\n            // Create a student and add scores\n            Student student = new Student(\"Bob\");\n            student.addScore(85);\n            student.addScore(90);\n            System.out.println(\"Student \" + student.getName() + \" scores: \" + student.getScores());\n\n            // Read the comment using CSVReader\n            CSVReader csvReader = new CSVReader(csvUtil.getCSVContent());\n            String comment = csvReader.getComment();\n            System.out.println(\"CSV Comment: \" + comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a writer and a CSVPrinter\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a record to the CSVPrinter\n            List<String> record = Arrays.asList(\"value1\", \"value2\");\n            printer.printRecord(record);\n            printer.flush();\n\n            // Read the comment from the CSVRecord\n            String csvContent = writer.toString();\n            CSVRecord csvRecord = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvContent)).getRecords().get(0);\n            /* read */ String comment = csvRecord.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a writer and a CSVPrinter\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write multiple records to the CSVPrinter\n            List<String> record1 = Arrays.asList(\"value1\", \"value2\");\n            List<String> record2 = Arrays.asList(\"value3\", \"value4\");\n            printer.printRecord(record1);\n            printer.printRecord(record2);\n            printer.flush();\n\n            // Perform some unrelated operations\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n\n            // Process the list of numbers\n            int sum = 0;\n            for (int num : numbers) {\n                sum += num;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // Simulate complex logic by reversing the list\n            ArrayList<Integer> reversedNumbers = new ArrayList<>();\n            for (int i = numbers.size() - 1; i >= 0; i--) {\n                reversedNumbers.add(numbers.get(i));\n            }\n            System.out.println(\"Reversed numbers: \" + reversedNumbers);\n\n            // Read the comment from the CSVRecord\n            String csvContent = writer.toString();\n            CSVRecord csvRecord = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvContent)).getRecords().get(0);\n            /* read */ String comment = csvRecord.getComment();\n\n            // Print the comment\n            System.out.println(\"CSV Comment: \" + comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}