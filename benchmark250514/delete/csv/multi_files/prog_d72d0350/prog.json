{
    "files": {
        "CSVDataHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class CSVDataHandler {\n    private CSVFormat format;\n\n    public CSVDataHandler() {\n        // Initialize CSVFormat with a comment marker\n        this.format = CSVFormat.DEFAULT /* write */.withCommentMarker('#');\n    }\n\n    public CSVParser parseCSV(String csvData) throws IOException {\n        return CSVParser.parse(new StringReader(csvData), format);\n    }\n}\n",
        "CSVCommentExtractor.java": "import org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\n\npublic class CSVCommentExtractor {\n    public String extractComment(CSVParser parser) {\n        try {\n            for (CSVRecord record : parser) {\n                String comment = /* read */ record.getComment();\n                if (comment != null) {\n                    return comment; // Return the comment\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVParser;\n\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Sample CSV data with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nDoe,25\";\n\n            // Use CSVDataHandler to parse CSV\n            CSVDataHandler dataHandler = new CSVDataHandler();\n            CSVParser parser = dataHandler.parseCSV(csvData);\n\n            // Use CSVCommentExtractor to extract comments\n            CSVCommentExtractor commentExtractor = new CSVCommentExtractor();\n            String comment = commentExtractor.extractComment(parser);\n\n            if (comment != null) {\n                System.out.println(comment); // Output the comment\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a comment marker\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withCommentMarker('#');\n\n            // Sample CSV data with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nDoe,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Iterate through records to find the comment\n            for (CSVRecord record : parser) {\n                String comment = /* read */ record.getComment();\n                if (comment != null) {\n                    System.out.println(comment); // Output the comment\n                    break; // Ensure the read method is executed only once\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVPrinter;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a comment marker\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withCommentMarker('#');\n\n            // Sample CSV data with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nDoe,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a StringWriter for output\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Add additional data using CSVPrinter\n            printer.printRecord(Arrays.asList(\"Alice\", \"22\"));\n            printer.printRecord(Arrays.asList(\"Bob\", \"28\"));\n\n            // Iterate through records to find the comment\n            for (CSVRecord record : parser) {\n                String comment = /* read */ record.getComment();\n                if (comment != null) {\n                    System.out.println(comment); // Output the comment\n                    break; // Ensure the read method is executed only once\n                }\n            }\n\n            // Output the additional data\n            System.out.println(writer.toString());\n\n            // Parse the newly added data\n            String newCsvData = writer.toString();\n            CSVParser newParser = CSVParser.parse(new StringReader(newCsvData), CSVFormat.DEFAULT);\n\n            // Iterate through the new records\n            for (CSVRecord newRecord : newParser) {\n                System.out.println(\"Name: \" + newRecord.get(0) + \", Age: \" + newRecord.get(1));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}