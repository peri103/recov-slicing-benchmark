{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private List<CSVRecord> records;\n\n    public CSVHandler(String csvData) throws IOException {\n        /* write */ this.format = CSVFormat.DEFAULT.withTrailingDelimiter();\n        CSVParser parser = new CSVParser(new StringReader(csvData), format);\n        this.records = parser.getRecords();\n        parser.close();\n    }\n\n    public CSVRecord getFirstRecord() {\n        return records.get(0);\n    }\n\n    public List<CSVRecord> getRecords() {\n        return new ArrayList<>(records);\n    }\n}\n",
        "DataAnalyzer.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class DataAnalyzer {\n    private Map<String, Integer> ageMap;\n\n    public DataAnalyzer() {\n        this.ageMap = new HashMap<>();\n    }\n\n    public void populateMap(List<CSVRecord> records) {\n        for (CSVRecord record : records) {\n            String name = record.get(\"name\");\n            int age = Integer.parseInt(record.get(\"age\"));\n            ageMap.put(name, age);\n        }\n    }\n\n    public int getAge(String name) {\n        return ageMap.getOrDefault(name, -1);\n    }\n\n    public void printAges() {\n        for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n            System.out.println(entry.getKey() + \" is \" + entry.getValue() + \" years old.\");\n        }\n    }\n}\n",
        "Main.java": "import java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n\n            CSVHandler csvHandler = new CSVHandler(csvData);\n            DataAnalyzer analyzer = new DataAnalyzer();\n\n            analyzer.populateMap(csvHandler.getRecords());\n            int johnsAge = analyzer.getAge(\"John\");\n            System.out.println(\"John's age is: \" + johnsAge);\n\n            CSVRecord firstRecord = csvHandler.getFirstRecord();\n            /* read */ boolean isSet = firstRecord.isSet(0);\n            System.out.println(\"Is column index 0 set? \" + isSet);\n\n            analyzer.printAges();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat object with a trailing delimiter\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrailingDelimiter();\n\n            // Sample CSV input\n            String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if a specific column index is set\n            /* read */ boolean isSet = record.isSet(0);\n\n            // Output the result\n            System.out.println(\"Is column index 0 set? \" + isSet);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat object with a trailing delimiter\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrailingDelimiter();\n\n            // Sample CSV input\n            String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Create a map to store data from the CSV\n            Map<String, Integer> ageMap = new HashMap<>();\n\n            // Iterate through the records and populate the map\n            for (CSVRecord record : parser) {\n                String name = record.get(\"name\");\n                int age = Integer.parseInt(record.get(\"age\"));\n                ageMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            int johnsAge = ageMap.get(\"John\");\n            System.out.println(\"John's age is: \" + johnsAge);\n\n            // Get the first record again for demonstration\n            CSVRecord firstRecord = parser.getRecords().get(0);\n\n            // Check if a specific column index is set\n            /* read */ boolean isSet = firstRecord.isSet(0);\n\n            // Output the result\n            System.out.println(\"Is column index 0 set? \" + isSet);\n\n            // Additional logic to manipulate and display map data\n            for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n                System.out.println(entry.getKey() + \" is \" + entry.getValue() + \" years old.\");\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}