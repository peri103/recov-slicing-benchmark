{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVHandler {\n    private CSVFormat format;\n\n    public CSVHandler() {\n        format = CSVFormat.DEFAULT;\n    }\n\n    public void configureFormat() {\n        /* write */ format = format.withTrailingDelimiter();\n    }\n\n    public CSVFormat getFormat() {\n        return format;\n    }\n}\n",
        "CSVRecordChecker.java": "import org.apache.commons.csv.CSVRecord;\n\npublic class CSVRecordChecker {\n    private CSVRecord record;\n\n    public CSVRecordChecker(CSVRecord record) {\n        this.record = record;\n    }\n\n    public boolean checkConsistency() {\n        /* read */ return record.isConsistent();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Step 1: Configure CSV Format\n        CSVHandler csvHandler = new CSVHandler();\n        csvHandler.configureFormat();\n\n        // Step 2: Create a dummy CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, values, null, 0, 0);\n\n        // Step 3: Check CSVRecord consistency\n        CSVRecordChecker checker = new CSVRecordChecker(record);\n        boolean isConsistent = checker.checkConsistency();\n        System.out.println(\"Is the CSVRecord consistent? \" + isConsistent);\n\n        // Step 4: Create students and courses\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n        Course math = new Course(\"Math\");\n        Course science = new Course(\"Science\");\n\n        // Step 5: Enroll students in courses\n        math.addStudent(alice);\n        science.addStudent(bob);\n        alice.enrollCourse(math);\n        bob.enrollCourse(science);\n\n        // Step 6: Display student-course information\n        for (Student student : math.getStudents()) {\n            System.out.println(student.getName() + \" is enrolled in \" + math.getCourseName());\n        }\n\n        for (Student student : science.getStudents()) {\n            System.out.println(student.getName() + \" is enrolled in \" + science.getCourseName());\n        }\n\n        // Step 7: Use a HashMap for additional operations\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"Alice\", 90);\n        map.put(\"Bob\", 85);\n\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of scores: \" + sum);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance with trailing delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Create a dummy CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, values, null, 0, 0);\n\n        // Check if the record is consistent\n        /* read */ boolean isConsistent = record.isConsistent();\n        System.out.println(\"Is the CSVRecord consistent? \" + isConsistent);\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Step 1: Create a CSVFormat instance with trailing delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Step 2: Create a dummy CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, values, null, 0, 0);\n\n        // Step 3: Create a HashMap for storing some data\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        \n        // Step 4: Perform some operations on the map\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // Step 5: Create an ArrayList and perform operations\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Hello\");\n        list.add(\"World\");\n        \n        for (String str : list) {\n            System.out.println(str.toUpperCase());\n        }\n\n        // Step 6: Check if the record is consistent\n        /* read */ boolean isConsistent = record.isConsistent();\n        System.out.println(\"Is the CSVRecord consistent? \" + isConsistent);\n\n        // Step 7: Further manipulate the list\n        list.remove(0);\n        list.add(\"Java\");\n        \n        for (String str : list) {\n            System.out.println(str.toLowerCase());\n        }\n    }\n}"
}