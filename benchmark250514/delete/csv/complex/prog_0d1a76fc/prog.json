{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with ignoreHeaderCase set to true\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreHeaderCase(true);\n\n        // Create a sample CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord() {\n            @Override\n            public boolean isMapped(String name) {\n                // Simulate behavior based on header case ignoring\n                return format.getIgnoreHeaderCase() && name.equalsIgnoreCase(\"header\");\n            }\n\n            // Other methods would be implemented here if necessary\n        };\n\n        // Complex logic using unrelated classes\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n\n        int sum = 0;\n        for (Integer num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // Check if the record is mapped using the isMapped method\n        /* read */ boolean isMapped = record.isMapped(\"HEADER\");\n        System.out.println(\"Is 'HEADER' mapped: \" + isMapped);\n\n        // Additional complex logic\n        for (int i = 0; i < numbers.size(); i++) {\n            numbers.set(i, numbers.get(i) + map.getOrDefault(\"Two\", 0));\n        }\n\n        for (Integer num : numbers) {\n            System.out.println(\"Updated number: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with ignoreHeaderCase set to true\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreHeaderCase(true);\n\n        // Create a sample CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord() {\n            @Override\n            public boolean isMapped(String name) {\n                // Simulate behavior based on header case ignoring\n                return format.getIgnoreHeaderCase() && name.equalsIgnoreCase(\"header\");\n            }\n\n            // Other methods would be implemented here if necessary\n        };\n\n        // Check if the record is mapped using the isMapped method\n        /* read */ boolean isMapped = record.isMapped(\"HEADER\");\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}