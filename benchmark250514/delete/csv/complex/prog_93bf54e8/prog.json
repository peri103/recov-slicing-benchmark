{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method withAllowMissingColumnNames\n        /* write */ format = format.withAllowMissingColumnNames(true);\n        \n        // Simulate a CSVRecord object for demonstration\n        CSVRecord record = new CSVRecord(null, null, null, format);\n        \n        // Unrelated code to make the program more complex\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Additional CSVFormat usage for complexity\n        CSVFormat anotherFormat = CSVFormat.DEFAULT.withQuote('\"').withDelimiter(';');\n        System.out.println(\"Another format delimiter: \" + anotherFormat.getDelimiter());\n        \n        // Use the read method isConsistent\n        /* read */ boolean isConsistent = record.isConsistent();\n        \n        // Output the result\n        System.out.println(\"Is record consistent: \" + isConsistent);\n        \n        // Further unrelated operations\n        List<String> words = new ArrayList<>();\n        words.add(\"Hello\");\n        words.add(\"World\");\n        \n        for (String word : words) {\n            System.out.println(word);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method withAllowMissingColumnNames\n        /* write */ format = format.withAllowMissingColumnNames(true);\n        \n        // Simulate a CSVRecord object for demonstration\n        CSVRecord record = new CSVRecord(null, null, null, format);\n        \n        // Use the read method isConsistent\n        /* read */ boolean isConsistent = record.isConsistent();\n        \n        // Output the result\n        System.out.println(isConsistent);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}