{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance using the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Simulate a CSV record for reading\n        CSVRecord record = new CSVRecord(format, new String[]{\"value1\", \"value2\"}, null, 0, 0);\n\n        // Additional complexity: Use HashMap to store some data\n        HashMap<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"key1\", 100);\n        dataMap.put(\"key2\", 200);\n        dataMap.put(\"key3\", 300);\n\n        // Perform some calculations using the dataMap\n        int sum = 0;\n        for (String key : dataMap.keySet()) {\n            sum += dataMap.get(key);\n        }\n        System.out.println(\"Sum of values in dataMap: \" + sum);\n\n        // Additional complexity: Create another CSVRecord and perform operations\n        CSVRecord anotherRecord = new CSVRecord(format, new String[]{\"value3\", \"value4\"}, null, 0, 0);\n        boolean isAnotherSet = anotherRecord.isSet(\"value3\");\n        System.out.println(\"Is 'value3' set in anotherRecord: \" + isAnotherSet);\n\n        // Read using the read method\n        /* read */ boolean isSet = record.isSet(\"value1\");\n\n        // Print the result\n        System.out.println(\"Is 'value1' set in record: \" + isSet);\n\n        // Additional complexity: Perform operations on arrays\n        int[] numbers = {5, 10, 15, 20, 25};\n        int product = 1;\n        for (int num : numbers) {\n            product *= num;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance using the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Simulate a CSV record for reading\n        CSVRecord record = new CSVRecord(format, new String[]{\"value1\", \"value2\"}, null, 0, 0);\n\n        // Read using the read method\n        /* read */ boolean isSet = record.isSet(\"value1\");\n\n        // Print the result\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}