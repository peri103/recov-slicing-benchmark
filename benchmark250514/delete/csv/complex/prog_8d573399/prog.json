{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAutoFlush(true);\n\n        // Simulate a CSV record for demonstration purposes\n        CSVRecord record = new CSVRecord(null, null, null, null, null, false);\n\n        // Unrelated code to make the program more complex\n        ArrayList<String> dataList = new ArrayList<>();\n        dataList.add(\"Data1\");\n        dataList.add(\"Data2\");\n        dataList.add(\"Data3\");\n\n        for (String data : dataList) {\n            System.out.println(\"Processing: \" + data);\n        }\n\n        int sum = 0;\n        for (int i = 0; i < dataList.size(); i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of indices: \" + sum);\n\n        // More unrelated code\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Complexity\");\n        sb.append(\" \");\n        sb.append(\"Added\");\n\n        System.out.println(sb.toString());\n\n        // Further operations\n        int complexCalculation = (int) Math.pow(sum, 2);\n        System.out.println(\"Complex Calculation Result: \" + complexCalculation);\n\n        /* read */ boolean isMapped = record.isMapped();\n        System.out.println(\"Is Mapped: \" + isMapped);\n\n        // Additional code to increase complexity\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numberList.add(i * 2);\n        }\n\n        for (Integer number : numberList) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAutoFlush(true);\n\n        // Simulate a CSV record for demonstration purposes\n        CSVRecord record = new CSVRecord(null, null, null, null, null, false);\n        /* read */ boolean isMapped = record.isMapped();\n        \n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAutoFlush",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}