{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a specific null string\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a mock CSVRecord for demonstration purposes\n        String[] data = {\"value1\", \"NULL\", \"value3\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(java.util.Arrays.asList(data)).iterator().next();\n\n        // Additional complex code\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 10);\n        map.put(\"key2\", 20);\n        map.put(\"key3\", 30);\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n\n        // Check if a specific index is set in the CSVRecord\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(isSet);\n\n        // Additional complex code\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers 1 to 5: \" + product);\n\n        String[] moreData = {\"extra1\", \"extra2\", \"extra3\"};\n        for (String str : moreData) {\n            System.out.println(\"Processing: \" + str);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a specific null string\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a mock CSVRecord for demonstration purposes\n        String[] data = {\"value1\", \"NULL\", \"value3\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(java.util.Arrays.asList(data)).iterator().next();\n\n        // Check if a specific index is set in the CSVRecord\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}