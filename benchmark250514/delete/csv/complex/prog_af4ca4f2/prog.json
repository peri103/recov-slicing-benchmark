{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trimming enabled\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age, Country\\nJohn Doe, 30, USA\\nJane Doe, 25, UK\\nAlice, 28, Canada\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format.withHeader());\n\n            // Collect all records into a list\n            List<CSVRecord> records = new ArrayList<>();\n            for (CSVRecord record : parser) {\n                records.add(record);\n            }\n\n            // Process each record and print details\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                String age = record.get(\"Age\");\n                String country = record.get(\"Country\");\n                System.out.println(\"Name: \" + name + \", Age: \" + age + \", Country: \" + country);\n            }\n\n            // Perform some additional operations\n            int totalAge = 0;\n            for (CSVRecord record : records) {\n                totalAge += Integer.parseInt(record.get(\"Age\"));\n            }\n            double averageAge = (double) totalAge / records.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Additional unrelated operations\n            ArrayList<Integer> numberList = new ArrayList<>();\n            for (int i = 1; i <= 10; i++) {\n                numberList.add(i * 2);\n            }\n\n            for (int number : numberList) {\n                System.out.println(\"Number: \" + number);\n            }\n\n            // Read the first record and check if it's mapped\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isMapped = firstRecord.isMapped();\n\n            // Output the result\n            System.out.println(\"Is the first record mapped? \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trimming enabled\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format.withHeader());\n\n            // Read the first record and check if it's mapped\n            CSVRecord record = parser.iterator().next();\n            /* read */ boolean isMapped = record.isMapped();\n\n            // Output the result\n            System.out.println(\"Is the record mapped? \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}