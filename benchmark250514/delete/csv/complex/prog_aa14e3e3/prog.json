{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with header comments\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Simulate a CSVRecord with comment\n        List<String> recordValues = Arrays.asList(\"value1\", \"value2\");\n        CSVRecord record = new CSVRecord(null, recordValues, null, 0, \"This is a comment\");\n\n        // Create an ArrayList to hold CSVRecords\n        ArrayList<CSVRecord> recordsList = new ArrayList<>();\n        recordsList.add(record);\n\n        // Manipulate the recordsList\n        for (CSVRecord rec : recordsList) {\n            // Print each record's values\n            System.out.println(rec.toMap());\n        }\n\n        // Add more CSVRecords to the list\n        CSVRecord record2 = new CSVRecord(null, Arrays.asList(\"value3\", \"value4\"), null, 1, \"Another comment\");\n        recordsList.add(record2);\n\n        // Process the recordsList\n        for (CSVRecord rec : recordsList) {\n            System.out.println(\"Processing record: \" + rec.toMap());\n        }\n\n        // Modify the format with header comments\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        // Further processing of records\n        for (CSVRecord rec : recordsList) {\n            if (rec.getRecordNumber() == 0) {\n                /* read */ String comment = rec.getComment();\n                System.out.println(\"Comment of first record: \" + comment);\n            }\n        }\n\n        // Additional logic to make the program more complex\n        for (int i = 0; i < recordsList.size(); i++) {\n            System.out.println(\"Record number: \" + recordsList.get(i).getRecordNumber());\n        }\n\n        // Final manipulation on the list\n        recordsList.remove(0);\n        System.out.println(\"List size after removal: \" + recordsList.size());\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with header comments\n        CSVFormat format = CSVFormat.DEFAULT\n                .withHeaderComments(\"This is a comment\");\n\n        // Simulate a CSVRecord with comment\n        List<String> recordValues = Arrays.asList(\"value1\", \"value2\");\n        CSVRecord record = new CSVRecord(null, recordValues, null, 0, \"This is a comment\");\n\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        /* read */ String comment = record.getComment();\n        \n        System.out.println(comment);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}