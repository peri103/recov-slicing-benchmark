{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to modify the format object\n        /* write */ format = format.withTrim();\n\n        // Simulate parsing a CSV string to create CSVRecords\n        String csvData = \"header1,header2\\nvalue1,value2\\nvalue3,value4\";\n        List<CSVRecord> records = null;\n        try {\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            records = parser.getRecords();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        // Unrelated complex code block\n        int[] numbers = {3, 1, 4, 1, 5, 9};\n        Arrays.sort(numbers);\n        for (int num : numbers) {\n            System.out.println(\"Sorted number: \" + num);\n        }\n\n        // More complex operations with CSVRecords\n        if (records != null) {\n            for (CSVRecord record : records) {\n                String value1 = record.get(\"header1\");\n                System.out.println(\"Value for header1: \" + value1);\n            }\n        }\n\n        // Create a CSVRecord object for demonstration purposes\n        CSVRecord record = new CSVRecord(null, new String[]{\"header1\", \"header2\"}, new String[]{\"value1\", \"value2\"}, 0, 0);\n\n        // Use the read method to check if a specific header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"header1\");\n\n        // Print the result\n        System.out.println(\"Is 'header1' mapped: \" + isMapped);\n\n        // Additional complex logic\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of sorted numbers: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to modify the format object\n        /* write */ format = format.withTrim();\n\n        // Create a CSVRecord object for demonstration purposes\n        // Normally, CSVRecord would be obtained by parsing a CSV file using CSVParser\n        // Here, we simulate a CSVRecord with a simple example\n        CSVRecord record = new CSVRecord(null, new String[]{\"header1\", \"header2\"}, new String[]{\"value1\", \"value2\"}, 0, 0);\n\n        // Use the read method to check if a specific header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"header1\");\n\n        // Print the result\n        System.out.println(\"Is 'header1' mapped: \" + isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}