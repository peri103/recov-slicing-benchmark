{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with ignore header case\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Simulate a CSVRecord\n        List<String> headers = Arrays.asList(\"Name\", \"Age\", \"Country\");\n        List<String> values = Arrays.asList(\"Alice\", \"30\", \"USA\");\n        CSVRecord record = new CSVRecord(null, values.toArray(new String[0]), headers.toArray(new String[0]), 0, 0);\n\n        // Additional code using Map for complexity\n        Map<String, Integer> ageMap = new HashMap<>();\n        ageMap.put(\"Alice\", 30);\n        ageMap.put(\"Bob\", 25);\n        ageMap.put(\"Charlie\", 35);\n\n        // Process and print age information\n        for (String name : ageMap.keySet()) {\n            System.out.println(name + \" is \" + ageMap.get(name) + \" years old.\");\n        }\n\n        // More complex operations\n        int sumOfAges = 0;\n        for (Integer age : ageMap.values()) {\n            sumOfAges += age;\n        }\n        System.out.println(\"Total sum of ages: \" + sumOfAges);\n\n        // Check if a header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n        System.out.println(\"Is 'name' mapped: \" + isMapped);\n\n        // Further operations on CSVRecord\n        for (String header : headers) {\n            System.out.println(\"Header: \" + header + \", Value: \" + record.get(header));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with ignore header case\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Simulate a CSVRecord\n        List<String> headers = Arrays.asList(\"Name\", \"Age\", \"Country\");\n        List<String> values = Arrays.asList(\"Alice\", \"30\", \"USA\");\n        CSVRecord record = new CSVRecord(null, values.toArray(new String[0]), headers.toArray(new String[0]), 0, 0);\n\n        // Check if a header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}