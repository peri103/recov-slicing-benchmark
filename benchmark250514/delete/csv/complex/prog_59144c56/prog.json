{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Create a map to simulate some complex operations\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 10);\n        map.put(\"key2\", 20);\n\n        // Perform some operations on the map\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n\n        // Use the write method to modify the format\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Create a sample CSV record to demonstrate the read method\n        List<String> recordValues = Arrays.asList(\"value1\", \"value2\");\n        CSVRecord record = new CSVRecord(recordValues, null, format, 0, 0);\n\n        // Perform some additional operations\n        List<String> additionalValues = Arrays.asList(\"extra1\", \"extra2\", \"extra3\");\n        for (String value : additionalValues) {\n            System.out.println(\"Processing additional value: \" + value);\n        }\n\n        // Use the read method to check if a column is set\n        /* read */ boolean isSet = record.isSet(0);\n\n        // Print the result\n        System.out.println(\"Is column set: \" + isSet);\n\n        // More operations to increase complexity\n        int[] numbers = {1, 2, 3, 4, 5};\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n        }\n        System.out.println(\"Product of array elements: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to modify the format\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Create a sample CSV record to demonstrate the read method\n        List<String> recordValues = Arrays.asList(\"value1\", \"value2\");\n        CSVRecord record = new CSVRecord(recordValues, null, format, 0, 0);\n\n        // Use the read method to check if a column is set\n        /* read */ boolean isSet = record.isSet(0);\n        \n        // Print the result\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}