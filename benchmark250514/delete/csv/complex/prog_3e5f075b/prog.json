{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Step 1: Create a CSVFormat instance with trailing delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Step 2: Create a dummy CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, values, null, 0, 0);\n\n        // Step 3: Create a HashMap for storing some data\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        \n        // Step 4: Perform some operations on the map\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // Step 5: Create an ArrayList and perform operations\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Hello\");\n        list.add(\"World\");\n        \n        for (String str : list) {\n            System.out.println(str.toUpperCase());\n        }\n\n        // Step 6: Check if the record is consistent\n        /* read */ boolean isConsistent = record.isConsistent();\n        System.out.println(\"Is the CSVRecord consistent? \" + isConsistent);\n\n        // Step 7: Further manipulate the list\n        list.remove(0);\n        list.add(\"Java\");\n        \n        for (String str : list) {\n            System.out.println(str.toLowerCase());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance with trailing delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Create a dummy CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, values, null, 0, 0);\n\n        // Check if the record is consistent\n        /* read */ boolean isConsistent = record.isConsistent();\n        System.out.println(\"Is the CSVRecord consistent? \" + isConsistent);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}