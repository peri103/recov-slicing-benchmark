{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a CSVRecord for demonstration\n        String[] values = {\"value1\", \"NULL\", \"value3\"};\n        CSVRecord record = new CSVRecord(format.parse(Arrays.asList(values)).iterator().next(), null, 0, values);\n\n        // Some unrelated complex operations\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n\n        List<Integer> numbers = Arrays.asList(10, 20, 30, 40, 50);\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Check if a specific index is set in the CSVRecord\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(\"Is the second index set: \" + isSet);\n\n        // More unrelated complex operations\n        int product = 1;\n        for (int num : numbers) {\n            product *= num;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n\n        for (int i = 0; i < values.length; i++) {\n            System.out.println(\"Value at index \" + i + \": \" + values[i]);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a CSVRecord for demonstration\n        String[] values = {\"value1\", \"NULL\", \"value3\"};\n        CSVRecord record = new CSVRecord(format.parse(Arrays.asList(values)).iterator().next(), null, 0, values);\n\n        // Check if a specific index is set in the CSVRecord\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}