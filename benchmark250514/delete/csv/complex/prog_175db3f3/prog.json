{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSVFormat instance\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withTrailingDelimiter();\n        \n        // Create a sample CSVRecord for demonstration\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = new CSVRecord(values, null, format);\n        \n        // Additional code to make the program more complex\n        List<String> extraValues = new ArrayList<>();\n        extraValues.add(\"extra1\");\n        extraValues.add(\"extra2\");\n        extraValues.add(\"extra3\");\n        \n        // Process extra values\n        for (String value : extraValues) {\n            System.out.println(\"Processing: \" + value);\n        }\n        \n        // Simulate a complex computation\n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 100 numbers: \" + sum);\n        \n        // Use the read method to check if a certain position is set\n        /* read */ boolean isSet = record.isSet(1);\n        \n        // Print the result\n        System.out.println(\"Position 1 is set: \" + isSet);\n        \n        // More complex operations\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        for (Integer num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n        \n        int product = 1;\n        for (Integer num : numbers) {\n            product *= num;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSVFormat instance\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withTrailingDelimiter();\n        \n        // Create a sample CSVRecord for demonstration\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = new CSVRecord(values, null, format);\n        \n        // Use the read method to check if a certain position is set\n        /* read */ boolean isSet = record.isSet(1);\n        \n        // Print the result\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}