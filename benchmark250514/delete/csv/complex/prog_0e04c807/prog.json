{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Create an ArrayList for demonstration purposes\n        ArrayList<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n\n        // Create a HashMap to store some key-value pairs\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n\n        // Use the write method to modify the CSVFormat object\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Perform some operations on the ArrayList\n        for (String str : stringList) {\n            System.out.println(str);\n        }\n\n        // Perform some operations on the HashMap\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Create a sample CSVRecord for testing purposes\n        String[] sampleData = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(String.join(\",\", sampleData)))\n                .iterator().next();\n\n        // Perform some unrelated computations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n\n        // Use the read method to interact with the CSVRecord object\n        /* read */ boolean isSet = record.isSet(1);\n\n        // Print the result\n        System.out.println(\"Is set: \" + isSet);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to modify the CSVFormat object\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Create a sample CSVRecord for testing purposes\n        String[] sampleData = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(String.join(\",\", sampleData)))\n                .iterator().next();\n\n        // Use the read method to interact with the CSVRecord object\n        /* read */ boolean isSet = record.isSet(1);\n\n        // Print the result\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}