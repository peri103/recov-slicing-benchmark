{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        CSVFormat format = CSVFormat.DEFAULT.withAllowMissingColumnNames(true); /* write */\n\n        // Creating a map to simulate additional complexity\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"key1\", 100);\n        dataMap.put(\"key2\", 200);\n\n        // Process data in the map\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            System.out.println(\"Processing \" + entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Create a CSVRecord for demonstration\n        // Normally, CSVRecord is created by parsing a CSV file with CSVParser\n        // Here, we are creating a mock CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(format, Arrays.asList(\"value1\", \"value2\"), null, 0, 0);\n\n        // Perform some unrelated operations to increase complexity\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Use the read method\n        boolean isSet = record.isSet(\"value1\"); /* read */\n\n        // Output the result\n        System.out.println(\"Is 'value1' set in the record? \" + isSet);\n\n        // Another loop to simulate more processing\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Iterating through loop: \" + i);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        CSVFormat format = CSVFormat.DEFAULT.withAllowMissingColumnNames(true); /* write */\n\n        // Create a CSVRecord for demonstration\n        // Normally, CSVRecord is created by parsing a CSV file with CSVParser\n        // Here, we are creating a mock CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(format, Arrays.asList(\"value1\", \"value2\"), null, 0, 0);\n\n        // Use the read method\n        boolean isSet = record.isSet(\"value1\"); /* read */\n\n        // Output the result\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}