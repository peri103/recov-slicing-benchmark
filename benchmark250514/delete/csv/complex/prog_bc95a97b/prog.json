{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of CSVFormat\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to configure the format\n        /* write */ format = format.withTrim();\n\n        // Simulate some unrelated complex operations\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n\n        ArrayList<Integer> list = new ArrayList<>();\n        for (String key : map.keySet()) {\n            list.add(map.get(key));\n        }\n\n        int sum = 0;\n        for (int number : list) {\n            sum += number;\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // Simulate the creation of a CSVRecord with the format applied\n        // Note: CSVRecord is typically obtained by parsing a CSV file with CSVParser,\n        // but since we are not doing file operations, we'll simulate it.\n        // Assume we have a CSVRecord instance\n        CSVRecord record = new CSVRecord(null, null, null, format);\n\n        // More unrelated code to increase complexity\n        ArrayList<String> names = new ArrayList<>();\n        names.add(\"Alice\");\n        names.add(\"Bob\");\n        names.add(\"Charlie\");\n\n        for (String name : names) {\n            System.out.println(\"Hello, \" + name + \"!\");\n        }\n\n        // Use the read method to check if a record is mapped\n        /* read */ boolean isMapped = record.isMapped(\"columnName\");\n\n        System.out.println(\"Is column mapped: \" + isMapped);\n\n        // Additional unrelated code\n        int product = 1;\n        for (int number : list) {\n            product *= number;\n        }\n        System.out.println(\"Product of values in map: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of CSVFormat\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to configure the format\n        /* write */ format = format.withTrim();\n\n        // Simulate the creation of a CSVRecord with the format applied\n        // Note: CSVRecord is typically obtained by parsing a CSV file with CSVParser,\n        // but since we are not doing file operations, we'll simulate it.\n        // Assume we have a CSVRecord instance\n        CSVRecord record = new CSVRecord(null, null, null, format);\n\n        // Use the read method to check if a record is mapped\n        /* read */ boolean isMapped = record.isMapped(\"columnName\");\n\n        System.out.println(\"Is column mapped: \" + isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}