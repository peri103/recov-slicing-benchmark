{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom record separator\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withRecordSeparator(\";\");\n\n            // Use StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write multiple records to the CSVPrinter\n            printer.printRecord(\"Name\", \"Age\", \"Country\");\n            printer.printRecord(\"Alice\", \"30\", \"USA\");\n            printer.printRecord(\"Bob\", \"25\", \"Canada\");\n\n            // Flush the printer to ensure all data is written\n            printer.flush();\n\n            // Additional operations to make the program complex\n            List<String> dataList = new ArrayList<>();\n            dataList.add(\"Extra\");\n            dataList.add(\"Data\");\n            dataList.add(\"Here\");\n\n            for (String data : dataList) {\n                printer.printRecord(data);\n            }\n\n            printer.flush();\n\n            // Read the output as a CSVRecord\n            String csvData = writer.toString();\n            CSVParser parser = CSVFormat.DEFAULT.parse(csvData);\n            List<CSVRecord> records = parser.getRecords();\n\n            for (CSVRecord rec : records) {\n                System.out.println(rec);\n            }\n\n            // Perform some unrelated computations\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum: \" + sum);\n\n            // Read the CSVRecord using the toString method\n            CSVRecord record = records.get(0);\n            /* read */ String recordString = record.toString();\n            System.out.println(\"First Record: \" + recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom record separator\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withRecordSeparator(\";\");\n\n            // Use StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a record to the CSVPrinter\n            printer.printRecord(\"Name\", \"Age\", \"Country\");\n\n            // Flush the printer to ensure all data is written\n            printer.flush();\n\n            // Read the output as a CSVRecord\n            String csvData = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(csvData).getRecords().get(0);\n\n            // Read the CSVRecord using the toString method\n            /* read */ String recordString = record.toString();\n            System.out.println(recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withRecordSeparator",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}