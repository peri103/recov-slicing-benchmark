{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance\n        CSVFormat format = CSVFormat.DEFAULT;\n        CSVFormat anotherFormat = CSVFormat.EXCEL;\n\n        // Use the write method to set a null string representation\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a mock CSVRecord for demonstration\n        List<String> recordData = Arrays.asList(\"data1\", \"NULL\", \"data3\");\n        CSVRecord record = new CSVRecord(null, recordData, null, 0, 0);\n\n        // Additional unrelated code to increase complexity\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"data1\", 1);\n        dataMap.put(\"data2\", 2);\n        dataMap.put(\"data3\", 3);\n\n        int total = 0;\n        for (String key : dataMap.keySet()) {\n            total += dataMap.get(key);\n        }\n        System.out.println(\"Total: \" + total);\n\n        // Use the read method to check if a specific index is set\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(\"Is the second element set? \" + isSet);\n\n        // Additional logic with another CSVFormat\n        anotherFormat = anotherFormat.withDelimiter(';');\n        List<String> anotherRecordData = Arrays.asList(\"value1\", \"value2\", \"value3\");\n        CSVRecord anotherRecord = new CSVRecord(null, anotherRecordData, null, 0, 0);\n\n        boolean anotherIsSet = anotherRecord.isSet(2);\n        System.out.println(\"Is the third element in anotherRecord set? \" + anotherIsSet);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to set a null string representation\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a mock CSVRecord for demonstration\n        List<String> recordData = Arrays.asList(\"data1\", \"NULL\", \"data3\");\n        CSVRecord record = new CSVRecord(null, recordData, null, 0, 0);\n\n        // Use the read method to check if a specific index is set\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(\"Is the second element set? \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}