{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with trailing delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Create a sample CSVRecord for demonstration\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = new CSVRecord(values, null, format);\n\n        // Complex operations with collections\n        List<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n\n        Map<String, Integer> wordCount = new HashMap<>();\n        for (String word : stringList) {\n            wordCount.put(word, word.length());\n        }\n\n        // Additional operations on the map\n        for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {\n            System.out.println(\"Word: \" + entry.getKey() + \", Length: \" + entry.getValue());\n        }\n\n        // More complex logic\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers is: \" + sum);\n\n        // Read operation to check if a specific index is set\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(\"Is index 1 set? \" + isSet);\n\n        // Additional logic to manipulate the list\n        for (int i = 0; i < stringList.size(); i++) {\n            stringList.set(i, stringList.get(i).toUpperCase());\n        }\n\n        // Print the modified list\n        System.out.println(\"Modified List: \" + stringList);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with trailing delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Create a sample CSVRecord for demonstration\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = new CSVRecord(values, null, format);\n\n        // Read operation to check if a specific index is set\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(\"Is index 1 set? \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}