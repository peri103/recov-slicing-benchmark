{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSV format with the specified setting\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowMissingColumnNames(true);\n\n        // Create a sample CSVRecord to test the read method\n        List<String> values = Arrays.asList(\"value1\", \"value2\", \"value3\");\n        CSVRecord record = new CSVRecord(values, null, csvFormat);\n\n        // Additional complex logic\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Map value for \" + key + \": \" + map.get(key));\n        }\n\n        for (int value : list) {\n            System.out.println(\"List value: \" + value);\n        }\n\n        // Read using the isSet method\n        /* read */ boolean isSet = record.isSet(0);\n\n        // Output the result\n        System.out.println(\"Is column 0 set in CSVRecord? \" + isSet);\n\n        // More complex operations\n        int sum = 0;\n        for (int value : list) {\n            sum += value;\n        }\n        System.out.println(\"Sum of list values: \" + sum);\n\n        String concatenatedKeys = \"\";\n        for (String key : map.keySet()) {\n            concatenatedKeys += key + \" \";\n        }\n        System.out.println(\"Concatenated map keys: \" + concatenatedKeys.trim());\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSV format with the specified setting\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowMissingColumnNames(true);\n\n        // Create a sample CSVRecord to test the read method\n        List<String> values = Arrays.asList(\"value1\", \"value2\", \"value3\");\n        CSVRecord record = new CSVRecord(values, null, csvFormat);\n\n        // Read using the isSet method\n        /* read */ boolean isSet = record.isSet(0);\n\n        // Output the result\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}