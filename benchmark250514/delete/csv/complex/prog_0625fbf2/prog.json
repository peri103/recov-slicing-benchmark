{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with ignore header case\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreHeaderCase(true);\n        \n        // Create a CSVRecord for demonstration purposes\n        String[] values = {\"header\", \"value\"};\n        CSVRecord record = new CSVRecord(null, values, format, 0, 0);\n\n        // Additional code to make the program more complex\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"header\", 1);\n        dataMap.put(\"value\", 2);\n\n        // Process the map data\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in dataMap: \" + sum);\n\n        // Complex logic involving another CSVRecord\n        String[] anotherValues = {\"header\", \"anotherValue\"};\n        CSVRecord anotherRecord = new CSVRecord(null, anotherValues, format, 0, 0);\n\n        boolean isAnotherMapped = anotherRecord.isMapped(\"anotherValue\");\n        System.out.println(\"Is 'anotherValue' mapped: \" + isAnotherMapped);\n\n        // Read isMapped from CSVRecord\n        /* read */ boolean isMapped = record.isMapped(\"header\");\n        \n        // Output the result\n        System.out.println(\"Is 'header' mapped: \" + isMapped);\n\n        // Additional logic to manipulate data\n        int multiplier = 3;\n        int multipliedSum = sum * multiplier;\n        System.out.println(\"Multiplied sum: \" + multipliedSum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with ignore header case\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreHeaderCase(true);\n        \n        // Create a CSVRecord for demonstration purposes\n        String[] values = {\"header\", \"value\"};\n        CSVRecord record = new CSVRecord(null, values, format, 0, 0);\n\n        // Read isMapped from CSVRecord\n        /* read */ boolean isMapped = record.isMapped(\"header\");\n        \n        // Output the result\n        System.out.println(\"Is 'header' mapped: \" + isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}