{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat instance\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to modify the format instance\n        /* write */ format = format.withTrim();\n\n        // Simulate reading a record using CSVRecord (normally obtained by parsing CSV data)\n        CSVRecord record = new CSVRecord(format, new String[]{\"value\"}, null, 0, 0);\n\n        // Initialize an ArrayList and a HashMap for unrelated operations\n        ArrayList<String> list = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n\n        // Populate the ArrayList\n        list.add(\"apple\");\n        list.add(\"banana\");\n        list.add(\"cherry\");\n\n        // Populate the HashMap\n        map.put(\"apple\", 1);\n        map.put(\"banana\", 2);\n        map.put(\"cherry\", 3);\n\n        // Perform some operations on the ArrayList\n        for (String item : list) {\n            System.out.println(\"Item: \" + item);\n        }\n\n        // Perform some operations on the HashMap\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // Further unrelated operations\n        int sum = 0;\n        for (int value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // Use the read method on CSVRecord\n        /* read */ boolean isMapped = record.isMapped(\"value\");\n\n        // Output the result\n        System.out.println(isMapped);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat instance\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format instance\n        /* write */ format = format.withTrim();\n\n        // Simulate reading a record using CSVRecord (normally obtained by parsing CSV data)\n        CSVRecord record = new CSVRecord(format, new String[]{\"value\"}, null, 0, 0);\n\n        // Use the read method on CSVRecord\n        /* read */ boolean isMapped = record.isMapped(\"value\");\n\n        // Output the result\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}