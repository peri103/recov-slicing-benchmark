{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a setting to allow missing column names\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames();\n        \n        // Simulate a CSVRecord for demonstration purposes\n        // Note: In practice, CSVRecord would be obtained from parsing a CSV file\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(format, values, null, 0, 0);\n\n        // Create an ArrayList and add some elements\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Element1\");\n        list.add(\"Element2\");\n        \n        // Create a HashMap and populate it with some data\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"Key1\", 100);\n        map.put(\"Key2\", 200);\n        \n        // Perform operations on the list and map\n        list.add(\"Element3\");\n        map.put(\"Key3\", 300);\n        \n        // Iterate over the list and print elements\n        for (String element : list) {\n            System.out.println(element);\n        }\n        \n        // Iterate over the map and print key-value pairs\n        for (String key : map.keySet()) {\n            System.out.println(key + \": \" + map.get(key));\n        }\n\n        // Check if a specific index is set in the record\n        /* read */ boolean isSet = record.isSet(0);\n        System.out.println(isSet);\n\n        // Further operations on the list and map\n        list.remove(\"Element2\");\n        map.remove(\"Key1\");\n        \n        // Print the updated list and map\n        System.out.println(\"Updated List: \" + list);\n        System.out.println(\"Updated Map: \" + map);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a setting to allow missing column names\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames();\n\n        // Simulate a CSVRecord for demonstration purposes\n        // Note: In practice, CSVRecord would be obtained from parsing a CSV file\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(format, values, null, 0, 0);\n\n        // Check if a specific index is set in the record\n        /* read */ boolean isSet = record.isSet(0);\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}