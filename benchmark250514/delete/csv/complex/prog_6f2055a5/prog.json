{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.io.StringReader;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a specific configuration\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreEmptyLines(true);\n\n        // Simulate CSV records for demonstration purposes\n        ArrayList<CSVRecord> records = new ArrayList<>();\n        records.add(new CSVRecord(null, new String[]{\"value1\", \"value2\"}, null, 0, 0));\n        records.add(new CSVRecord(null, new String[]{\"value3\", \"value4\"}, null, 0, 0));\n\n        // Create a map to store some data\n        HashMap<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"key1\", 100);\n        dataMap.put(\"key2\", 200);\n\n        // Iterate over the map and print its contents\n        for (String key : dataMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + dataMap.get(key));\n        }\n\n        // Parse another set of CSV data\n        String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n        try {\n            CSVParser parser = CSVFormat.DEFAULT.withFirstRecordAsHeader().parse(new StringReader(csvData));\n            List<CSVRecord> parsedRecords = parser.getRecords();\n            for (CSVRecord rec : parsedRecords) {\n                System.out.println(\"Name: \" + rec.get(\"name\") + \", Age: \" + rec.get(\"age\"));\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        // Assume we are checking if a column is set in the first record\n        CSVRecord record = records.get(0);\n        /* read */ boolean isSet = record.isSet(0);\n\n        System.out.println(\"Is the first column set in the first record? \" + isSet);\n\n        // Additional logic with lists\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a specific configuration\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreEmptyLines(true);\n\n        // Simulate CSV records for demonstration purposes\n        ArrayList<CSVRecord> records = new ArrayList<>();\n        records.add(new CSVRecord(null, new String[]{\"value1\", \"value2\"}, null, 0, 0));\n        records.add(new CSVRecord(null, new String[]{\"value3\", \"value4\"}, null, 0, 0));\n\n        // Assume we are checking if a column is set in the first record\n        CSVRecord record = records.get(0);\n        /* read */ boolean isSet = record.isSet(0);\n\n        System.out.println(\"Is the first column set in the first record? \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}