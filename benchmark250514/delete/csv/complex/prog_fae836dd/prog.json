{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object and configure it to ignore header case\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreHeaderCase();\n\n        // Simulate CSVRecord creation\n        List<String> headers = new ArrayList<>();\n        headers.add(\"Name\");\n        headers.add(\"Age\");\n\n        List<String> values = new ArrayList<>();\n        values.add(\"John Doe\");\n        values.add(\"30\");\n\n        CSVRecord record = new CSVRecord(values, headers, 0, 0);\n\n        // Create a map to demonstrate additional complexity\n        Map<String, Integer> ageMap = new HashMap<>();\n        ageMap.put(\"John Doe\", 30);\n        ageMap.put(\"Jane Smith\", 25);\n\n        // Loop through the map and print each entry\n        for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n            System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n        }\n\n        // Perform some additional operations on the CSVRecord\n        String name = record.get(0);\n        int age = Integer.parseInt(record.get(1));\n        System.out.println(\"Record Name: \" + name + \", Record Age: \" + age);\n\n        // Check if a specific header is mapped\n        // This is the original read operation\n        /* read */ boolean isMapped = record.isMapped(\"name\"); // should be true due to ignore header case\n        System.out.println(\"Is 'name' mapped: \" + isMapped);\n\n        // Additional logic to manipulate data\n        if (isMapped) {\n            ageMap.put(name, age + 5);\n        }\n\n        // Print the updated map\n        for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n            System.out.println(\"Updated Name: \" + entry.getKey() + \", Updated Age: \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object and configure it to ignore header case\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreHeaderCase();\n\n        // Simulate CSVRecord creation\n        List<String> headers = new ArrayList<>();\n        headers.add(\"Name\");\n        headers.add(\"Age\");\n\n        List<String> values = new ArrayList<>();\n        values.add(\"John Doe\");\n        values.add(\"30\");\n\n        CSVRecord record = new CSVRecord(values, headers, 0, 0);\n\n        // Check if a specific header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"name\"); // should be true due to ignore header case\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}