{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSV format with header comments\n        CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n        // Simulate a CSV record that would have been parsed using the format\n        List<String> data = Arrays.asList(\"value1\", \"value2\");\n        CSVRecord record = new CSVRecord(data, null, 0, 0, format);\n\n        // Introduce an unrelated complex operation with ArrayList\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numberList.add(i * 2);\n        }\n\n        // Perform operations on numberList\n        int sum = 0;\n        for (int number : numberList) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Introduce another unrelated complex operation with String manipulations\n        StringBuilder builder = new StringBuilder();\n        for (int i = 0; i < numberList.size(); i++) {\n            builder.append(\"Number: \").append(numberList.get(i)).append(\"\\n\");\n        }\n        System.out.println(builder.toString());\n\n        // Further operations on numberList\n        for (int i = 0; i < numberList.size(); i++) {\n            numberList.set(i, numberList.get(i) + 1);\n        }\n        System.out.println(\"Modified numbers: \" + numberList);\n\n        // Read the comment from the record\n        /* read */ String comment = record.getComment();\n\n        // Output the comment\n        System.out.println(comment);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSV format with header comments\n        CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n        \n        // Simulate a CSV record that would have been parsed using the format\n        List<String> data = Arrays.asList(\"value1\", \"value2\");\n        CSVRecord record = new CSVRecord(data, null, 0, 0, format);\n        \n        // Read the comment from the record\n        /* read */ String comment = record.getComment();\n        \n        // Output the comment\n        System.out.println(comment);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}