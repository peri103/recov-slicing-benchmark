{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method to modify the CSVFormat object\n        /* write */ format = format.withAllowDuplicateHeaderNames(true);\n\n        // Create a CSVRecord object for demonstration purposes\n        // In real scenarios, CSVRecord is typically obtained from parsing a CSV file\n        CSVRecord record = new CSVRecord(null, new String[]{\"header1\"}, new String[]{\"value1\"}, 0, format);\n\n        // Additional logic to make the program more complex\n        ArrayList<String> headers = new ArrayList<>();\n        headers.add(\"header1\");\n        headers.add(\"header2\");\n        headers.add(\"header3\");\n\n        ArrayList<String> values = new ArrayList<>();\n        values.add(\"value1\");\n        values.add(\"value2\");\n        values.add(\"value3\");\n\n        // Simulating processing of CSV data\n        for (String header : headers) {\n            if (record.isMapped(header)) {\n                System.out.println(\"Processing value for: \" + header);\n            } else {\n                System.out.println(\"Header not mapped: \" + header);\n            }\n        }\n\n        // Adding more complexity with additional data manipulation\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Use the read method to check if a header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"header1\");\n\n        // Output the result\n        System.out.println(\"Is 'header1' mapped? \" + isMapped);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the CSVFormat object\n        /* write */ format = format.withAllowDuplicateHeaderNames(true);\n\n        // Create a CSVRecord object for demonstration purposes\n        // In real scenarios, CSVRecord is typically obtained from parsing a CSV file\n        CSVRecord record = new CSVRecord(null, new String[]{\"header1\"}, new String[]{\"value1\"}, 0, format);\n\n        // Use the read method to check if a header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"header1\");\n\n        // Output the result\n        System.out.println(\"Is 'header1' mapped? \" + isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowDuplicateHeaderNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}