{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance and configure it to allow missing column names.\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Simulate a CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, new String[]{\"value1\", \"value2\", \"value3\"}, null, 0, 0);\n\n        // Additional unrelated code to increase complexity\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"value1\", 100);\n        dataMap.put(\"value2\", 200);\n        dataMap.put(\"value3\", 300);\n\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n            sum += entry.getValue();\n        }\n        System.out.println(\"Total Sum: \" + sum);\n\n        // Some complex logic with arrays\n        int[] numbers = {1, 2, 3, 4, 5};\n        int maxNumber = Arrays.stream(numbers).max().orElse(-1);\n        System.out.println(\"Max Number: \" + maxNumber);\n\n        // Check if a particular column is set\n        /* read */ boolean isSet = record.isSet(\"value1\");\n        System.out.println(\"Is 'value1' set: \" + isSet);\n\n        // Another complex logic with conditionals\n        if (sum > 500) {\n            System.out.println(\"Sum is greater than 500\");\n        } else {\n            System.out.println(\"Sum is less than or equal to 500\");\n        }\n\n        // More operations on the dataMap\n        dataMap.replace(\"value1\", 150);\n        System.out.println(\"Updated value1: \" + dataMap.get(\"value1\"));\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance and configure it to allow missing column names.\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Simulate a CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, new String[]{\"value1\", \"value2\"}, null, 0, 0);\n\n        // Check if a particular column is set\n        /* read */ boolean isSet = record.isSet(\"value1\");\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}