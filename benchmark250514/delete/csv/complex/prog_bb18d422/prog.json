{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string\n        CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n        \n        // Create a CSVRecord with some sample data\n        String[] sampleData = {\"value1\", \"value2\", \"NULL\"};\n        CSVRecord record = new CSVRecord(sampleData, null, format);\n\n        // Use the write method once\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Additional code to make the program more complex\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"key1\", 100);\n        dataMap.put(\"key2\", 200);\n        \n        // Perform some operations on the map\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // Another CSV operation, not marked\n        CSVFormat anotherFormat = CSVFormat.DEFAULT.withDelimiter(';');\n        String[] anotherSampleData = {\"entry1\", \"entry2\", \"entry3\"};\n        CSVRecord anotherRecord = new CSVRecord(anotherSampleData, null, anotherFormat);\n        boolean anotherIsSet = anotherRecord.isSet(1);\n        System.out.println(\"Another isSet result: \" + anotherIsSet);\n\n        // Use the read method once\n        /* read */ boolean isSet = record.isSet(2);\n        \n        // Print the result of the read method\n        System.out.println(isSet);\n\n        // Additional complex logic\n        for (int i = 0; i < sampleData.length; i++) {\n            System.out.println(\"Sample Data [\" + i + \"]: \" + sampleData[i]);\n        }\n\n        // Perform operations on the format\n        String formatString = format.getDelimiter() == ',' ? \"Comma\" : \"Other\";\n        System.out.println(\"Format delimiter type: \" + formatString);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string\n        CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n        \n        // Create a CSVRecord with some sample data\n        String[] sampleData = {\"value1\", \"value2\", \"NULL\"};\n        CSVRecord record = new CSVRecord(sampleData, null, format);\n\n        // Use the write method once\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Use the read method once\n        /* read */ boolean isSet = record.isSet(2);\n        \n        // Print the result of the read method\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}