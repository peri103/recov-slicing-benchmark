{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowDuplicateHeaderNames(true);\n\n        // Create a mock CSVRecord for demonstration purposes\n        // In a real scenario, CSVRecord would be obtained from parsing a CSV file\n        CSVRecord csvRecord = new CSVRecord(null, new String[]{\"header1\", \"header2\"}, null, null);\n\n        // Additional code to increase complexity\n        StringWriter stringWriter = new StringWriter();\n        try {\n            CSVPrinter csvPrinter = new CSVPrinter(stringWriter, csvFormat);\n            List<String> headers = Arrays.asList(\"header1\", \"header2\", \"header3\");\n            csvPrinter.printRecord(headers);\n            csvPrinter.printRecord(\"value1\", \"value2\", \"value3\");\n            csvPrinter.flush();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Use the read method to check if the record is mapped\n        /* read */ boolean isMapped = csvRecord.isMapped(\"header1\");\n        System.out.println(\"Is 'header1' mapped: \" + isMapped);\n\n        // More complex code using CSVFormat to parse data\n        List<String> records = Arrays.asList(\"record1\", \"record2\", \"record3\");\n        for (String record : records) {\n            System.out.println(\"Processing: \" + record);\n        }\n\n        // Simulate some data processing logic\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 numbers: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowDuplicateHeaderNames(true);\n\n        // Create a mock CSVRecord for demonstration purposes\n        // In a real scenario, CSVRecord would be obtained from parsing a CSV file\n        CSVRecord csvRecord = new CSVRecord(null, new String[]{\"header1\", \"header2\"}, null, null);\n\n        // Use the read method to check if the record is mapped\n        /* read */ boolean isMapped = csvRecord.isMapped(\"header1\");\n        System.out.println(\"Is 'header1' mapped: \" + isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowDuplicateHeaderNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}