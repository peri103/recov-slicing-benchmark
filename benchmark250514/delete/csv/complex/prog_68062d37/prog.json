{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to set the configuration\n        /* write */ format = format.withAllowDuplicateHeaderNames(true);\n\n        // Simulate a CSVRecord with a dummy header\n        String[] headers = {\"header1\", \"header2\", \"header1\"}; // Duplicate header names\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = new CSVRecord(null, values, headers, null, null);\n\n        // Additional complex operations\n        HashMap<String, String> map = new HashMap<>();\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        \n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // Perform some unrelated calculations\n        int result = 0;\n        for (int i = 0; i < 10; i++) {\n            result += i * i;\n        }\n        System.out.println(\"Sum of squares: \" + result);\n\n        // Use the read method to check if a header is set\n        /* read */ boolean isSet = record.isSet(\"header1\");\n        \n        // Output the result\n        System.out.println(\"Is header 'header1' set? \" + isSet);\n\n        // More unrelated code for complexity\n        String complexString = \"Hello, World!\";\n        StringBuilder reversedString = new StringBuilder();\n        for (int i = complexString.length() - 1; i >= 0; i--) {\n            reversedString.append(complexString.charAt(i));\n        }\n        System.out.println(\"Reversed string: \" + reversedString.toString());\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to set the configuration\n        /* write */ format = format.withAllowDuplicateHeaderNames(true);\n        \n        // Simulate a CSVRecord with a dummy header\n        String[] headers = {\"header1\", \"header2\", \"header1\"}; // Duplicate header names\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = new CSVRecord(null, values, headers, null, null);\n        \n        // Use the read method to check if a header is set\n        /* read */ boolean isSet = record.isSet(\"header1\");\n        \n        // Output the result\n        System.out.println(\"Is header 'header1' set? \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowDuplicateHeaderNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}