{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        // Initialize CSVFormat with the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase(true);\n\n        // Create a sample CSVRecord for testing the read method\n        String[] headers = {\"Name\", \"Age\"};\n        String[] values = {\"John Doe\", \"30\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(Arrays.asList(values)).getRecords().get(0);\n\n        // Additional complex code using ArrayList\n        List<String> namesList = new ArrayList<>();\n        namesList.add(\"Alice\");\n        namesList.add(\"Bob\");\n        namesList.add(\"Charlie\");\n\n        // Process the list and print names\n        for (String name : namesList) {\n            System.out.println(\"Processing name: \" + name);\n        }\n\n        // Add more complexity with nested loops\n        for (int i = 0; i < namesList.size(); i++) {\n            for (int j = 0; j < headers.length; j++) {\n                System.out.println(\"Header: \" + headers[j] + \", Name: \" + namesList.get(i));\n            }\n        }\n\n        // Check if a header is mapped using the read method\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n        System.out.println(\"Is 'name' header mapped: \" + isMapped);\n\n        // More code to manipulate lists\n        List<Integer> ageList = new ArrayList<>();\n        for (int i = 0; i < values.length; i++) {\n            try {\n                ageList.add(Integer.parseInt(values[i]));\n            } catch (NumberFormatException e) {\n                System.out.println(\"Invalid age format for value: \" + values[i]);\n            }\n        }\n\n        // Print ages\n        for (Integer age : ageList) {\n            System.out.println(\"Age: \" + age);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        // Initialize CSVFormat with the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase(true);\n\n        // Create a sample CSVRecord for testing the read method\n        String[] headers = {\"Name\", \"Age\"};\n        String[] values = {\"John Doe\", \"30\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(Arrays.asList(values)).getRecords().get(0);\n\n        // Check if a header is mapped using the read method\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}