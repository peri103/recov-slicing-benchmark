{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object and configure it using the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreHeaderCase();\n\n        // Simulate a CSVRecord with headers to test the read method\n        List<String> headers = Arrays.asList(\"Name\", \"Age\", \"Location\");\n        List<String> values = Arrays.asList(\"John Doe\", \"30\", \"New York\");\n        CSVRecord record = new CSVRecord(null, values, headers, 0, values.size());\n\n        // Additional complexity: Using a HashMap to store some data\n        Map<String, Integer> ageMap = new HashMap<>();\n        ageMap.put(\"John Doe\", 30);\n        ageMap.put(\"Jane Smith\", 25);\n\n        // Perform some operations on the map\n        for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n            System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n        }\n\n        // Another CSVRecord with different data\n        List<String> headers2 = Arrays.asList(\"Product\", \"Price\", \"Quantity\");\n        List<String> values2 = Arrays.asList(\"Laptop\", \"1000\", \"5\");\n        CSVRecord record2 = new CSVRecord(null, values2, headers2, 0, values2.size());\n\n        // Check if a field is mapped in the second record\n        boolean isProductMapped = record2.isMapped(\"Product\");\n        System.out.println(\"Is 'Product' mapped in record2? \" + isProductMapped);\n\n        // Use the read method to check if the field is mapped in the original record\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n        System.out.println(\"Is 'name' mapped in record? \" + isMapped);\n\n        // Additional operation: Calculate total price from the second record\n        int price = Integer.parseInt(record2.get(\"Price\"));\n        int quantity = Integer.parseInt(record2.get(\"Quantity\"));\n        int totalPrice = price * quantity;\n        System.out.println(\"Total Price for \" + record2.get(\"Product\") + \": \" + totalPrice);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object and configure it using the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreHeaderCase();\n\n        // Simulate a CSVRecord with headers to test the read method\n        List<String> headers = Arrays.asList(\"Name\", \"Age\", \"Location\");\n        List<String> values = Arrays.asList(\"John Doe\", \"30\", \"New York\");\n        CSVRecord record = new CSVRecord(null, values, headers, 0, values.size());\n\n        // Use the read method to check if the field is mapped\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}