{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        CSVFormat format = CSVFormat.DEFAULT.withAllowMissingColumnNames(true);\n        \n        // Create a mock CSVRecord for demonstration purposes\n        List<String> values = Arrays.asList(\"value1\", \"value2\");\n        CSVRecord record = new CSVRecord(values, null, format, 0, 0);\n\n        // Unrelated complex logic: Create a list and populate it with values\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        // Unrelated complex logic: Create a map and populate it with values\n        HashMap<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < numbers.size(); i++) {\n            map.put(\"Key\" + i, numbers.get(i));\n        }\n\n        // Process the map values\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n\n        // Use the read method to check if a column is set\n        /* read */ boolean isSet = record.isSet(\"value1\");\n        \n        System.out.println(\"Is 'value1' set: \" + isSet);\n\n        // Further unrelated logic: Perform some calculations\n        double average = sum / (double) numbers.size();\n        System.out.println(\"Average of map values: \" + average);\n\n        // More complex logic: Iterate over numbers and print them\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        CSVFormat format = CSVFormat.DEFAULT.withAllowMissingColumnNames(true);\n        \n        // Create a mock CSVRecord for demonstration purposes\n        List<String> values = Arrays.asList(\"value1\", \"value2\");\n        CSVRecord record = new CSVRecord(values, null, format, 0, 0);\n\n        // Use the read method to check if a column is set\n        /* read */ boolean isSet = record.isSet(\"value1\");\n        \n        System.out.println(\"Is 'value1' set: \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}