{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with trimming\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrim();\n\n        // Create a CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, values, null, 0, format);\n\n        // Unrelated code: Use a HashMap to store some values\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n\n        // Perform some operations on the map\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of values in the map: \" + sum);\n\n        // More unrelated code: Perform some arithmetic operations\n        int a = 5;\n        int b = 10;\n        int result = a * b + sum;\n        System.out.println(\"Result of arithmetic operations: \" + result);\n\n        // Check if a column is mapped\n        /* read */ boolean isMapped = record.isMapped(\"value1\");\n        System.out.println(\"Is 'value1' mapped: \" + isMapped);\n\n        // Additional unrelated code: Use a loop to iterate over an array\n        int[] numbers = {1, 2, 3, 4, 5};\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with trimming\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrim();\n\n        // Create a CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, values, null, 0, format);\n\n        // Check if a column is mapped\n        /* read */ boolean isMapped = record.isMapped(\"value1\");\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}