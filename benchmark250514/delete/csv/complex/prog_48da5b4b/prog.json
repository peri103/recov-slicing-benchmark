{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance and configure it using the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Simulate a CSVRecord with a sample record\n        String[] recordData = {\"value1\", \"value2\"};\n        CSVRecord record = CSVRecord.parse(recordData, format);\n\n        // Additional unrelated code to make the program more complex\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Hello\");\n        list.add(\"World\");\n\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n\n        for (String item : list) {\n            System.out.println(\"List item: \" + item);\n        }\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n        }\n\n        // Use the read method to check if a specific index is set\n        /* read */ boolean isSet = record.isSet(0);\n\n        // Print the result\n        System.out.println(\"Is value at index 0 set? \" + isSet);\n\n        // More unrelated code to increase complexity\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 10);\n        }\n\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance and configure it using the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Simulate a CSVRecord with a sample record\n        String[] recordData = {\"value1\", \"value2\"};\n        CSVRecord record = CSVRecord.parse(recordData, format);\n\n        // Use the read method to check if a specific index is set\n        /* read */ boolean isSet = record.isSet(0);\n\n        // Print the result\n        System.out.println(\"Is value at index 0 set? \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}