{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.QuoteMode;\n\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Prepare CSV data\n        String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n        try {\n            // Create a map to simulate additional data processing\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n\n            // Create CSVFormat with the first record as header\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Process each record and fill the map\n            for (CSVRecord record : parser) {\n                String name = record.get(\"name\");\n                int age = Integer.parseInt(record.get(\"age\"));\n                nameToAgeMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            int totalAge = 0;\n            for (int age : nameToAgeMap.values()) {\n                totalAge += age;\n            }\n            System.out.println(\"Total age: \" + totalAge);\n\n            // Create another CSV format for different processing\n            CSVFormat formatWithQuotes = CSVFormat.DEFAULT.withQuoteMode(QuoteMode.ALL);\n\n            // Simulate another parsing scenario\n            CSVParser parserWithQuotes = new CSVParser(new StringReader(csvData), formatWithQuotes);\n            for (CSVRecord record : parserWithQuotes) {\n                System.out.println(\"Quoted record: \" + record);\n            }\n\n            // Get the first record from the original parser\n            CSVRecord firstRecord = parser.getRecords().get(0);\n\n            // Check if the record is mapped (has headers)\n            /* read */ boolean isMapped = firstRecord.isMapped();\n\n            // Output the result\n            System.out.println(\"Is the first record mapped? \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.StringReader;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Prepare CSV data\n        String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n        try {\n            // Create CSVFormat with the first record as header\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if the record is mapped (has headers)\n            /* read */ boolean isMapped = record.isMapped();\n\n            // Output the result\n            System.out.println(\"Is the record mapped? \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}