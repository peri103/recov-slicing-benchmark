{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Create a CSVRecord object to read from\n        CSVRecord record = new CSVRecord(null, null, null, null, null) {\n            @Override\n            public boolean isConsistent() {\n                return true;\n            }\n        };\n\n        // Additional code to increase complexity\n        Map<String, Integer> wordCount = new HashMap<>();\n        String[] words = {\"apple\", \"banana\", \"apple\", \"orange\", \"banana\", \"banana\"};\n        \n        for (String word : words) {\n            if (wordCount.containsKey(word)) {\n                wordCount.put(word, wordCount.get(word) + 1);\n            } else {\n                wordCount.put(word, 1);\n            }\n        }\n\n        for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {\n            System.out.println(\"Word: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n\n        // Some mathematical calculations\n        int a = 5;\n        int b = 10;\n        int sum = a + b;\n        int product = a * b;\n        System.out.println(\"Sum: \" + sum + \", Product: \" + product);\n\n        // Use the read method\n        /* read */ boolean isConsistent = record.isConsistent();\n\n        // Print the result of the read method\n        System.out.println(\"Is CSV record consistent? \" + isConsistent);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Create a CSVRecord object to read from\n        CSVRecord record = new CSVRecord(null, null, null, null, null) {\n            @Override\n            public boolean isConsistent() {\n                return true;\n            }\n        };\n\n        // Use the read method\n        /* read */ boolean isConsistent = record.isConsistent();\n\n        // Print the result\n        System.out.println(isConsistent);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}