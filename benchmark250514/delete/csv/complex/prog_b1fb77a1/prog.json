{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object with the desired configuration\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Create a mock CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, null, format);\n\n        // Additional unrelated complex code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        Map<String, Integer> map = new HashMap<>();\n        for (int num : numbers) {\n            map.put(\"Key\" + num, num);\n        }\n\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // More complex code\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Read the value using the isConsistent method\n        /* read */ boolean isConsistent = record.isConsistent();\n\n        // Print the result\n        System.out.println(\"Is the CSV record consistent? \" + isConsistent);\n\n        // Additional complex logic\n        int max = numbers.stream().max(Integer::compare).orElse(-1);\n        System.out.println(\"Max value in numbers: \" + max);\n\n        int min = numbers.stream().min(Integer::compare).orElse(-1);\n        System.out.println(\"Min value in numbers: \" + min);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object with the desired configuration\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Create a mock CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, null, format);\n\n        // Read the value using the isConsistent method\n        /* read */ boolean isConsistent = record.isConsistent();\n\n        // Print the result\n        System.out.println(\"Is the CSV record consistent? \" + isConsistent);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}