{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with default format\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n        \n        // Create a dummy CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = CSVRecord.parse(values, format);\n        \n        // Additional unrelated code to make the program more complex\n        List<String> stringList = new ArrayList<>();\n        for (int i = 0; i < values.length; i++) {\n            stringList.add(values[i]);\n        }\n        \n        // Perform some operations on the list\n        for (String str : stringList) {\n            System.out.println(\"Processing: \" + str);\n        }\n        \n        // More complex operations\n        int sum = 0;\n        for (int i = 0; i < stringList.size(); i++) {\n            sum += stringList.get(i).length();\n        }\n        System.out.println(\"Total length of all strings: \" + sum);\n        \n        // Use the read method to check if a value is set\n        /* read */ boolean isSet = record.isSet(0);\n        \n        // Print the result\n        System.out.println(\"Is value set at index 0: \" + isSet);\n        \n        // Further operations\n        List<Integer> integerList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            integerList.add(i * 10);\n        }\n        \n        for (Integer num : integerList) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with default format\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n        \n        // Create a dummy CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord record = CSVRecord.parse(values, format);\n        \n        // Use the read method to check if a value is set\n        /* read */ boolean isSet = record.isSet(0);\n        \n        // Print the result\n        System.out.println(\"Is value set at index 0: \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}