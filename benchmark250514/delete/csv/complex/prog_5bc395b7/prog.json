{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a comment marker\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        // Simulating the writing process\n        /* write */ format = format.withCommentMarker('#');\n\n        // Create a mock CSVRecord with a comment using the format\n        CSVRecord record = new CSVRecord(null, null, format);\n\n        // Additional unrelated complex code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        for (Integer num : numbers) {\n            map.put(\"Number: \" + num, num);\n        }\n\n        for (String key : map.keySet()) {\n            System.out.println(key + \" -> \" + map.get(key));\n        }\n\n        // More complex operations\n        int sum = 0;\n        for (Integer num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Simulating the reading process\n        /* read */ String comment = record.getComment();\n        \n        // Output the comment to verify the read value\n        System.out.println(\"Comment from CSVRecord: \" + comment);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a comment marker\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        // Simulating the writing process\n        /* write */ format = format.withCommentMarker('#');\n\n        // Create a mock CSVRecord with a comment using the format\n        CSVRecord record = new CSVRecord(null, null, format);\n\n        // Simulating the reading process\n        /* read */ String comment = record.getComment();\n        \n        // Output the comment to verify the read value\n        System.out.println(comment);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}