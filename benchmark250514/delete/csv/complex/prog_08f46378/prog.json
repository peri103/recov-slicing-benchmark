{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a specific configuration\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Simulate a CSVRecord with some data\n        Map<String, String> data = new HashMap<>();\n        data.put(\"Header\", \"Value\");\n        CSVRecord csvRecord = new CSVRecord(data, null, null, 0, null);\n\n        // Additional unrelated code to increase complexity\n        List<String> headers = new ArrayList<>();\n        headers.add(\"Header\");\n        headers.add(\"AnotherHeader\");\n\n        Map<String, Integer> headerIndexMap = new HashMap<>();\n        for (int i = 0; i < headers.size(); i++) {\n            headerIndexMap.put(headers.get(i).toLowerCase(), i);\n        }\n\n        // Perform some operations on the header index map\n        if (headerIndexMap.containsKey(\"header\")) {\n            int index = headerIndexMap.get(\"header\");\n            System.out.println(\"Index of 'header': \" + index);\n        }\n\n        // Another CSVFormat configuration example\n        CSVFormat anotherCsvFormat = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces();\n        System.out.println(\"Another CSVFormat configuration: \" + anotherCsvFormat);\n\n        // Check if a header is mapped, considering the CSVFormat configuration\n        /* read */ boolean isMapped = csvRecord.isMapped(\"header\");\n        System.out.println(isMapped);\n\n        // Additional operations to increase complexity\n        for (String header : headers) {\n            System.out.println(\"Processing header: \" + header);\n        }\n\n        // Simulate some data processing\n        List<String> processedData = new ArrayList<>();\n        for (Map.Entry<String, String> entry : data.entrySet()) {\n            processedData.add(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        for (String processedDatum : processedData) {\n            System.out.println(\"Processed data: \" + processedDatum);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a specific configuration\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Simulate a CSVRecord with some data\n        Map<String, String> data = new HashMap<>();\n        data.put(\"Header\", \"Value\");\n        CSVRecord csvRecord = new CSVRecord(data, null, null, 0, null);\n\n        // Check if a header is mapped, considering the CSVFormat configuration\n        /* read */ boolean isMapped = csvRecord.isMapped(\"header\");\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}