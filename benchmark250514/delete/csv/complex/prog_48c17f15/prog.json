{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVFormat format = CSVFormat.DEFAULT;\n        ArrayList<String> dataList = new ArrayList<>();\n        HashMap<String, Integer> dataMap = new HashMap<>();\n\n        // Simulating a CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, null, null, 0, 0);\n\n        // Adding some data to the dataList\n        dataList.add(\"Data1\");\n        dataList.add(\"Data2\");\n        dataList.add(\"Data3\");\n\n        // Populating the dataMap\n        for (int i = 0; i < dataList.size(); i++) {\n            dataMap.put(dataList.get(i), i);\n        }\n\n        // Using CSVFormat API\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // More complex operations on dataMap\n        for (String key : dataMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + dataMap.get(key));\n        }\n\n        // Simulating some unrelated logic\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Checking the consistency of the record\n        /* read */ boolean isConsistent = record.isConsistent();\n        System.out.println(\"Record is consistent: \" + isConsistent);\n\n        // Additional logic to make the program more complex\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numberList.add(i * 10);\n        }\n\n        for (int number : numberList) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Simulating a CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, null, null, 0, 0);\n\n        /* read */ boolean isConsistent = record.isConsistent();\n        System.out.println(\"Record is consistent: \" + isConsistent);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}