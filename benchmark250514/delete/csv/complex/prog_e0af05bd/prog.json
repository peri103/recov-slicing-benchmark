{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a quote character\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withQuote('\"');\n\n        // Create a CSVRecord for demonstration\n        String[] data = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, data, null, 0, 0);\n\n        // Additional complex code\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Hello\");\n        list.add(\"World\");\n\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n\n        for (String str : list) {\n            map.put(str, str.length());\n        }\n\n        int sumOfLengths = 0;\n        for (int length : map.values()) {\n            sumOfLengths += length;\n        }\n\n        System.out.println(\"Sum of lengths: \" + sumOfLengths);\n\n        // Use the read method to convert the CSVRecord to a string\n        /* read */ String recordString = record.toString();\n        System.out.println(recordString);\n\n        // Further complex operations\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numberList.add(i * 2);\n        }\n\n        int product = 1;\n        for (int num : numberList) {\n            product *= num;\n        }\n\n        System.out.println(\"Product of numbers: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a quote character\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withQuote('\"');\n\n        // Create a CSVRecord for demonstration\n        String[] data = {\"value1\", \"value2\"};\n        CSVRecord record = new CSVRecord(null, data, null, 0, 0);\n\n        // Use the read method to convert the CSVRecord to a string\n        /* read */ String recordString = record.toString();\n        System.out.println(recordString);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withQuote",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}