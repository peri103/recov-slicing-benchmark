{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the CSVFormat object\n        /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n        \n        // Create a CSVRecord object for demonstration purposes\n        CSVRecord csvRecord = new CSVRecord(null, new String[]{\"value\"}, csvFormat);\n\n        // Additional complexity: Using a map to store some data\n        Map<String, List<Integer>> dataMap = new HashMap<>();\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        dataMap.put(\"numbers\", numbers);\n\n        // Process the data in the map\n        for (Map.Entry<String, List<Integer>> entry : dataMap.entrySet()) {\n            String key = entry.getKey();\n            List<Integer> values = entry.getValue();\n            System.out.println(\"Key: \" + key);\n            for (Integer num : values) {\n                System.out.println(\"Value: \" + num);\n            }\n        }\n\n        // Additional complexity: Using a list to store CSVRecords\n        List<CSVRecord> csvRecords = new ArrayList<>();\n        csvRecords.add(csvRecord);\n\n        // Use the read method to check if a certain column is set\n        /* read */ boolean isSet = csvRecord.isSet(0);\n\n        // Output the result\n        System.out.println(\"Is column set: \" + isSet);\n\n        // Further processing of CSVRecords\n        for (CSVRecord record : csvRecords) {\n            System.out.println(\"Record: \" + record);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the CSVFormat object\n        /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n\n        // Create a CSVRecord object for demonstration purposes\n        CSVRecord csvRecord = new CSVRecord(null, new String[]{\"value\"}, csvFormat);\n\n        // Use the read method to check if a certain column is set\n        /* read */ boolean isSet = csvRecord.isSet(0);\n\n        // Output the result\n        System.out.println(\"Is column set: \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}