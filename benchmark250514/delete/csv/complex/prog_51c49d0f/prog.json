{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create and configure CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a CSVRecord object for demonstration\n        String[] data = {\"value1\", null, \"value3\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(\"value1,NULL,value3\")).iterator().next();\n\n        // Additional code to increase complexity\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Item1\");\n        list.add(\"Item2\");\n        list.add(\"Item3\");\n\n        for (String item : list) {\n            System.out.println(\"Processing: \" + item);\n        }\n\n        // Perform some operations on the CSVRecord\n        int indexToCheck = 1;\n        boolean isValueNull = record.get(indexToCheck) == null;\n        System.out.println(\"Is value at index \" + indexToCheck + \" null? \" + isValueNull);\n\n        // More unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 integers: \" + sum);\n\n        // Check if a specific position in the record is set\n        /* read */ boolean isSet = record.isSet(1); // This should check if the second value is set\n\n        // Output the result\n        System.out.println(\"Is the second value set? \" + isSet);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object and configure it\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a CSVRecord object for demonstration\n        String[] data = {\"value1\", null, \"value3\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(\"value1,NULL,value3\")).iterator().next();\n\n        // Check if a specific position in the record is set\n        /* read */ boolean isSet = record.isSet(1); // This should check if the second value is set\n\n        // Output the result\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}