{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Create a mock CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = CSVRecord.parse(format, values);\n\n        // Additional complex operations\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n\n        // Perform some operations on the map\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // More complex logic involving the map\n        if (map.containsKey(\"key1\")) {\n            System.out.println(\"Map contains key1\");\n        }\n\n        // Use the read method to check if a specific position is set\n        /* read */ boolean isSet = record.isSet(0);\n\n        // Output the result\n        System.out.println(\"Is the first position set? \" + isSet);\n\n        // Further operations with the CSVRecord\n        for (int i = 0; i < record.size(); i++) {\n            System.out.println(\"CSVRecord value at index \" + i + \": \" + record.get(i));\n        }\n\n        // Additional logic involving another map\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"A\", \"Apple\");\n        stringMap.put(\"B\", \"Banana\");\n\n        for (String key : stringMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + stringMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Create a mock CSVRecord for demonstration purposes\n        String[] values = {\"value1\", \"value2\"};\n        CSVRecord record = CSVRecord.parse(format, values);\n\n        // Use the read method to check if a specific position is set\n        /* read */ boolean isSet = record.isSet(0);\n\n        // Output the result\n        System.out.println(\"Is the first position set? \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}