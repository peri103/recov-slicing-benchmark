{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Create a list to hold CSVRecords\n        List<CSVRecord> records = new ArrayList<>();\n\n        // Simulate adding records to the list\n        for (int i = 0; i < 5; i++) {\n            List<String> recordData = Arrays.asList(\"value\" + i, \"value\" + (i + 1), \"value\" + (i + 2));\n            CSVRecord record = new CSVRecord(null, recordData.toArray(new String[0]), null, null, null, null);\n            records.add(record);\n        }\n\n        // Use the write method\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Iterate over the records and check consistency\n        for (CSVRecord record : records) {\n            // Use the read method\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the CSV record consistent? \" + isConsistent);\n        }\n\n        // Perform more unrelated operations\n        StringBuilder sb = new StringBuilder();\n        for (char c = 'a'; c <= 'z'; c++) {\n            sb.append(c);\n        }\n        System.out.println(\"Alphabet: \" + sb.toString());\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Create a mock CSVRecord for demonstration\n        List<String> recordData = Arrays.asList(\"value1\", \"value2\", \"value3\");\n        CSVRecord record = new CSVRecord(null, recordData.toArray(new String[0]), null, null, null, null);\n\n        // Use the read method\n        /* read */ boolean isConsistent = record.isConsistent();\n        \n        // Print the result\n        System.out.println(\"Is the CSV record consistent? \" + isConsistent);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}