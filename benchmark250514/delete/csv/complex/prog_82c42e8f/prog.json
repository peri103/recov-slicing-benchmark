{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method withTrim() to modify the format\n        /* write */ format = format.withTrim();\n\n        // Simulate a CSVRecord object for reading\n        CSVRecord record = new CSVRecord(null, null, null, format);\n\n        // Additional code to make the program more complex\n        ArrayList<String> dataList = new ArrayList<>();\n        dataList.add(\"John, Doe, 30\");\n        dataList.add(\"Jane, Smith, 25\");\n        \n        // Process each data entry\n        for (String data : dataList) {\n            String[] splitData = data.split(\",\");\n            System.out.println(\"Name: \" + splitData[0].trim() + \" \" + splitData[1].trim() + \", Age: \" + splitData[2].trim());\n        }\n\n        // More operations using the CSVRecord\n        boolean isRecordValid = true;\n        for (String field : record) {\n            if (field == null || field.isEmpty()) {\n                isRecordValid = false;\n                break;\n            }\n        }\n\n        // Use the read method isMapped() to check if the record is mapped\n        /* read */ boolean isMapped = record.isMapped();\n        \n        // Print the results\n        System.out.println(\"Is the record mapped? \" + isMapped);\n        System.out.println(\"Is the record valid? \" + isRecordValid);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method withTrim() to modify the format\n        /* write */ format = format.withTrim();\n\n        // Simulate a CSVRecord object for reading\n        CSVRecord record = new CSVRecord(null, null, null, format);\n\n        // Use the read method isMapped() to check if the record is mapped\n        /* read */ boolean isMapped = record.isMapped();\n        \n        // Print the result\n        System.out.println(\"Is the record mapped? \" + isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}