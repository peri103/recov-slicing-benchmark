{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat and apply the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT /* write */.withIgnoreHeaderCase();\n\n        // Create a sample CSVRecord using the format\n        String[] headers = {\"Name\", \"Age\", \"Location\"};\n        String[] values = {\"John\", \"30\", \"USA\"};\n        CSVRecord record = new CSVRecord(null, values, headers, 0, 0);\n\n        // Unrelated code to increase complexity\n        Map<String, Integer> ageMap = new HashMap<>();\n        ageMap.put(\"John\", 30);\n        ageMap.put(\"Jane\", 25);\n\n        int sumOfAges = 0;\n        for (Integer age : ageMap.values()) {\n            sumOfAges += age;\n        }\n        System.out.println(\"Sum of ages: \" + sumOfAges);\n\n        // Additional unrelated code\n        int[] numberArray = {1, 2, 3, 4, 5};\n        int product = 1;\n        for (int number : numberArray) {\n            product *= number;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n\n        // Use the read method to check if a header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n\n        // Output the result\n        System.out.println(\"Is 'name' header mapped: \" + isMapped);\n\n        // More unrelated code\n        String[] fruits = {\"Apple\", \"Banana\", \"Cherry\"};\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat and apply the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT /* write */.withIgnoreHeaderCase();\n\n        // Create a sample CSVRecord using the format\n        String[] headers = {\"Name\", \"Age\", \"Location\"};\n        String[] values = {\"John\", \"30\", \"USA\"};\n        CSVRecord record = new CSVRecord(null, values, headers, 0, 0);\n\n        // Use the read method to check if a header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n\n        // Output the result\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}