{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n\n        // Use write method\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Simulate CSVRecord object\n        CSVRecord csvRecord = new CSVRecord(null, null, csvFormat);\n\n        // Create a map to simulate additional data processing\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"someHeader\", 10);\n        dataMap.put(\"anotherHeader\", 20);\n\n        // Perform some complex operations on the map\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in dataMap: \" + sum);\n\n        // Further manipulations\n        int maxValue = Integer.MIN_VALUE;\n        for (Integer value : dataMap.values()) {\n            if (value > maxValue) {\n                maxValue = value;\n            }\n        }\n        System.out.println(\"Max value in dataMap: \" + maxValue);\n\n        // Use read method\n        /* read */ boolean isMapped = csvRecord.isMapped(\"someHeader\");\n\n        // Output the result\n        System.out.println(\"Is 'someHeader' mapped: \" + isMapped);\n\n        // Additional unrelated logic\n        int threshold = 15;\n        for (String key : dataMap.keySet()) {\n            if (dataMap.get(key) > threshold) {\n                System.out.println(key + \" has a value greater than \" + threshold);\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n\n        // Use write method\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Simulate CSVRecord object\n        CSVRecord csvRecord = new CSVRecord(null, null, csvFormat);\n\n        // Use read method\n        /* read */ boolean isMapped = csvRecord.isMapped(\"someHeader\");\n\n        // Output the result\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}