{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with trimming enabled\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withTrim();\n        \n        // Demonstrate using a HashMap for unrelated operations\n        Map<String, Integer> ageMap = new HashMap<>();\n        ageMap.put(\"John\", 30);\n        ageMap.put(\"Alice\", 25);\n        \n        // Print all ages from the map\n        for (String name : ageMap.keySet()) {\n            System.out.println(name + \"'s age is \" + ageMap.get(name));\n        }\n        \n        // Create a CSVRecord for demonstration\n        String[] headers = {\"Name\", \"Age\", \"Country\"};\n        String[] values = {\"John\", \"30\", \"USA\"};\n        CSVRecord record = new CSVRecord(null, values, headers, null, null, 0, 0, 0);\n\n        // Perform some unrelated operations\n        int totalAge = 0;\n        for (Integer age : ageMap.values()) {\n            totalAge += age;\n        }\n        System.out.println(\"Total age is: \" + totalAge);\n\n        // Check if a field is mapped\n        /* read */ boolean isMapped = record.isMapped(\"Name\");\n        System.out.println(\"Is 'Name' mapped: \" + isMapped);\n\n        // More unrelated operations with CSVRecord\n        String name = record.get(\"Name\");\n        String country = record.get(\"Country\");\n        System.out.println(\"Name: \" + name + \", Country: \" + country);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with trimming enabled\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withTrim();\n        \n        // Create a CSVRecord for demonstration\n        String[] headers = {\"Name\", \"Age\", \"Country\"};\n        String[] values = {\"John\", \"30\", \"USA\"};\n        CSVRecord record = new CSVRecord(null, values, headers, null, null, 0, 0, 0);\n\n        // Check if a field is mapped\n        /* read */ boolean isMapped = record.isMapped(\"Name\");\n        System.out.println(\"Is 'Name' mapped: \" + isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}