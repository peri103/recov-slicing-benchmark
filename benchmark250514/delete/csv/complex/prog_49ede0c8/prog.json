{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreHeaderCase(true);\n\n        // Create a dummy CSVRecord to demonstrate usage\n        CSVRecord record1 = new CSVRecord(null, Arrays.asList(\"Header1\", \"Header2\"), null, format);\n        CSVRecord record2 = new CSVRecord(null, Arrays.asList(\"HeaderA\", \"HeaderB\"), null, format);\n\n        // Additional code to manipulate CSVRecord\n        List<String> headers = Arrays.asList(\"Header1\", \"Header2\", \"Header3\");\n        for (String header : headers) {\n            boolean mapped = record1.isMapped(header);\n            System.out.println(\"Record1 Header '\" + header + \"' mapped: \" + mapped);\n        }\n\n        // Complex operations involving CSVRecord\n        List<CSVRecord> records = Arrays.asList(record1, record2);\n        for (CSVRecord rec : records) {\n            for (String header : headers) {\n                boolean mapped = rec.isMapped(header);\n                System.out.println(\"Record Header '\" + header + \"' mapped: \" + mapped);\n            }\n        }\n\n        // Use the read method on CSVRecord\n        /* read */ boolean isMapped = record1.isMapped(\"Header1\");\n\n        // Print the result\n        System.out.println(\"Final check if 'Header1' is mapped in record1: \" + isMapped);\n\n        // More complex logic involving CSVFormat\n        CSVFormat format2 = CSVFormat.DEFAULT.withIgnoreHeaderCase(false);\n        CSVRecord record3 = new CSVRecord(null, Arrays.asList(\"HeaderX\", \"HeaderY\"), null, format2);\n        boolean isMappedRecord3 = record3.isMapped(\"HeaderX\");\n        System.out.println(\"Record3 Header 'HeaderX' mapped: \" + isMappedRecord3);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreHeaderCase(true);\n        \n        // Create a dummy CSVRecord to demonstrate usage\n        CSVRecord record = new CSVRecord(null, Arrays.asList(\"Header1\", \"Header2\"), null, format);\n\n        // Use the read method on CSVRecord\n        /* read */ boolean isMapped = record.isMapped(\"Header1\");\n        \n        // Print the result\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}