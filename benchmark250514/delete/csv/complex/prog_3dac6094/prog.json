{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with allowDuplicateHeaderNames set to true\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowDuplicateHeaderNames(true);\n\n        // Create a CSVRecord for demonstration purposes\n        String[] headers = {\"name\", \"age\", \"name\"};\n        String[] values = {\"Alice\", \"30\", \"Bob\"};\n        CSVRecord record = CSVRecord.parse(headers, values);\n\n        // Create a map to simulate complex operations\n        Map<String, Integer> nameCount = new HashMap<>();\n        for (String header : headers) {\n            nameCount.put(header, nameCount.getOrDefault(header, 0) + 1);\n        }\n\n        // Perform some unrelated complex operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i * i;\n        }\n        System.out.println(\"Sum of squares: \" + sum);\n\n        // Check if a specific header is set in the record\n        /* read */ boolean isSet = record.isSet(\"name\");\n        System.out.println(\"Is 'name' header set: \" + isSet);\n\n        // Further operations using the map\n        for (Map.Entry<String, Integer> entry : nameCount.entrySet()) {\n            System.out.println(\"Header: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n\n        // Additional complex logic\n        int factorial = 1;\n        for (int i = 1; i <= 5; i++) {\n            factorial *= i;\n        }\n        System.out.println(\"Factorial of 5: \" + factorial);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with allowDuplicateHeaderNames set to true\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowDuplicateHeaderNames(true);\n\n        // Create a CSVRecord for demonstration purposes\n        String[] headers = {\"name\", \"age\", \"name\"};\n        String[] values = {\"Alice\", \"30\", \"Bob\"};\n        CSVRecord record = CSVRecord.parse(headers, values);\n\n        // Check if a specific header is set in the record\n        /* read */ boolean isSet = record.isSet(\"name\");\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowDuplicateHeaderNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}