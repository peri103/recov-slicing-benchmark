{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with default settings\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withTrim();\n        \n        // Create a list to store CSVRecords\n        ArrayList<CSVRecord> records = new ArrayList<>();\n        \n        // Create a mock CSVRecord for demonstration purposes\n        CSVRecord record1 = new CSVRecord(null, null, null, null, format);\n        CSVRecord record2 = new CSVRecord(null, null, null, null, format);\n        \n        // Add records to the list\n        records.add(record1);\n        records.add(record2);\n        \n        // Perform operations on the list of records\n        for (CSVRecord rec : records) {\n            // Hypothetical operation\n            boolean containsHeader = rec.isMapped(\"anotherHeader\");\n            System.out.println(\"Contains anotherHeader: \" + containsHeader);\n        }\n        \n        // Initialize another CSVFormat for demonstration\n        CSVFormat anotherFormat = CSVFormat.DEFAULT.withIgnoreEmptyLines();\n        \n        // Create another mock CSVRecord with different format\n        CSVRecord record3 = new CSVRecord(null, null, null, null, anotherFormat);\n        \n        // Add the new record to the list\n        records.add(record3);\n        \n        // Perform additional operations on the records\n        for (CSVRecord rec : records) {\n            // Hypothetical operation\n            boolean containsHeader = rec.isMapped(\"yetAnotherHeader\");\n            System.out.println(\"Contains yetAnotherHeader: \" + containsHeader);\n        }\n        \n        // Use the read method to check if a record is mapped\n        /* read */ boolean isMapped = record1.isMapped(\"header\");\n        \n        // Output the result\n        System.out.println(isMapped);\n        \n        // Additional unrelated code to increase complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        \n        System.out.println(\"Sum of numbers: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with default settings\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withTrim();\n        \n        // Create a mock CSVRecord for demonstration purposes\n        CSVRecord record = new CSVRecord(null, null, null, null, format);\n        \n        // Use the read method to check if a record is mapped\n        /* read */ boolean isMapped = record.isMapped(\"header\");\n        \n        // Output the result\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}