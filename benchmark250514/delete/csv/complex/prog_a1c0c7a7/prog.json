{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Write operation: Configure the format to allow missing column names\n        /* write */ format = format.withAllowMissingColumnNames();\n\n        // Create a HashMap to simulate storing CSV records\n        Map<Integer, CSVRecord> recordMap = new HashMap<>();\n\n        // Simulate multiple CSV records\n        List<String> data1 = Arrays.asList(\"data1\", \"data2\", \"data3\");\n        List<String> data2 = Arrays.asList(\"dataA\", \"dataB\", \"dataC\");\n        CSVRecord record1 = new CSVRecord(data1, null, format, 0, 0);\n        CSVRecord record2 = new CSVRecord(data2, null, format, 0, 1);\n\n        // Store records in the map\n        recordMap.put(0, record1);\n        recordMap.put(1, record2);\n\n        // Perform some unrelated operations\n        int totalColumns = 3;\n        System.out.println(\"Total columns expected: \" + totalColumns);\n        System.out.println(\"Records stored: \" + recordMap.size());\n\n        // Read operation: Check if a column is set in the first record\n        /* read */ boolean isSet = recordMap.get(0).isSet(1);\n\n        // Output the result\n        System.out.println(\"Is column 1 set in record 0? \" + isSet);\n\n        // Further unrelated operations\n        for (Map.Entry<Integer, CSVRecord> entry : recordMap.entrySet()) {\n            System.out.println(\"Record \" + entry.getKey() + \" data: \" + entry.getValue().toString());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Write operation: Configure the format to allow missing column names\n        /* write */ format = format.withAllowMissingColumnNames();\n\n        // Simulate a CSV record\n        List<String> data = Arrays.asList(\"data1\", \"data2\", \"data3\");\n        CSVRecord record = new CSVRecord(data, null, format, 0, 0);\n\n        // Read operation: Check if a column is set\n        /* read */ boolean isSet = record.isSet(1);\n        \n        // Output the result\n        System.out.println(\"Is column 1 set? \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}