{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object and configure it\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Create a mock CSVRecord to demonstrate the read method\n        List<String> recordValues = new ArrayList<>();\n        recordValues.add(\"value1\");\n        recordValues.add(\"value2\");\n\n        // Create a CSVRecord using the CSVFormat (mocked)\n        CSVRecord csvRecord = new CSVRecord(recordValues, null, 0, 0);\n\n        // Additional unrelated code to make the program more complex\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        map.put(\"key3\", 300);\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // More operations on the CSVRecord\n        boolean headerExists = csvRecord.isMapped(\"header2\");\n        System.out.println(\"Header exists: \" + headerExists);\n\n        // Check if a specific header is mapped\n        /* read */ boolean isMapped = csvRecord.isMapped(\"header1\");\n        System.out.println(isMapped);\n\n        // Further unrelated code\n        int sum = 0;\n        for (int value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat object and configure it\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Create a mock CSVRecord to demonstrate the read method\n        List<String> recordValues = new ArrayList<>();\n        recordValues.add(\"value1\");\n        recordValues.add(\"value2\");\n\n        // Create a CSVRecord using the CSVFormat (mocked)\n        CSVRecord csvRecord = new CSVRecord(recordValues, null, 0, 0);\n\n        // Check if a specific header is mapped\n        /* read */ boolean isMapped = csvRecord.isMapped(\"header1\");\n        System.out.println(isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}