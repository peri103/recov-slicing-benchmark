{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a default format\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use write method to set a delimiter\n        /* write */ format = format.withDelimiter(';');\n        \n        // Create a mock CSVRecord for demonstration since we cannot read from actual CSV\n        List<CSVRecord> records = new ArrayList<>();\n        CSVRecord record1 = new CSVRecord(format, new String[] {\"value1\", \"value2\"}, 1, 0);\n        CSVRecord record2 = new CSVRecord(format, new String[] {\"value3\", \"value4\"}, 2, 0);\n        records.add(record1);\n        records.add(record2);\n        \n        // Additional complex logic using unrelated code\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * i);\n        }\n        \n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of squares: \" + sum);\n        \n        // More complex logic with CSVRecord\n        for (CSVRecord rec : records) {\n            System.out.println(\"Record: \" + rec.toString());\n        }\n        \n        // Use read method to get the string representation of the first record\n        /* read */ String recordString = record1.toString();\n        \n        // Print the result\n        System.out.println(\"First Record String: \" + recordString);\n        \n        // Further processing with the CSV records\n        for (CSVRecord rec : records) {\n            for (String value : rec) {\n                System.out.println(\"Value: \" + value);\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a default format\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use write method to set a delimiter\n        /* write */ format = format.withDelimiter(';');\n        \n        // Create a mock CSVRecord for demonstration since we cannot read from actual CSV\n        CSVRecord record = new CSVRecord(format, new String[] {\"value1\", \"value2\"}, 1, 0);\n        \n        // Use read method to get the string representation of the record\n        /* read */ String recordString = record.toString();\n        \n        // Print the result\n        System.out.println(recordString);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}