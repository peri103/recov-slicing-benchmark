{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Create a map to store some dummy data\n        Map<String, String> dataMap = new HashMap<>();\n        dataMap.put(\"key1\", \"value1\");\n        dataMap.put(\"key2\", \"value2\");\n\n        // Simulate processing the map and converting it into CSVRecord format\n        List<String> values = new ArrayList<>();\n        for (Map.Entry<String, String> entry : dataMap.entrySet()) {\n            values.add(entry.getValue());\n        }\n\n        // Create a CSVRecord using the values list and the CSVFormat\n        CSVRecord record = new CSVRecord(values, format);\n\n        // Add some additional logic to manipulate the data\n        List<String> additionalValues = new ArrayList<>();\n        additionalValues.add(\"extra1\");\n        additionalValues.add(\"extra2\");\n        values.addAll(additionalValues);\n\n        // More complex data processing\n        Map<String, Integer> countMap = new HashMap<>();\n        for (String value : values) {\n            countMap.put(value, countMap.getOrDefault(value, 0) + 1);\n        }\n\n        // Use read method to check if a column is set\n        /* read */ boolean isSet = record.isSet(\"value1\");\n\n        // Print the result of the read operation\n        System.out.println(isSet);\n\n        // Print the count of each value\n        for (Map.Entry<String, Integer> entry : countMap.entrySet()) {\n            System.out.println(\"Value: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Prepare a dummy CSVRecord for demonstration\n        List<String> values = new ArrayList<>();\n        values.add(\"value1\");\n        values.add(\"value2\");\n        CSVRecord record = new CSVRecord(values, format);\n\n        // Use read method to check if a column is set\n        /* read */ boolean isSet = record.isSet(\"value1\");\n        \n        // Print the result of the read operation\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}