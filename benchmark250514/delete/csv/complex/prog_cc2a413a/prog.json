{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with ignoring empty lines\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreEmptyLines(true);\n\n        // Create a mock CSVRecord to demonstrate isSet method\n        String[] data = {\"value1\", \"value2\"};\n        CSVRecord record = CSVRecord.parse(data, format);\n\n        // Create additional data structures to increase complexity\n        ArrayList<String> list = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n\n        // Populate the list and map with some data\n        list.add(\"element1\");\n        list.add(\"element2\");\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n\n        // Perform operations on the list and map\n        for (String item : list) {\n            System.out.println(\"List item: \" + item);\n        }\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n        }\n\n        // Perform a complex operation involving both data structures\n        for (String item : list) {\n            if (map.containsKey(item)) {\n                System.out.println(\"Found matching key in map: \" + item);\n            }\n        }\n\n        // Check if a specific index is set in the CSVRecord\n        /* read */ boolean isSet = record.isSet(0);\n        System.out.println(\"Is index 0 set in CSVRecord: \" + isSet);\n\n        // Additional operations to further increase complexity\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < 5; i++) {\n            sb.append(\"Iteration \").append(i).append(\"; \");\n        }\n        System.out.println(sb.toString());\n\n        // Final complex operation with all data structures\n        if (isSet && list.size() > 1) {\n            System.out.println(\"Complex condition met, performing final operation.\");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with ignoring empty lines\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreEmptyLines(true);\n\n        // Create a mock CSVRecord to demonstrate isSet method\n        String[] data = {\"value1\", \"value2\"};\n        CSVRecord record = CSVRecord.parse(data, format);\n\n        // Check if a specific index is set in the CSVRecord\n        /* read */ boolean isSet = record.isSet(0);\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}