{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object with a null string value\n        CSVFormat format = CSVFormat.DEFAULT;\n        CSVFormat anotherFormat = CSVFormat.DEFAULT;\n\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a mock CSVRecord for testing\n        String[] recordData = {\"value1\", \"NULL\", \"value3\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(String.join(\",\", recordData))).getRecords().get(0);\n\n        // Add unrelated code for complexity\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"example1\");\n        list.add(\"example2\");\n        list.add(\"example3\");\n\n        HashMap<Integer, String> map = new HashMap<>();\n        for (int i = 0; i < list.size(); i++) {\n            map.put(i, list.get(i));\n        }\n\n        for (int key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        anotherFormat = anotherFormat.withQuote('\"').withDelimiter(';');\n        System.out.println(\"Another format initialized with custom delimiter and quote.\");\n\n        // Check if a specific column is set\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(isSet);\n\n        // Add more unrelated code for complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n\n        System.out.println(\"Program completed.\");\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object with a null string value\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a mock CSVRecord for testing\n        String[] recordData = {\"value1\", \"NULL\", \"value3\"};\n        CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(String.join(\",\", recordData))).getRecords().get(0);\n\n        // Check if a specific column is set\n        /* read */ boolean isSet = record.isSet(1);\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}