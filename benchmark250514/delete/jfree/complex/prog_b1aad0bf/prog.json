{
    "java_code": "import org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.TickUnit;\nimport org.jfree.chart.axis.ValueAxis;\nimport org.jfree.chart.axis.CategoryAxis;\nimport org.jfree.chart.axis.CategoryLabelPositions;\n\npublic class Main {\n    public static void main(String[] args) {\n        ValueAxis axis = new NumberAxis();\n        TickUnit tickUnit = new TickUnit(1.0);\n        \n        CategoryAxis categoryAxis = new CategoryAxis();\n        categoryAxis.setCategoryLabelPositions(CategoryLabelPositions.STANDARD);\n        \n        // Unrelated complex operations\n        double[] dataPoints = {1.0, 2.0, 3.0, 4.0, 5.0};\n        double total = 0.0;\n        for (double point : dataPoints) {\n            total += point;\n        }\n        double average = total / dataPoints.length;\n        System.out.println(\"Average of data points: \" + average);\n\n        /* write */ axis.setTickUnit(tickUnit);\n        \n        // More operations involving axis\n        axis.setRange(0.0, 10.0);\n        axis.setAutoRange(true);\n        \n        // Unrelated complex operations\n        for (double point : dataPoints) {\n            if (point > average) {\n                System.out.println(\"Point \" + point + \" is above average.\");\n            } else {\n                System.out.println(\"Point \" + point + \" is below average.\");\n            }\n        }\n        \n        /* read */ TickUnit readTickUnit = axis.getTickUnit();\n        \n        // Print the tick unit size\n        System.out.println(\"Tick Unit: \" + readTickUnit.getSize());\n        \n        // Further operations on categoryAxis\n        categoryAxis.setCategoryMargin(0.2);\n        System.out.println(\"Category Axis Margin: \" + categoryAxis.getCategoryMargin());\n    }\n}",
    "java_code_simple": "import org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.TickUnit;\nimport org.jfree.chart.axis.ValueAxis;\n\npublic class Main {\n    public static void main(String[] args) {\n        ValueAxis axis = new NumberAxis();\n        TickUnit tickUnit = new TickUnit(1.0);\n        \n        /* write */ axis.setTickUnit(tickUnit);\n        /* read */ TickUnit readTickUnit = axis.getTickUnit();\n        \n        System.out.println(\"Tick Unit: \" + readTickUnit.getSize());\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.axis.ValueAxis",
        "write_method": "setTickUnit",
        "read_class": "org.jfree.chart.axis.ValueAxis",
        "read_method": "getTickUnit"
    }
}