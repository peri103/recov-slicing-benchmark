{
    "java_code": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        \n        // Initialize series index and visibility\n        int seriesIndex = 0;\n        boolean visibility = true;\n        \n        /* write */ renderer.setSeriesShapesVisible(seriesIndex, visibility);\n        \n        // Perform some unrelated calculations\n        Random random = new Random();\n        int[] randomNumbers = new int[10];\n        for (int i = 0; i < randomNumbers.length; i++) {\n            randomNumbers[i] = random.nextInt(100);\n        }\n        \n        int sum = 0;\n        for (int num : randomNumbers) {\n            sum += num;\n        }\n        \n        double average = sum / (double) randomNumbers.length;\n        System.out.println(\"Average of random numbers: \" + average);\n        \n        // Use another instance of XYStepAreaRenderer for additional operations\n        XYStepAreaRenderer anotherRenderer = new XYStepAreaRenderer();\n        anotherRenderer.setSeriesShapesVisible(1, false);\n        \n        Boolean anotherVisibility = anotherRenderer.getSeriesShapesVisible(1);\n        System.out.println(\"Another series shapes visible: \" + anotherVisibility);\n        \n        // More complex logic\n        int maxValue = Integer.MIN_VALUE;\n        for (int num : randomNumbers) {\n            if (num > maxValue) {\n                maxValue = num;\n            }\n        }\n        System.out.println(\"Maximum random number: \" + maxValue);\n        \n        /* read */ Boolean isVisible = renderer.getSeriesShapesVisible(seriesIndex);\n        \n        System.out.println(\"Series \" + seriesIndex + \" shapes visible: \" + isVisible);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        \n        // Initialize series index and visibility\n        int seriesIndex = 0;\n        boolean visibility = true;\n        \n        /* write */ renderer.setSeriesShapesVisible(seriesIndex, visibility);\n        \n        /* read */ Boolean isVisible = renderer.getSeriesShapesVisible(seriesIndex);\n        \n        System.out.println(\"Series \" + seriesIndex + \" shapes visible: \" + isVisible);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "write_method": "setSeriesShapesVisible",
        "read_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "read_method": "getSeriesShapesVisible"
    }
}