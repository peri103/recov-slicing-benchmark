{
    "java_code": "import org.jfree.chart.plot.WaferMapPlot;\nimport org.jfree.chart.renderer.PaintScale;\nimport org.jfree.chart.renderer.GrayPaintScale;\nimport java.awt.Color;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        WaferMapPlot plot = new WaferMapPlot();\n        PaintScale paintScale = new PaintScale() {\n            @Override\n            public double getLowerBound() {\n                return 0.0;\n            }\n\n            @Override\n            public double getUpperBound() {\n                return 1.0;\n            }\n\n            @Override\n            public Color getPaint(double value) {\n                return Color.RED;\n            }\n        };\n\n        /* write */ plot.setPaintScale(paintScale);\n\n        // Additional code for complexity\n        ArrayList<Color> colorList = new ArrayList<>();\n        colorList.add(Color.RED);\n        colorList.add(Color.GREEN);\n        colorList.add(Color.BLUE);\n\n        GrayPaintScale grayScale = new GrayPaintScale(0.0, 1.0);\n        for (int i = 0; i < colorList.size(); i++) {\n            Color color = colorList.get(i);\n            double value = grayScale.getLowerBound() + i * (grayScale.getUpperBound() - grayScale.getLowerBound()) / colorList.size();\n            System.out.println(\"Color: \" + color + \", Value: \" + value);\n        }\n\n        // Some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        /* read */ PaintScale retrievedPaintScale = plot.getPaintScale();\n\n        if (retrievedPaintScale != null) {\n            System.out.println(\"PaintScale set and retrieved successfully.\");\n        } else {\n            System.out.println(\"Failed to retrieve PaintScale.\");\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.WaferMapPlot;\nimport org.jfree.chart.renderer.PaintScale;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        WaferMapPlot plot = new WaferMapPlot();\n        PaintScale paintScale = new PaintScale() {\n            @Override\n            public double getLowerBound() {\n                return 0.0;\n            }\n\n            @Override\n            public double getUpperBound() {\n                return 1.0;\n            }\n\n            @Override\n            public Color getPaint(double value) {\n                return Color.RED;\n            }\n        };\n        \n        /* write */ plot.setPaintScale(paintScale);\n        /* read */ PaintScale retrievedPaintScale = plot.getPaintScale();\n\n        if (retrievedPaintScale != null) {\n            System.out.println(\"PaintScale set and retrieved successfully.\");\n        } else {\n            System.out.println(\"Failed to retrieve PaintScale.\");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.WaferMapPlot",
        "write_method": "setPaintScale",
        "read_class": "org.jfree.chart.plot.WaferMapPlot",
        "read_method": "getPaintScale"
    }
}