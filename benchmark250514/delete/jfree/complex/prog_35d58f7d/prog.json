{
    "java_code": "import org.jfree.chart.renderer.xy.XYItemRenderer;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.JFreeChart;\nimport org.jfree.chart.ChartFactory;\nimport org.jfree.data.xy.XYSeriesCollection;\nimport org.jfree.data.xy.XYSeries;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the renderer\n        XYItemRenderer renderer = new XYLineAndShapeRenderer();\n\n        // Additional code to make the program more complex\n        XYSeries series = new XYSeries(\"Series 1\");\n        for (int i = 0; i < 10; i++) {\n            series.add(i, Math.random() * 100);\n        }\n\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n\n        NumberAxis xAxis = new NumberAxis(\"X\");\n        NumberAxis yAxis = new NumberAxis(\"Y\");\n\n        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);\n        JFreeChart chart = new JFreeChart(\"XY Chart\", JFreeChart.DEFAULT_TITLE_FONT, plot, true);\n\n        // Write operation: Set base shapes visible to true\n        /* write */ renderer.setBaseShapesVisible(true);\n\n        // More unrelated code\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Processing data point: \" + i);\n        }\n\n        // Another unrelated operation\n        boolean anotherFlag = false;\n        for (int i = 0; i < 3; i++) {\n            anotherFlag = !anotherFlag;\n            System.out.println(\"Another flag toggled: \" + anotherFlag);\n        }\n\n        // Read operation: Get the value of base shapes visible\n        /* read */ boolean isBaseShapesVisible = renderer.getBaseShapesVisible();\n\n        // Output the result\n        System.out.println(\"Base shapes visible: \" + isBaseShapesVisible);\n\n        // Additional operations\n        for (int i = 0; i < dataset.getSeriesCount(); i++) {\n            System.out.println(\"Series \" + i + \" has \" + dataset.getItemCount(i) + \" items.\");\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYItemRenderer;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the renderer\n        XYItemRenderer renderer = new XYLineAndShapeRenderer();\n\n        // Write operation: Set base shapes visible to true\n        /* write */ renderer.setBaseShapesVisible(true);\n\n        // Read operation: Get the value of base shapes visible\n        /* read */ boolean isBaseShapesVisible = renderer.getBaseShapesVisible();\n\n        // Output the result\n        System.out.println(\"Base shapes visible: \" + isBaseShapesVisible);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYItemRenderer",
        "write_method": "setBaseShapesVisible",
        "read_class": "org.jfree.chart.renderer.xy.XYItemRenderer",
        "read_method": "getBaseShapesVisible"
    }
}