{
    "java_code": "import org.jfree.chart.LegendItem;\nimport java.awt.Shape;\nimport java.awt.geom.Rectangle2D;\nimport java.awt.Color;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the LegendItem with a shape\n        Shape shape = new Rectangle2D.Double(0, 0, 10, 10);\n        LegendItem legendItem = new LegendItem(\"Sample Legend\", \"Description\", \"ToolTip\", \"URL\", shape, true, null, false, null, false, null, false, null);\n\n        // Additional complexity: Create another LegendItem and modify its properties\n        LegendItem anotherLegendItem = new LegendItem(\"Another Legend\", \"Another Description\", \"Another ToolTip\", \"Another URL\", shape, false, Color.RED, true, Color.BLUE, true, Color.GREEN, true, Color.YELLOW);\n        anotherLegendItem.setLabelPaint(Color.MAGENTA);\n        anotherLegendItem.setLineVisible(true);\n\n        // Additional complexity: Store LegendItems in a list\n        ArrayList<LegendItem> legendItems = new ArrayList<>();\n        legendItems.add(legendItem);\n        legendItems.add(anotherLegendItem);\n\n        // Perform some operations on the list\n        for (LegendItem item : legendItems) {\n            System.out.println(\"Legend: \" + item.getLabel());\n        }\n\n        /* write */ legendItem.setShapeVisible(true);\n\n        // More operations with the list\n        for (LegendItem item : legendItems) {\n            item.setShapeVisible(false); // Modify visibility for all items in the list\n        }\n\n        // Separate operations on anotherLegendItem\n        anotherLegendItem.setShapeVisible(true);\n        boolean anotherVisibility = anotherLegendItem.isShapeVisible();\n        System.out.println(\"Another Legend shape visibility: \" + anotherVisibility);\n\n        /* read */ boolean isVisible = legendItem.isShapeVisible();\n\n        System.out.println(\"Shape visibility: \" + isVisible);\n\n        // Additional complexity: Modify and read more properties\n        legendItem.setLabelPaint(Color.ORANGE);\n        Color labelColor = legendItem.getLabelPaint();\n        System.out.println(\"Legend label color: \" + labelColor);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.LegendItem;\nimport java.awt.Shape;\nimport java.awt.geom.Rectangle2D;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the LegendItem with a shape\n        Shape shape = new Rectangle2D.Double(0, 0, 10, 10);\n        LegendItem legendItem = new LegendItem(\"Sample Legend\", \"Description\", \"ToolTip\", \"URL\", shape, true, null, false, null, false, null, false, null);\n\n        /* write */ legendItem.setShapeVisible(true);\n        /* read */ boolean isVisible = legendItem.isShapeVisible();\n\n        System.out.println(\"Shape visibility: \" + isVisible);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.LegendItem",
        "write_method": "setShapeVisible",
        "read_class": "org.jfree.chart.LegendItem",
        "read_method": "isShapeVisible"
    }
}