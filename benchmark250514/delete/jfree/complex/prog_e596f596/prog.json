{
    "java_code": "import org.jfree.chart.plot.WaferMapPlot;\nimport org.jfree.chart.renderer.PaintScale;\nimport org.jfree.chart.renderer.GrayPaintScale;\nimport org.jfree.chart.renderer.LookupPaintScale;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a WaferMapPlot instance\n        WaferMapPlot waferMapPlot = new WaferMapPlot();\n\n        // Create a PaintScale instance\n        PaintScale paintScale = new GrayPaintScale();\n\n        // Initialize another PaintScale for demonstration\n        LookupPaintScale lookupPaintScale = new LookupPaintScale();\n\n        // Create a map for storing paint scales\n        HashMap<String, PaintScale> paintScaleMap = new HashMap<>();\n        paintScaleMap.put(\"gray\", paintScale);\n        paintScaleMap.put(\"lookup\", lookupPaintScale);\n\n        // Use the write method\n        /* write */ waferMapPlot.setPaintScale(paintScale);\n\n        // Perform some unrelated operations\n        PaintScale currentScale = paintScaleMap.get(\"gray\");\n        System.out.println(\"Current scale: \" + currentScale);\n\n        // Switch to another paint scale\n        waferMapPlot.setPaintScale(lookupPaintScale);\n\n        // Retrieve the paint scale from the map\n        PaintScale anotherScale = paintScaleMap.get(\"lookup\");\n        System.out.println(\"Another scale: \" + anotherScale);\n\n        // Use the read method\n        /* read */ PaintScale retrievedPaintScale = waferMapPlot.getPaintScale();\n\n        // Verify that the read method retrieves the value set by the write method\n        System.out.println(retrievedPaintScale == paintScale); // should print true\n\n        // Additional complexity: loop through the map and print scales\n        for (String key : paintScaleMap.keySet()) {\n            System.out.println(\"Scale for \" + key + \": \" + paintScaleMap.get(key));\n        }\n\n        // Further complexity: conditional logic\n        if (retrievedPaintScale.equals(paintScaleMap.get(\"gray\"))) {\n            System.out.println(\"Retrieved scale is gray.\");\n        } else {\n            System.out.println(\"Retrieved scale is not gray.\");\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.WaferMapPlot;\nimport org.jfree.chart.renderer.PaintScale;\nimport org.jfree.chart.renderer.GrayPaintScale;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a WaferMapPlot instance\n        WaferMapPlot waferMapPlot = new WaferMapPlot();\n\n        // Create a PaintScale instance\n        PaintScale paintScale = new GrayPaintScale();\n\n        // Use the write method\n        /* write */ waferMapPlot.setPaintScale(paintScale);\n\n        // Use the read method\n        /* read */ PaintScale retrievedPaintScale = waferMapPlot.getPaintScale();\n\n        // Verify that the read method retrieves the value set by the write method\n        System.out.println(retrievedPaintScale == paintScale); // should print true\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.WaferMapPlot",
        "write_method": "setPaintScale",
        "read_class": "org.jfree.chart.plot.WaferMapPlot",
        "read_method": "getPaintScale"
    }
}