{
    "java_code": "import org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        StandardPieSectionLabelGenerator generator = new StandardPieSectionLabelGenerator();\n        NumberFormat format = NumberFormat.getInstance();\n        /* write */ generator.setNumberFormat(format);\n\n        // Additional complex code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n            map.put(\"Key\" + i, i);\n        }\n\n        int sum = 0;\n        for (Integer num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 numbers: \" + product);\n\n        if (map.containsKey(\"Key5\")) {\n            System.out.println(\"Value for Key5: \" + map.get(\"Key5\"));\n        }\n\n        // More unrelated operations\n        for (int i = 0; i < numbers.size(); i++) {\n            numbers.set(i, numbers.get(i) + 1);\n        }\n\n        for (int i = 0; i < numbers.size(); i++) {\n            System.out.print(numbers.get(i) + \" \");\n        }\n        System.out.println();\n\n        // Original read operation\n        /* read */ NumberFormat readFormat = generator.getNumberFormat();\n        System.out.println(readFormat.equals(format)); // Should print true\n    }\n}",
    "java_code_simple": "import org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport java.text.NumberFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        StandardPieSectionLabelGenerator generator = new StandardPieSectionLabelGenerator();\n        NumberFormat format = NumberFormat.getInstance();\n        /* write */ generator.setNumberFormat(format);\n        /* read */ NumberFormat readFormat = generator.getNumberFormat();\n        System.out.println(readFormat.equals(format)); // Should print true\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "write_method": "setNumberFormat",
        "read_class": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "read_method": "getNumberFormat"
    }
}