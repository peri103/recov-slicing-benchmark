{
    "java_code": "import org.jfree.chart.plot.Crosshair;\nimport org.jfree.chart.labels.CrosshairLabelGenerator;\nimport org.jfree.chart.plot.Plot;\nimport org.jfree.chart.plot.ValueMarker;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        Crosshair crosshair = new Crosshair();\n        CrosshairLabelGenerator labelGenerator = new CrosshairLabelGenerator() {\n            @Override\n            public String generateLabel(Crosshair crosshair) {\n                return \"Sample Label\";\n            }\n        };\n        \n        /* write */ crosshair.setLabelGenerator(labelGenerator);\n\n        // Additional complex operations\n        ValueMarker marker = new ValueMarker(50.0);\n        marker.setPaint(Color.RED);\n        marker.setLabel(\"Threshold\");\n        \n        Plot plot = new Plot() {\n            @Override\n            public String getPlotType() {\n                return \"Custom Plot\";\n            }\n        };\n        \n        plot.addChangeListener(event -> {\n            System.out.println(\"Plot changed: \" + event.getType());\n        });\n        \n        double value = 45.0;\n        if (value > 40.0) {\n            System.out.println(\"Value exceeds 40.0\");\n        }\n        \n        // Simulate some calculations\n        double result = Math.pow(value, 2) + Math.sqrt(value);\n        System.out.println(\"Calculated result: \" + result);\n        \n        /* read */ CrosshairLabelGenerator readLabelGenerator = crosshair.getLabelGenerator();\n        \n        // Use the read label generator\n        System.out.println(readLabelGenerator.generateLabel(crosshair));\n        \n        // More complex operations\n        for (int i = 0; i < 3; i++) {\n            System.out.println(\"Iteration: \" + i);\n        }\n        \n        int[] numbers = {1, 2, 3, 4, 5};\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n        \n        System.out.println(\"End of program.\");\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.Crosshair;\nimport org.jfree.chart.labels.CrosshairLabelGenerator;\n\npublic class Main {\n    public static void main(String[] args) {\n        Crosshair crosshair = new Crosshair();\n        CrosshairLabelGenerator labelGenerator = new CrosshairLabelGenerator() {\n            @Override\n            public String generateLabel(Crosshair crosshair) {\n                return \"Sample Label\";\n            }\n        };\n        \n        /* write */ crosshair.setLabelGenerator(labelGenerator);\n        /* read */ CrosshairLabelGenerator readLabelGenerator = crosshair.getLabelGenerator();\n        \n        System.out.println(readLabelGenerator.generateLabel(crosshair));\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.Crosshair",
        "write_method": "setLabelGenerator",
        "read_class": "org.jfree.chart.plot.Crosshair",
        "read_method": "getLabelGenerator"
    }
}