{
    "java_code": "import org.jfree.chart.plot.CategoryPlot;\nimport org.jfree.chart.axis.ValueAxis;\nimport org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.CategoryAxis;\nimport org.jfree.chart.renderer.category.BarRenderer;\nimport org.jfree.chart.renderer.category.LineRenderer3D;\nimport org.jfree.chart.renderer.category.CategoryItemRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        CategoryPlot plot = new CategoryPlot();\n        ValueAxis rangeAxis = new NumberAxis(\"Range Axis\");\n        \n        // Create a CategoryAxis and set it to the plot\n        CategoryAxis domainAxis = new CategoryAxis(\"Domain Axis\");\n        plot.setDomainAxis(domainAxis);\n        \n        // Create a BarRenderer and set it to the plot\n        CategoryItemRenderer barRenderer = new BarRenderer();\n        plot.setRenderer(barRenderer);\n        \n        // Create a LineRenderer3D and set it to the plot\n        CategoryItemRenderer lineRenderer = new LineRenderer3D();\n        plot.setRenderer(lineRenderer);\n        \n        /* write */ plot.setRangeAxis(rangeAxis);\n        \n        // Perform some operations on the plot\n        System.out.println(\"Domain Axis Label: \" + plot.getDomainAxis().getLabel());\n        System.out.println(\"Renderer Class Name: \" + plot.getRenderer().getClass().getName());\n        \n        // Change the range axis label\n        rangeAxis.setLabel(\"Updated Range Axis\");\n        \n        // Perform calculations or manipulations\n        double[] sampleData = {1.0, 2.5, 3.8, 4.0};\n        double sum = 0;\n        for (double data : sampleData) {\n            sum += data;\n        }\n        double average = sum / sampleData.length;\n        System.out.println(\"Average of sample data: \" + average);\n        \n        /* read */ ValueAxis retrievedAxis = plot.getRangeAxis();\n        \n        // Print the retrieved axis label\n        System.out.println(\"Retrieved Axis Label: \" + retrievedAxis.getLabel());\n        \n        // Additional operations\n        double maxValue = Double.MIN_VALUE;\n        for (double data : sampleData) {\n            if (data > maxValue) {\n                maxValue = data;\n            }\n        }\n        System.out.println(\"Max value in sample data: \" + maxValue);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.CategoryPlot;\nimport org.jfree.chart.axis.ValueAxis;\nimport org.jfree.chart.axis.NumberAxis;\n\npublic class Main {\n    public static void main(String[] args) {\n        CategoryPlot plot = new CategoryPlot();\n        ValueAxis rangeAxis = new NumberAxis(\"Range Axis\");\n        \n        /* write */ plot.setRangeAxis(rangeAxis);\n        /* read */ ValueAxis retrievedAxis = plot.getRangeAxis();\n        \n        System.out.println(retrievedAxis.getLabel());\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.CategoryPlot",
        "write_method": "setRangeAxis",
        "read_class": "org.jfree.chart.plot.CategoryPlot",
        "read_method": "getRangeAxis"
    }
}