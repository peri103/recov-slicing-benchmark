{
    "java_code": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.plot.CategoryPlot;\nimport org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.CategoryAxis;\nimport org.jfree.chart.renderer.category.BarRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        CategoryPlot categoryPlot = new CategoryPlot();\n        NumberAxis numberAxis = new NumberAxis();\n        CategoryAxis categoryAxis = new CategoryAxis();\n        BarRenderer barRenderer = new BarRenderer();\n        \n        // Configure CategoryPlot\n        categoryPlot.setDomainAxis(categoryAxis);\n        categoryPlot.setRangeAxis(numberAxis);\n        categoryPlot.setRenderer(barRenderer);\n        \n        // Set properties for PiePlot\n        piePlot.setCircular(true);\n        piePlot.setIgnoreNullValues(true);\n        \n        // Set properties for BarRenderer\n        barRenderer.setBaseOutlineStroke(new java.awt.BasicStroke(1.5f));\n        barRenderer.setDrawBarOutline(true);\n        \n        // Set properties for NumberAxis\n        numberAxis.setAutoRangeIncludesZero(false);\n        numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());\n        \n        // Set properties for CategoryAxis\n        categoryAxis.setCategoryMargin(0.2);\n        \n        /* write */ piePlot.setSectionOutlinesVisible(true);\n        \n        // Additional operations\n        boolean circular = piePlot.isCircular();\n        boolean ignoreNulls = piePlot.getIgnoreNullValues();\n        System.out.println(\"PiePlot is circular: \" + circular);\n        System.out.println(\"PiePlot ignores null values: \" + ignoreNulls);\n        \n        // More operations on CategoryPlot\n        categoryPlot.setDomainGridlinesVisible(true);\n        categoryPlot.setRangeGridlinesVisible(true);\n        \n        // Read the property set earlier\n        /* read */ boolean isVisible = piePlot.getSectionOutlinesVisible();\n        System.out.println(\"Section outlines visible: \" + isVisible);\n        \n        // Further operations\n        barRenderer.setItemMargin(0.1);\n        categoryPlot.setBackgroundPaint(java.awt.Color.LIGHT_GRAY);\n        \n        // Print some final values\n        System.out.println(\"BarRenderer item margin: \" + barRenderer.getItemMargin());\n        System.out.println(\"CategoryPlot background paint: \" + categoryPlot.getBackgroundPaint());\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        /* write */ piePlot.setSectionOutlinesVisible(true);\n        /* read */ boolean isVisible = piePlot.getSectionOutlinesVisible();\n        System.out.println(isVisible);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setSectionOutlinesVisible",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getSectionOutlinesVisible"
    }
}