{
    "java_code": "import org.jfree.chart.labels.StandardXYToolTipGenerator;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StandardXYToolTipGenerator and NumberFormat\n        StandardXYToolTipGenerator generator = new StandardXYToolTipGenerator();\n        NumberFormat format = NumberFormat.getInstance();\n\n        // Unrelated complex code: Working with collections\n        ArrayList<String> stringList = new ArrayList<>();\n        HashMap<String, Integer> stringIntegerMap = new HashMap<>();\n\n        stringList.add(\"One\");\n        stringList.add(\"Two\");\n        stringList.add(\"Three\");\n\n        for (String s : stringList) {\n            stringIntegerMap.put(s, s.length());\n        }\n\n        for (String key : stringIntegerMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + stringIntegerMap.get(key));\n        }\n\n        // More unrelated complex code: Arithmetic operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n\n        // Write operation\n        /* write */ generator.setNumberFormat(format);\n\n        // Additional complex logic\n        double[] values = {1.1, 2.2, 3.3, 4.4};\n        double total = 0;\n        for (double value : values) {\n            total += value;\n        }\n        System.out.println(\"Total of array values: \" + total);\n\n        // Read operation\n        /* read */ NumberFormat readFormat = generator.getNumberFormat();\n        \n        System.out.println(readFormat.equals(format)); // Should print 'true' if the readFormat is the same as the format set\n\n        // More unrelated complex code: String manipulations\n        StringBuilder sb = new StringBuilder();\n        for (String s : stringList) {\n            sb.append(s).append(\" \");\n        }\n        System.out.println(\"Concatenated String: \" + sb.toString().trim());\n    }\n}",
    "java_code_simple": "import org.jfree.chart.labels.StandardXYToolTipGenerator;\nimport java.text.NumberFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        StandardXYToolTipGenerator generator = new StandardXYToolTipGenerator();\n        NumberFormat format = NumberFormat.getInstance();\n        \n        /* write */ generator.setNumberFormat(format);\n        \n        /* read */ NumberFormat readFormat = generator.getNumberFormat();\n        \n        System.out.println(readFormat.equals(format)); // Should print 'true' if the readFormat is the same as the format set\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.labels.StandardXYToolTipGenerator",
        "write_method": "setNumberFormat",
        "read_class": "org.jfree.chart.labels.StandardXYToolTipGenerator",
        "read_method": "getNumberFormat"
    }
}