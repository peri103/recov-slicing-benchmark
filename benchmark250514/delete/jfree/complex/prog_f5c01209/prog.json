{
    "java_code": "import org.jfree.chart.labels.StandardXYToolTipGenerator;\nimport java.text.NumberFormat;\nimport java.text.DecimalFormat;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StandardXYToolTipGenerator object\n        StandardXYToolTipGenerator toolTipGenerator = new StandardXYToolTipGenerator();\n        \n        // Create a NumberFormat instance for formatting numbers\n        NumberFormat numberFormat = NumberFormat.getInstance();\n        \n        // Set the number format using the write method\n        /* write */ toolTipGenerator.setNumberFormat(numberFormat);\n        \n        // Create a list of DecimalFormat instances for different formatting scenarios\n        ArrayList<DecimalFormat> decimalFormats = new ArrayList<>();\n        decimalFormats.add(new DecimalFormat(\"#,###.##\"));\n        decimalFormats.add(new DecimalFormat(\"0.00\"));\n        decimalFormats.add(new DecimalFormat(\"###,###\"));\n        \n        // Apply each DecimalFormat to a new StandardXYToolTipGenerator and print the pattern\n        for (DecimalFormat format : decimalFormats) {\n            StandardXYToolTipGenerator tempGenerator = new StandardXYToolTipGenerator();\n            tempGenerator.setNumberFormat(format);\n            NumberFormat tempFormat = tempGenerator.getNumberFormat();\n            System.out.println(((DecimalFormat) tempFormat).toPattern());\n        }\n        \n        // Perform some unrelated calculations and store results in a list\n        ArrayList<Integer> calculations = new ArrayList<>();\n        for (int i = 1; i <= 5; i++) {\n            calculations.add(i * i);\n        }\n        \n        // Print the calculations\n        for (Integer result : calculations) {\n            System.out.println(\"Calculation result: \" + result);\n        }\n        \n        // Retrieve the number format using the read method\n        /* read */ NumberFormat retrievedFormat = toolTipGenerator.getNumberFormat();\n        \n        // Print the result to verify the read method retrieved the correct format\n        System.out.println(retrievedFormat.equals(numberFormat));\n        \n        // Use the retrieved format to format a sample number\n        double sampleNumber = 1234.567;\n        String formattedNumber = retrievedFormat.format(sampleNumber);\n        System.out.println(\"Formatted sample number: \" + formattedNumber);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.labels.StandardXYToolTipGenerator;\nimport java.text.NumberFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StandardXYToolTipGenerator object\n        StandardXYToolTipGenerator toolTipGenerator = new StandardXYToolTipGenerator();\n        \n        // Create a NumberFormat instance for formatting numbers\n        NumberFormat numberFormat = NumberFormat.getInstance();\n        \n        // Set the number format using the write method\n        /* write */ toolTipGenerator.setNumberFormat(numberFormat);\n        \n        // Retrieve the number format using the read method\n        /* read */ NumberFormat retrievedFormat = toolTipGenerator.getNumberFormat();\n        \n        // Print the result to verify the read method retrieved the correct format\n        System.out.println(retrievedFormat.equals(numberFormat));\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.labels.StandardXYToolTipGenerator",
        "write_method": "setNumberFormat",
        "read_class": "org.jfree.chart.labels.StandardXYToolTipGenerator",
        "read_method": "getNumberFormat"
    }
}