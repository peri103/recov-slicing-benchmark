{
    "java_code": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        Paint domainPaint = new Color(255, 0, 0); // Red color\n        /* write */ renderer.setDomainPaint(domainPaint);\n\n        // Additional unrelated code to make the program more complex\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        int sum = 0;\n        for (Integer num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Another similar API pair usage\n        XYStepAreaRenderer anotherRenderer = new XYStepAreaRenderer();\n        Paint anotherDomainPaint = new Color(0, 255, 0); // Green color\n        anotherRenderer.setDomainPaint(anotherDomainPaint);\n        Paint readAnotherDomainPaint = anotherRenderer.getDomainPaint();\n        System.out.println(\"Another domain paint: \" + readAnotherDomainPaint);\n\n        // More complex operations\n        ArrayList<String> messages = new ArrayList<>();\n        messages.add(\"Hello\");\n        messages.add(\"World\");\n        messages.add(\"!\");\n\n        for (String message : messages) {\n            System.out.print(message + \" \");\n        }\n        System.out.println();\n\n        // Reading the value set earlier\n        /* read */ Paint readDomainPaint = renderer.getDomainPaint();\n        System.out.println(\"Original domain paint: \" + readDomainPaint);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        Paint domainPaint = new Color(255, 0, 0); // Red color\n        /* write */ renderer.setDomainPaint(domainPaint);\n        /* read */ Paint readDomainPaint = renderer.getDomainPaint();\n        System.out.println(readDomainPaint);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "write_method": "setDomainPaint",
        "read_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "read_method": "getDomainPaint"
    }
}