{
    "java_code": "import org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        StandardPieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator();\n        NumberFormat format = NumberFormat.getInstance();\n        \n        /* write */ labelGenerator.setNumberFormat(format);\n\n        // Additional complexity with unrelated operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 1; i <= 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        Map<String, Integer> numberMap = new HashMap<>();\n        for (Integer number : numbers) {\n            numberMap.put(\"Number_\" + number, number);\n        }\n        \n        for (Map.Entry<String, Integer> entry : numberMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // More operations\n        int sum = 0;\n        for (Integer number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Original read operation\n        /* read */ NumberFormat retrievedFormat = labelGenerator.getNumberFormat();\n        \n        System.out.println(\"Formats are equal: \" + retrievedFormat.equals(format));\n\n        // Further complexity\n        numbers.add(60);\n        numbers.add(70);\n        \n        for (int i = 0; i < numbers.size(); i++) {\n            System.out.println(\"Number at index \" + i + \": \" + numbers.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport java.text.NumberFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        StandardPieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator();\n        NumberFormat format = NumberFormat.getInstance();\n        \n        /* write */ labelGenerator.setNumberFormat(format);\n        /* read */ NumberFormat retrievedFormat = labelGenerator.getNumberFormat();\n        \n        System.out.println(retrievedFormat.equals(format));\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "write_method": "setNumberFormat",
        "read_class": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "read_method": "getNumberFormat"
    }
}