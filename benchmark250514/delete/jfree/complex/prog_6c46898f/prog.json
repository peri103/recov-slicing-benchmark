{
    "java_code": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport org.jfree.chart.renderer.xy.XYAreaRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the XYLineAndShapeRenderer\n        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();\n        \n        // Set some properties on the renderer\n        renderer.setSeriesLinesVisible(0, true);\n        renderer.setSeriesShapesVisible(0, false);\n        \n        // Use the write method from the task\n        /* write */ renderer.setShapesVisible(true);\n        \n        // Initialize another renderer for additional complexity\n        XYAreaRenderer areaRenderer = new XYAreaRenderer();\n        areaRenderer.setSeriesPaint(0, java.awt.Color.RED);\n        areaRenderer.setSeriesOutlinePaint(0, java.awt.Color.BLUE);\n        \n        // Perform some operations on the new renderer\n        areaRenderer.setOutline(true);\n        boolean outlineVisible = areaRenderer.isOutline();\n        System.out.println(\"Outline visible: \" + outlineVisible);\n        \n        // Perform some conditional logic\n        if (outlineVisible) {\n            areaRenderer.setSeriesPaint(1, java.awt.Color.GREEN);\n        } else {\n            areaRenderer.setSeriesPaint(1, java.awt.Color.YELLOW);\n        }\n        \n        // Use the read method from the task\n        /* read */ Boolean isVisible = renderer.getShapesVisible();\n        System.out.println(\"Shapes visible: \" + isVisible);\n        \n        // Additional operations to increase complexity\n        for (int i = 0; i < 5; i++) {\n            renderer.setSeriesShapesVisible(i, i % 2 == 0);\n            System.out.println(\"Series \" + i + \" shapes visible: \" + renderer.getSeriesShapesVisible(i));\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();\n        /* write */ renderer.setShapesVisible(true);\n        /* read */ Boolean isVisible = renderer.getShapesVisible();\n        System.out.println(isVisible);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",
        "write_method": "setShapesVisible",
        "read_class": "org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",
        "read_method": "getShapesVisible"
    }
}