{
    "java_code": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\nimport java.awt.Color;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        Stroke stroke = new BasicStroke(2.0f);\n        Stroke anotherStroke = new BasicStroke(1.0f);\n        \n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        lineRenderer.setSeriesPaint(0, Color.RED);\n        \n        /* write */ renderer.setOutlineStroke(stroke);\n        \n        // Perform some unrelated operations\n        for (int i = 0; i < 5; i++) {\n            lineRenderer.setSeriesShapesVisible(i, i % 2 == 0);\n            System.out.println(\"Series \" + i + \" shape visibility: \" + lineRenderer.getSeriesShapesVisible(i));\n        }\n        \n        // Change the stroke for lineRenderer\n        lineRenderer.setSeriesStroke(0, anotherStroke);\n        \n        // Simulate some complex logic\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n        \n        /* read */ Stroke readStroke = renderer.getOutlineStroke();\n        \n        System.out.println(\"Read Stroke: \" + readStroke);\n        \n        // More unrelated logic\n        for (int i = 0; i < 3; i++) {\n            System.out.println(\"Processing index: \" + i);\n        }\n        \n        // Final operation\n        System.out.println(\"Final stroke in lineRenderer: \" + lineRenderer.getSeriesStroke(0));\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        Stroke stroke = new BasicStroke(2.0f);\n        \n        /* write */ renderer.setOutlineStroke(stroke);\n        /* read */ Stroke readStroke = renderer.getOutlineStroke();\n        \n        System.out.println(readStroke);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "write_method": "setOutlineStroke",
        "read_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "read_method": "getOutlineStroke"
    }
}