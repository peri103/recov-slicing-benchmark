{
    "java_code": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport org.jfree.chart.renderer.xy.XYItemRendererState;\nimport org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.JFreeChart;\nimport org.jfree.chart.ChartFactory;\nimport org.jfree.data.xy.XYSeries;\nimport org.jfree.data.xy.XYSeriesCollection;\nimport org.jfree.data.xy.XYDataset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a dataset for demonstration\n        XYSeries series1 = new XYSeries(\"Series1\");\n        series1.add(1.0, 2.0);\n        series1.add(2.0, 3.0);\n        series1.add(3.0, 2.5);\n        \n        XYSeries series2 = new XYSeries(\"Series2\");\n        series2.add(1.0, 1.5);\n        series2.add(2.0, 2.0);\n        series2.add(3.0, 2.8);\n        \n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series1);\n        dataset.addSeries(series2);\n        \n        // Create a chart\n        JFreeChart chart = ChartFactory.createXYLineChart(\n            \"Sample Chart\",\n            \"X-Axis\",\n            \"Y-Axis\",\n            dataset\n        );\n        \n        // Renderer for the chart\n        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();\n        \n        // Set the visibility of lines for a specific series\n        int seriesIndex = 0; // Assuming we are working with the first series\n        boolean isVisible = true;\n        /* write */ renderer.setSeriesLinesVisible(seriesIndex, isVisible);\n        \n        // Add another unrelated configuration\n        renderer.setSeriesShapesVisible(1, true);\n        \n        // Create a plot and set the renderer\n        XYPlot plot = chart.getXYPlot();\n        plot.setRenderer(renderer);\n        \n        // Axis configuration\n        NumberAxis domainAxis = (NumberAxis) plot.getDomainAxis();\n        domainAxis.setRange(0.0, 4.0);\n        \n        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();\n        rangeAxis.setRange(0.0, 5.0);\n        \n        // Simulate additional operations on the renderer\n        XYItemRendererState state = new XYItemRendererState(plot.getDatasetRenderingOrder());\n        state.setProcessVisibleItemsOnly(true);\n        \n        // Retrieve the visibility of lines for the specific series\n        /* read */ Boolean visibility = renderer.getSeriesLinesVisible(seriesIndex);\n        \n        System.out.println(\"Series \" + seriesIndex + \" lines visible: \" + visibility);\n        \n        // Additional unrelated operations\n        for (int i = 0; i < dataset.getSeriesCount(); i++) {\n            System.out.println(\"Series \" + i + \" item count: \" + dataset.getSeries(i).getItemCount());\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();\n        \n        // Set the visibility of lines for a specific series\n        int seriesIndex = 0; // Assuming we are working with the first series\n        boolean isVisible = true;\n        /* write */ renderer.setSeriesLinesVisible(seriesIndex, isVisible);\n        \n        // Retrieve the visibility of lines for the specific series\n        /* read */ Boolean visibility = renderer.getSeriesLinesVisible(seriesIndex);\n        \n        System.out.println(\"Series \" + seriesIndex + \" lines visible: \" + visibility);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",
        "write_method": "setSeriesLinesVisible",
        "read_class": "org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",
        "read_method": "getSeriesLinesVisible"
    }
}