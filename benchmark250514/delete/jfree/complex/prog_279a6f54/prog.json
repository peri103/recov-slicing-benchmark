{
    "java_code": "import org.jfree.chart.renderer.xy.XYStepRenderer;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepRenderer renderer = new XYStepRenderer();\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n\n        /* write */ renderer.setBaseShapesVisible(true);\n\n        // Additional code to make the program complex\n        Map<String, Boolean> visibilityMap = new HashMap<>();\n        visibilityMap.put(\"stepRenderer\", renderer.getBaseShapesVisible());\n        visibilityMap.put(\"lineRenderer\", lineRenderer.getBaseShapesVisible());\n\n        lineRenderer.setBaseShapesVisible(false);\n        visibilityMap.put(\"lineRenderer\", lineRenderer.getBaseShapesVisible());\n\n        int sum = 0;\n        for (Map.Entry<String, Boolean> entry : visibilityMap.entrySet()) {\n            sum += entry.getValue() ? 1 : 0;\n        }\n\n        System.out.println(\"Sum of visible states: \" + sum);\n\n        // More complex operations\n        for (int i = 0; i < 5; i++) {\n            lineRenderer.setBaseShapesVisible(i % 2 == 0);\n            visibilityMap.put(\"lineRenderer_\" + i, lineRenderer.getBaseShapesVisible());\n        }\n\n        /* read */ boolean isVisible = renderer.getBaseShapesVisible();\n        System.out.println(\"Step Renderer Base Shapes Visible: \" + isVisible);\n\n        int totalVisibleCount = 0;\n        for (Boolean visible : visibilityMap.values()) {\n            if (visible) totalVisibleCount++;\n        }\n\n        System.out.println(\"Total Visible Count: \" + totalVisibleCount);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYStepRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepRenderer renderer = new XYStepRenderer();\n        /* write */ renderer.setBaseShapesVisible(true);\n        /* read */ boolean isVisible = renderer.getBaseShapesVisible();\n        System.out.println(isVisible);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYStepRenderer",
        "write_method": "setBaseShapesVisible",
        "read_class": "org.jfree.chart.renderer.xy.XYStepRenderer",
        "read_method": "getBaseShapesVisible"
    }
}