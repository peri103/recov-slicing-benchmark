{
    "java_code": "import org.jfree.chart.plot.WaferMapPlot;\nimport org.jfree.chart.renderer.PaintScale;\nimport org.jfree.chart.renderer.DefaultPaintScale;\nimport org.jfree.chart.renderer.GrayPaintScale;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        WaferMapPlot plot = new WaferMapPlot();\n        PaintScale paintScale = new DefaultPaintScale();\n        \n        // Additional unrelated code to increase complexity\n        Map<String, Integer> sampleMap = new HashMap<>();\n        sampleMap.put(\"A\", 1);\n        sampleMap.put(\"B\", 2);\n        sampleMap.put(\"C\", 3);\n        \n        int sum = 0;\n        for (Integer value : sampleMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in sampleMap: \" + sum);\n\n        // Using similar api pair without marking\n        PaintScale grayScale = new GrayPaintScale();\n        plot.setPaintScale(grayScale);\n\n        // Further unrelated code\n        int[] array = {10, 20, 30, 40, 50};\n        int max = Integer.MIN_VALUE;\n        for (int num : array) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        System.out.println(\"Maximum value in array: \" + max);\n\n        /* write */ plot.setPaintScale(paintScale);\n        \n        // More unrelated code\n        String[] strings = {\"Hello\", \"World\", \"Java\"};\n        StringBuilder concatenatedString = new StringBuilder();\n        for (String str : strings) {\n            concatenatedString.append(str).append(\" \");\n        }\n        System.out.println(\"Concatenated String: \" + concatenatedString.toString().trim());\n\n        /* read */ PaintScale retrievedPaintScale = plot.getPaintScale();\n        System.out.println(\"PaintScale is correctly set: \" + retrievedPaintScale.equals(paintScale));\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.WaferMapPlot;\nimport org.jfree.chart.renderer.PaintScale;\nimport org.jfree.chart.renderer.DefaultPaintScale;\n\npublic class Main {\n    public static void main(String[] args) {\n        WaferMapPlot plot = new WaferMapPlot();\n        PaintScale paintScale = new DefaultPaintScale();\n\n        /* write */ plot.setPaintScale(paintScale);\n        /* read */ PaintScale retrievedPaintScale = plot.getPaintScale();\n\n        System.out.println(retrievedPaintScale.equals(paintScale));\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.WaferMapPlot",
        "write_method": "setPaintScale",
        "read_class": "org.jfree.chart.plot.WaferMapPlot",
        "read_method": "getPaintScale"
    }
}