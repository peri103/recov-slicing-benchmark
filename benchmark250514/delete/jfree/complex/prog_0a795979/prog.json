{
    "java_code": "import org.jfree.chart.axis.Axis;\nimport org.jfree.chart.axis.CategoryAxis;\nimport org.jfree.chart.axis.NumberAxis;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original Axis object with write-read pair\n        Axis axis = new Axis(\"Initial Label\") {\n            @Override\n            public void configure() {\n                // Implementation not required for this example\n            }\n        };\n        \n        /* write */ axis.setLabel(\"Updated Label\");\n        \n        // Additional Axis objects for complexity\n        CategoryAxis categoryAxis = new CategoryAxis(\"Category Axis\");\n        NumberAxis numberAxis = new NumberAxis(\"Number Axis\");\n        \n        // Manipulating CategoryAxis\n        categoryAxis.setCategoryMargin(0.2);\n        \n        // Manipulating NumberAxis\n        numberAxis.setAutoRangeIncludesZero(false);\n        \n        // Using ArrayList to store Axis objects\n        ArrayList<Axis> axisList = new ArrayList<>();\n        axisList.add(axis);\n        axisList.add(categoryAxis);\n        axisList.add(numberAxis);\n        \n        // Iterating over axisList\n        for (Axis ax : axisList) {\n            System.out.println(\"Axis Label: \" + ax.getLabel());\n        }\n\n        // Perform some calculations\n        double result = calculateSum(5, 10);\n        System.out.println(\"Calculation Result: \" + result);\n\n        // Intermediate operations\n        Axis tempAxis = axisList.get(0);\n        tempAxis.setLabel(\"Temporary Label\");\n        System.out.println(\"Temp Axis Label: \" + tempAxis.getLabel());\n\n        // More unrelated operations\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        /* read */ String label = axis.getLabel();\n        System.out.println(\"Final Axis Label: \" + label);\n    }\n\n    // Unrelated method for additional complexity\n    public static double calculateSum(double a, double b) {\n        return a + b;\n    }\n}",
    "java_code_simple": "import org.jfree.chart.axis.Axis;\n\npublic class Main {\n    public static void main(String[] args) {\n        Axis axis = new Axis(\"Initial Label\") {\n            @Override\n            public void configure() {\n                // Implementation not required for this example\n            }\n        };\n        /* write */ axis.setLabel(\"Updated Label\");\n        /* read */ String label = axis.getLabel();\n        System.out.println(label);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.axis.Axis",
        "write_method": "setLabel",
        "read_class": "org.jfree.chart.axis.Axis",
        "read_method": "getLabel"
    }
}