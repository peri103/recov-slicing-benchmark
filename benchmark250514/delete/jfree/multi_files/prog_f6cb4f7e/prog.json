{
    "files": {
        "StrokeManager.java": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class StrokeManager {\n    private XYStepAreaRenderer stepAreaRenderer;\n\n    public StrokeManager() {\n        this.stepAreaRenderer = new XYStepAreaRenderer();\n    }\n\n    public void setOutlineStroke(float thickness) {\n        Stroke stroke = new BasicStroke(thickness);\n        /* write */ stepAreaRenderer.setOutlineStroke(stroke);\n    }\n\n    public Stroke getOutlineStroke() {\n        return stepAreaRenderer.getOutlineStroke();\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrokeManager and set stroke\n        StrokeManager strokeManager = new StrokeManager();\n        strokeManager.setOutlineStroke(2.0f);\n\n        // Initialize a course and add students\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\", 101);\n        Student student2 = new Student(\"Bob\", 102);\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Print course details\n        System.out.println(\"Course: \" + course.getStudents().size() + \" students enrolled.\");\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", ID: \" + student.getId());\n        }\n\n        // Retrieve and print the stroke\n        /* read */ Stroke readStroke = strokeManager.getOutlineStroke();\n        System.out.println(\"Outline Stroke: \" + readStroke);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "write_method": "setOutlineStroke",
        "read_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "read_method": "getOutlineStroke"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the XYStepAreaRenderer object\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        \n        // Create a stroke object to set as the outline stroke\n        Stroke stroke = new BasicStroke(2.0f);\n        \n        /* write */ renderer.setOutlineStroke(stroke);\n        \n        /* read */ Stroke readStroke = renderer.getOutlineStroke();\n        \n        // Print out the stroke object to verify it was set correctly\n        System.out.println(readStroke);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\nimport java.awt.Color;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the XYStepAreaRenderer object\n        XYStepAreaRenderer stepAreaRenderer = new XYStepAreaRenderer();\n        \n        // Create a stroke object to set as the outline stroke\n        Stroke stroke = new BasicStroke(2.0f);\n        \n        /* write */ stepAreaRenderer.setOutlineStroke(stroke);\n        \n        // Initialize another renderer for additional complexity\n        XYLineAndShapeRenderer lineAndShapeRenderer = new XYLineAndShapeRenderer();\n        \n        // Set properties on the lineAndShapeRenderer\n        Stroke lineStroke = new BasicStroke(1.5f);\n        lineAndShapeRenderer.setSeriesStroke(0, lineStroke);\n        lineAndShapeRenderer.setSeriesPaint(0, Color.RED);\n        \n        // Perform some unrelated operations\n        int[] values = {10, 20, 30, 40, 50};\n        int sum = 0;\n        for (int value : values) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n        \n        // More unrelated operations\n        Color[] colors = {Color.BLUE, Color.GREEN, Color.YELLOW};\n        for (Color color : colors) {\n            System.out.println(\"Color: \" + color);\n        }\n        \n        // Continue with the original renderer\n        /* read */ Stroke readStroke = stepAreaRenderer.getOutlineStroke();\n        \n        // Print out the stroke object to verify it was set correctly\n        System.out.println(\"Outline Stroke: \" + readStroke);\n        \n        // Additional unrelated operations\n        int product = 1;\n        for (int value : values) {\n            product *= value;\n        }\n        System.out.println(\"Product of values: \" + product);\n        \n        // Check properties of the second renderer\n        Stroke retrievedStroke = lineAndShapeRenderer.getSeriesStroke(0);\n        Color retrievedColor = (Color) lineAndShapeRenderer.getSeriesPaint(0);\n        System.out.println(\"Line Stroke: \" + retrievedStroke);\n        System.out.println(\"Line Color: \" + retrievedColor);\n    }\n}"
}