{
    "files": {
        "ChartDataHandler.java": "import org.jfree.chart.plot.MultiplePiePlot;\nimport org.jfree.chart.util.SortOrder;\n\npublic class ChartDataHandler {\n    private MultiplePiePlot plot;\n\n    public ChartDataHandler() {\n        plot = new MultiplePiePlot();\n    }\n\n    public void setDataExtractOrder(SortOrder order) {\n        /* write */ plot.setDataExtractOrder(order);\n    }\n\n    public SortOrder getDataExtractOrder() {\n        return plot.getDataExtractOrder();\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n    private double gpa;\n\n    public Student(String name, int id, double gpa) {\n        this.name = name;\n        this.id = id;\n        this.gpa = gpa;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public double getGpa() {\n        return gpa;\n    }\n}\n",
        "Main.java": "import org.jfree.chart.util.SortOrder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a course and some students\n        Course course = new Course(\"Computer Science\");\n        Student student1 = new Student(\"Alice\", 1, 3.8);\n        Student student2 = new Student(\"Bob\", 2, 3.6);\n\n        // Add students to the course\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Print course details\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", ID: \" + student.getId() + \", GPA: \" + student.getGpa());\n        }\n\n        // Handle chart data\n        ChartDataHandler chartHandler = new ChartDataHandler();\n        chartHandler.setDataExtractOrder(SortOrder.ASCENDING);\n\n        // Perform some unrelated operations\n        int totalStudents = course.getStudents().size();\n        System.out.println(\"Total students in course: \" + totalStudents);\n\n        // Retrieve and print the data extract order\n        /* read */ SortOrder order = chartHandler.getDataExtractOrder();\n        System.out.println(\"Data extract order: \" + order);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.MultiplePiePlot",
        "write_method": "setDataExtractOrder",
        "read_class": "org.jfree.chart.plot.MultiplePiePlot",
        "read_method": "getDataExtractOrder"
    },
    "java_code_simple": "import org.jfree.chart.plot.MultiplePiePlot;\nimport org.jfree.chart.util.SortOrder;\n\npublic class Main {\n    public static void main(String[] args) {\n        MultiplePiePlot plot = new MultiplePiePlot();\n        /* write */ plot.setDataExtractOrder(SortOrder.ASCENDING);\n        /* read */ SortOrder order = plot.getDataExtractOrder();\n        System.out.println(order);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.MultiplePiePlot;\nimport org.jfree.chart.util.SortOrder;\nimport org.jfree.chart.plot.PiePlot;\nimport org.jfree.data.general.DefaultPieDataset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a MultiplePiePlot object\n        MultiplePiePlot plot = new MultiplePiePlot();\n        \n        // Initialize a dataset and a PiePlot for additional complexity\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Category A\", 50);\n        dataset.setValue(\"Category B\", 30);\n        dataset.setValue(\"Category C\", 20);\n        \n        PiePlot piePlot = new PiePlot(dataset);\n        piePlot.setSectionOutlinesVisible(true);\n        \n        // Set some properties on the PiePlot\n        piePlot.setLabelGenerator(null);\n        \n        // Perform some calculations\n        int total = 0;\n        for (Comparable key : dataset.getKeys()) {\n            Number value = dataset.getValue(key);\n            total += value.intValue();\n        }\n        \n        // Print total value\n        System.out.println(\"Total value of dataset: \" + total);\n        \n        // Set the data extract order for the MultiplePiePlot\n        /* write */ plot.setDataExtractOrder(SortOrder.ASCENDING);\n        \n        // Perform additional operations on the dataset\n        dataset.setValue(\"Category D\", 40);\n        dataset.setValue(\"Category E\", 10);\n        \n        // Recalculate total value\n        total = 0;\n        for (Comparable key : dataset.getKeys()) {\n            Number value = dataset.getValue(key);\n            total += value.intValue();\n        }\n        \n        // Print updated total value\n        System.out.println(\"Updated total value of dataset: \" + total);\n        \n        // Retrieve the data extract order from the MultiplePiePlot\n        /* read */ SortOrder order = plot.getDataExtractOrder();\n        \n        // Print the data extract order\n        System.out.println(\"Data extract order: \" + order);\n        \n        // Additional operations on PiePlot\n        piePlot.setIgnoreZeroValues(true);\n        piePlot.setExplodePercent(\"Category A\", 0.1);\n        \n        // Print final settings of the PiePlot\n        System.out.println(\"Explode percent for Category A: \" + piePlot.getExplodePercent(\"Category A\"));\n    }\n}"
}