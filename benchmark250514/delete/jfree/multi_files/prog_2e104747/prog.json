{
    "files": {
        "ChartRenderer.java": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class ChartRenderer {\n    private XYLineAndShapeRenderer renderer;\n\n    public ChartRenderer() {\n        this.renderer = new XYLineAndShapeRenderer();\n    }\n\n    public void setShapesVisible(boolean visible) {\n        /* write */ renderer.setShapesVisible(visible);\n    }\n\n    public boolean getShapesVisible() {\n        return renderer.getShapesVisible();\n    }\n\n    public XYLineAndShapeRenderer getRenderer() {\n        return renderer;\n    }\n}",
        "ChartData.java": "import org.jfree.data.xy.XYSeries;\nimport org.jfree.data.xy.XYSeriesCollection;\n\npublic class ChartData {\n    private XYSeries series;\n    private XYSeriesCollection dataset;\n\n    public ChartData(String seriesName) {\n        this.series = new XYSeries(seriesName);\n        this.dataset = new XYSeriesCollection(series);\n    }\n\n    public void addDataPoint(double x, double y) {\n        series.add(x, y);\n    }\n\n    public XYSeriesCollection getDataset() {\n        return dataset;\n    }\n\n    public XYSeries getSeries() {\n        return series;\n    }\n\n    public void updateDataPoints(double increment) {\n        for (int i = 0; i < series.getItemCount(); i++) {\n            series.updateByIndex(i, series.getY(i).doubleValue() + increment);\n        }\n    }\n}",
        "Main.java": "import org.jfree.chart.ChartFactory;\nimport org.jfree.chart.ChartPanel;\nimport org.jfree.chart.JFreeChart;\n\nimport javax.swing.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        ChartRenderer chartRenderer = new ChartRenderer();\n        ChartData chartData = new ChartData(\"Random Data\");\n\n        for (int i = 0; i < 10; i++) {\n            chartData.addDataPoint(i, Math.random() * 100);\n        }\n\n        JFreeChart chart = ChartFactory.createXYLineChart(\n                \"XY Chart Example\",\n                \"X-Axis\",\n                \"Y-Axis\",\n                chartData.getDataset()\n        );\n\n        chart.getXYPlot().setRenderer(chartRenderer.getRenderer());\n\n        JFrame frame = new JFrame(\"Chart Example\");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.add(new ChartPanel(chart));\n        frame.pack();\n        frame.setVisible(true);\n\n        chartRenderer.setShapesVisible(true);\n\n        // Additional computations\n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 99: \" + sum);\n\n        // Retrieve the shapes visibility status\n        /* read */ boolean shapesVisible = chartRenderer.getShapesVisible();\n        System.out.println(\"Shapes visible: \" + shapesVisible);\n\n        // More computations\n        double average = sum / 100.0;\n        System.out.println(\"Average: \" + average);\n\n        // Modify series data\n        chartData.updateDataPoints(10);\n\n        // Print updated data\n        for (int i = 0; i < chartData.getSeries().getItemCount(); i++) {\n            System.out.println(\"Data point \" + i + \": \" + chartData.getSeries().getY(i));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",
        "write_method": "setShapesVisible",
        "read_class": "org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",
        "read_method": "getShapesVisible"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();\n        /* write */ renderer.setShapesVisible(true);\n        /* read */ boolean shapesVisible = renderer.getShapesVisible();\n        System.out.println(shapesVisible);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport org.jfree.chart.ChartFactory;\nimport org.jfree.chart.ChartPanel;\nimport org.jfree.chart.JFreeChart;\nimport org.jfree.data.xy.XYSeries;\nimport org.jfree.data.xy.XYSeriesCollection;\n\nimport javax.swing.*;\nimport java.awt.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();\n        /* write */ renderer.setShapesVisible(true);\n\n        // Create a simple XY chart\n        XYSeries series = new XYSeries(\"Random Data\");\n        for (int i = 0; i < 10; i++) {\n            series.add(i, Math.random() * 100);\n        }\n\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        JFreeChart chart = ChartFactory.createXYLineChart(\n                \"XY Chart Example\",\n                \"X-Axis\",\n                \"Y-Axis\",\n                dataset\n        );\n\n        // Apply the renderer to the chart\n        chart.getXYPlot().setRenderer(renderer);\n\n        // Create and display the chart panel\n        JFrame frame = new JFrame(\"Chart Example\");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.add(new ChartPanel(chart));\n        frame.pack();\n        frame.setVisible(true);\n\n        // Additional unrelated computations\n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 99: \" + sum);\n\n        // Retrieve the shapes visibility status\n        /* read */ boolean shapesVisible = renderer.getShapesVisible();\n        System.out.println(\"Shapes visible: \" + shapesVisible);\n\n        // More computations\n        double average = sum / 100.0;\n        System.out.println(\"Average: \" + average);\n\n        // Modify series data\n        for (int i = 0; i < series.getItemCount(); i++) {\n            series.updateByIndex(i, series.getY(i).doubleValue() + 10);\n        }\n\n        // Print updated data\n        for (int i = 0; i < series.getItemCount(); i++) {\n            System.out.println(\"Data point \" + i + \": \" + series.getY(i));\n        }\n    }\n}"
}