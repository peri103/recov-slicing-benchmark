{
    "files": {
        "DataPlotter.java": "import org.jfree.chart.plot.MultiplePiePlot;\nimport org.jfree.chart.util.TableOrder;\nimport org.jfree.data.general.DatasetUtilities;\nimport org.jfree.data.category.CategoryDataset;\n\npublic class DataPlotter {\n    private MultiplePiePlot plot;\n\n    public DataPlotter() {\n        // Creating a sample dataset for demonstration purposes\n        CategoryDataset dataset = DatasetUtilities.createCategoryDataset(\n            \"Row\", \"Column\", new double[][]{{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}}\n        );\n\n        // Initialize the MultiplePiePlot with the dataset\n        plot = new MultiplePiePlot(dataset);\n    }\n\n    public void configurePlot() {\n        // Set the data extract order using the write method\n        /* write */ plot.setDataExtractOrder(TableOrder.BY_ROW);\n    }\n\n    public MultiplePiePlot getPlot() {\n        return plot;\n    }\n}\n",
        "PlotAnalyzer.java": "import org.jfree.chart.plot.MultiplePiePlot;\nimport org.jfree.chart.util.TableOrder;\n\npublic class PlotAnalyzer {\n    private MultiplePiePlot plot;\n\n    public PlotAnalyzer(MultiplePiePlot plot) {\n        this.plot = plot;\n    }\n\n    public TableOrder analyzeExtractOrder() {\n        // Read the data extract order using the read method\n        /* read */ return plot.getDataExtractOrder();\n    }\n}\n",
        "Main.java": "import org.jfree.chart.plot.MultiplePiePlot;\nimport org.jfree.chart.util.TableOrder;\n\npublic class Main {\n    public static void main(String[] args) {\n        DataPlotter plotter = new DataPlotter();\n        plotter.configurePlot();\n\n        MultiplePiePlot plot = plotter.getPlot();\n        PlotAnalyzer analyzer = new PlotAnalyzer(plot);\n\n        // Analyze and print the data extract order\n        TableOrder order = analyzer.analyzeExtractOrder();\n        System.out.println(\"Data Extract Order: \" + order);\n\n        // Additional unrelated code to make the program more complex\n        double sum = 0.0;\n        for (int row = 0; row < plot.getDataset().getRowCount(); row++) {\n            for (int col = 0; col < plot.getDataset().getColumnCount(); col++) {\n                sum += plot.getDataset().getValue(row, col).doubleValue();\n            }\n        }\n        System.out.println(\"Sum of all values in the dataset: \" + sum);\n\n        double average = sum / (plot.getDataset().getRowCount() * plot.getDataset().getColumnCount());\n        System.out.println(\"Average value in the dataset: \" + average);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.MultiplePiePlot",
        "write_method": "setDataExtractOrder",
        "read_class": "org.jfree.chart.plot.MultiplePiePlot",
        "read_method": "getDataExtractOrder"
    },
    "java_code_simple": "import org.jfree.chart.plot.MultiplePiePlot;\nimport org.jfree.data.general.DatasetUtilities;\nimport org.jfree.data.category.CategoryDataset;\nimport org.jfree.chart.util.TableOrder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Creating a sample dataset for demonstration purposes\n        CategoryDataset dataset = DatasetUtilities.createCategoryDataset(\n            \"Row\", \"Column\", new double[][]{{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}}\n        );\n\n        // Initialize the MultiplePiePlot with the dataset\n        MultiplePiePlot plot = new MultiplePiePlot(dataset);\n\n        // Set the data extract order using the write method\n        /* write */ plot.setDataExtractOrder(TableOrder.BY_ROW);\n\n        // Read the data extract order using the read method\n        /* read */ TableOrder order = plot.getDataExtractOrder();\n\n        // Print the extracted order to verify the read operation\n        System.out.println(order);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.MultiplePiePlot;\nimport org.jfree.chart.util.TableOrder;\nimport org.jfree.data.general.DatasetUtilities;\nimport org.jfree.data.category.CategoryDataset;\nimport org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.JFreeChart;\nimport org.jfree.chart.ChartFactory;\nimport org.jfree.chart.ChartPanel;\nimport javax.swing.JFrame;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Creating a sample dataset for demonstration purposes\n        CategoryDataset dataset = DatasetUtilities.createCategoryDataset(\n            \"Row\", \"Column\", new double[][]{{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}}\n        );\n\n        // Initialize the MultiplePiePlot with the dataset\n        MultiplePiePlot plot = new MultiplePiePlot(dataset);\n\n        // Set the data extract order using the write method\n        /* write */ plot.setDataExtractOrder(TableOrder.BY_ROW);\n\n        // Create a pie plot and chart for visualization\n        PiePlot piePlot = new PiePlot(dataset);\n        JFreeChart pieChart = ChartFactory.createPieChart(\n            \"Sample Pie Chart\", piePlot, true, true, false\n        );\n\n        // Display the pie chart in a frame\n        JFrame frame = new JFrame();\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.add(new ChartPanel(pieChart));\n        frame.pack();\n        frame.setVisible(true);\n\n        // Perform some unrelated operations\n        double sum = 0.0;\n        for (int row = 0; row < dataset.getRowCount(); row++) {\n            for (int col = 0; col < dataset.getColumnCount(); col++) {\n                sum += dataset.getValue(row, col).doubleValue();\n            }\n        }\n        System.out.println(\"Sum of all values in the dataset: \" + sum);\n\n        // Read the data extract order using the read method\n        /* read */ TableOrder order = plot.getDataExtractOrder();\n\n        // Print the extracted order to verify the read operation\n        System.out.println(\"Data Extract Order: \" + order);\n\n        // Additional unrelated code to make the program more complex\n        double average = sum / (dataset.getRowCount() * dataset.getColumnCount());\n        System.out.println(\"Average value in the dataset: \" + average);\n\n        // Create another chart for demonstration\n        JFreeChart barChart = ChartFactory.createBarChart(\n            \"Sample Bar Chart\", \"Category\", \"Value\", dataset\n        );\n\n        // Display the bar chart in another frame\n        JFrame barFrame = new JFrame();\n        barFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        barFrame.add(new ChartPanel(barChart));\n        barFrame.pack();\n        barFrame.setVisible(true);\n    }\n}"
}