{
    "files": {
        "LegendItemManager.java": "import org.jfree.chart.LegendItem;\n\npublic class LegendItemManager {\n    private LegendItem legendItem;\n\n    public LegendItemManager(String initialLabel) {\n        this.legendItem = new LegendItem(initialLabel);\n    }\n\n    public void updateLabel(String newLabel) {\n        /* write */ legendItem.setLabel(newLabel);\n    }\n\n    public String getLabel() {\n        return legendItem.getLabel();\n    }\n}\n",
        "PlotManager.java": "import org.jfree.chart.plot.Plot;\nimport org.jfree.chart.plot.PiePlot;\n\npublic class PlotManager {\n    private Plot plot;\n\n    public PlotManager() {\n        this.plot = new PiePlot();\n        ((PiePlot) plot).setSectionOutlinesVisible(true);\n    }\n\n    public void configurePlot() {\n        ((PiePlot) plot).setCircular(false);\n        ((PiePlot) plot).setInteriorGap(0.04);\n    }\n\n    public Plot getPlot() {\n        return plot;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LegendItemManager legendManager = new LegendItemManager(\"Initial Label\");\n        legendManager.updateLabel(\"Updated Label\");\n\n        ArrayList<LegendItemManager> legendManagers = new ArrayList<>();\n        legendManagers.add(new LegendItemManager(\"Item 1\"));\n        legendManagers.add(new LegendItemManager(\"Item 2\"));\n        legendManagers.add(legendManager);\n\n        PlotManager plotManager = new PlotManager();\n        plotManager.configurePlot();\n\n        for (LegendItemManager manager : legendManagers) {\n            System.out.println(\"Legend Item: \" + manager.getLabel());\n        }\n\n        /* read */ String finalLabel = legendManager.getLabel();\n        System.out.println(\"Final Label: \" + finalLabel);\n\n        for (int i = 0; i < legendManagers.size(); i++) {\n            LegendItemManager manager = legendManagers.get(i);\n            manager.updateLabel(\"Item \" + (i + 1) + \" Updated\");\n            System.out.println(\"Updated Legend Item: \" + manager.getLabel());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.LegendItem",
        "write_method": "setLabel",
        "read_class": "org.jfree.chart.LegendItem",
        "read_method": "getLabel"
    },
    "java_code_simple": "import org.jfree.chart.LegendItem;\n\npublic class Main {\n    public static void main(String[] args) {\n        LegendItem legendItem = new LegendItem(\"Initial Label\");\n        /* write */ legendItem.setLabel(\"Updated Label\");\n        /* read */ String label = legendItem.getLabel();\n        System.out.println(label);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.LegendItem;\nimport org.jfree.chart.plot.Plot;\nimport org.jfree.chart.plot.PiePlot;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LegendItem legendItem = new LegendItem(\"Initial Label\");\n        ArrayList<LegendItem> legendItems = new ArrayList<>();\n        \n        // Adding multiple LegendItems to the list\n        legendItems.add(new LegendItem(\"Item 1\"));\n        legendItems.add(new LegendItem(\"Item 2\"));\n        legendItems.add(legendItem);\n        \n        // Manipulating a PiePlot for complexity\n        Plot plot = new PiePlot();\n        ((PiePlot) plot).setSectionOutlinesVisible(true);\n        ((PiePlot) plot).setCircular(false);\n        \n        // Write operation\n        /* write */ legendItem.setLabel(\"Updated Label\");\n        \n        // Additional operations on the list\n        for (LegendItem item : legendItems) {\n            System.out.println(\"Legend Item: \" + item.getLabel());\n        }\n        \n        // More operations on the plot\n        ((PiePlot) plot).setInteriorGap(0.04);\n        \n        // Read operation\n        /* read */ String label = legendItem.getLabel();\n        System.out.println(\"Final Label: \" + label);\n        \n        // Further operations for complexity\n        for (int i = 0; i < legendItems.size(); i++) {\n            LegendItem item = legendItems.get(i);\n            item.setLabel(\"Item \" + (i + 1) + \" Updated\");\n            System.out.println(\"Updated Legend Item: \" + item.getLabel());\n        }\n    }\n}"
}