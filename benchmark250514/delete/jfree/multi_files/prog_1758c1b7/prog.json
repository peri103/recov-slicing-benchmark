{
    "files": {
        "LegendManager.java": "import org.jfree.chart.LegendItem;\n\npublic class LegendManager {\n    private LegendItem legendItem;\n\n    public LegendManager(String initialLabel) {\n        this.legendItem = new LegendItem(initialLabel);\n    }\n\n    public void updateLabel(String newLabel) {\n        /* write */ legendItem.setLabel(newLabel);\n    }\n\n    public String retrieveLabel() {\n        return legendItem.getLabel();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize LegendManager and update the label\n        LegendManager legendManager = new LegendManager(\"Initial Label\");\n        legendManager.updateLabel(\"Updated Label\");\n\n        // Initialize a Course and add Students\n        Course course = new Course(\"Advanced Java Programming\");\n        course.addStudent(new Student(\"Alice\", 1));\n        course.addStudent(new Student(\"Bob\", 2));\n\n        // Process and print student information\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student Name: \" + student.getName() + \", ID: \" + student.getId());\n        }\n\n        // Retrieve and print the updated label\n        /* read */ String label = legendManager.retrieveLabel();\n        System.out.println(\"Legend Label: \" + label);\n\n        // Additional operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 1; i <= 5; i++) {\n            numbers.add(i * 2);\n        }\n\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.LegendItem",
        "write_method": "setLabel",
        "read_class": "org.jfree.chart.LegendItem",
        "read_method": "getLabel"
    },
    "java_code_simple": "import org.jfree.chart.LegendItem;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a LegendItem object\n        LegendItem legendItem = new LegendItem(\"Initial Label\");\n\n        // Set the label using the write method\n        /* write */ legendItem.setLabel(\"New Label\");\n\n        // Read the label using the read method\n        /* read */ String label = legendItem.getLabel();\n\n        // Print the label to ensure the read method retrieves the correct value\n        System.out.println(label);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.LegendItem;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a LegendItem object\n        LegendItem legendItem = new LegendItem(\"Initial Label\");\n\n        // Perform some unrelated operations\n        ArrayList<String> stringList = new ArrayList<>();\n        stringList.add(\"Item 1\");\n        stringList.add(\"Item 2\");\n\n        for (String item : stringList) {\n            System.out.println(\"Processing: \" + item);\n        }\n\n        // Set the label using the write method\n        /* write */ legendItem.setLabel(\"New Label\");\n\n        // More unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 4: \" + sum);\n\n        // Initialize another LegendItem and manipulate it\n        LegendItem anotherLegendItem = new LegendItem(\"Another Label\");\n        anotherLegendItem.setLabel(\"Updated Another Label\");\n        System.out.println(\"Another Legend Item Label: \" + anotherLegendItem.getLabel());\n\n        // Read the label using the read method\n        /* read */ String label = legendItem.getLabel();\n\n        // Print the label to ensure the read method retrieves the correct value\n        System.out.println(label);\n\n        // Additional complex operations\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 1; i <= 10; i++) {\n            numberList.add(i * 10);\n        }\n\n        for (int num : numberList) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}"
}