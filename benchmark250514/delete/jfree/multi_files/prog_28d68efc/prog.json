{
    "files": {
        "CustomLabelGenerator.java": "import org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport java.text.NumberFormat;\n\npublic class CustomLabelGenerator {\n    private StandardPieSectionLabelGenerator labelGenerator;\n\n    public CustomLabelGenerator() {\n        this.labelGenerator = new StandardPieSectionLabelGenerator();\n    }\n\n    public void setCustomNumberFormat(NumberFormat format) {\n        /* write */ labelGenerator.setNumberFormat(format);\n    }\n\n    public NumberFormat retrieveNumberFormat() {\n        return labelGenerator.getNumberFormat();\n    }\n}",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public ArrayList<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Main.java": "import java.text.NumberFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CustomLabelGenerator instance\n        CustomLabelGenerator customLabelGenerator = new CustomLabelGenerator();\n        \n        // Create a NumberFormat instance and set it using the CustomLabelGenerator\n        NumberFormat numberFormat = NumberFormat.getInstance();\n        customLabelGenerator.setCustomNumberFormat(numberFormat);\n        \n        // Create a Course and some Students\n        Course course = new Course(\"Mathematics\");\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n        \n        // Enroll students in the course\n        course.enrollStudent(alice);\n        course.enrollStudent(bob);\n        \n        // Add scores for the students\n        alice.addScore(85);\n        bob.addScore(90);\n        \n        // Retrieve the number format from CustomLabelGenerator\n        /* read */ NumberFormat retrievedFormat = customLabelGenerator.retrieveNumberFormat();\n        \n        // Print out the result to verify the operation\n        System.out.println(\"Retrieved format equals original: \" + retrievedFormat.equals(numberFormat)); // Should print true\n        \n        // Display student scores\n        for (Student student : course.getStudents()) {\n            System.out.println(student.getName() + \"'s scores: \" + student.getScores());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "write_method": "setNumberFormat",
        "read_class": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "read_method": "getNumberFormat"
    },
    "java_code_simple": "import org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport java.text.NumberFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StandardPieSectionLabelGenerator\n        StandardPieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator();\n        \n        // Create a NumberFormat instance to be used for setting and getting\n        NumberFormat numberFormat = NumberFormat.getInstance();\n        \n        // Use the write method to set the number format\n        /* write */ labelGenerator.setNumberFormat(numberFormat);\n        \n        // Use the read method to get the number format\n        /* read */ NumberFormat retrievedFormat = labelGenerator.getNumberFormat();\n        \n        // Print out the result to verify the operation\n        System.out.println(retrievedFormat.equals(numberFormat)); // Should print true\n    }\n}",
    "java_code_complex": "import org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport java.text.NumberFormat;\nimport java.text.DecimalFormat;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StandardPieSectionLabelGenerator\n        StandardPieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator();\n        \n        // Create a NumberFormat instance to be used for setting and getting\n        NumberFormat numberFormat = NumberFormat.getInstance();\n        \n        // Use the write method to set the number format\n        /* write */ labelGenerator.setNumberFormat(numberFormat);\n        \n        // Create another NumberFormat instance and a DecimalFormat instance\n        NumberFormat anotherFormat = NumberFormat.getCurrencyInstance();\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n        \n        // Create an ArrayList to store different formats\n        ArrayList<NumberFormat> formatList = new ArrayList<>();\n        formatList.add(anotherFormat);\n        formatList.add(decimalFormat);\n        \n        // Iterate over the format list and print each format type\n        for (NumberFormat format : formatList) {\n            System.out.println(\"Format class: \" + format.getClass().getName());\n        }\n        \n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n        \n        // Use the read method to get the number format\n        /* read */ NumberFormat retrievedFormat = labelGenerator.getNumberFormat();\n        \n        // Print out the result to verify the operation\n        System.out.println(\"Retrieved format equals original: \" + retrievedFormat.equals(numberFormat)); // Should print true\n\n        // More complex operations\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numberList.add(i * 10);\n        }\n        \n        for (Integer num : numberList) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}"
}