{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public void enrollCourse(Course course) {\n        this.course = course;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import org.jfree.chart.labels.StandardCategoryToolTipGenerator;\nimport java.text.NumberFormat;\n\npublic class Course {\n    private String courseName;\n    private StandardCategoryToolTipGenerator tooltipGenerator;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.tooltipGenerator = new StandardCategoryToolTipGenerator();\n    }\n\n    public void setCategoryFormat(NumberFormat format) {\n        /* write */ tooltipGenerator.setCategoryFormat(format);\n    }\n\n    public NumberFormat getCategoryFormat() {\n        /* read */ return tooltipGenerator.getCategoryFormat();\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.text.NumberFormat;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a NumberFormat object\n        NumberFormat format = NumberFormat.getInstance();\n\n        // Create a Course object and set category format\n        Course course = new Course(\"Mathematics\");\n        course.setCategoryFormat(format);\n\n        // Create a Student object and enroll in the course\n        Student student = new Student(\"John Doe\", course);\n\n        // Perform unrelated complex operations\n        ArrayList<Integer> grades = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            grades.add(i * 10);\n        }\n\n        int total = 0;\n        for (int grade : grades) {\n            total += grade;\n        }\n        System.out.println(\"Total Grades: \" + total);\n\n        // Read the category format from the course\n        NumberFormat readFormat = student.getCourse().getCategoryFormat();\n        System.out.println(\"Read Format: \" + readFormat);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.labels.StandardCategoryToolTipGenerator",
        "write_method": "setCategoryFormat",
        "read_class": "org.jfree.chart.labels.StandardCategoryToolTipGenerator",
        "read_method": "getCategoryFormat"
    },
    "java_code_simple": "import org.jfree.chart.labels.StandardCategoryToolTipGenerator;\nimport java.text.NumberFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StandardCategoryToolTipGenerator object\n        StandardCategoryToolTipGenerator generator = new StandardCategoryToolTipGenerator();\n        \n        // Create a NumberFormat object\n        NumberFormat format = NumberFormat.getInstance();\n        \n        // Set the category format using the write method\n        /* write */ generator.setCategoryFormat(format);\n        \n        // Read the category format using the read method\n        /* read */ NumberFormat readFormat = generator.getCategoryFormat();\n        \n        // Print the result to verify the read operation\n        System.out.println(readFormat);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.labels.StandardCategoryToolTipGenerator;\nimport java.text.NumberFormat;\nimport java.text.DecimalFormat;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StandardCategoryToolTipGenerator object\n        StandardCategoryToolTipGenerator generator = new StandardCategoryToolTipGenerator();\n        \n        // Create a NumberFormat object\n        NumberFormat format = NumberFormat.getInstance();\n        \n        // Set the category format using the write method\n        /* write */ generator.setCategoryFormat(format);\n        \n        // Additional unrelated complex operations\n        ArrayList<String> dataList = new ArrayList<>();\n        dataList.add(\"Data1\");\n        dataList.add(\"Data2\");\n        dataList.add(\"Data3\");\n        \n        // Process dataList\n        for (String data : dataList) {\n            System.out.println(\"Processing: \" + data);\n        }\n        \n        // More complex operations\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n        double value = 12345.6789;\n        String formattedValue = decimalFormat.format(value);\n        System.out.println(\"Formatted Value: \" + formattedValue);\n        \n        // Additional StandardCategoryToolTipGenerator usage\n        StandardCategoryToolTipGenerator anotherGenerator = new StandardCategoryToolTipGenerator();\n        anotherGenerator.setCategoryFormat(NumberFormat.getCurrencyInstance());\n        NumberFormat anotherReadFormat = anotherGenerator.getCategoryFormat();\n        System.out.println(\"Another Format: \" + anotherReadFormat);\n        \n        // Further complex operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n        \n        // Read the category format using the read method\n        /* read */ NumberFormat readFormat = generator.getCategoryFormat();\n        \n        // Print the result to verify the read operation\n        System.out.println(\"Read Format: \" + readFormat);\n    }\n}"
}