{
    "files": {
        "ChartRenderer.java": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.Color;\n\npublic class ChartRenderer {\n    private XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n\n    public void setDomainPaint(Color color) {\n        /* write */ renderer.setDomainPaint(color);\n    }\n\n    public Color getDomainPaint() {\n        return (Color) renderer.getDomainPaint();\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "write_method": "setDomainPaint",
        "read_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "read_method": "getDomainPaint"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        /* write */ renderer.setDomainPaint(Color.RED);\n        /* read */ Color domainPaint = (Color) renderer.getDomainPaint();\n        System.out.println(domainPaint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport java.awt.Color;\nimport java.awt.BasicStroke;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer stepRenderer = new XYStepAreaRenderer();\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n\n        // Unrelated complex operations\n        Map<String, Object> settings = new HashMap<>();\n        settings.put(\"lineStroke\", new BasicStroke(2.0f));\n        settings.put(\"stepPaint\", Color.BLUE);\n\n        lineRenderer.setSeriesPaint(0, (Color) settings.get(\"stepPaint\"));\n        lineRenderer.setSeriesStroke(0, (BasicStroke) settings.get(\"lineStroke\"));\n\n        /* write */ stepRenderer.setDomainPaint(Color.RED);\n\n        // More complex operations\n        for (int i = 0; i < 5; i++) {\n            settings.put(\"dynamicColor\" + i, new Color(i * 50, i * 50, i * 50));\n        }\n\n        Color dynamicColor = (Color) settings.get(\"dynamicColor3\");\n        lineRenderer.setSeriesPaint(1, dynamicColor);\n\n        // Another unrelated operation\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        /* read */ Color domainPaint = (Color) stepRenderer.getDomainPaint();\n        System.out.println(\"Domain Paint: \" + domainPaint);\n\n        // Additional operations\n        for (Map.Entry<String, Object> entry : settings.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}"
}