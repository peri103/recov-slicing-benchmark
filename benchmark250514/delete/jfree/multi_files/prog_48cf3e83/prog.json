{
    "files": {
        "AxisConfiguration.java": "import org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.NumberTickUnit;\n\npublic class AxisConfiguration {\n    private NumberAxis axis = new NumberAxis();\n\n    public void configureAxis(double tickUnitSize) {\n        NumberTickUnit tickUnit = new NumberTickUnit(tickUnitSize);\n        /* write */ axis.setTickUnit(tickUnit);\n    }\n\n    public NumberTickUnit getAxisTickUnit() {\n        return axis.getTickUnit();\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        AxisConfiguration axisConfig = new AxisConfiguration();\n        axisConfig.configureAxis(5.0);\n\n        // Additional unrelated code\n        ArrayList<Double> values = new ArrayList<>();\n        for (double i = 0; i < 10; i++) {\n            values.add(i * 2.5);\n        }\n\n        double sum = 0;\n        for (Double value : values) {\n            sum += value;\n        }\n\n        System.out.println(\"Sum of values: \" + sum);\n\n        // Additional similar API pair usage\n        AxisConfiguration anotherAxisConfig = new AxisConfiguration();\n        anotherAxisConfig.configureAxis(2.0);\n\n        NumberTickUnit retrievedAnotherTickUnit = anotherAxisConfig.getAxisTickUnit();\n        System.out.println(\"Another Tick Unit: \" + retrievedAnotherTickUnit.getSize());\n\n        // More complex operations\n        ArrayList<AxisConfiguration> axisConfigs = new ArrayList<>();\n        axisConfigs.add(axisConfig);\n        axisConfigs.add(anotherAxisConfig);\n\n        for (AxisConfiguration ac : axisConfigs) {\n            System.out.println(\"Axis Tick Unit: \" + ac.getAxisTickUnit().getSize());\n        }\n\n        /* read */ NumberTickUnit retrievedTickUnit = axisConfig.getAxisTickUnit();\n\n        System.out.println(\"Tick Unit: \" + retrievedTickUnit.getSize());\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.axis.NumberAxis",
        "write_method": "setTickUnit",
        "read_class": "org.jfree.chart.axis.NumberAxis",
        "read_method": "getTickUnit"
    },
    "java_code_simple": "import org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.NumberTickUnit;\n\npublic class Main {\n    public static void main(String[] args) {\n        NumberAxis axis = new NumberAxis();\n        NumberTickUnit tickUnit = new NumberTickUnit(5.0);\n        \n        /* write */ axis.setTickUnit(tickUnit);\n        \n        /* read */ NumberTickUnit retrievedTickUnit = axis.getTickUnit();\n        \n        System.out.println(\"Tick Unit: \" + retrievedTickUnit.getSize());\n    }\n}",
    "java_code_complex": "import org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.NumberTickUnit;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        NumberAxis axis = new NumberAxis();\n        NumberTickUnit tickUnit = new NumberTickUnit(5.0);\n        \n        /* write */ axis.setTickUnit(tickUnit);\n        \n        // Additional unrelated code\n        ArrayList<Double> values = new ArrayList<>();\n        for (double i = 0; i < 10; i++) {\n            values.add(i * 2.5);\n        }\n        \n        double sum = 0;\n        for (Double value : values) {\n            sum += value;\n        }\n        \n        System.out.println(\"Sum of values: \" + sum);\n        \n        // Additional similar API pair usage\n        NumberAxis anotherAxis = new NumberAxis();\n        NumberTickUnit anotherTickUnit = new NumberTickUnit(2.0);\n        anotherAxis.setTickUnit(anotherTickUnit);\n        \n        NumberTickUnit retrievedAnotherTickUnit = anotherAxis.getTickUnit();\n        System.out.println(\"Another Tick Unit: \" + retrievedAnotherTickUnit.getSize());\n        \n        // More complex operations\n        ArrayList<NumberAxis> axes = new ArrayList<>();\n        axes.add(axis);\n        axes.add(anotherAxis);\n        \n        for (NumberAxis na : axes) {\n            System.out.println(\"Axis Tick Unit: \" + na.getTickUnit().getSize());\n        }\n        \n        /* read */ NumberTickUnit retrievedTickUnit = axis.getTickUnit();\n        \n        System.out.println(\"Tick Unit: \" + retrievedTickUnit.getSize());\n    }\n}"
}