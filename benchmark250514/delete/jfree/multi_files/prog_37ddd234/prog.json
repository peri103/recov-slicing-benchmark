{
    "files": {
        "ChartSettings.java": "import org.jfree.chart.plot.PiePlot;\n\npublic class ChartSettings {\n    private PiePlot piePlot;\n\n    public ChartSettings() {\n        this.piePlot = new PiePlot();\n    }\n\n    public void configurePiePlot() {\n        piePlot.setCircular(true);\n        piePlot.setBackgroundAlpha(0.5f);\n        piePlot.setIgnoreNullValues(true);\n        /* write */ piePlot.setLabelGap(0.05);\n    }\n\n    public PiePlot getPiePlot() {\n        return this.piePlot;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int studentID;\n\n    public Student(String name, int studentID) {\n        this.name = name;\n        this.studentID = studentID;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getStudentID() {\n        return studentID;\n    }\n}\n",
        "Main.java": "import org.jfree.chart.plot.PiePlot;\n\npublic class Main {\n    public static void main(String[] args) {\n        ChartSettings chartSettings = new ChartSettings();\n        chartSettings.configurePiePlot();\n\n        Course course = new Course(\"Computer Science\");\n        Student student1 = new Student(\"Alice\", 101);\n        Student student2 = new Student(\"Bob\", 102);\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", ID: \" + student.getStudentID());\n        }\n\n        PiePlot piePlot = chartSettings.getPiePlot();\n        /* read */ double labelGap = piePlot.getLabelGap();\n        System.out.println(\"Label Gap: \" + labelGap);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setLabelGap",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getLabelGap"
    },
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        /* write */ piePlot.setLabelGap(0.05);\n        /* read */ double labelGap = piePlot.getLabelGap();\n        System.out.println(labelGap);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.plot.CategoryPlot;\nimport org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.renderer.category.BarRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        \n        // Additional code to make the program more complex\n        CategoryPlot categoryPlot = new CategoryPlot();\n        NumberAxis numberAxis = new NumberAxis(\"Values\");\n        BarRenderer renderer = new BarRenderer();\n\n        categoryPlot.setRangeAxis(numberAxis);\n        categoryPlot.setRenderer(renderer);\n        categoryPlot.setDomainGridlinesVisible(true);\n\n        numberAxis.setAutoRangeIncludesZero(false);\n        renderer.setItemMargin(0.2);\n\n        // Setting up and using PiePlot\n        piePlot.setCircular(true);\n        piePlot.setBackgroundAlpha(0.5f);\n        piePlot.setIgnoreNullValues(true);\n\n        /* write */ piePlot.setLabelGap(0.05);\n        \n        double backgroundAlpha = piePlot.getBackgroundAlpha();\n        System.out.println(\"Background Alpha: \" + backgroundAlpha);\n\n        boolean isCircular = piePlot.isCircular();\n        System.out.println(\"Is Circular: \" + isCircular);\n\n        // More operations on CategoryPlot\n        categoryPlot.setDomainGridlinePaint(java.awt.Color.red);\n        categoryPlot.setRangeGridlinePaint(java.awt.Color.blue);\n\n        /* read */ double labelGap = piePlot.getLabelGap();\n        System.out.println(\"Label Gap: \" + labelGap);\n\n        // Additional operations for complexity\n        numberAxis.setTickLabelsVisible(true);\n        renderer.setSeriesPaint(0, java.awt.Color.green);\n        \n        System.out.println(\"Domain Gridlines Visible: \" + categoryPlot.isDomainGridlinesVisible());\n    }\n}"
}