{
    "files": {
        "ChartRenderer.java": "import org.jfree.chart.renderer.xy.XYShapeRenderer;\nimport java.awt.Paint;\n\npublic class ChartRenderer {\n    private XYShapeRenderer shapeRenderer = new XYShapeRenderer();\n\n    public void setOutlinePaint(Paint paint) {\n        /* write */ shapeRenderer.setOutlinePaint(paint);\n    }\n\n    public Paint getOutlinePaint() {\n        return shapeRenderer.getOutlinePaint();\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int score;\n\n    public Student(String name, int score) {\n        this.name = name;\n        this.score = score;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getScore() {\n        return score;\n    }\n}\n",
        "Main.java": "import java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        ChartRenderer chartRenderer = new ChartRenderer();\n        Course course = new Course(\"Math 101\");\n\n        Student student1 = new Student(\"Alice\", 85);\n        Student student2 = new Student(\"Bob\", 90);\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        Paint paint = Color.RED;\n        chartRenderer.setOutlinePaint(paint);\n\n        for (Student student : course.getStudents()) {\n            System.out.println(student.getName() + \" scored \" + student.getScore());\n        }\n\n        /* read */ Paint outlinePaint = chartRenderer.getOutlinePaint();\n        System.out.println(\"Chart Renderer Outline Paint: \" + outlinePaint);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYShapeRenderer",
        "write_method": "setOutlinePaint",
        "read_class": "org.jfree.chart.renderer.xy.XYShapeRenderer",
        "read_method": "getOutlinePaint"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYShapeRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYShapeRenderer renderer = new XYShapeRenderer();\n        Paint paint = Color.RED;\n        /* write */ renderer.setOutlinePaint(paint);\n        /* read */ Paint outlinePaint = renderer.getOutlinePaint();\n        System.out.println(outlinePaint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYShapeRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.awt.BasicStroke;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYShapeRenderer shapeRenderer = new XYShapeRenderer();\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        \n        Paint paint = Color.RED;\n        Paint linePaint = Color.BLUE;\n        \n        // Set outline paint for shape renderer\n        /* write */ shapeRenderer.setOutlinePaint(paint);\n        \n        // Set some properties for line renderer\n        lineRenderer.setSeriesPaint(0, linePaint);\n        lineRenderer.setSeriesStroke(0, new BasicStroke(2.0f));\n        \n        // Perform operations with lineRenderer\n        Paint seriesPaint = lineRenderer.getSeriesPaint(0);\n        System.out.println(\"Line Renderer Series Paint: \" + seriesPaint);\n        \n        // Complex operations with shapeRenderer\n        for (int i = 0; i < 5; i++) {\n            shapeRenderer.setSeriesOutlineStroke(i, new BasicStroke(i + 1.0f));\n        }\n        \n        // Retrieve and print outline paint for shape renderer\n        /* read */ Paint outlinePaint = shapeRenderer.getOutlinePaint();\n        System.out.println(\"Shape Renderer Outline Paint: \" + outlinePaint);\n        \n        // Additional operations\n        for (int i = 0; i < 3; i++) {\n            lineRenderer.setSeriesShapesVisible(i, i % 2 == 0);\n            System.out.println(\"Line Renderer Series \" + i + \" Shapes Visible: \" + lineRenderer.getSeriesShapesVisible(i));\n        }\n    }\n}"
}