{
    "files": {
        "StrokeManager.java": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class StrokeManager {\n    private XYStepAreaRenderer stepAreaRenderer = new XYStepAreaRenderer();\n    private Stroke initialStroke = new BasicStroke(2.0f);\n\n    public StrokeManager() {\n        /* write */ stepAreaRenderer.setSeriesStroke(0, initialStroke);\n    }\n\n    public void setSeriesStroke(int series, Stroke stroke) {\n        stepAreaRenderer.setSeriesStroke(series, stroke);\n    }\n\n    public Stroke getSeriesStroke(int series) {\n        return stepAreaRenderer.getSeriesStroke(series);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private StrokeManager strokeManager = new StrokeManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void setStrokeForSeries(int series, Stroke stroke) {\n        strokeManager.setSeriesStroke(series, stroke);\n    }\n\n    public Stroke getStrokeForSeries(int series) {\n        return strokeManager.getSeriesStroke(series);\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Art 101\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        Stroke alternateStroke = new BasicStroke(3.0f);\n        student1.setStrokeForSeries(1, alternateStroke);\n\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName());\n            /* read */ Stroke retrievedStroke = student.getStrokeForSeries(0);\n            System.out.println(\"Retrieved Stroke: \" + retrievedStroke);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "write_method": "setSeriesStroke",
        "read_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "read_method": "getSeriesStroke"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        Stroke stroke = new BasicStroke(2.0f);\n        /* write */ renderer.setSeriesStroke(0, stroke);\n        /* read */ Stroke retrievedStroke = renderer.getSeriesStroke(0);\n        System.out.println(retrievedStroke);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer stepAreaRenderer = new XYStepAreaRenderer();\n        Stroke initialStroke = new BasicStroke(2.0f);\n        Stroke alternateStroke = new BasicStroke(3.0f);\n        \n        /* write */ stepAreaRenderer.setSeriesStroke(0, initialStroke);\n        \n        // Additional complex logic\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        lineRenderer.setSeriesStroke(0, alternateStroke);\n        \n        for (int i = 0; i < 5; i++) {\n            Stroke tempStroke = new BasicStroke(i + 1.0f);\n            lineRenderer.setSeriesStroke(i, tempStroke);\n        }\n        \n        Stroke lineRendererStroke = lineRenderer.getSeriesStroke(0);\n        System.out.println(\"Stroke from lineRenderer: \" + lineRendererStroke);\n        \n        // More logic to manipulate strokes\n        Stroke[] strokeArray = new Stroke[5];\n        for (int i = 0; i < strokeArray.length; i++) {\n            strokeArray[i] = new BasicStroke((i + 1) * 0.5f);\n        }\n        \n        for (Stroke s : strokeArray) {\n            System.out.println(\"Array Stroke: \" + s);\n        }\n        \n        /* read */ Stroke retrievedStroke = stepAreaRenderer.getSeriesStroke(0);\n        System.out.println(\"Retrieved Stroke from stepAreaRenderer: \" + retrievedStroke);\n        \n        // Additional logic after the read operation\n        for (int i = 0; i < 3; i++) {\n            Stroke dynamicStroke = new BasicStroke(i * 1.5f);\n            stepAreaRenderer.setSeriesStroke(i, dynamicStroke);\n        }\n        \n        Stroke finalStroke = stepAreaRenderer.getSeriesStroke(2);\n        System.out.println(\"Final Stroke from stepAreaRenderer: \" + finalStroke);\n    }\n}"
}