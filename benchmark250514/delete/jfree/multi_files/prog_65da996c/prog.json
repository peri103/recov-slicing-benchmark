{
    "files": {
        "NumberFormatManager.java": "import org.jfree.chart.labels.StandardXYToolTipGenerator;\nimport java.text.NumberFormat;\n\npublic class NumberFormatManager {\n    private StandardXYToolTipGenerator generator;\n\n    public NumberFormatManager() {\n        generator = new StandardXYToolTipGenerator();\n    }\n\n    public void setFormat(NumberFormat format) {\n        /* write */ generator.setNumberFormat(format);\n    }\n\n    public NumberFormat getFormat() {\n        return generator.getNumberFormat();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public ArrayList<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.text.NumberFormat;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create NumberFormatManager to manage number formats\n        NumberFormatManager formatManager = new NumberFormatManager();\n\n        // Create a NumberFormat instance\n        NumberFormat numberFormat = NumberFormat.getInstance();\n\n        // Set the number format using the manager\n        formatManager.setFormat(numberFormat);\n\n        // Create a HashMap to store students and their scores\n        HashMap<String, Student> studentMap = new HashMap<>();\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        student1.addScore(85);\n        student1.addScore(90);\n        student2.addScore(78);\n        student2.addScore(82);\n\n        studentMap.put(student1.getName(), student1);\n        studentMap.put(student2.getName(), student2);\n\n        // Retrieve and print scores for each student\n        for (String studentName : studentMap.keySet()) {\n            Student student = studentMap.get(studentName);\n            System.out.println(\"Scores for \" + student.getName() + \": \" + student.getScores());\n        }\n\n        // Retrieve the number format using the manager\n        /* read */ NumberFormat retrievedFormat = formatManager.getFormat();\n\n        // Print the retrieved number format to verify it matches the set format\n        System.out.println(\"NumberFormat equals: \" + retrievedFormat.equals(numberFormat));\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.labels.StandardXYToolTipGenerator",
        "write_method": "setNumberFormat",
        "read_class": "org.jfree.chart.labels.StandardXYToolTipGenerator",
        "read_method": "getNumberFormat"
    },
    "java_code_simple": "import org.jfree.chart.labels.StandardXYToolTipGenerator;\nimport java.text.NumberFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of StandardXYToolTipGenerator\n        StandardXYToolTipGenerator generator = new StandardXYToolTipGenerator();\n\n        // Create a NumberFormat instance\n        NumberFormat numberFormat = NumberFormat.getInstance();\n\n        // Use the write method to set the number format\n        /* write */ generator.setNumberFormat(numberFormat);\n\n        // Use the read method to get the number format\n        /* read */ NumberFormat retrievedFormat = generator.getNumberFormat();\n\n        // Print the retrieved number format to verify it matches the set format\n        System.out.println(retrievedFormat.equals(numberFormat));\n    }\n}",
    "java_code_complex": "import org.jfree.chart.labels.StandardXYToolTipGenerator;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of StandardXYToolTipGenerator\n        StandardXYToolTipGenerator generator = new StandardXYToolTipGenerator();\n\n        // Create a NumberFormat instance\n        NumberFormat numberFormat = NumberFormat.getInstance();\n\n        // Create a HashMap to store some data\n        HashMap<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"One\", 1);\n        dataMap.put(\"Two\", 2);\n        dataMap.put(\"Three\", 3);\n\n        // Use the write method to set the number format\n        /* write */ generator.setNumberFormat(numberFormat);\n\n        // Perform operations on the HashMap\n        for (String key : dataMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + dataMap.get(key));\n        }\n\n        // Create an ArrayList to store some numbers\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numberList.add(i * 10);\n        }\n\n        // Sum up the numbers in the ArrayList\n        int sum = 0;\n        for (Integer num : numberList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Use the read method to get the number format\n        /* read */ NumberFormat retrievedFormat = generator.getNumberFormat();\n\n        // Print the retrieved number format to verify it matches the set format\n        System.out.println(\"NumberFormat equals: \" + retrievedFormat.equals(numberFormat));\n\n        // Further operations on the ArrayList\n        for (int i = 0; i < numberList.size(); i++) {\n            System.out.println(\"Number at index \" + i + \": \" + numberList.get(i));\n        }\n    }\n}"
}