{
    "java_code": "import org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.multimap.PredicatedMultiValuedMap;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\nimport org.apache.commons.collections4.map.PredicatedMap;\nimport org.apache.commons.collections4.map.HashedMap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a predicate that allows all entries\n        Predicate<Object> alwaysTruePredicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return true;\n            }\n        };\n\n        // Create a PredicatedMultiValuedMap with the predicate\n        PredicatedMultiValuedMap<String, Integer> map = new PredicatedMultiValuedMap<>(\n                new ArrayListValuedHashMap<>(), alwaysTruePredicate, alwaysTruePredicate);\n\n        /* write */ map.put(\"key\", 42);\n\n        // Create another predicated map\n        PredicatedMap<String, String> stringMap = new PredicatedMap<>(\n                new HashedMap<>(), alwaysTruePredicate, alwaysTruePredicate);\n        \n        stringMap.put(\"hello\", \"world\");\n        stringMap.put(\"foo\", \"bar\");\n\n        // Perform some operations on the stringMap\n        String greeting = stringMap.get(\"hello\");\n        System.out.println(\"Greeting: \" + greeting);\n\n        // Additional operations on the map\n        map.put(\"anotherKey\", 100);\n        map.put(\"anotherKey\", 200);\n\n        // Iterate over the values of \"anotherKey\"\n        Collection<Integer> values = map.get(\"anotherKey\");\n        for (Integer val : values) {\n            System.out.println(\"Value for 'anotherKey': \" + val);\n        }\n\n        // More complex operations\n        int sum = 0;\n        for (Integer val : map.get(\"anotherKey\")) {\n            sum += val;\n        }\n        System.out.println(\"Sum of values for 'anotherKey': \" + sum);\n\n        /* read */ Integer value = map.get(\"key\").iterator().next();\n\n        System.out.println(\"Value for 'key': \" + value);\n\n        // Perform some operations on a standard map\n        HashedMap<String, Integer> standardMap = new HashedMap<>();\n        standardMap.put(\"x\", 10);\n        standardMap.put(\"y\", 20);\n\n        int total = 0;\n        for (Integer number : standardMap.values()) {\n            total += number;\n        }\n        System.out.println(\"Total sum of standardMap values: \" + total);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.multimap.PredicatedMultiValuedMap;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a predicate that allows all entries\n        Predicate<Object> alwaysTruePredicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return true;\n            }\n        };\n\n        // Create a PredicatedMultiValuedMap with the predicate\n        PredicatedMultiValuedMap<String, Integer> map = new PredicatedMultiValuedMap<>(\n                new ArrayListValuedHashMap<>(), alwaysTruePredicate, alwaysTruePredicate);\n\n        /* write */ map.put(\"key\", 42);\n\n        /* read */ Integer value = map.get(\"key\").iterator().next();\n\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.PredicatedMultiValuedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.PredicatedMultiValuedMap",
        "read_method": "get"
    }
}