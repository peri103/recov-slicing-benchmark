{
    "java_code": "import org.apache.commons.collections4.multimap.PredicatedMultiValuedMap;\nimport org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.map.MultiValueMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a predicate that allows all entries\n        Predicate<Object> predicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return true;\n            }\n        };\n\n        // Create a MultiValuedMap with a predicate\n        MultiValuedMap<String, Integer> baseMap = new MultiValueMap<>();\n        PredicatedMultiValuedMap<String, Integer> map = new PredicatedMultiValuedMap<>(baseMap, predicate, predicate);\n\n        /* write */ map.put(\"key\", 42);\n\n        // Create a HashMap and populate it\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"name\", \"John\");\n        hashMap.put(\"city\", \"New York\");\n\n        // Perform operations on HashMap\n        String name = hashMap.get(\"name\");\n        System.out.println(\"Name: \" + name);\n\n        // Create another MultiValuedMap without predicates\n        MultiValuedMap<String, String> anotherMap = new MultiValueMap<>();\n        anotherMap.put(\"fruit\", \"apple\");\n        anotherMap.put(\"fruit\", \"banana\");\n\n        // Iterate and print values from anotherMap\n        for (String fruit : anotherMap.get(\"fruit\")) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n\n        // Complex operation using the original map\n        int sum = 0;\n        for (Integer number : map.get(\"key\")) {\n            sum += number;\n        }\n\n        // More operations on HashMap\n        hashMap.put(\"country\", \"USA\");\n        hashMap.put(\"city\", \"Los Angeles\");\n\n        // Print updated HashMap values\n        System.out.println(\"Updated City: \" + hashMap.get(\"city\"));\n        System.out.println(\"Country: \" + hashMap.get(\"country\"));\n\n        /* read */ Integer value = map.get(\"key\").iterator().next(); // As get returns a Collection\n\n        System.out.println(value);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.multimap.PredicatedMultiValuedMap;\nimport org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.map.MultiValueMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a predicate that allows all entries\n        Predicate<Object> predicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return true;\n            }\n        };\n\n        // Create a MultiValuedMap with a predicate\n        MultiValuedMap<String, Integer> baseMap = new MultiValueMap<>();\n        PredicatedMultiValuedMap<String, Integer> map = new PredicatedMultiValuedMap<>(baseMap, predicate, predicate);\n\n        /* write */ map.put(\"key\", 42);\n\n        /* read */ Integer value = map.get(\"key\").iterator().next(); // As get returns a Collection\n\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.PredicatedMultiValuedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.PredicatedMultiValuedMap",
        "read_method": "get"
    }
}