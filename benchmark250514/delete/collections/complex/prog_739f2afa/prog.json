{
    "java_code": "import org.apache.commons.collections4.multimap.PredicatedMultiValuedMap;\nimport org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.map.LinkedMap;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Predicate<Object> alwaysTrue = obj -> true; // A predicate that always returns true\n        MultiValuedMap<String, Integer> map = new PredicatedMultiValuedMap<>(new LinkedMap<>(), alwaysTrue, alwaysTrue);\n\n        // Unrelated code to add complexity\n        MultiValuedMap<String, String> stringMap = new ArrayListValuedHashMap<>();\n        stringMap.put(\"hello\", \"world\");\n        stringMap.put(\"foo\", \"bar\");\n        stringMap.put(\"foo\", \"baz\");\n\n        for (String key : stringMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Values: \" + stringMap.get(key));\n        }\n\n        /* write */ map.put(\"key\", 42);\n\n        // More unrelated code\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Using another MultiValuedMap instance\n        MultiValuedMap<String, Integer> anotherMap = new ArrayListValuedHashMap<>();\n        anotherMap.put(\"numbers\", 1);\n        anotherMap.put(\"numbers\", 2);\n        anotherMap.put(\"numbers\", 3);\n\n        for (Integer num : anotherMap.get(\"numbers\")) {\n            System.out.println(\"Number: \" + num);\n        }\n\n        // Original read operation\n        /* read */ Integer value = map.get(\"key\").iterator().next();\n        System.out.println(\"Value read from map: \" + value);\n\n        // Additional unrelated code\n        Predicate<Integer> isEven = num -> num % 2 == 0;\n        for (Integer num : anotherMap.get(\"numbers\")) {\n            if (isEven.evaluate(num)) {\n                System.out.println(num + \" is even.\");\n            } else {\n                System.out.println(num + \" is odd.\");\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.multimap.PredicatedMultiValuedMap;\nimport org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.map.LinkedMap;\nimport org.apache.commons.collections4.Predicate;\n\npublic class Main {\n    public static void main(String[] args) {\n        Predicate<Object> alwaysTrue = obj -> true; // A predicate that always returns true\n        MultiValuedMap<String, Integer> map = new PredicatedMultiValuedMap<>(new LinkedMap<>(), alwaysTrue, alwaysTrue);\n\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.PredicatedMultiValuedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.PredicatedMultiValuedMap",
        "read_method": "get"
    }
}