{
    "java_code": "import org.apache.commons.collections4.map.AbstractDualBidiMap;\nimport org.apache.commons.collections4.map.DualHashBidiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map using a concrete implementation of AbstractDualBidiMap\n        AbstractDualBidiMap<String, Integer> map = new DualHashBidiMap<>();\n        \n        // Additional unrelated map using HashMap\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n\n        // Perform operations on hashMap\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \" -> \" + entry.getValue());\n        }\n\n        /* write */ map.put(\"key1\", 100);\n        \n        // Unrelated computation\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Additional unrelated map using HashMap\n        Map<Integer, String> anotherMap = new HashMap<>();\n        anotherMap.put(1, \"One\");\n        anotherMap.put(2, \"Two\");\n\n        // Perform operations on anotherMap\n        for (Map.Entry<Integer, String> entry : anotherMap.entrySet()) {\n            System.out.println(entry.getKey() + \" -> \" + entry.getValue());\n        }\n\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(value);\n\n        // Further operations on map\n        map.put(\"key2\", 200);\n        map.put(\"key3\", 300);\n\n        // Print all key-value pairs in the map\n        for (String key : map.keySet()) {\n            System.out.println(key + \" -> \" + map.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractDualBidiMap;\nimport org.apache.commons.collections4.map.DualHashBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map using a concrete implementation of AbstractDualBidiMap\n        AbstractDualBidiMap<String, Integer> map = new DualHashBidiMap<>();\n\n        /* write */ map.put(\"key1\", 100);\n        /* read */ Integer value = map.get(\"key1\");\n\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractDualBidiMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractDualBidiMap",
        "read_method": "get"
    }
}