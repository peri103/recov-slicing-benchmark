{
    "java_code": "import org.apache.commons.collections4.map.AbstractBidiMapDecorator;\nimport org.apache.commons.collections4.BidiMap;\nimport org.apache.commons.collections4.bidimap.TreeBidiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        BidiMap<String, Integer> bidiMap = new TreeBidiMap<>();\n        AbstractBidiMapDecorator<String, Integer> decoratedMap = new AbstractBidiMapDecorator<>(bidiMap) {};\n        \n        Map<String, String> simpleMap = new HashMap<>();\n        simpleMap.put(\"hello\", \"world\");\n        \n        for (Map.Entry<String, String> entry : simpleMap.entrySet()) {\n            System.out.println(entry.getKey() + \" : \" + entry.getValue());\n        }\n        \n        /* write */ decoratedMap.put(\"key\", 42);\n        \n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 integers: \" + sum);\n        \n        Map<String, Integer> anotherMap = new HashMap<>();\n        anotherMap.put(\"A\", 1);\n        anotherMap.put(\"B\", 2);\n        \n        for (Map.Entry<String, Integer> entry : anotherMap.entrySet()) {\n            System.out.println(entry.getKey() + \" : \" + entry.getValue());\n        }\n        \n        /* read */ int value = decoratedMap.get(\"key\");\n        \n        System.out.println(value);\n        \n        Map<Integer, String> reverseMap = new HashMap<>();\n        reverseMap.put(1, \"One\");\n        reverseMap.put(2, \"Two\");\n        \n        for (Map.Entry<Integer, String> entry : reverseMap.entrySet()) {\n            System.out.println(entry.getKey() + \" : \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractBidiMapDecorator;\nimport org.apache.commons.collections4.BidiMap;\nimport org.apache.commons.collections4.bidimap.TreeBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        BidiMap<String, Integer> bidiMap = new TreeBidiMap<>();\n        AbstractBidiMapDecorator<String, Integer> decoratedMap = new AbstractBidiMapDecorator<>(bidiMap) {};\n        \n        /* write */ decoratedMap.put(\"key\", 42);\n        /* read */ int value = decoratedMap.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractBidiMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractBidiMapDecorator",
        "read_method": "get"
    }
}