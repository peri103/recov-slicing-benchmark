{
    "java_code": "import org.apache.commons.collections4.map.AbstractIterableMap;\nimport org.apache.commons.collections4.map.HashedMap;\nimport org.apache.commons.collections4.list.TreeList;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        AbstractIterableMap<String, Integer> map = new HashedMap<>();\n        TreeList<String> treeList = new TreeList<>();\n        ArrayList<Integer> arrayList = new ArrayList<>();\n\n        // Adding some initial values to the collections\n        treeList.add(\"Alpha\");\n        treeList.add(\"Beta\");\n        arrayList.add(100);\n        arrayList.add(200);\n\n        // Perform some operations on the collections\n        for (String item : treeList) {\n            System.out.println(\"TreeList item: \" + item);\n        }\n\n        for (Integer num : arrayList) {\n            System.out.println(\"ArrayList item: \" + num);\n        }\n\n        // Write to the map\n        /* write */ map.put(\"key\", 42);\n\n        // More operations\n        treeList.add(\"Gamma\");\n        arrayList.add(300);\n\n        // Simulate some processing\n        int sum = 0;\n        for (Integer num : arrayList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of ArrayList: \" + sum);\n\n        // Read from the map\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(\"Value from map: \" + value);\n\n        // Further operations\n        treeList.remove(\"Beta\");\n        arrayList.remove((Integer) 200);\n\n        for (String item : treeList) {\n            System.out.println(\"Updated TreeList item: \" + item);\n        }\n\n        for (Integer num : arrayList) {\n            System.out.println(\"Updated ArrayList item: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractIterableMap;\nimport org.apache.commons.collections4.map.HashedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        AbstractIterableMap<String, Integer> map = new HashedMap<>();\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractIterableMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractIterableMap",
        "read_method": "get"
    }
}