{
    "java_code": "import org.apache.commons.collections4.map.AbstractDualBidiMap;\nimport org.apache.commons.collections4.map.DualHashBidiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        AbstractDualBidiMap<String, Integer> bidiMap = new DualHashBidiMap<>();\n        Map<String, String> simpleMap = new HashMap<>();\n        \n        // Using a simple map to store some values\n        simpleMap.put(\"A\", \"Apple\");\n        simpleMap.put(\"B\", \"Banana\");\n        \n        // Perform some operations on the simple map\n        for (Map.Entry<String, String> entry : simpleMap.entrySet()) {\n            System.out.println(entry.getKey() + \" -> \" + entry.getValue());\n        }\n        \n        /* write */ bidiMap.put(\"key\", 100);\n        \n        // Additional operations on the bidiMap\n        bidiMap.put(\"anotherKey\", 200);\n        bidiMap.put(\"thirdKey\", 300);\n        bidiMap.remove(\"anotherKey\");\n        \n        // Using the bidiMap in a different context\n        if (bidiMap.containsKey(\"thirdKey\")) {\n            System.out.println(\"thirdKey exists in bidiMap.\");\n        }\n        \n        // Other unrelated logic\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9 is: \" + sum);\n        \n        /* read */ int value = bidiMap.get(\"key\");\n        System.out.println(value);\n        \n        // Final operations on the simple map\n        simpleMap.put(\"C\", \"Cherry\");\n        for (String key : simpleMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + simpleMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractDualBidiMap;\nimport org.apache.commons.collections4.map.DualHashBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        AbstractDualBidiMap<String, Integer> bidiMap = new DualHashBidiMap<>();\n        /* write */ bidiMap.put(\"key\", 100);\n        /* read */ int value = bidiMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractDualBidiMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractDualBidiMap",
        "read_method": "get"
    }
}