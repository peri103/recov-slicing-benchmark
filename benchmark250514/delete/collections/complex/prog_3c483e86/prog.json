{
    "java_code": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.map.TreeBidiMap;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the main map using AbstractOrderedBidiMapDecorator\n        AbstractOrderedBidiMapDecorator<String, Integer> map = new AbstractOrderedBidiMapDecorator<>(new TreeBidiMap<>());\n        \n        // Initialize additional collections for complexity\n        HashMap<String, String> hashMap = new HashMap<>();\n        ArrayList<Integer> arrayList = new ArrayList<>();\n\n        // Populate the HashMap\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n\n        // Populate the ArrayList\n        for (int i = 0; i < 5; i++) {\n            arrayList.add(i * 10);\n        }\n\n        // Perform operations on the HashMap\n        String fruit = hashMap.get(\"A\");\n        System.out.println(\"Fruit from HashMap: \" + fruit);\n\n        // Perform operations on the ArrayList\n        for (Integer num : arrayList) {\n            System.out.println(\"Number from ArrayList: \" + num);\n        }\n\n        // Write to the main map\n        /* write */ map.put(\"key1\", 100);\n\n        // Perform additional unrelated operations\n        hashMap.put(\"C\", \"Cherry\");\n        arrayList.add(60);\n\n        // Read from the main map\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(\"Value from Map: \" + value);\n\n        // Further operations on the ArrayList\n        for (int i = 0; i < arrayList.size(); i++) {\n            System.out.println(\"Updated Number from ArrayList: \" + arrayList.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.map.TreeBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        AbstractOrderedBidiMapDecorator<String, Integer> map = new AbstractOrderedBidiMapDecorator<>(new TreeBidiMap<>());\n        /* write */ map.put(\"key1\", 100);\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "read_method": "get"
    }
}