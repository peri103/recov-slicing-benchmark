{
    "java_code": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.TransformedMultiValuedMap;\nimport org.apache.commons.collections4.map.LinkedMap;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a LinkedMap to use as the base map for the TransformedMultiValuedMap\n        LinkedMap<String, String> baseMap = new LinkedMap<>();\n\n        // Create a TransformedMultiValuedMap using the baseMap\n        MultiValuedMap<String, String> transformedMap = TransformedMultiValuedMap.transformedMap(baseMap, null, null);\n\n        /* write */ transformedMap.put(\"key1\", \"value1\");\n\n        // Additional unrelated code to increase complexity\n        Map<String, Integer> simpleMap = new HashMap<>();\n        simpleMap.put(\"A\", 100);\n        simpleMap.put(\"B\", 200);\n        simpleMap.put(\"C\", 300);\n\n        int sum = 0;\n        for (String key : simpleMap.keySet()) {\n            sum += simpleMap.get(key);\n        }\n        System.out.println(\"Sum of values in simpleMap: \" + sum);\n\n        // Use another TransformedMultiValuedMap for complexity\n        LinkedMap<String, Integer> anotherBaseMap = new LinkedMap<>();\n        MultiValuedMap<String, Integer> anotherTransformedMap = TransformedMultiValuedMap.transformedMap(anotherBaseMap, null, null);\n        anotherTransformedMap.put(\"numbers\", 1);\n        anotherTransformedMap.put(\"numbers\", 2);\n        anotherTransformedMap.put(\"numbers\", 3);\n\n        Collection<Integer> numberValues = anotherTransformedMap.get(\"numbers\");\n        int total = 0;\n        for (Integer number : numberValues) {\n            total += number;\n        }\n        System.out.println(\"Total of numbers in anotherTransformedMap: \" + total);\n\n        // Further processing before reading the original map\n        for (String key : simpleMap.keySet()) {\n            transformedMap.put(key, simpleMap.get(key).toString());\n        }\n\n        /* read */ Collection<String> values = transformedMap.get(\"key1\");\n\n        // Print the values retrieved from the map\n        for (String value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.TransformedMultiValuedMap;\nimport org.apache.commons.collections4.map.LinkedMap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a LinkedMap to use as the base map for the TransformedMultiValuedMap\n        LinkedMap<String, String> baseMap = new LinkedMap<>();\n\n        // Create a TransformedMultiValuedMap using the baseMap\n        MultiValuedMap<String, String> transformedMap = TransformedMultiValuedMap.transformedMap(baseMap, null, null);\n\n        /* write */ transformedMap.put(\"key1\", \"value1\");\n\n        /* read */ Collection<String> values = transformedMap.get(\"key1\");\n\n        // Print the values retrieved from the map\n        for (String value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.TransformedMultiValuedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.TransformedMultiValuedMap",
        "read_method": "get"
    }
}