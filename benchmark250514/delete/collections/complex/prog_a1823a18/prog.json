{
    "java_code": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.map.HashedMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashMap<String, Integer> baseMap = new HashMap<>();\n        AbstractOrderedBidiMapDecorator<String, Integer> bidiMap = new AbstractOrderedBidiMapDecorator<>(baseMap);\n        \n        /* write */ bidiMap.put(\"key1\", 100);\n        \n        // Additional unrelated code to increase complexity\n        HashedMap<String, Integer> anotherMap = new HashedMap<>();\n        anotherMap.put(\"key2\", 200);\n        anotherMap.put(\"key3\", 300);\n\n        for (String key : anotherMap.keySet()) {\n            System.out.println(\"Another Map Key: \" + key + \", Value: \" + anotherMap.get(key));\n        }\n\n        int sum = 0;\n        for (Integer value : anotherMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in anotherMap: \" + sum);\n\n        // Complex logic involving bidiMap\n        if (bidiMap.containsKey(\"key1\")) {\n            bidiMap.put(\"key4\", bidiMap.get(\"key1\") + 50);\n        }\n\n        for (String key : bidiMap.keySet()) {\n            System.out.println(\"BidiMap Key: \" + key + \", Value: \" + bidiMap.get(key));\n        }\n\n        /* read */ Integer value = bidiMap.get(\"key1\");\n        \n        System.out.println(\"Read value from bidiMap: \" + value);\n\n        // More complex operations\n        AbstractOrderedBidiMapDecorator<String, Integer> additionalBidiMap = new AbstractOrderedBidiMapDecorator<>(new HashMap<>());\n        additionalBidiMap.put(\"key5\", 500);\n        additionalBidiMap.put(\"key6\", 600);\n\n        for (String key : additionalBidiMap.keySet()) {\n            System.out.println(\"Additional BidiMap Key: \" + key + \", Value: \" + additionalBidiMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashMap<String, Integer> baseMap = new HashMap<>();\n        AbstractOrderedBidiMapDecorator<String, Integer> bidiMap = new AbstractOrderedBidiMapDecorator<>(baseMap);\n        \n        /* write */ bidiMap.put(\"key1\", 100);\n        /* read */ Integer value = bidiMap.get(\"key1\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "read_method": "get"
    }
}