{
    "java_code": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport org.apache.commons.collections4.map.HashedMap;\nimport org.apache.commons.collections4.map.ListOrderedMap;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original map using AbstractMapDecorator\n        AbstractMapDecorator<String, Integer> map = new HashedMap<>();\n        /* write */ map.put(\"key\", 42);\n\n        // Additional map using ListOrderedMap\n        ListOrderedMap<String, String> orderedMap = new ListOrderedMap<>();\n        orderedMap.put(\"first\", \"Hello\");\n        orderedMap.put(\"second\", \"World\");\n\n        // Some operations with ListOrderedMap\n        for (String key : orderedMap.keySet()) {\n            System.out.println(\"OrderedMap Key: \" + key + \", Value: \" + orderedMap.get(key));\n        }\n\n        // Additional list operations\n        List<String> list = new ArrayList<>();\n        list.add(\"Java\");\n        list.add(\"Programming\");\n\n        for (String item : list) {\n            System.out.println(\"List Item: \" + item);\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Read operation for the original map\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n\n        // Additional operations after the read\n        for (int i = 0; i < 5; i++) {\n            list.add(\"Item \" + i);\n        }\n\n        for (String item : list) {\n            System.out.println(\"Updated List Item: \" + item);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport org.apache.commons.collections4.map.HashedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        AbstractMapDecorator<String, Integer> map = new HashedMap<>();\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractMapDecorator",
        "read_method": "get"
    }
}