{
    "java_code": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.TransformedMultiValuedMap;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\nimport org.apache.commons.collections4.map.MultiValueMap;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the base MultiValuedMap\n        MultiValuedMap<String, Integer> baseMap = new ArrayListValuedHashMap<>();\n        \n        // Create a TransformedMultiValuedMap with no transformation (identity transformation)\n        MultiValuedMap<String, Integer> transformedMap = TransformedMultiValuedMap.transformedMap(baseMap, null, null);\n        \n        /* write */ transformedMap.put(\"key\", 42);\n        \n        // Additional complex code using a MultiValueMap\n        MultiValueMap<String, String> multiValueMap = new MultiValueMap<>();\n        multiValueMap.put(\"fruit\", \"apple\");\n        multiValueMap.put(\"fruit\", \"banana\");\n        multiValueMap.put(\"color\", \"red\");\n        \n        // Iterating over the MultiValueMap\n        for (Map.Entry<String, String> entry : multiValueMap.entries()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Using a regular HashMap for additional complexity\n        Map<String, Double> priceMap = new HashMap<>();\n        priceMap.put(\"apple\", 1.99);\n        priceMap.put(\"banana\", 0.99);\n        priceMap.put(\"orange\", 1.49);\n        \n        // Calculate total price\n        double totalPrice = 0;\n        for (double price : priceMap.values()) {\n            totalPrice += price;\n        }\n        System.out.println(\"Total Price: \" + totalPrice);\n        \n        // Access the original transformed map\n        if (!transformedMap.containsKey(\"key\")) {\n            transformedMap.put(\"key\", 100); // This line will not execute since \"key\" already exists\n        }\n        \n        // More unrelated code\n        int counter = 0;\n        while (counter < 3) {\n            System.out.println(\"Counter: \" + counter);\n            counter++;\n        }\n        \n        // Final read operation\n        /* read */ Integer value = transformedMap.get(\"key\").iterator().next();\n        \n        System.out.println(\"Read value from transformedMap: \" + value);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.TransformedMultiValuedMap;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the base MultiValuedMap\n        MultiValuedMap<String, Integer> baseMap = new ArrayListValuedHashMap<>();\n        \n        // Create a TransformedMultiValuedMap with no transformation (identity transformation)\n        MultiValuedMap<String, Integer> transformedMap = TransformedMultiValuedMap.transformedMap(baseMap, null, null);\n        \n        /* write */ transformedMap.put(\"key\", 42);\n        \n        /* read */ Integer value = transformedMap.get(\"key\").iterator().next();\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.TransformedMultiValuedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.TransformedMultiValuedMap",
        "read_method": "get"
    }
}