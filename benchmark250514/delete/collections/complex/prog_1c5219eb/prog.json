{
    "java_code": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.map.TreeBidiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the AbstractOrderedBidiMapDecorator with a TreeBidiMap\n        AbstractOrderedBidiMapDecorator<String, Integer> bidiMap = new AbstractOrderedBidiMapDecorator<>(new TreeBidiMap<>());\n\n        // Initialize a HashMap for unrelated operations\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n\n        // Perform some operations on the HashMap\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Add more entries to the HashMap\n        hashMap.put(\"C\", \"Cherry\");\n        hashMap.put(\"D\", \"Date\");\n\n        // Perform a search in the HashMap\n        String fruit = hashMap.get(\"C\");\n        System.out.println(\"Retrieved fruit: \" + fruit);\n\n        /* write */ bidiMap.put(\"key1\", 100);\n\n        // Perform additional operations on the bidiMap\n        bidiMap.put(\"key2\", 200);\n        bidiMap.put(\"key3\", 300);\n        System.out.println(\"Keys in bidiMap: \" + bidiMap.keySet());\n\n        // Perform some unrelated calculations\n        int sum = 0;\n        for (int i = 1; i <= 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 natural numbers: \" + sum);\n\n        // Use a loop to iterate over the bidiMap\n        for (String key : bidiMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + bidiMap.get(key));\n        }\n\n        /* read */ Integer value = bidiMap.get(\"key1\");\n\n        System.out.println(\"Value retrieved from bidiMap: \" + value);\n\n        // Perform a final operation on the HashMap\n        hashMap.remove(\"B\");\n        System.out.println(\"HashMap after removal: \" + hashMap);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.map.TreeBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the AbstractOrderedBidiMapDecorator with a TreeBidiMap\n        AbstractOrderedBidiMapDecorator<String, Integer> bidiMap = new AbstractOrderedBidiMapDecorator<>(new TreeBidiMap<>());\n\n        /* write */ bidiMap.put(\"key1\", 100);\n\n        /* read */ Integer value = bidiMap.get(\"key1\");\n\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "read_method": "get"
    }
}