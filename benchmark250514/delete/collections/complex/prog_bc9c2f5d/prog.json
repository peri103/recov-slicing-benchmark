{
    "java_code": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.map.DualHashBidiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map using a DualHashBidiMap which is a concrete implementation\n        AbstractOrderedBidiMapDecorator<String, Integer> map = new AbstractOrderedBidiMapDecorator<>(new DualHashBidiMap<>());\n\n        /* write */ map.put(\"key\", 42);\n\n        // Additional unrelated code to make the program more complex\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"name\", \"John\");\n        hashMap.put(\"city\", \"New York\");\n        \n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // More operations on the original map\n        map.put(\"anotherKey\", 100);\n        map.put(\"thirdKey\", 200);\n        \n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // Adding more complexity with a simple calculation\n        int a = 5, b = 10;\n        int result = a * b + sum;\n        System.out.println(\"Result of calculation: \" + result);\n\n        /* read */ Integer value = map.get(\"key\");\n\n        // Print the value that was read from the map\n        System.out.println(value);\n\n        // Additional logic to manipulate the map\n        map.remove(\"anotherKey\");\n        if (map.containsKey(\"thirdKey\")) {\n            map.put(\"thirdKey\", map.get(\"thirdKey\") + 50);\n        }\n        \n        System.out.println(\"Updated map values:\");\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.map.DualHashBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map using a DualHashBidiMap which is a concrete implementation\n        AbstractOrderedBidiMapDecorator<String, Integer> map = new AbstractOrderedBidiMapDecorator<>(new DualHashBidiMap<>());\n\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n\n        // Print the value that was read from the map\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "read_method": "get"
    }
}