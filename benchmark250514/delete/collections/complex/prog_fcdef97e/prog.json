{
    "java_code": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.bidimap.DualHashBidiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the underlying map for the decorator\n        DualHashBidiMap<String, Integer> bidiMap = new DualHashBidiMap<>();\n        \n        // Create an instance of AbstractOrderedBidiMapDecorator\n        AbstractOrderedBidiMapDecorator<String, Integer> mapDecorator = new AbstractOrderedBidiMapDecorator<>(bidiMap) {};\n\n        Map<String, Integer> additionalMap = new HashMap<>();\n        additionalMap.put(\"extraKey1\", 100);\n        additionalMap.put(\"extraKey2\", 200);\n\n        // Additional write operations on different map\n        additionalMap.put(\"extraKey3\", 300);\n\n        /* write */ mapDecorator.put(\"key\", 42);\n\n        // Additional operations\n        int sum = 0;\n        for (Integer value : additionalMap.values()) {\n            sum += value;\n        }\n\n        // Simulate complex logic\n        boolean condition = sum > 500;\n        if (condition) {\n            mapDecorator.put(\"conditionalKey\", 500);\n        } else {\n            mapDecorator.put(\"conditionalKey\", 250);\n        }\n\n        // More complex logic\n        for (int i = 0; i < 5; i++) {\n            mapDecorator.put(\"loopKey\" + i, i * 10);\n        }\n\n        /* read */ int value = mapDecorator.get(\"key\");\n        System.out.println(value);\n\n        // Final output of additional map\n        System.out.println(\"Additional Map Contents:\");\n        for (Map.Entry<String, Integer> entry : additionalMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Output of the mapDecorator\n        System.out.println(\"Map Decorator Contents:\");\n        for (String key : mapDecorator.keySet()) {\n            System.out.println(key + \": \" + mapDecorator.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.bidimap.DualHashBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the underlying map for the decorator\n        DualHashBidiMap<String, Integer> bidiMap = new DualHashBidiMap<>();\n\n        // Create an instance of AbstractOrderedBidiMapDecorator\n        AbstractOrderedBidiMapDecorator<String, Integer> mapDecorator = new AbstractOrderedBidiMapDecorator<>(bidiMap) {};\n\n        /* write */ mapDecorator.put(\"key\", 42);\n        /* read */ int value = mapDecorator.get(\"key\");\n\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "read_method": "get"
    }
}