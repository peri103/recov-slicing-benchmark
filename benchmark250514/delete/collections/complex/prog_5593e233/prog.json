{
    "java_code": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Iterator;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a modifiable MultiValuedMap\n        MultiValuedMap<String, String> modifiableMap = new ArrayListValuedHashMap<>();\n        \n        // Wrap it in an UnmodifiableMultiValuedMap\n        UnmodifiableMultiValuedMap<String, String> map = new UnmodifiableMultiValuedMap<>(modifiableMap);\n        \n        // Additional unrelated map to increase complexity\n        Map<String, Integer> unrelatedMap = new HashMap<>();\n        unrelatedMap.put(\"unrelatedKey1\", 100);\n        unrelatedMap.put(\"unrelatedKey2\", 200);\n        \n        // Perform some operations on the unrelated map\n        for (Map.Entry<String, Integer> entry : unrelatedMap.entrySet()) {\n            System.out.println(\"Unrelated Map Entry: \" + entry.getKey() + \" = \" + entry.getValue());\n        }\n        \n        // Since UnmodifiableMultiValuedMap does not allow direct modification,\n        // we need to modify the underlying modifiable map\n        /* write */ modifiableMap.put(\"key\", \"value\");\n        \n        // Perform some additional operations on the modifiable map\n        modifiableMap.put(\"anotherKey\", \"anotherValue\");\n        modifiableMap.put(\"key\", \"value2\");\n        \n        // Access the value using the unmodifiable map\n        Iterator<String> iterator = map.get(\"key\").iterator();\n        while (iterator.hasNext()) {\n            System.out.println(\"Iterating over values for 'key': \" + iterator.next());\n        }\n        \n        // Access the value using the unmodifiable map\n        /* read */ String value = map.get(\"key\").iterator().next();\n        \n        System.out.println(\"Read value: \" + value);\n        \n        // More operations to increase complexity\n        unrelatedMap.put(\"unrelatedKey3\", 300);\n        \n        for (Map.Entry<String, Integer> entry : unrelatedMap.entrySet()) {\n            if (entry.getValue() > 150) {\n                System.out.println(\"Filtered Unrelated Map Entry: \" + entry.getKey() + \" = \" + entry.getValue());\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a modifiable MultiValuedMap\n        MultiValuedMap<String, String> modifiableMap = new ArrayListValuedHashMap<>();\n        \n        // Wrap it in an UnmodifiableMultiValuedMap\n        UnmodifiableMultiValuedMap<String, String> map = new UnmodifiableMultiValuedMap<>(modifiableMap);\n        \n        // Since UnmodifiableMultiValuedMap does not allow direct modification,\n        // we need to modify the underlying modifiable map\n        /* write */ modifiableMap.put(\"key\", \"value\");\n        \n        // Access the value using the unmodifiable map\n        /* read */ String value = map.get(\"key\").iterator().next();\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap",
        "read_method": "get"
    }
}