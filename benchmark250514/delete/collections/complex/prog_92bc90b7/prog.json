{
    "java_code": "import org.apache.commons.collections4.multimap.TreeValuedHashMap;\nimport java.util.Collection;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeValuedHashMap<String, Integer> map = new TreeValuedHashMap<>();\n        \n        // Additional complex logic\n        HashMap<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"hello\", \"world\");\n        stringMap.put(\"foo\", \"bar\");\n\n        for (String key : stringMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + stringMap.get(key));\n        }\n\n        // More operations on TreeValuedHashMap\n        map.put(\"anotherKey\", 100);\n        map.put(\"anotherKey\", 200);\n        \n        System.out.println(\"Values for 'anotherKey':\");\n        Collection<Integer> anotherValues = map.get(\"anotherKey\");\n        for (Integer value : anotherValues) {\n            System.out.println(value);\n        }\n\n        // Original write-read pair\n        /* write */ map.put(\"key\", 42);\n        \n        // Additional unrelated computation\n        int sum = 0;\n        for (int i = 1; i <= 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 natural numbers: \" + sum);\n\n        // Read operation far from write\n        /* read */ Collection<Integer> values = map.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(\"Value for 'key': \" + value);\n        }\n\n        // More complex operations\n        int product = 1;\n        for (int i = 1; i <= 3; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 3 natural numbers: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.multimap.TreeValuedHashMap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeValuedHashMap<String, Integer> map = new TreeValuedHashMap<>();\n        /* write */ map.put(\"key\", 42);\n        /* read */ Collection<Integer> values = map.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.TreeValuedHashMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.TreeValuedHashMap",
        "read_method": "get"
    }
}