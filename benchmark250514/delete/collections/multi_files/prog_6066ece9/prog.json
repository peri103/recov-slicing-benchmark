{
    "files": {
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "import org.apache.commons.collections4.map.StaticBucketMap;\n\npublic class Student {\n    private String name;\n    private StaticBucketMap scores = new StaticBucketMap();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(String subject, int score) {\n        /* write */ scores.put(subject, score);\n    }\n\n    public StaticBucketMap getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a course\n        Course course = new Course(\"Mathematics\");\n\n        // Create a student and add scores\n        Student student = new Student(\"John\");\n        student.addScore(\"Algebra\", 85);\n        student.addScore(\"Calculus\", 90);\n\n        // Enroll student in the course\n        course.enrollStudent(student);\n\n        // Retrieve and print student scores\n        StaticBucketMap studentScores = student.getScores();\n        /* read */ int algebraScore = (Integer) studentScores.get(\"Algebra\");\n        System.out.println(\"Algebra Score for \" + student.getName() + \": \" + algebraScore);\n\n        // Explore other students in the course\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student: \" + s.getName());\n            StaticBucketMap scores = s.getScores();\n            for (Object subject : scores.keySet()) {\n                System.out.println(subject + \": \" + scores.get(subject));\n            }\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.StaticBucketMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.StaticBucketMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.StaticBucketMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        StaticBucketMap map = new StaticBucketMap();\n        /* write */ map.put(\"key\", \"value\");\n        /* read */ String value = (String) map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.StaticBucketMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        StaticBucketMap map = new StaticBucketMap();\n        HashMap<String, Integer> anotherMap = new HashMap<>();\n        int sum = 0;\n\n        // Fill anotherMap with some values\n        for (int i = 0; i < 5; i++) {\n            anotherMap.put(\"key\" + i, i * 10);\n        }\n\n        // Perform some operations on anotherMap\n        for (int i = 0; i < 5; i++) {\n            sum += anotherMap.get(\"key\" + i);\n        }\n        System.out.println(\"Sum of values in anotherMap: \" + sum);\n\n        // Add more elements to the StaticBucketMap\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n\n        /* write */ map.put(\"key\", \"value\");\n\n        // Perform some other operations\n        StringBuilder concatenatedValues = new StringBuilder();\n        for (int i = 1; i <= 2; i++) {\n            concatenatedValues.append(map.get(\"key\" + i)).append(\" \");\n        }\n        System.out.println(\"Concatenated values from map: \" + concatenatedValues.toString().trim());\n\n        // More complex logic\n        int counter = 0;\n        for (String key : anotherMap.keySet()) {\n            if (anotherMap.get(key) % 20 == 0) {\n                counter++;\n            }\n        }\n        System.out.println(\"Number of values divisible by 20 in anotherMap: \" + counter);\n\n        /* read */ String value = (String) map.get(\"key\");\n        System.out.println(value);\n    }\n}"
}