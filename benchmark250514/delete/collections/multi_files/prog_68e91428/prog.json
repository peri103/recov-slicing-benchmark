{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n}\n",
        "Course.java": "import org.apache.commons.collections4.map.UnmodifiableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Course {\n    private String courseName;\n    private Map<String, Integer> grades = new HashMap<>();\n    private UnmodifiableMap<String, Integer> unmodifiableGrades = UnmodifiableMap.unmodifiableMap(grades);\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public void addGrade(String studentName, int grade) {\n        /* write */ grades.put(studentName, grade);\n    }\n\n    public Integer getGrade(String studentName) {\n        /* read */ return unmodifiableGrades.get(studentName);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course(\"Mathematics\");\n        Student student = new Student(\"Alice\", mathCourse);\n        \n        mathCourse.addGrade(student.getName(), 95);\n        \n        int grade = student.getCourse().getGrade(student.getName());\n        System.out.println(\"Grade for \" + student.getName() + \" in \" + student.getCourse().getCourseName() + \": \" + grade);\n\n        // Additional data structure usage\n        Course scienceCourse = new Course(\"Science\");\n        scienceCourse.addGrade(\"Bob\", 88);\n        System.out.println(\"Grade for Bob in \" + scienceCourse.getCourseName() + \": \" + scienceCourse.getGrade(\"Bob\"));\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.UnmodifiableMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.UnmodifiableMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.UnmodifiableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Map<String, Integer> originalMap = new HashMap<>();\n        UnmodifiableMap<String, Integer> unmodifiableMap = UnmodifiableMap.unmodifiableMap(originalMap);\n        \n        // Since UnmodifiableMap does not allow direct modifications, we need to modify the original map\n        /* write */ originalMap.put(\"key\", 42);\n        \n        // Reading from the unmodifiable map\n        /* read */ Integer value = unmodifiableMap.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.UnmodifiableMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original map setup\n        Map<String, Integer> originalMap = new HashMap<>();\n        UnmodifiableMap<String, Integer> unmodifiableMap = UnmodifiableMap.unmodifiableMap(originalMap);\n        \n        // Additional collections\n        List<Integer> numberList = new ArrayList<>();\n        Map<String, String> stringMap = new HashMap<>();\n        \n        // Populate numberList\n        for (int i = 1; i <= 5; i++) {\n            numberList.add(i * 10);\n        }\n        \n        // Populate stringMap\n        stringMap.put(\"A\", \"Apple\");\n        stringMap.put(\"B\", \"Banana\");\n        \n        // Modify original map to reflect in unmodifiable map\n        /* write */ originalMap.put(\"key\", 42);\n        \n        // Perform operations on numberList\n        int sum = 0;\n        for (int num : numberList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers in list: \" + sum);\n        \n        // Perform operations on stringMap\n        StringBuilder concatenatedValues = new StringBuilder();\n        for (String value : stringMap.values()) {\n            concatenatedValues.append(value).append(\" \");\n        }\n        System.out.println(\"Concatenated string values: \" + concatenatedValues.toString().trim());\n        \n        // Reading from the unmodifiable map\n        /* read */ Integer value = unmodifiableMap.get(\"key\");\n        \n        System.out.println(\"Value from unmodifiable map: \" + value);\n\n        // Additional operations to increase complexity\n        List<Map.Entry<String, String>> entryList = new ArrayList<>(stringMap.entrySet());\n        for (Map.Entry<String, String> entry : entryList) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n    }\n}"
}