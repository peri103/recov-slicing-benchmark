{
    "files": {
        "CustomMap.java": "import org.apache.commons.collections4.map.AbstractOrderedMapDecorator;\nimport java.util.HashMap;\n\npublic class CustomMap<K, V> extends AbstractOrderedMapDecorator<K, V> {\n    public CustomMap() {\n        super(new HashMap<>());\n    }\n\n    public void addEntry(K key, V value) {\n        /* write */ this.put(key, value);\n    }\n\n    public V retrieveEntry(K key) {\n        return this.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private CustomMap<String, Integer> grades;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n        this.grades = new CustomMap<>();\n    }\n\n    public void addGrade(String subject, int grade) {\n        grades.addEntry(subject, grade);\n    }\n\n    public Integer getGrade(String subject) {\n        return grades.retrieveEntry(subject);\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', age=\" + age + \"}\";\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    @Override\n    public String toString() {\n        return \"Course{courseName='\" + courseName + \"', students=\" + students + \"}\";\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\", 20);\n        student.addGrade(\"Math\", 95);\n        student.addGrade(\"Science\", 88);\n\n        Course course = new Course(\"Computer Science\");\n        course.enrollStudent(student);\n\n        System.out.println(course);\n\n        /* read */ Integer mathGrade = student.getGrade(\"Math\");\n        System.out.println(\"Math Grade: \" + mathGrade);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractOrderedMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractOrderedMapDecorator",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractOrderedMapDecorator;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        AbstractOrderedMapDecorator<String, Integer> map = new AbstractOrderedMapDecorator<>(new HashMap<>());\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.AbstractOrderedMapDecorator;\nimport org.apache.commons.collections4.map.ListOrderedMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        AbstractOrderedMapDecorator<String, Integer> map = new AbstractOrderedMapDecorator<>(new HashMap<>());\n        \n        // Additional complex operations with a different map\n        AbstractOrderedMapDecorator<String, String> stringMap = new AbstractOrderedMapDecorator<>(new HashMap<>());\n        stringMap.put(\"first\", \"Hello\");\n        stringMap.put(\"second\", \"World\");\n        \n        // Manipulate another map\n        AbstractOrderedMapDecorator<Integer, String> numberMap = new AbstractOrderedMapDecorator<>(new HashMap<>());\n        for (int i = 0; i < 5; i++) {\n            numberMap.put(i, \"Number \" + i);\n        }\n        \n        /* write */ map.put(\"key\", 42);\n        \n        // Perform operations on numberMap\n        for (Map.Entry<Integer, String> entry : numberMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Check contents of stringMap\n        System.out.println(\"String map size: \" + stringMap.size());\n        \n        // More operations on stringMap\n        if (stringMap.containsKey(\"first\")) {\n            System.out.println(\"Found key 'first' with value: \" + stringMap.get(\"first\"));\n        }\n        \n        // Perform a calculation\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n        \n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n        \n        // Final operations\n        ListOrderedMap<String, Double> orderedMap = new ListOrderedMap<>();\n        orderedMap.put(\"pi\", 3.14159);\n        orderedMap.put(\"e\", 2.71828);\n        System.out.println(\"Ordered Map: \" + orderedMap);\n    }\n}"
}