{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private StudentScores scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new StudentScores();\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public StudentScores getScores() {\n        return scores;\n    }\n}\n",
        "StudentScores.java": "import org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.map.PredicatedMap;\nimport java.util.HashMap;\n\npublic class StudentScores {\n    private PredicatedMap<Object, Object> scoreMap;\n\n    public StudentScores() {\n        Predicate<Object> keyPredicate = obj -> obj instanceof Integer;\n        Predicate<Object> valuePredicate = obj -> obj instanceof String;\n        HashMap<Object, Object> baseMap = new HashMap<>();\n        this.scoreMap = PredicatedMap.predicatedMap(baseMap, keyPredicate, valuePredicate);\n    }\n\n    public void addScore(int testNumber, String score) {\n        /* write */ scoreMap.put(testNumber, score);\n    }\n\n    public PredicatedMap<Object, Object> getScoreMap() {\n        return scoreMap;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.List;\nimport org.apache.commons.collections4.map.PredicatedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        student1.addScore(1, \"85\");\n        student2.addScore(1, \"90\");\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        List<Student> students = course.getStudents();\n        for (Student student : students) {\n            System.out.println(\"Student: \" + student.getName());\n            PredicatedMap<Object, Object> scores = student.getScores().getScoreMap();\n            /* read */ Object score = scores.get(1);\n            System.out.println(\"Test 1 Score: \" + score);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.PredicatedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.PredicatedMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.map.PredicatedMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a predicate that allows all keys and values\n        Predicate<Object> keyPredicate = obj -> true;\n        Predicate<Object> valuePredicate = obj -> true;\n\n        // Create a PredicatedMap with the predicates\n        HashMap<Object, Object> baseMap = new HashMap<>();\n        PredicatedMap<Object, Object> map = PredicatedMap.predicatedMap(baseMap, keyPredicate, valuePredicate);\n\n        // Write a value into the map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Read the value from the map\n        /* read */ Object value = map.get(\"key\");\n\n        // Print the read value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.map.PredicatedMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define predicates for the PredicatedMap\n        Predicate<Object> keyPredicate = obj -> true;\n        Predicate<Object> valuePredicate = obj -> true;\n\n        // Create a PredicatedMap with the predicates\n        HashMap<Object, Object> baseMap = new HashMap<>();\n        PredicatedMap<Object, Object> map = PredicatedMap.predicatedMap(baseMap, keyPredicate, valuePredicate);\n\n        // Create another PredicatedMap for demonstration\n        HashMap<Object, Object> anotherBaseMap = new HashMap<>();\n        PredicatedMap<Object, Object> anotherMap = PredicatedMap.predicatedMap(anotherBaseMap, keyPredicate, valuePredicate);\n\n        // Create an ArrayList to store keys and values\n        ArrayList<Object> list = new ArrayList<>();\n\n        // Write a value into the map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Add elements to another map\n        anotherMap.put(\"anotherKey1\", \"anotherValue1\");\n        anotherMap.put(\"anotherKey2\", \"anotherValue2\");\n\n        // Iterate over another map and add keys and values to the list\n        for (Map.Entry<Object, Object> entry : anotherMap.entrySet()) {\n            list.add(entry.getKey());\n            list.add(entry.getValue());\n        }\n\n        // Perform some operations on the list\n        for (Object obj : list) {\n            System.out.println(\"List item: \" + obj);\n        }\n\n        // Perform an unrelated calculation\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Read the value from the map\n        /* read */ Object value = map.get(\"key\");\n\n        // Print the read value\n        System.out.println(\"Read value from map: \" + value);\n\n        // Perform additional unrelated logic\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n    }\n}"
}