{
    "files": {
        "PredicatedBagWrapper.java": "import org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.bag.PredicatedBag;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\n\npublic class PredicatedBagWrapper {\n    private PredicatedBag<String> predicatedBag;\n\n    public PredicatedBagWrapper() {\n        Bag<String> baseBag = new HashBag<>();\n        Predicate<String> truePredicate = TruePredicate.truePredicate();\n        this.predicatedBag = new PredicatedBag<>(baseBag, truePredicate);\n    }\n\n    public void addElement(String element) {\n        /* write */ predicatedBag.add(element);\n    }\n\n    public int getElementCount(String element) {\n        return predicatedBag.getCount(element);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<String> courses;\n    private PredicatedBagWrapper bagWrapper;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n        this.bagWrapper = new PredicatedBagWrapper();\n    }\n\n    public void enrollCourse(String course) {\n        courses.add(course);\n        bagWrapper.addElement(course);\n    }\n\n    public List<String> getCourses() {\n        return courses;\n    }\n\n    public int getCourseCount(String course) {\n        return bagWrapper.getElementCount(course);\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"John Doe\");\n        student.enrollCourse(\"Math\");\n        student.enrollCourse(\"Science\");\n        student.enrollCourse(\"History\");\n\n        List<String> courses = student.getCourses();\n        for (String course : courses) {\n            System.out.println(course);\n        }\n\n        // Perform unrelated operations\n        int total = 0;\n        for (int i = 0; i < 5; i++) {\n            total += i;\n        }\n        System.out.println(\"Total: \" + total);\n\n        // Read the count of a specific course\n        /* read */ int mathCount = student.getCourseCount(\"Math\");\n\n        // Print the count\n        System.out.println(\"Math course count: \" + mathCount);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.bag.PredicatedBag",
        "write_method": "add",
        "read_class": "org.apache.commons.collections4.bag.PredicatedBag",
        "read_method": "getCount"
    },
    "java_code_simple": "import org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.bag.PredicatedBag;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a HashBag as the base bag\n        Bag<String> baseBag = new HashBag<>();\n\n        // Use a TruePredicate to allow all elements\n        Predicate<String> predicate = TruePredicate.truePredicate();\n\n        // Create a PredicatedBag with the base bag and the predicate\n        PredicatedBag<String> predicatedBag = new PredicatedBag<>(baseBag, predicate);\n\n        // Add an element to the PredicatedBag\n        /* write */ predicatedBag.add(\"example\");\n\n        // Read the count of the element added\n        /* read */ int count = predicatedBag.getCount(\"example\");\n\n        // Print the count\n        System.out.println(count);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.bag.PredicatedBag;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\nimport org.apache.commons.collections4.functors.NotNullPredicate;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a HashBag as the base bag\n        Bag<String> baseBag = new HashBag<>();\n\n        // Use a TruePredicate to allow all elements\n        Predicate<String> truePredicate = TruePredicate.truePredicate();\n\n        // Create a PredicatedBag with the base bag and the predicate\n        PredicatedBag<String> predicatedBag = new PredicatedBag<>(baseBag, truePredicate);\n\n        // Add an element to the PredicatedBag\n        /* write */ predicatedBag.add(\"example\");\n\n        // Create another PredicatedBag with a NotNullPredicate\n        Predicate<String> notNullPredicate = NotNullPredicate.notNullPredicate();\n        PredicatedBag<String> notNullBag = new PredicatedBag<>(new HashBag<>(), notNullPredicate);\n\n        // Add multiple elements to the notNullBag\n        notNullBag.add(\"item1\");\n        notNullBag.add(\"item2\");\n        notNullBag.add(\"item3\");\n\n        // Perform some operations on notNullBag\n        int itemCount1 = notNullBag.getCount(\"item1\");\n        int itemCount2 = notNullBag.getCount(\"item2\");\n        int itemCount3 = notNullBag.getCount(\"item3\");\n        \n        // Print the counts of items in notNullBag\n        System.out.println(\"item1 count: \" + itemCount1);\n        System.out.println(\"item2 count: \" + itemCount2);\n        System.out.println(\"item3 count: \" + itemCount3);\n\n        // Perform unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Read the count of the element added to predicatedBag\n        /* read */ int count = predicatedBag.getCount(\"example\");\n\n        // Print the count\n        System.out.println(\"Example count: \" + count);\n    }\n}"
}