{
    "files": {
        "Student.java": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.TransformedMultiValuedMap;\nimport org.apache.commons.collections4.map.LinkedMap;\nimport java.util.Collection;\n\npublic class Student {\n    private String name;\n    private MultiValuedMap<String, String> transformedMap;\n\n    public Student(String name) {\n        this.name = name;\n        LinkedMap<String, String> baseMap = new LinkedMap<>();\n        this.transformedMap = TransformedMultiValuedMap.transformedMap(baseMap, null, null);\n    }\n\n    public void addCourse(String course, String grade) {\n        /* write */ transformedMap.put(course, grade);\n    }\n\n    public Collection<String> getGrades(String course) {\n        return transformedMap.get(course);\n    }\n}\n",
        "Course.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Course {\n    private String courseName;\n    private Map<String, Integer> scores;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.scores = new HashMap<>();\n    }\n\n    public void addStudentScore(String studentName, int score) {\n        scores.put(studentName, score);\n    }\n\n    public int getTotalScore() {\n        int total = 0;\n        for (int score : scores.values()) {\n            total += score;\n        }\n        return total;\n    }\n}\n",
        "Main.java": "import java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"John Doe\");\n        student.addCourse(\"Math\", \"A\");\n        student.addCourse(\"Science\", \"B\");\n\n        Course mathCourse = new Course(\"Math\");\n        mathCourse.addStudentScore(\"John Doe\", 95);\n        mathCourse.addStudentScore(\"Jane Smith\", 88);\n\n        Course scienceCourse = new Course(\"Science\");\n        scienceCourse.addStudentScore(\"John Doe\", 85);\n        scienceCourse.addStudentScore(\"Jane Smith\", 90);\n\n        int totalMathScore = mathCourse.getTotalScore();\n        System.out.println(\"Total Math Score: \" + totalMathScore);\n\n        int totalScienceScore = scienceCourse.getTotalScore();\n        System.out.println(\"Total Science Score: \" + totalScienceScore);\n\n        // Retrieve grades for a specific course from the student\n        /* read */ Collection<String> grades = student.getGrades(\"Math\");\n\n        // Print the grades retrieved from the student's record\n        for (String grade : grades) {\n            System.out.println(\"Grade in Math: \" + grade);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.TransformedMultiValuedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.TransformedMultiValuedMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.TransformedMultiValuedMap;\nimport org.apache.commons.collections4.map.LinkedMap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a LinkedMap to use as the base map for the TransformedMultiValuedMap\n        LinkedMap<String, String> baseMap = new LinkedMap<>();\n\n        // Create a TransformedMultiValuedMap using the baseMap\n        MultiValuedMap<String, String> transformedMap = TransformedMultiValuedMap.transformedMap(baseMap, null, null);\n\n        /* write */ transformedMap.put(\"key1\", \"value1\");\n\n        /* read */ Collection<String> values = transformedMap.get(\"key1\");\n\n        // Print the values retrieved from the map\n        for (String value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.TransformedMultiValuedMap;\nimport org.apache.commons.collections4.map.LinkedMap;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a LinkedMap to use as the base map for the TransformedMultiValuedMap\n        LinkedMap<String, String> baseMap = new LinkedMap<>();\n\n        // Create a TransformedMultiValuedMap using the baseMap\n        MultiValuedMap<String, String> transformedMap = TransformedMultiValuedMap.transformedMap(baseMap, null, null);\n\n        /* write */ transformedMap.put(\"key1\", \"value1\");\n\n        // Additional unrelated code to increase complexity\n        Map<String, Integer> simpleMap = new HashMap<>();\n        simpleMap.put(\"A\", 100);\n        simpleMap.put(\"B\", 200);\n        simpleMap.put(\"C\", 300);\n\n        int sum = 0;\n        for (String key : simpleMap.keySet()) {\n            sum += simpleMap.get(key);\n        }\n        System.out.println(\"Sum of values in simpleMap: \" + sum);\n\n        // Use another TransformedMultiValuedMap for complexity\n        LinkedMap<String, Integer> anotherBaseMap = new LinkedMap<>();\n        MultiValuedMap<String, Integer> anotherTransformedMap = TransformedMultiValuedMap.transformedMap(anotherBaseMap, null, null);\n        anotherTransformedMap.put(\"numbers\", 1);\n        anotherTransformedMap.put(\"numbers\", 2);\n        anotherTransformedMap.put(\"numbers\", 3);\n\n        Collection<Integer> numberValues = anotherTransformedMap.get(\"numbers\");\n        int total = 0;\n        for (Integer number : numberValues) {\n            total += number;\n        }\n        System.out.println(\"Total of numbers in anotherTransformedMap: \" + total);\n\n        // Further processing before reading the original map\n        for (String key : simpleMap.keySet()) {\n            transformedMap.put(key, simpleMap.get(key).toString());\n        }\n\n        /* read */ Collection<String> values = transformedMap.get(\"key1\");\n\n        // Print the values retrieved from the map\n        for (String value : values) {\n            System.out.println(value);\n        }\n    }\n}"
}