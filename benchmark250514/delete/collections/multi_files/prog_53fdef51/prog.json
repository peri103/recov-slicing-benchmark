{
    "files": {
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.HashMap;\nimport java.util.Map;\nimport org.apache.commons.collections4.map.UnmodifiableMap;\n\npublic class Course {\n    private String courseName;\n    private Map<String, Integer> grades;\n    private UnmodifiableMap<String, Integer> unmodifiableGrades;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.grades = new HashMap<>();\n        this.grades.put(\"initial\", 0); // Initialize with a default grade\n        this.unmodifiableGrades = UnmodifiableMap.unmodifiableMap(grades);\n    }\n\n    public void addGrade(String studentName, int grade) {\n        /* write */ grades.put(studentName, grade);\n    }\n\n    public int getGrade(String studentName) {\n        /* read */ return unmodifiableGrades.get(studentName);\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a student\n        Student student = new Student(\"Alice\");\n\n        // Create a course and enroll the student\n        Course course = new Course(\"Mathematics\");\n        student.enrollCourse(course);\n\n        // Add grade for the student in the course\n        course.addGrade(student.getName(), 95);\n\n        // Retrieve and print the grade\n        int grade = course.getGrade(student.getName());\n        System.out.println(student.getName() + \"'s grade in \" + course.getCourseName() + \": \" + grade);\n\n        // Additional logic\n        for (Course enrolledCourse : student.getCourses()) {\n            System.out.println(\"Enrolled in: \" + enrolledCourse.getCourseName());\n        }\n\n        // Simulate more complex interactions\n        Course physics = new Course(\"Physics\");\n        student.enrollCourse(physics);\n        physics.addGrade(student.getName(), 88);\n\n        for (Course enrolledCourse : student.getCourses()) {\n            int enrolledGrade = enrolledCourse.getGrade(student.getName());\n            System.out.println(student.getName() + \"'s grade in \" + enrolledCourse.getCourseName() + \": \" + enrolledGrade);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.UnmodifiableMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.UnmodifiableMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.UnmodifiableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a mutable map to use with UnmodifiableMap\n        Map<String, Integer> mutableMap = new HashMap<>();\n        mutableMap.put(\"key\", 42); // Adding an initial value to the mutable map\n\n        // Create an unmodifiable map from the mutable map\n        UnmodifiableMap<String, Integer> unmodifiableMap = UnmodifiableMap.unmodifiableMap(mutableMap);\n\n        // Attempt to write using put method\n        // Since UnmodifiableMap does not allow direct modification, we will modify the original map\n        /* write */ mutableMap.put(\"newKey\", 100);\n\n        // Read the value using the get method\n        /* read */ int value = unmodifiableMap.get(\"newKey\");\n\n        // Output the read value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.UnmodifiableMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a mutable map to use with UnmodifiableMap\n        Map<String, Integer> mutableMap = new HashMap<>();\n        mutableMap.put(\"key\", 42); // Adding an initial value to the mutable map\n\n        // Create an unmodifiable map from the mutable map\n        UnmodifiableMap<String, Integer> unmodifiableMap = UnmodifiableMap.unmodifiableMap(mutableMap);\n\n        // Create an ArrayList and add some values\n        ArrayList<Integer> arrayList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            arrayList.add(i * 10);\n        }\n\n        // Process the ArrayList\n        int sum = 0;\n        for (int num : arrayList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of ArrayList: \" + sum);\n\n        // Attempt to write using put method\n        // Since UnmodifiableMap does not allow direct modification, we will modify the original map\n        /* write */ mutableMap.put(\"newKey\", 100);\n\n        // Additional logic using another map\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"hello\", \"world\");\n        String greeting = stringMap.get(\"hello\");\n        System.out.println(\"Greeting: \" + greeting);\n\n        // Read the value using the get method\n        /* read */ int value = unmodifiableMap.get(\"newKey\");\n\n        // Output the read value\n        System.out.println(value);\n\n        // More complex logic using the ArrayList\n        ArrayList<String> stringList = new ArrayList<>();\n        for (int i = 0; i < 3; i++) {\n            stringList.add(\"String \" + i);\n        }\n\n        for (String str : stringList) {\n            System.out.println(\"Processing: \" + str);\n        }\n\n        // Final manipulation of the original map\n        mutableMap.put(\"anotherKey\", 200);\n        int anotherValue = mutableMap.get(\"anotherKey\");\n        System.out.println(\"Another Value: \" + anotherValue);\n    }\n}"
}