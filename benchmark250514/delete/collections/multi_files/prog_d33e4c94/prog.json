{
    "files": {
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.bidimap.TreeBidiMap;\n\npublic class Course {\n    private String courseName;\n    private AbstractOrderedBidiMapDecorator<String, Integer> grades;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.grades = new AbstractOrderedBidiMapDecorator<>(new TreeBidiMap<>());\n    }\n\n    public void addStudentGrade(String studentName, int grade) {\n        /* write */ grades.put(studentName, grade);\n    }\n\n    public Integer getStudentGrade(String studentName) {\n        return grades.get(studentName);\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a student\n        Student student = new Student(\"Alice\");\n\n        // Create a course\n        Course math = new Course(\"Mathematics\");\n\n        // Enroll the student in the course\n        student.enrollCourse(math);\n\n        // Add a grade for the student in the course\n        math.addStudentGrade(student.getName(), 95);\n\n        // Get and print the student's grade in the course\n        Integer grade = math.getStudentGrade(student.getName());\n        /* read */ System.out.println(\"Grade for \" + student.getName() + \" in \" + math.getCourseName() + \": \" + grade);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.bidimap.TreeBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the AbstractOrderedBidiMapDecorator with a TreeBidiMap\n        AbstractOrderedBidiMapDecorator<String, Integer> map = new AbstractOrderedBidiMapDecorator<>(new TreeBidiMap<>());\n\n        /* write */ map.put(\"key1\", 100);\n\n        /* read */ Integer value = map.get(\"key1\");\n\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.bidimap.TreeBidiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the AbstractOrderedBidiMapDecorator with a TreeBidiMap\n        AbstractOrderedBidiMapDecorator<String, Integer> map = new AbstractOrderedBidiMapDecorator<>(new TreeBidiMap<>());\n        \n        // Initialize another map using HashMap\n        Map<String, String> anotherMap = new HashMap<>();\n\n        // Add some entries to the other map\n        anotherMap.put(\"name\", \"Alice\");\n        anotherMap.put(\"city\", \"Wonderland\");\n\n        // Perform some operations on anotherMap\n        if (anotherMap.containsKey(\"name\")) {\n            String name = anotherMap.get(\"name\");\n            System.out.println(\"Name: \" + name);\n        }\n\n        /* write */ map.put(\"key1\", 100);\n        \n        // Add more entries to the original map\n        map.put(\"key2\", 200);\n        map.put(\"key3\", 300);\n\n        // Perform some operations on the original map\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // More unrelated code\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n\n        /* read */ Integer value = map.get(\"key1\");\n\n        System.out.println(\"Read value: \" + value);\n\n        // Additional operations on anotherMap\n        anotherMap.put(\"country\", \"Fantasyland\");\n        System.out.println(\"Country: \" + anotherMap.get(\"country\"));\n    }\n}"
}