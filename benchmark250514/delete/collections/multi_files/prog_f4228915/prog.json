{
    "files": {
        "Course.java": "import org.apache.commons.collections4.multimap.LinkedHashValuedHashMap;\nimport java.util.Collection;\n\npublic class Course {\n    private LinkedHashValuedHashMap<String, Integer> studentScores = new LinkedHashValuedHashMap<>();\n\n    public void addStudentScore(String studentName, int score) {\n        /* write */ studentScores.put(studentName, score);\n    }\n\n    public Collection<Integer> getStudentScores(String studentName) {\n        return studentScores.get(studentName);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public void addScore(int score) {\n        course.addStudentScore(name, score);\n    }\n\n    public Collection<Integer> getScores() {\n        return course.getStudentScores(name);\n    }\n}\n",
        "Main.java": "import java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course();\n        Student student = new Student(\"Alice\", mathCourse);\n\n        student.addScore(85);\n        student.addScore(90);\n\n        // Some unrelated operations\n        int total = 0;\n        for (int i = 0; i < 5; i++) {\n            total += i;\n        }\n        System.out.println(\"Total of numbers from 0 to 4 is: \" + total);\n\n        Collection<Integer> scores = student.getScores();\n        /* read */ for (Integer score : scores) {\n            System.out.println(\"Score: \" + score);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.LinkedHashValuedHashMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.LinkedHashValuedHashMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.multimap.LinkedHashValuedHashMap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashValuedHashMap<String, Integer> map = new LinkedHashValuedHashMap<>();\n        /* write */ map.put(\"key\", 42);\n        /* read */ Collection<Integer> values = map.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.multimap.LinkedHashValuedHashMap;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashValuedHashMap<String, Integer> map = new LinkedHashValuedHashMap<>();\n        Map<String, Integer> additionalMap = new HashMap<>();\n        \n        /* write */ map.put(\"key\", 42);\n        \n        // Populate additionalMap with some values\n        additionalMap.put(\"alpha\", 1);\n        additionalMap.put(\"beta\", 2);\n        additionalMap.put(\"gamma\", 3);\n\n        // Perform some operations on additionalMap\n        for (Map.Entry<String, Integer> entry : additionalMap.entrySet()) {\n            System.out.println(\"Processing: \" + entry.getKey() + \" = \" + entry.getValue());\n            int newValue = entry.getValue() * 10;\n            additionalMap.put(entry.getKey(), newValue);\n        }\n\n        // Perform some unrelated calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9 is: \" + sum);\n\n        // Perform operations on the LinkedHashValuedHashMap\n        map.put(\"anotherKey\", 100);\n        map.put(\"key\", 84);\n\n        // Perform some operations before reading\n        for (String key : map.keySet()) {\n            Collection<Integer> values = map.get(key);\n            System.out.println(\"Values for key '\" + key + \"': \" + values);\n        }\n\n        /* read */ Collection<Integer> values = map.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(\"Read value: \" + value);\n        }\n    }\n}"
}