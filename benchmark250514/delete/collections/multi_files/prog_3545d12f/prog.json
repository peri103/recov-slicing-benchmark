{
    "files": {
        "Student.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Student {\n    private String name;\n    private Map<String, Integer> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new HashMap<>();\n    }\n\n    public void enrollCourse(String courseName, int grade) {\n        courses.put(courseName, grade);\n    }\n\n    public Map<String, Integer> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.bidimap.DualHashBidiMap;\n\npublic class Course {\n    private String courseName;\n    private AbstractOrderedBidiMapDecorator<String, Integer> studentGrades;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.studentGrades = new AbstractOrderedBidiMapDecorator<>(new DualHashBidiMap<>());\n    }\n\n    public void addStudentGrade(String studentName, int grade) {\n        /* write */ studentGrades.put(studentName, grade);\n    }\n\n    public Integer getStudentGrade(String studentName) {\n        /* read */ return studentGrades.get(studentName);\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Creating a student and enrolling in courses\n        Student student = new Student(\"John Doe\");\n        student.enrollCourse(\"Mathematics\", 85);\n        student.enrollCourse(\"Science\", 90);\n\n        // Creating a course and adding student grades\n        Course mathCourse = new Course(\"Mathematics\");\n        mathCourse.addStudentGrade(student.getName(), 85);\n\n        // Retrieve and print the student's grade for Mathematics\n        Integer mathGrade = mathCourse.getStudentGrade(student.getName());\n        System.out.println(\"Student: \" + student.getName() + \", Course: \" + mathCourse.getCourseName() + \", Grade: \" + mathGrade);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.bidimap.DualHashBidiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an instance of DualHashBidiMap which is a concrete class of AbstractOrderedBidiMapDecorator\n        AbstractOrderedBidiMapDecorator<String, Integer> map = new AbstractOrderedBidiMapDecorator<>(new DualHashBidiMap<>());\n\n        // Write a key-value pair to the map\n        /* write */ map.put(\"key1\", 100);\n\n        // Read the value associated with the key from the map\n        /* read */ Integer value = map.get(\"key1\");\n\n        // Print the value to verify it is the same as what was written\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.AbstractOrderedBidiMapDecorator;\nimport org.apache.commons.collections4.bidimap.DualHashBidiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an instance of DualHashBidiMap which is a concrete class of AbstractOrderedBidiMapDecorator\n        AbstractOrderedBidiMapDecorator<String, Integer> map = new AbstractOrderedBidiMapDecorator<>(new DualHashBidiMap<>());\n\n        // Additional unrelated code: Using a HashMap to store some data\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n\n        // Write a key-value pair to the map\n        /* write */ map.put(\"key1\", 100);\n\n        // Additional code to manipulate the HashMap\n        String fruit = hashMap.get(\"A\");\n        System.out.println(\"Fruit from HashMap: \" + fruit);\n\n        // Additional unrelated code: Performing some calculations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 integers: \" + sum);\n\n        // More unrelated code: Adding another key-value pair to the DualHashBidiMap\n        map.put(\"key2\", 200);\n\n        // Code to iterate over the map and print its contents\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Read the value associated with the key from the map\n        /* read */ Integer value = map.get(\"key1\");\n\n        // Print the value to verify it is the same as what was written\n        System.out.println(\"Value from map: \" + value);\n\n        // Additional unrelated code: Perform a simple string manipulation\n        String message = \"Hello, World!\";\n        String upperMessage = message.toUpperCase();\n        System.out.println(\"Uppercase Message: \" + upperMessage);\n    }\n}"
}