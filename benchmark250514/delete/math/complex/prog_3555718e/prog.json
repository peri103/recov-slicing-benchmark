{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(data);\n        \n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(new double[] {4.0, 5.0, 6.0});\n        RealVector resultVector = matrix.operate(vector);\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(\"Vector element \" + i + \": \" + resultVector.getEntry(i));\n        }\n\n        // Modify the matrix using a visitor\n        matrix.walkInOptimizedOrder(new RealMatrixChangingVisitor() {\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {}\n            public double visit(int row, int column, double value) {\n                return value + 1.0; // Increment each element by 1\n            }\n            public double end() {\n                return 0;\n            }\n        });\n\n        // Perform another operation with the matrix\n        RealMatrix anotherMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix productMatrix = matrix.multiply(anotherMatrix);\n        System.out.println(\"Product matrix:\");\n        for (int i = 0; i < productMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < productMatrix.getColumnDimension(); j++) {\n                System.out.print(productMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Extract and print the diagonal of the original matrix\n        /* read */ double[] diagonal = matrix.getColumn(0);\n        \n        System.out.println(\"Diagonal elements:\");\n        for (double value : diagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(data);\n        \n        /* read */ double[] diagonal = matrix.getColumn(0);\n        \n        for (double value : diagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}