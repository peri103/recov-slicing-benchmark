{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        /* write */\n        RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(3, 3);\n\n        // Create another matrix and perform some operations\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(data);\n        RealMatrix resultMatrix = matrix.scalarMultiply(2.0);\n\n        // Create a vector and perform some operations\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        RealVector resultVector = vector.mapMultiply(3.0);\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */\n        RealMatrix readMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n\n        // Print the original and result matrices to verify\n        System.out.println(\"Original Matrix: \");\n        printMatrix(matrix);\n        \n        System.out.println(\"Result Matrix after scalar multiplication: \");\n        printMatrix(resultMatrix);\n\n        // Print the original and result vectors to verify\n        System.out.println(\"Original Vector: \");\n        printVector(vector);\n\n        System.out.println(\"Result Vector after scalar multiplication: \");\n        printVector(resultVector);\n\n        // Print the sparse matrix to verify\n        System.out.println(\"Sparse Matrix: \");\n        printMatrix(readMatrix);\n    }\n\n    private static void printMatrix(RealMatrix matrix) {\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                System.out.print(matrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    private static void printVector(RealVector vector) {\n        for (int i = 0; i < vector.getDimension(); i++) {\n            System.out.print(vector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        /* write */\n        RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(3, 3);\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */\n        RealMatrix readMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n\n        // Print the matrix to verify\n        System.out.println(\"Sparse Matrix: \");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}