{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with zero values\n        RealMatrix matrix = MatrixUtils.createRealMatrix(3, 3);\n\n        // Create a row vector with values\n        double[] rowValues = {1.0, 2.0, 3.0};\n\n        // Write the row vector to the first row of the matrix\n        /* write */ matrix.setRowVector(0, MatrixUtils.createRowRealVector(rowValues));\n\n        // Additional operations on the matrix\n        double[][] data = {\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0},\n            {10.0, 11.0, 12.0}\n        };\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(data);\n\n        // Add matrices\n        RealMatrix resultMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Resulting Matrix after addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform scalar multiplication\n        RealMatrix scaledMatrix = resultMatrix.scalarMultiply(2.0);\n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the row vector from the first row of the matrix\n        /* read */ RealVector rowVector = matrix.getRowVector(0);\n\n        // Print the values of the row vector\n        System.out.println(\"Row Vector: \" + rowVector);\n\n        // Calculate the norm of the row vector\n        double norm = rowVector.getNorm();\n        System.out.println(\"Norm of the Row Vector: \" + norm);\n\n        // Create another vector and perform addition\n        RealVector anotherVector = MatrixUtils.createRealVector(new double[]{3.0, 3.0, 3.0});\n        RealVector addedVector = rowVector.add(anotherVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with zero values\n        RealMatrix matrix = MatrixUtils.createRealMatrix(3, 3);\n\n        // Create a row vector with values\n        double[] rowValues = {1.0, 2.0, 3.0};\n        \n        // Write the row vector to the first row of the matrix\n        /* write */ matrix.setRowVector(0, MatrixUtils.createRowRealVector(rowValues));\n\n        // Read the row vector from the first row of the matrix\n        /* read */ RealVector rowVector = matrix.getRowVector(0);\n\n        // Print the values of the row vector\n        System.out.println(\"Row Vector: \" + rowVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}