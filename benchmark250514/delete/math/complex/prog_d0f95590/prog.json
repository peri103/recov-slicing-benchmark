{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a row real matrix with a single row\n        double[] rowData = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n\n        // Additional matrix operation: create a column matrix\n        double[][] columnData = {{1.0}, {2.0}, {3.0}};\n        RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(columnData);\n\n        // Perform matrix addition\n        RealMatrix sumMatrix = matrix.add(columnMatrix);\n\n        // Calculate the transpose of the sumMatrix\n        RealMatrix transposeMatrix = sumMatrix.transpose();\n\n        // Perform scalar multiplication\n        RealMatrix scaledMatrix = transposeMatrix.scalarMultiply(2.0);\n\n        // Extract the first row of the scaled matrix into a vector\n        RealVector extractedVector = scaledMatrix.getRowVector(0);\n\n        // Print the extracted vector\n        System.out.println(\"Extracted Vector: \" + extractedVector);\n\n        // Read the matrix using getRowRealMatrix\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n\n        // Print the row to verify\n        RealVector vector = readMatrix.getRowVector(0);\n        System.out.println(\"Read Matrix Row: \" + vector);\n\n        // Additional operation: calculate the norm of the vector\n        double norm = vector.getNorm();\n        System.out.println(\"Norm of the Read Matrix Row: \" + norm);\n\n        // Perform element-wise multiplication with another matrix\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix multipliedMatrix = readMatrix.multiply(identityMatrix);\n\n        // Print the multiplied matrix\n        System.out.println(\"Multiplied Matrix: \");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            System.out.println(multipliedMatrix.getRowVector(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a row real matrix with a single row\n        double[] rowData = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n\n        // Read the matrix using getRowRealMatrix\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n\n        // Print the row to verify\n        RealVector vector = readMatrix.getRowVector(0);\n        System.out.println(vector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}