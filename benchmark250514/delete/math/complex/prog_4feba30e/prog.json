{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix dimensions and data for the sparse matrix\n        int rows = 3;\n        int columns = 3;\n        double[][] sparseData = {\n            {1.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        };\n\n        // Additional matrix data for a dense matrix\n        double[][] denseData = {\n            {5.0, 6.0, 7.0},\n            {8.0, 9.0, 10.0},\n            {11.0, 12.0, 13.0}\n        };\n\n        // Create a sparse matrix using MatrixUtils\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(sparseData);\n\n        // Perform operations on a dense matrix\n        RealMatrix denseMatrix = new Array2DRowRealMatrix(denseData);\n        RealMatrix transposedMatrix = denseMatrix.transpose();\n        RealMatrix multipliedMatrix = denseMatrix.multiply(transposedMatrix);\n\n        // Print the multiplied dense matrix\n        System.out.println(\"Multiplied Dense Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform some unrelated calculations\n        double sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i * i;\n        }\n        System.out.println(\"Sum of squares from 0 to 9: \" + sum);\n\n        // Retrieve the sparse matrix using MatrixUtils\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n\n        // Print the retrieved sparse matrix to verify the values\n        System.out.println(\"Retrieved Sparse Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix dimensions and data\n        int rows = 3;\n        int columns = 3;\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        };\n\n        // Create a sparse matrix using MatrixUtils\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(data);\n\n        // Retrieve the sparse matrix using MatrixUtils\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n\n        // Print the retrieved matrix to verify the values\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}