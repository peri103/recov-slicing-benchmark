{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the dimensions and values for the sparse matrix\n        int rows = 3;\n        int columns = 3;\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        };\n\n        // Create a sparse matrix using MatrixUtils\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(data);\n\n        // Create another matrix for additional operations\n        double[][] additionalData = {\n            {5.0, 2.0, 1.0},\n            {3.0, 6.0, 1.0},\n            {4.0, 0.0, 7.0}\n        };\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalData);\n\n        // Perform matrix multiplication\n        RealMatrix resultMatrix = sparseMatrix.multiply(additionalMatrix);\n\n        // Calculate the determinant of the result matrix\n        double determinant = new org.apache.commons.math3.linear.LUDecomposition(resultMatrix).getDeterminant();\n        System.out.println(\"Determinant of the result matrix: \" + determinant);\n\n        // Perform some unrelated computations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i * i;\n        }\n        System.out.println(\"Sum of squares from 0 to 9: \" + sum);\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n\n        // Display the matrix\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the dimensions and values for the sparse matrix\n        int rows = 3;\n        int columns = 3;\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        };\n\n        // Create a sparse matrix using MatrixUtils\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(data);\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n\n        // Display the matrix\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}