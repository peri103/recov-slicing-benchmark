{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        double[] data2 = {4.0, 5.0, 6.0};\n        \n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Additional unrelated operations\n        RealMatrix matrix = new Array2DRowRealMatrix(new double[][] {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        });\n        \n        RealVector vector2 = MatrixUtils.createSparseRealVector(data2);\n        RealVector sumVector = vector.add(vector2);\n        System.out.println(\"Sum of vectors: \" + sumVector);\n\n        // More complex operations\n        RealMatrix multipliedMatrix = matrix.scalarMultiply(2);\n        System.out.println(\"Multiplied matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Further operations\n        RealVector vector3 = matrix.operate(vector);\n        System.out.println(\"Matrix operated on vector: \" + vector3);\n\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector);\n        \n        System.out.println(\"Read vector: \" + readVector);\n\n        // Additional computations\n        RealVector diffVector = vector.subtract(vector2);\n        System.out.println(\"Difference of vectors: \" + diffVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector);\n        \n        System.out.println(\"Read vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}