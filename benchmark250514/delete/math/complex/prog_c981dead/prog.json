{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a row real matrix\n        double[][] data = {{1.0, 2.0, 3.0}};\n        \n        // Create a row real matrix using the MatrixUtils class\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        \n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n        \n        // Create a new vector and perform operations\n        double[] vectorData = {4.0, 5.0, 6.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        RealVector addedVector = vector.mapAdd(10.0);\n        \n        // Some unrelated complex operations\n        double sum = 0;\n        for (int i = 0; i < addedVector.getDimension(); i++) {\n            sum += addedVector.getEntry(i);\n        }\n        System.out.println(\"Sum of elements in the added vector: \" + sum);\n        \n        // Retrieve the row real matrix using the getRowMatrix method\n        /* read */ RealMatrix retrievedMatrix = matrix.getRowMatrix(0);\n        \n        // Print the retrieved matrix\n        System.out.println(\"Retrieved Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Further operations on the matrix\n        RealMatrix scaledMatrix = retrievedMatrix.scalarMultiply(2.0);\n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a row real matrix\n        double[][] data = {{1.0, 2.0, 3.0}};\n        \n        // Create a row real matrix using the MatrixUtils class\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        \n        // Retrieve the row real matrix using the getRowMatrix method\n        /* read */ RealMatrix retrievedMatrix = matrix.getRowMatrix(0);\n        \n        // Print the retrieved matrix\n        System.out.println(\"Retrieved Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}