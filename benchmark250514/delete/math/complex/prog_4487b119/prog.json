{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Perform some unrelated matrix operations\n        RealMatrix matrixA = MatrixUtils.createRealMatrix(new double[][] {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        });\n\n        RealMatrix matrixB = MatrixUtils.createRealMatrix(new double[][] {\n            {9, 8, 7},\n            {6, 5, 4},\n            {3, 2, 1}\n        });\n\n        // Add two matrices\n        RealMatrix matrixC = matrixA.add(matrixB);\n\n        // Multiply a matrix by a scalar\n        RealMatrix matrixD = matrixC.scalarMultiply(0.5);\n\n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(new double[] {1, 2, 3});\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        RealVector addedVector = vector.add(scaledVector);\n\n        // Read the identity matrix\n        /* read */ RealMatrix readMatrix = identityMatrix;\n\n        // Print the identity matrix to verify\n        System.out.println(\"Identity Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Print matrix operations results\n        System.out.println(\"\\nMatrix C:\");\n        for (int i = 0; i < matrixC.getRowDimension(); i++) {\n            for (int j = 0; j < matrixC.getColumnDimension(); j++) {\n                System.out.print(matrixC.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        System.out.println(\"\\nMatrix D:\");\n        for (int i = 0; i < matrixD.getRowDimension(); i++) {\n            for (int j = 0; j < matrixD.getColumnDimension(); j++) {\n                System.out.print(matrixD.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Print vector operations results\n        System.out.println(\"\\nOriginal Vector: \" + vector);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Read the identity matrix\n        /* read */ RealMatrix readMatrix = identityMatrix;\n\n        // Print the matrix to verify\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createIdentityMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getIdentityMatrix"
    }
}