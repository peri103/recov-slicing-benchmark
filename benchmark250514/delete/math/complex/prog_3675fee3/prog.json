{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        // Create a row matrix for additional complexity\n        double[][] rowData = {{4.0, 5.0, 6.0}};\n        RealMatrix rowMatrix = MatrixUtils.createRowRealMatrix(rowData);\n        \n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(columnData);\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        \n        // Perform matrix multiplication\n        RealMatrix resultMatrix = rowMatrix.multiply(MatrixUtils.createColumnRealMatrix(columnData));\n        \n        // Perform some operations on the result matrix\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        // Additional matrix operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix addedMatrix = transposedMatrix.add(rowMatrix);\n        \n        // Iterate and print the added matrix\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ RealMatrix readMatrix = matrix.getColumnMatrix(0);\n        \n        // Print the read matrix column\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            System.out.println(readMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        /* read */ RealMatrix readMatrix = matrix.getColumnMatrix(0);\n        \n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            System.out.println(readMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}