{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.SparseRealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ SparseRealVector vector = MatrixUtils.createSparseRealVector(data);\n        \n        // Additional unrelated code to make the program more complex\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealVector columnVector = matrix.getColumnVector(0);\n        RealVector rowVector = matrix.getRowVector(1);\n        \n        double dotProduct = columnVector.dotProduct(rowVector);\n        System.out.println(\"Dot Product of column and row vectors: \" + dotProduct);\n        \n        RealVector scaledVector = columnVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        \n        // Perform some operations on the original vector\n        double sum = 0.0;\n        for (int i = 0; i < vector.getDimension(); i++) {\n            sum += vector.getEntry(i);\n        }\n        System.out.println(\"Sum of vector entries: \" + sum);\n        \n        // More operations\n        double norm = vector.getNorm();\n        System.out.println(\"Norm of the vector: \" + norm);\n        \n        // Now read the original vector\n        /* read */ RealVector readVector = vector;\n        \n        System.out.println(\"Vector: \" + readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.SparseRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ SparseRealVector vector = MatrixUtils.createSparseRealVector(data);\n        /* read */ RealVector readVector = vector;\n        \n        System.out.println(\"Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}