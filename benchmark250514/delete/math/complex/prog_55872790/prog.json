{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n        \n        // Create another matrix and perform matrix addition\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        };\n        RealMatrix identityMatrix = new Array2DRowRealMatrix(data);\n        \n        RealMatrix sumMatrix = matrix.add(identityMatrix);\n        System.out.println(\"Sum Matrix:\");\n        for (int row = 0; row < sumMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < sumMatrix.getColumnDimension(); col++) {\n                System.out.print(sumMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Create a vector and perform matrix-vector multiplication\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        \n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // More complex operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int row = 0; row < transposedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < transposedMatrix.getColumnDimension(); col++) {\n                System.out.print(transposedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ double[] readDiagonalValues = matrix.getRow(0);\n        \n        System.out.println(\"Read Diagonal Values:\");\n        for (double value : readDiagonalValues) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n        \n        /* read */ double[] readDiagonalValues = matrix.getRow(0);\n        \n        for (double value : readDiagonalValues) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}