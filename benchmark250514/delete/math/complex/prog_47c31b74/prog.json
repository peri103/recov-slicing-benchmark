{
    "java_code": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.BlockRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the array with some values\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create an ArrayRealVector using the write method\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Perform some operations on the vector\n        ArrayRealVector scaledVector = vector.mapMultiply(2.0);\n        RealMatrix matrix = new BlockRealMatrix(3, 3);\n        matrix.setColumnVector(0, scaledVector);\n        matrix.setColumnVector(1, vector);\n        matrix.setColumnVector(2, vector.mapAdd(1.0));\n\n        // Calculate the sum of all elements in the original vector\n        double sum = vector.getL1Norm();\n        System.out.println(\"Sum of elements: \" + sum);\n\n        // Perform some unrelated calculations\n        double[] extraData = {4.0, 5.0, 6.0};\n        ArrayRealVector extraVector = MatrixUtils.createArrayRealVector(extraData);\n        RealVector addedVector = vector.add(extraVector);\n        System.out.println(\"Added vector: \" + addedVector);\n\n        // Retrieve the ArrayRealVector using the read method\n        /* read */ ArrayRealVector retrievedVector = MatrixUtils.getArrayRealVector(vector);\n\n        // Print the retrieved vector to ensure the read method works correctly\n        System.out.println(\"Retrieved vector: \" + retrievedVector);\n\n        // Perform further operations on the retrieved vector\n        RealVector normalizedVector = retrievedVector.unitVector();\n        System.out.println(\"Normalized vector: \" + normalizedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the array with some values\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create an ArrayRealVector using the write method\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Retrieve the ArrayRealVector using the read method\n        /* read */ ArrayRealVector retrievedVector = MatrixUtils.getArrayRealVector(vector);\n\n        // Print the retrieved vector to ensure the read method works correctly\n        System.out.println(retrievedVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}