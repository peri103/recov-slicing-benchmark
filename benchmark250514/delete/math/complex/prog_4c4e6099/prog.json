{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] row = {1.0, 2.0, 3.0};\n        double[] anotherRow = {4.0, 5.0, 6.0};\n\n        // Create another matrix to make the program more complex\n        RealMatrix anotherMatrix = MatrixUtils.createRowRealMatrix(anotherRow);\n\n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(new double[]{7.0, 8.0, 9.0});\n        RealVector resultVector = vector.mapAdd(2.0);\n        \n        // Print the vector to show some operations\n        System.out.println(\"Result Vector: \" + resultVector);\n\n        // Perform a matrix operation\n        RealMatrix matrixSum = anotherMatrix.add(anotherMatrix);\n        System.out.println(\"Matrix Sum: \" + matrixSum);\n\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(row);\n\n        // More operations unrelated to the main task\n        RealMatrix productMatrix = anotherMatrix.multiply(matrixSum);\n        System.out.println(\"Product Matrix: \" + productMatrix);\n\n        // Using the matrix in different ways\n        RealVector extractedRow = matrix.getRowVector(0);\n        System.out.println(\"Extracted Row: \" + extractedRow);\n\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n        System.out.println(\"Read Matrix: \" + readMatrix);\n\n        // Final operations to make the program more complex\n        RealMatrix finalMatrix = readMatrix.scalarMultiply(2.0);\n        System.out.println(\"Final Matrix: \" + finalMatrix);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] row = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(row);\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n        System.out.println(readMatrix);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}