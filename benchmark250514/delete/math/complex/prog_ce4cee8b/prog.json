{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        RealMatrix sparseMatrix = /* write */ MatrixUtils.createSparseMatrix(3, 3);\n\n        // Initialize a vector to perform operations with the matrix\n        RealVector vector = new ArrayRealVector(new double[]{1, 2, 3});\n        RealVector resultVector = sparseMatrix.operate(vector);\n\n        // Print the result of matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication: \" + resultVector);\n\n        // Perform additional matrix operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix addedMatrix = sparseMatrix.add(identityMatrix);\n\n        // Print the added matrix\n        System.out.println(\"Added Matrix: \" + addedMatrix);\n\n        // Retrieve the sparse matrix using MatrixUtils\n        RealMatrix retrievedMatrix = /* read */ MatrixUtils.getSparseMatrix(sparseMatrix);\n\n        // Print the retrieved matrix\n        System.out.println(\"Retrieved Sparse Matrix: \" + retrievedMatrix);\n\n        // Perform subtraction with another matrix\n        RealMatrix subtractedMatrix = identityMatrix.subtract(retrievedMatrix);\n\n        // Print the subtracted matrix\n        System.out.println(\"Subtracted Matrix: \" + subtractedMatrix);\n\n        // Perform scalar multiplication\n        RealMatrix scaledMatrix = retrievedMatrix.scalarMultiply(2.0);\n\n        // Print the scaled matrix\n        System.out.println(\"Scaled Matrix: \" + scaledMatrix);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        RealMatrix sparseMatrix = /* write */ MatrixUtils.createSparseMatrix(3, 3);\n\n        // Retrieve the sparse matrix using MatrixUtils\n        RealMatrix retrievedMatrix = /* read */ MatrixUtils.getSparseMatrix(sparseMatrix);\n\n        // Print the retrieved matrix\n        System.out.println(retrievedMatrix);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}