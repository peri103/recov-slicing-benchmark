{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0}, {2.0}, {3.0}};\n        double[] vectorData = {4.0, 5.0, 6.0};\n\n        // Create a vector\n        RealVector vector = new ArrayRealVector(vectorData);\n\n        // Perform some vector operations\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n\n        // Create another matrix\n        RealMatrix anotherMatrix = MatrixUtils.createColumnRealMatrix(new double[][]{{7.0}, {8.0}, {9.0}});\n\n        // Perform matrix addition\n        RealMatrix sumMatrix = anotherMatrix.add(MatrixUtils.createColumnRealMatrix(data));\n        System.out.println(\"Sum of Matrices:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            System.out.println(sumMatrix.getEntry(i, 0));\n        }\n\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n\n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getColumnDimension(); i++) {\n            System.out.println(transposedMatrix.getEntry(0, i));\n        }\n\n        // More operations\n        RealMatrix multipliedMatrix = matrix.scalarMultiply(3.0);\n        System.out.println(\"Scalar Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            System.out.println(multipliedMatrix.getEntry(i, 0));\n        }\n\n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n\n        // Output the column matrix\n        System.out.println(\"Column Matrix:\");\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0}, {2.0}, {3.0}};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}