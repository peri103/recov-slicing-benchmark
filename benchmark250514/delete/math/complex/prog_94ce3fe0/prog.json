{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the OpenMapRealVector with some values\n        double[] values = {1.0, 2.0, 3.0};\n        \n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(values);\n        \n        // Perform some operations on the vector\n        vector.setEntry(1, 10.0); // Modify an entry in the vector\n        vector.addToEntry(2, 5.0); // Add a value to an entry\n        \n        // Create another vector and perform operations\n        RealVector anotherVector = new OpenMapRealVector(values);\n        anotherVector.mapMultiplyToSelf(2.0); // Multiply each entry by 2\n        \n        // Combine vectors\n        RealVector combinedVector = vector.add(anotherVector);\n        \n        // Print combined vector values\n        for (int i = 0; i < combinedVector.getDimension(); i++) {\n            System.out.println(\"Combined Vector Entry \" + i + \": \" + combinedVector.getEntry(i));\n        }\n        \n        // Read the vector using the read method\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the values to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(\"Read Vector Entry \" + i + \": \" + readVector.getEntry(i));\n        }\n        \n        // Perform additional operations on the read vector\n        readVector.mapAddToSelf(2.0); // Add 2 to each entry\n        System.out.println(\"After mapAddToSelf operation:\");\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(\"Read Vector Entry \" + i + \": \" + readVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the OpenMapRealVector with some values\n        double[] values = {1.0, 2.0, 3.0};\n        \n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(values);\n        \n        // Read the vector using the read method\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the values to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}