{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using MatrixUtils\n        double[] data = {1.0, 0.0, 3.0}; // Example data\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n        \n        // Perform operations on another matrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        \n        // Multiply matrix by a scalar\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        \n        // Print the scaled matrix\n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Calculate the norm of the vector\n        double norm = vector.getNorm();\n        System.out.println(\"Norm of the vector: \" + norm);\n        \n        // Create another vector and perform addition\n        RealVector anotherVector = MatrixUtils.createRealVector(new double[]{2.0, 1.0, 0.0});\n        RealVector sumVector = vector.add(anotherVector);\n        \n        // Print the sum vector\n        System.out.println(\"Sum Vector: \" + sumVector);\n        \n        // Read the sparse real vector using MatrixUtils (assuming a method exists)\n        /* read */ RealVector readVector = vector; // Directly using the vector created\n        \n        // Print the vector to verify\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using MatrixUtils\n        double[] data = {1.0, 0.0, 3.0}; // Example data\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n        \n        // Read the sparse real vector using MatrixUtils (assuming a method exists)\n        /* read */ RealVector readVector = vector; // Directly using the vector created\n        \n        // Print the vector to verify\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}