{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a RealMatrix with a single column\n        double[][] data = {{1.0}, {2.0}, {3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create a RealVector using the write method\n        RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        /* write */ matrix.setColumnVector(0, columnVector);\n        \n        // Perform operations on the matrix\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(new double[][]{{7.0, 8.0, 9.0}, {10.0, 11.0, 12.0}, {13.0, 14.0, 15.0}});\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Sum Matrix:\");\n        printMatrix(sumMatrix);\n        \n        // Perform operations on vectors\n        RealVector anotherVector = new ArrayRealVector(new double[]{16.0, 17.0, 18.0});\n        RealVector combinedVector = columnVector.add(anotherVector);\n        System.out.println(\"Combined Vector:\");\n        printVector(combinedVector);\n        \n        // Retrieve the RealVector using the read method\n        /* read */ RealVector retrievedVector = matrix.getColumnVector(0);\n        \n        // Print the retrieved vector\n        System.out.println(\"Retrieved Vector:\");\n        printVector(retrievedVector);\n        \n        // Further matrix operations\n        RealMatrix transposedMatrix = sumMatrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        printMatrix(transposedMatrix);\n    }\n    \n    // Helper method to print matrix\n    public static void printMatrix(RealMatrix matrix) {\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                System.out.print(matrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n    \n    // Helper method to print vector\n    public static void printVector(RealVector vector) {\n        for (int i = 0; i < vector.getDimension(); i++) {\n            System.out.print(vector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a RealMatrix with a single column\n        double[][] data = {{1.0}, {2.0}, {3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create a RealVector using the write method\n        RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        /* write */ matrix.setColumnVector(0, columnVector);\n        \n        // Retrieve the RealVector using the read method\n        /* read */ RealVector retrievedVector = matrix.getColumnVector(0);\n        \n        // Print the retrieved vector\n        System.out.println(retrievedVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}