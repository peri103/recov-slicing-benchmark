{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.DecompositionSolver;\nimport org.apache.commons.math3.linear.LUDecomposition;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize variables\n        double[][] data = {\n            {1, 2, 3},\n            {2, 5, 6},\n            {3, 6, 9}\n        };\n        \n        double[][] additionalData = {\n            {2, 3, 4},\n            {3, 6, 7},\n            {4, 7, 10}\n        };\n\n        // Create a symmetric matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Create another symmetric matrix for additional operations\n        RealMatrix additionalMatrix = MatrixUtils.createSymmetricMatrix(additionalData);\n\n        // Perform matrix addition\n        RealMatrix sumMatrix = matrix.add(additionalMatrix);\n\n        // Decompose the matrix and solve a linear system\n        RealVector constants = new ArrayRealVector(new double[] {1, 2, 3});\n        DecompositionSolver solver = new LUDecomposition(sumMatrix).getSolver();\n        RealVector solution = solver.solve(constants);\n\n        // Print the solution vector\n        System.out.println(\"Solution Vector:\");\n        for (int i = 0; i < solution.getDimension(); i++) {\n            System.out.println(solution.getEntry(i));\n        }\n\n        // Read the symmetric matrix using MatrixUtils\n        /* read */ RealMatrix symmetricMatrix = MatrixUtils.getSymmetricMatrix(matrix);\n\n        // Print the symmetric matrix\n        System.out.println(\"Symmetric Matrix:\");\n        for (int i = 0; i < symmetricMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < symmetricMatrix.getColumnDimension(); j++) {\n                System.out.print(symmetricMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize variables\n        double[][] data = {\n            {1, 2, 3},\n            {2, 5, 6},\n            {3, 6, 9}\n        };\n\n        // Create a symmetric matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Read the symmetric matrix using MatrixUtils\n        /* read */ RealMatrix symmetricMatrix = MatrixUtils.getSymmetricMatrix(matrix);\n\n        // Print the symmetric matrix\n        for (int i = 0; i < symmetricMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < symmetricMatrix.getColumnDimension(); j++) {\n                System.out.print(symmetricMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}