{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one column\n        double[][] data = { {1.0}, {2.0}, {3.0} };\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create another matrix\n        double[][] additionalData = { {7.0, 8.0}, {9.0, 10.0}, {11.0, 12.0} };\n        RealMatrix additionalMatrix = MatrixUtils.createRealMatrix(additionalData);\n        \n        // Write: create a column real vector\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        \n        // Set this vector as the first column of the matrix\n        matrix.setColumnVector(0, columnVector);\n        \n        // Perform some matrix operations\n        RealMatrix multipliedMatrix = matrix.multiply(additionalMatrix);\n        \n        // Calculate the norm of the column vector\n        double norm = columnVector.getNorm();\n        System.out.println(\"Norm of the Column Vector: \" + norm);\n        \n        // Create a row vector for additional operations\n        RealVector rowVector = MatrixUtils.createRealVector(new double[]{13.0, 14.0, 15.0});\n        \n        // Add row vector to multiplied matrix's first row\n        RealMatrix modifiedMatrix = multipliedMatrix.copy();\n        modifiedMatrix.setRowVector(0, rowVector);\n        \n        // Print the modified matrix\n        System.out.println(\"Modified Matrix:\");\n        for (int i = 0; i < modifiedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < modifiedMatrix.getColumnDimension(); j++) {\n                System.out.print(modifiedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Read: get the column real vector\n        /* read */ RealVector readVector = matrix.getColumnVector(0);\n        \n        // Output the read vector\n        System.out.println(\"Read Vector: \" + readVector);\n        \n        // Perform additional operations on the read vector\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Read Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one column\n        double[][] data = { {1.0}, {2.0}, {3.0} };\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Write: create a column real vector\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        \n        // Set this vector as the first column of the matrix\n        matrix.setColumnVector(0, columnVector);\n        \n        // Read: get the column real vector\n        /* read */ RealVector readVector = matrix.getColumnVector(0);\n        \n        // Output the read vector\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}