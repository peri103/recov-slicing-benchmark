{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one column\n        double[][] matrixData = {{1.0}, {2.0}, {3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        // Create a column vector from the matrix\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        \n        // Perform some unrelated operations\n        double[][] anotherMatrixData = {{7.0, 8.0}, {9.0, 10.0}};\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(anotherMatrixData);\n        \n        RealVector vectorSum = columnVector.add(columnVector);\n        System.out.println(\"Vector Sum:\");\n        for (int i = 0; i < vectorSum.getDimension(); i++) {\n            System.out.println(vectorSum.getEntry(i));\n        }\n        \n        double[][] resultMatrixData = new double[anotherMatrix.getRowDimension()][anotherMatrix.getColumnDimension()];\n        for (int i = 0; i < anotherMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < anotherMatrix.getColumnDimension(); j++) {\n                resultMatrixData[i][j] = anotherMatrix.getEntry(i, j) * 2;\n            }\n        }\n        \n        RealMatrix resultMatrix = MatrixUtils.createRealMatrix(resultMatrixData);\n        System.out.println(\"Result Matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Set the column vector into the matrix\n        matrix.setColumnVector(0, columnVector);\n        \n        // More unrelated operations\n        RealVector scaledVector = columnVector.mapMultiply(3.0);\n        System.out.println(\"Scaled Vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n        \n        // Read the column vector from the matrix\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        \n        // Print the values of the read column vector\n        System.out.println(\"Read Column Vector:\");\n        for (int i = 0; i < readColumnVector.getDimension(); i++) {\n            System.out.println(readColumnVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one column\n        double[][] matrixData = {{1.0}, {2.0}, {3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        // Create a column vector from the matrix\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        \n        // Set the column vector into the matrix\n        matrix.setColumnVector(0, columnVector);\n        \n        // Read the column vector from the matrix\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        \n        // Print the values of the read column vector\n        for (int i = 0; i < readColumnVector.getDimension(); i++) {\n            System.out.println(readColumnVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}