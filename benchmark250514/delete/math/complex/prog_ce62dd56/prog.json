{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n        \n        /* write */\n        RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n        \n        // Create another diagonal matrix\n        double[] anotherDiagonalValues = {4.0, 5.0, 6.0};\n        RealMatrix anotherMatrix = MatrixUtils.createDiagonalMatrix(anotherDiagonalValues);\n        \n        // Add the two matrices\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        \n        // Create a vector and multiply with the sum matrix\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 1.0, 1.0});\n        RealVector resultVector = sumMatrix.operate(vector);\n        \n        // Print the result vector\n        System.out.println(\"Result vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n        \n        // Perform some operations on the original matrix\n        double determinant = matrix.getDeterminant();\n        System.out.println(\"Determinant of the original matrix: \" + determinant);\n        \n        // Get the diagonal of the original matrix\n        /* read */\n        RealMatrix readMatrix = MatrixUtils.getDiagonalMatrix(matrix);\n        \n        double[] readDiagonalValues = readMatrix.getColumn(0);\n        \n        System.out.println(\"Read diagonal values:\");\n        for (double value : readDiagonalValues) {\n            System.out.println(value);\n        }\n        \n        // Additional operations using the read matrix\n        RealMatrix transposedMatrix = readMatrix.transpose();\n        System.out.println(\"Transposed matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n        \n        /* write */\n        RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n        \n        /* read */\n        RealMatrix readMatrix = MatrixUtils.getDiagonalMatrix(matrix);\n        \n        double[] readDiagonalValues = readMatrix.getColumn(0);\n        \n        for (double value : readDiagonalValues) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}