{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        double[][] data2 = {{5.0, 6.0}, {7.0, 8.0}};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        // Perform some operations with another matrix\n        RealMatrix matrix2 = MatrixUtils.createArray2DRowRealMatrix(data2);\n        RealMatrix resultMatrix = matrix.add(matrix2);\n\n        // Print the result of the matrix addition\n        System.out.println(\"Result Matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0});\n        RealVector resultVector = matrix.operate(vector);\n\n        // Print the result of the vector operation\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Further operations on the original matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n\n        // Print the transposed matrix\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        /* read */ double[][] array = matrix.getData();\n        \n        // Print the original matrix data\n        System.out.println(\"Original Matrix:\");\n        for (int i = 0; i < array.length; i++) {\n            for (int j = 0; j < array[i].length; j++) {\n                System.out.print(array[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        /* read */ double[][] array = matrix.getData();\n        \n        for (int i = 0; i < array.length; i++) {\n            for (int j = 0; j < array[i].length; j++) {\n                System.out.print(array[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArray2DRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArray2DRowRealMatrix"
    }
}