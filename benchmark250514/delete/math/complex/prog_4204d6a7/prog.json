{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixImpl;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Initialize a matrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new RealMatrixImpl(matrixData);\n        \n        // Perform operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        printMatrix(transposedMatrix);\n        \n        // Perform vector operations\n        ArrayRealVector vector1 = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        ArrayRealVector vector2 = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        \n        ArrayRealVector sumVector = vector1.add(vector2);\n        System.out.println(\"Sum of vectors:\");\n        printVector(sumVector);\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        // Additional operations\n        ArrayRealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector:\");\n        printVector(scaledVector);\n        \n        // More complex operations\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n        System.out.println(\"Multiplied Matrix:\");\n        printMatrix(multipliedMatrix);\n        \n        /* read */ double[] retrievedData = vector.toArray();\n        \n        System.out.println(\"Retrieved Data:\");\n        for (double value : retrievedData) {\n            System.out.println(value);\n        }\n    }\n    \n    private static void printMatrix(RealMatrix matrix) {\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                System.out.print(matrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n    \n    private static void printVector(ArrayRealVector vector) {\n        for (int i = 0; i < vector.getDimension(); i++) {\n            System.out.print(vector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ double[] retrievedData = vector.toArray();\n        \n        for (double value : retrievedData) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}