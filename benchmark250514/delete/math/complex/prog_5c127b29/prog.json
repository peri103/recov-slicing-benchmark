{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a column real vector using the write method\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{1.0, 2.0, 3.0});\n\n        // Create a matrix for demonstration purposes\n        RealMatrix matrix = MatrixUtils.createRealMatrix(new double[][]{\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        });\n\n        // Set the first column of the matrix to the created column real vector\n        matrix.setColumnVector(0, columnVector);\n\n        // Create another matrix and perform some operations\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(new double[][]{\n            {10.0, 20.0, 30.0},\n            {40.0, 50.0, 60.0},\n            {70.0, 80.0, 90.0}\n        });\n\n        // Add the two matrices\n        RealMatrix resultMatrix = matrix.add(anotherMatrix);\n\n        // Apply a visitor to modify the result matrix\n        resultMatrix.walkInOptimizedOrder(new RealMatrixChangingVisitor() {\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {}\n\n            @Override\n            public double visit(int row, int column, double value) {\n                return value * 2; // Multiply each element by 2\n            }\n\n            @Override\n            public double end() {\n                return 0;\n            }\n        });\n\n        // Print the modified result matrix\n        System.out.println(\"Modified Result Matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the first column real vector from the matrix using the read method\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n\n        // Print the read column vector to verify the result\n        System.out.println(\"Read Column Vector: \" + readColumnVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a column real vector using the write method\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{1.0, 2.0, 3.0});\n\n        // Create a matrix for demonstration purposes\n        RealMatrix matrix = MatrixUtils.createRealMatrix(new double[][]{\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        });\n\n        // Set the first column of the matrix to the created column real vector\n        matrix.setColumnVector(0, columnVector);\n\n        // Read the first column real vector from the matrix using the read method\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n\n        // Print the read column vector to verify the result\n        System.out.println(\"Read Column Vector: \" + readColumnVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}