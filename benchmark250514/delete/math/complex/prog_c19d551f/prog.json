{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.DecompositionSolver;\nimport org.apache.commons.math3.linear.LUDecomposition;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n\n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Additional operations\n        double[][] matrixData = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        LUDecomposition decomposition = new LUDecomposition(matrix);\n        DecompositionSolver solver = decomposition.getSolver();\n        RealVector constants = MatrixUtils.createArrayRealVector(new double[]{5.0, 6.0});\n        RealVector solution = solver.solve(constants);\n\n        // Perform some calculations\n        double sum = 0;\n        for (int i = 0; i < solution.getDimension(); i++) {\n            sum += solution.getEntry(i);\n        }\n        System.out.println(\"Sum of solution vector: \" + sum);\n\n        // More complex operations\n        double[] additionalData = {4.0, 5.0, 6.0};\n        RealVector additionalVector = MatrixUtils.createArrayRealVector(additionalData);\n        RealVector combinedVector = vector.add(additionalVector);\n\n        System.out.println(\"Combined Vector: \" + combinedVector);\n\n        /* read */ RealVector readVector = MatrixUtils.getArrayRealVector(vector.toArray());\n        \n        System.out.println(\"Read Vector: \" + readVector);\n\n        // Further manipulations\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Read Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n\n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        /* read */ RealVector readVector = MatrixUtils.getArrayRealVector(vector.toArray());\n        \n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}