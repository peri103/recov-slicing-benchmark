{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row\n        double[][] matrixData = {{1.0, 2.0, 3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Create another matrix for more complexity\n        double[][] anotherMatrixData = {{7.0, 8.0, 9.0}, {10.0, 11.0, 12.0}};\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherMatrixData);\n\n        // Perform some matrix operations\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Sum Matrix: \");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Create a row real vector using MatrixUtils\n        /* write */ RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{4.0, 5.0, 6.0});\n\n        // Set the row vector to the matrix\n        matrix.setRowVector(0, rowVector);\n\n        // Perform vector operations\n        RealVector anotherVector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector addedVector = rowVector.add(anotherVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n\n        // Get the row real vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n\n        // Print the read values\n        System.out.println(\"Read Vector: \" + readVector);\n\n        // More operations to increase complexity\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row\n        double[][] matrixData = {{1.0, 2.0, 3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        // Create a row real vector using MatrixUtils\n        /* write */ RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{4.0, 5.0, 6.0});\n        \n        // Set the row vector to the matrix\n        matrix.setRowVector(0, rowVector);\n        \n        // Get the row real vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        \n        // Print the read values\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}