{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using the MatrixUtils class\n        /* write */ RealVector sparseVector = MatrixUtils.createSparseRealVector(new double[]{1.0, 2.0, 3.0});\n\n        // Additional operations to increase complexity\n        double[] data = {4.0, 5.0, 6.0};\n        RealVector denseVector = new ArrayRealVector(data);\n        RealMatrix matrix = MatrixUtils.createRealMatrix(new double[][]{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}});\n        \n        // Perform some operations on the dense vector\n        denseVector = denseVector.mapAdd(10);\n        RealVector resultVector = matrix.operate(denseVector);\n\n        // Print the result of matrix operation\n        System.out.println(\"Result of matrix operation:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Retrieve the sparse real vector using the MatrixUtils class\n        /* read */ RealVector retrievedVector = MatrixUtils.getSparseRealVector(sparseVector.toArray());\n\n        // Print the elements of the retrieved vector to verify\n        System.out.println(\"Retrieved sparse vector:\");\n        for (int i = 0; i < retrievedVector.getDimension(); i++) {\n            System.out.println(retrievedVector.getEntry(i));\n        }\n\n        // Additional operations to increase complexity\n        double dotProduct = denseVector.dotProduct(retrievedVector);\n        System.out.println(\"Dot product of dense and retrieved sparse vector: \" + dotProduct);\n\n        RealVector combinedVector = denseVector.add(retrievedVector);\n        System.out.println(\"Combined vector:\");\n        for (int i = 0; i < combinedVector.getDimension(); i++) {\n            System.out.println(combinedVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using the MatrixUtils class\n        /* write */ RealVector sparseVector = MatrixUtils.createSparseRealVector(new double[]{1.0, 2.0, 3.0});\n\n        // Retrieve the sparse real vector using the MatrixUtils class\n        /* read */ RealVector retrievedVector = MatrixUtils.getSparseRealVector(sparseVector.toArray());\n\n        // Print the elements of the retrieved vector to verify\n        for (int i = 0; i < retrievedVector.getDimension(); i++) {\n            System.out.println(retrievedVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}