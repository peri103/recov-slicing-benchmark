{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalData = {1.0, 2.0, 3.0};\n\n        // Create a diagonal matrix\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalData);\n\n        // Additional complex operations\n        double[] vectorData = {4.0, 5.0, 6.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n\n        // Perform a matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Create another matrix and add it to the original matrix\n        RealMatrix anotherMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Sum of matrices:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the diagonal elements from the original matrix\n        /* read */ double[] readData = MatrixUtils.getDiagonalMatrix(matrix).getData();\n\n        // Print the diagonal elements\n        System.out.println(\"Diagonal elements of the original matrix:\");\n        for (double value : readData) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalData = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalData);\n        /* read */ double[] readData = MatrixUtils.getDiagonalMatrix(matrix).getData();\n        \n        for (double value : readData) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}