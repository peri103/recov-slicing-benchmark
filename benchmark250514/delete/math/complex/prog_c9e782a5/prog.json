{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.BlockRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a matrix with some values\n        RealMatrix matrix = new BlockRealMatrix(new double[][] {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        });\n        \n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        // Perform some operations on the vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        RealVector addedVector = scaledVector.add(new ArrayRealVector(new double[] {1.0, 1.0, 1.0}));\n        \n        // Print the results of matrix operations\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector.toArray());\n        \n        // Perform operations on the read vector\n        RealVector subtractedVector = readVector.subtract(new ArrayRealVector(new double[] {0.5, 0.5, 0.5}));\n        \n        // Print the results of vector operations\n        System.out.println(\"Original Vector: \" + vector);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n        System.out.println(\"Subtracted Vector: \" + subtractedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector.toArray());\n        \n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}