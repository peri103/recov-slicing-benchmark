{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.DecompositionSolver;\nimport org.apache.commons.math3.linear.LUDecomposition;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        double[] additionalData = {4.0, 5.0, 6.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        \n        // Create another matrix\n        RealMatrix additionalMatrix = MatrixUtils.createRowRealMatrix(additionalData);\n        \n        // Perform matrix multiplication\n        RealMatrix multipliedMatrix = matrix.multiply(additionalMatrix.transpose());\n        \n        // Create a vector\n        RealVector vector = new ArrayRealVector(new double[]{7.0, 8.0, 9.0});\n        \n        // Solve a system of linear equations\n        DecompositionSolver solver = new LUDecomposition(multipliedMatrix).getSolver();\n        RealVector solution = solver.solve(vector);\n        \n        // Print the solution vector\n        System.out.println(\"Solution Vector:\");\n        for (int i = 0; i < solution.getDimension(); i++) {\n            System.out.print(solution.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Some unrelated operations\n        double sum = 0;\n        for (int i = 0; i < data.length; i++) {\n            sum += data[i] * additionalData[i];\n        }\n        System.out.println(\"Sum of products: \" + sum);\n        \n        // Further operations on the matrix\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        \n        // Print the scaled matrix\n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix.getData(), 0);\n        \n        // Print the read matrix\n        System.out.println(\"Read Matrix:\");\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix.getData(), 0);\n        \n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}