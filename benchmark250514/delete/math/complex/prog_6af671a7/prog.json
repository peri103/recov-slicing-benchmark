{
    "java_code": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a matrix for additional complexity\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        // Perform some matrix operations\n        RealVector columnVector = matrix.getColumnVector(0);\n        System.out.println(\"Column vector: \" + columnVector);\n\n        // Vector operations\n        RealVector randomVector = new ArrayRealVector(new double[]{0.5, 1.5, 2.5});\n        RealVector addedVector = randomVector.add(columnVector);\n        System.out.println(\"Added vector: \" + addedVector);\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        // More unrelated computations\n        double scalar = 2.0;\n        RealVector scaledVector = vector.mapMultiply(scalar);\n        System.out.println(\"Scaled vector: \" + scaledVector);\n        \n        // Further operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed matrix: \" + transposedMatrix);\n        \n        /* read */ double[] readData = vector.toArray();\n        \n        // Print the read data\n        for (double v : readData) {\n            System.out.println(v);\n        }\n        \n        // Additional complex operations\n        RealVector subtractedVector = scaledVector.subtract(randomVector);\n        System.out.println(\"Subtracted vector: \" + subtractedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ double[] readData = vector.toArray();\n        \n        for (double v : readData) {\n            System.out.println(v);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}