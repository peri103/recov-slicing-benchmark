{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a matrix with one row and multiple columns\n        double[][] data = {{1.0, 2.0, 3.0}};\n        \n        // Initialize a RealMatrix with the data\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create a RealVector using the write method\n        /* write */ RealVector vector = MatrixUtils.createRowRealVector(data[0]);\n        \n        // Set the vector as the first row of the matrix\n        matrix.setRowVector(0, vector);\n        \n        // Perform some operations on the matrix\n        double[][] additionalData = {{4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalData);\n        RealMatrix combinedMatrix = matrix.add(additionalMatrix);\n        \n        // Print the combined matrix\n        System.out.println(\"Combined Matrix:\");\n        for (int i = 0; i < combinedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < combinedMatrix.getColumnDimension(); j++) {\n                System.out.print(combinedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform some unrelated calculations\n        double[] unrelatedData = {10.0, 20.0, 30.0};\n        RealVector unrelatedVector = MatrixUtils.createRowRealVector(unrelatedData);\n        RealVector scaledVector = unrelatedVector.mapMultiply(2.0);\n        \n        // Print the scaled vector\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        \n        // Retrieve the RealVector using the read method\n        /* read */ RealVector retrievedVector = matrix.getRowVector(0);\n        \n        // Print the vector to verify\n        System.out.println(\"Retrieved Vector: \" + retrievedVector);\n        \n        // Perform additional operations on the retrieved vector\n        RealVector incrementedVector = retrievedVector.mapAdd(1.0);\n        \n        // Print the incremented vector\n        System.out.println(\"Incremented Vector: \" + incrementedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a matrix with one row and multiple columns\n        double[][] data = {{1.0, 2.0, 3.0}};\n        \n        // Initialize a RealMatrix with the data\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create a RealVector using the write method\n        /* write */ RealVector vector = MatrixUtils.createRowRealVector(data[0]);\n        \n        // Set the vector as the first row of the matrix\n        matrix.setRowVector(0, vector);\n        \n        // Retrieve the RealVector using the read method\n        /* read */ RealVector retrievedVector = matrix.getRowVector(0);\n        \n        // Print the vector to verify\n        System.out.println(retrievedVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}