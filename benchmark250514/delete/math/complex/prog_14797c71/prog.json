{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the vector with some data\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create an OpenMapRealVector using the write method\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(data);\n\n        // Additional complex operations\n        ArrayRealVector arrayVector = new ArrayRealVector(data);\n\n        // Perform some operations on the ArrayRealVector\n        arrayVector.mapAddToSelf(5.0); // Add 5 to each element\n        System.out.println(\"ArrayRealVector after addition: \" + arrayVector);\n\n        // Create another OpenMapRealVector for operations\n        OpenMapRealVector anotherVector = new OpenMapRealVector(data.length);\n        anotherVector.setEntry(0, 10.0);\n        anotherVector.setEntry(1, 20.0);\n        anotherVector.setEntry(2, 30.0);\n\n        // Perform addition of two vectors\n        RealVector resultVector = vector.add(anotherVector);\n        System.out.println(\"Resultant OpenMapRealVector after addition: \" + resultVector);\n\n        // Accessing an element from the original vector\n        /* read */ OpenMapRealVector readVector = vector; // Since there's no getOpenMapRealVector method, just use the vector directly\n\n        // Accessing an element to verify\n        double value = readVector.getEntry(0);\n        System.out.println(\"Read value from OpenMapRealVector: \" + value);\n\n        // Perform some operations on the resultVector\n        double dotProduct = resultVector.dotProduct(arrayVector);\n        System.out.println(\"Dot product of resultVector and arrayVector: \" + dotProduct);\n\n        // Normalize the resultVector\n        RealVector normalizedVector = resultVector.mapDivide(resultVector.getNorm());\n        System.out.println(\"Normalized resultVector: \" + normalizedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the vector with some data\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create an OpenMapRealVector using the write method\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(data);\n\n        // Read the vector using the read method\n        /* read */ OpenMapRealVector readVector = vector; // Since there's no getOpenMapRealVector method, just use the vector directly\n\n        // Accessing an element to verify\n        double value = readVector.getEntry(0);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}