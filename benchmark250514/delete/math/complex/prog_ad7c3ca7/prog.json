{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        double[][] matrixData = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n\n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealVector resultVector = matrix.operate(vector);\n\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(\"Result Vector Element \" + i + \": \" + resultVector.getEntry(i));\n        }\n\n        double sum = 0;\n        for (int i = 0; i < data.length; i++) {\n            sum += data[i];\n        }\n        System.out.println(\"Sum of original vector elements: \" + sum);\n\n        // Performing some additional operations on the original vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(\"Scaled Vector Element \" + i + \": \" + scaledVector.getEntry(i));\n        }\n\n        /* read */ RealVector readVector = MatrixUtils.getArrayRealVector(vector);\n\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ RealVector readVector = MatrixUtils.getArrayRealVector(vector);\n        \n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}