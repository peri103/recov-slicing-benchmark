{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.BlockRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a double array to be used for the vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create an ArrayRealVector using MatrixUtils\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Perform some operations on the vector\n        RealVector scaledVector = vector.mapMultiply(2.0); // Scale the vector by 2\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n\n        // Create another vector and perform addition\n        double[] otherData = {4.0, 5.0, 6.0};\n        ArrayRealVector otherVector = new ArrayRealVector(otherData);\n        RealVector sumVector = vector.add(otherVector);\n        System.out.println(\"Sum Vector: \" + sumVector);\n\n        // Create a matrix and perform matrix-vector multiplication\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new BlockRealMatrix(matrixData);\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Matrix-Vector Multiplication Result: \" + resultVector);\n\n        // Retrieve the ArrayRealVector using MatrixUtils\n        /* read */ ArrayRealVector retrievedVector = MatrixUtils.getArrayRealVector(vector);\n\n        // Print the retrieved vector to verify its content\n        System.out.println(\"Retrieved Vector: \" + retrievedVector);\n\n        // Perform additional operations on the retrieved vector\n        RealVector negatedVector = retrievedVector.mapMultiply(-1.0); // Negate the vector\n        System.out.println(\"Negated Vector: \" + negatedVector);\n\n        // Calculate the dot product of the original vector and the negated vector\n        double dotProduct = vector.dotProduct(negatedVector);\n        System.out.println(\"Dot Product: \" + dotProduct);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a double array to be used for the vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create an ArrayRealVector using MatrixUtils\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Retrieve the ArrayRealVector using MatrixUtils\n        /* read */ ArrayRealVector retrievedVector = MatrixUtils.getArrayRealVector(vector);\n\n        // Print the retrieved vector to verify its content\n        System.out.println(retrievedVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}