{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to represent a matrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        // Create a RealMatrix from the 2D array\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Create a new vector using the write method\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{10.0, 11.0, 12.0});\n\n        // Perform some unrelated operations to make the program more complex\n        RealVector rowVector = matrix.getRowVector(0);\n        double sum = 0;\n        for (int i = 0; i < rowVector.getDimension(); i++) {\n            sum += rowVector.getEntry(i);\n        }\n        System.out.println(\"Sum of elements in the first row: \" + sum);\n\n        // Update the matrix with the new column vector at column index 1\n        matrix.setColumnVector(1, columnVector);\n\n        // Perform additional operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Use the read method to get the column real vector from the matrix at column index 1\n        /* read */ RealVector readVector = matrix.getColumnVector(1);\n\n        // Print the read vector to verify the value\n        System.out.println(\"Column Vector at index 1: \" + readVector);\n\n        // Perform more operations on the matrix\n        double[] scaleFactors = {2.0, 2.0, 2.0};\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to represent a matrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        // Create a RealMatrix from the 2D array\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Use the write method to create a column real vector\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{10.0, 11.0, 12.0});\n\n        // Update the matrix with the new column vector at column index 1\n        matrix.setColumnVector(1, columnVector);\n\n        // Use the read method to get the column real vector from the matrix at column index 1\n        /* read */ RealVector readVector = matrix.getColumnVector(1);\n\n        // Print the read vector to verify the value\n        System.out.println(\"Column Vector at index 1: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}