{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        double[] rowData = {7.0, 8.0, 9.0};\n        RealVector rowVector = MatrixUtils.createRowRealVector(rowData);\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Create another matrix and perform operations\n        double[][] additionalData = {{10.0, 11.0, 12.0}, {13.0, 14.0, 15.0}};\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalData);\n\n        RealVector columnVector = additionalMatrix.getColumnVector(1);\n        RealVector sumVector = rowVector.add(columnVector);\n\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(\"Sum element \" + i + \": \" + sumVector.getEntry(i));\n        }\n\n        // Perform some calculations on the original matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealVector transposedRowVector = transposedMatrix.getRowVector(1);\n\n        double dotProduct = rowVector.dotProduct(transposedRowVector);\n        System.out.println(\"Dot product: \" + dotProduct);\n\n        // Access the modified row vector\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(\"Modified row vector: \" + readVector);\n\n        // Additional operations on the matrix\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        RealMatrix addedMatrix = matrix.add(additionalMatrix);\n\n        System.out.println(\"Scaled matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        System.out.println(\"Added matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        double[] rowData = {7.0, 8.0, 9.0};\n        RealVector rowVector = MatrixUtils.createRowRealVector(rowData);\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}