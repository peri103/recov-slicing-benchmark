{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n\n        // Create a matrix using the data\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a row real vector using the createRowRealVector method\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{7.0, 8.0, 9.0});\n\n        // Set the row vector into the matrix at a specific row index\n        matrix.setRowVector(1, rowVector);\n\n        // Perform some unrelated operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n        \n        // Print the transposed matrix\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Create another matrix for additional operations\n        double[][] newData = {\n            {10.0, 11.0, 12.0},\n            {13.0, 14.0, 15.0}\n        };\n        RealMatrix newMatrix = new Array2DRowRealMatrix(newData);\n\n        // Add the new matrix to the existing matrix\n        RealMatrix addedMatrix = matrix.add(newMatrix);\n\n        // Print the added matrix\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the row vector using the getRowRealVector method\n        /* read */ RealVector readVector = matrix.getRowVector(1);\n\n        // Print the read vector to verify it matches the written vector\n        System.out.println(\"Read Vector: \" + readVector);\n\n        // Perform some operations on the read vector\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Read Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n\n        // Create a matrix using the data\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a row real vector using the createRowRealVector method\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{7.0, 8.0, 9.0});\n\n        // Set the row vector into the matrix at a specific row index\n        matrix.setRowVector(1, rowVector);\n\n        // Read the row vector using the getRowRealVector method\n        /* read */ RealVector readVector = matrix.getRowVector(1);\n\n        // Print the read vector to verify it matches the written vector\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}