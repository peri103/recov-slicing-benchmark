{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a row real matrix\n        double[][] data = { { 1.0, 2.0, 3.0 } };\n        \n        // Create a row real matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        \n        // Create another matrix for demonstration\n        double[][] data2 = { { 4.0, 5.0, 6.0 }, { 7.0, 8.0, 9.0 } };\n        RealMatrix matrix2 = MatrixUtils.createRealMatrix(data2);\n        \n        // Perform some operations on matrix2\n        RealMatrix transposedMatrix2 = matrix2.transpose();\n        System.out.println(\"Transposed Matrix2:\");\n        for (int i = 0; i < transposedMatrix2.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix2.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix2.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Create a real vector for additional operations\n        double[] vectorData = { 1.0, 2.0, 3.0 };\n        RealVector vector = new ArrayRealVector(vectorData);\n        \n        // Multiply the vector with the original matrix\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Resultant Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Read the row real matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix.getData(), 0);\n        \n        // Print the matrix to verify\n        System.out.println(\"Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform additional operations\n        RealMatrix addedMatrix = matrix.add(matrix2);\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a row real matrix\n        double[][] data = { { 1.0, 2.0, 3.0 } };\n        \n        // Create a row real matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        \n        // Read the row real matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix.getData(), 0);\n        \n        // Print the matrix to verify\n        System.out.println(\"Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}