{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.SingularValueDecomposition;\nimport org.apache.commons.math3.linear.DecompositionSolver;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to use with the matrix\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Create a RealMatrix using the MatrixUtils class\n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Decompose the matrix using Singular Value Decomposition\n        SingularValueDecomposition svd = new SingularValueDecomposition(matrix);\n        DecompositionSolver solver = svd.getSolver();\n        \n        // Create another matrix for solving Ax = b\n        double[][] bData = {{5.0}, {6.0}};\n        RealMatrix bMatrix = new Array2DRowRealMatrix(bData);\n        \n        // Solve the system of equations\n        RealMatrix solution = solver.solve(bMatrix);\n        System.out.println(\"Solution Matrix:\");\n        for (int i = 0; i < solution.getRowDimension(); i++) {\n            for (int j = 0; j < solution.getColumnDimension(); j++) {\n                System.out.print(solution.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Read the matrix back using the MatrixUtils class\n        /* read */ double[][] readData = matrix.getData();\n        \n        // Output the read data to verify\n        System.out.println(\"Original Matrix:\");\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to use with the matrix\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Create a RealMatrix using the MatrixUtils class\n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        // Read the matrix back using the MatrixUtils class\n        /* read */ double[][] readData = matrix.getData();\n        \n        // Output the read data to verify\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArray2DRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArray2DRowRealMatrix"
    }
}