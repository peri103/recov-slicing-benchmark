{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 identity matrix\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        };\n        \n        // Create a triangular matrix using the data\n        /* write */ RealMatrix matrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Perform some additional operations on the matrix\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector resultVector = matrix.operate(vector);\n\n        // Print the result of the vector operation\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // More complex operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n\n        // Print the multiplied matrix\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Retrieve the triangular matrix\n        /* read */ RealMatrix triangularMatrix = MatrixUtils.getTriangularMatrix(matrix);\n\n        // Print the triangular matrix\n        System.out.println(\"Triangular Matrix:\");\n        for (int i = 0; i < triangularMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < triangularMatrix.getColumnDimension(); j++) {\n                System.out.print(triangularMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Additional unrelated logic\n        double[] extraData = {4.0, 5.0, 6.0};\n        RealVector extraVector = new ArrayRealVector(extraData);\n        RealVector extraResult = transposedMatrix.operate(extraVector);\n\n        // Print the result of extra operations\n        System.out.println(\"Extra operation result:\");\n        for (int i = 0; i < extraResult.getDimension(); i++) {\n            System.out.print(extraResult.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 identity matrix\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        };\n        \n        // Create a triangular matrix using the data\n        /* write */ RealMatrix matrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Retrieve the triangular matrix\n        /* read */ RealMatrix triangularMatrix = MatrixUtils.getTriangularMatrix(matrix);\n\n        // Print the triangular matrix\n        for (int i = 0; i < triangularMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < triangularMatrix.getColumnDimension(); j++) {\n                System.out.print(triangularMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    }
}