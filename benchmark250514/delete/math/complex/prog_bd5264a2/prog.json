{
    "java_code": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix of size 3x3\n        RealMatrix identityMatrix;\n        /* write */ identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(new double[]{1, 2, 3});\n        RealVector scaledVector = vector.mapMultiply(2.0); // Scale the vector by 2\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n\n        // Modify the identity matrix by adding the scaled vector to each row\n        identityMatrix.walkInRowOrder(new RealMatrixChangingVisitor() {\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {}\n            public double visit(int row, int column, double value) {\n                return value + scaledVector.getEntry(column);\n            }\n            public double end() { return 0; }\n        });\n\n        // Perform some unrelated operations\n        double determinant = identityMatrix.getDeterminant();\n        System.out.println(\"Determinant of modified matrix: \" + determinant);\n\n        // Read the identity matrix created\n        /* read */ RealMatrix readMatrix = identityMatrix;\n\n        // Print the matrix to verify the value\n        System.out.println(\"Modified Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Further operations on the matrix\n        RealMatrix transposedMatrix = readMatrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix of size 3x3\n        RealMatrix identityMatrix;\n        /* write */ identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Read the identity matrix created\n        /* read */ RealMatrix readMatrix = identityMatrix;\n\n        // Print the matrix to verify the value\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createIdentityMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getIdentityMatrix"
    }
}