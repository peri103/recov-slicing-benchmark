{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        // Perform some operations on vectors\n        RealVector anotherVector = MatrixUtils.createArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector sumVector = vector.add(anotherVector);\n        System.out.println(\"Sum of vectors: \" + sumVector);\n\n        // Create and manipulate a matrix\n        double[][] matrixData = { {1.0, 2.0}, {3.0, 4.0} };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix: \");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Scale the original vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n\n        // Use the original write-read pair\n        /* read */ RealVector readVector = vector; // Assuming getArrayRealVector is a method to retrieve the vector itself\n        System.out.println(\"Original Vector: \" + readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ RealVector readVector = vector; // Assuming getArrayRealVector is a method to retrieve the vector itself\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}