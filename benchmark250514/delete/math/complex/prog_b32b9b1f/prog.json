{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the sparse real vector\n        double[] data = {1.0, 0.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n        \n        // Additional unrelated code to make the program more complex\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        \n        // Perform matrix operations\n        RealVector columnVector = matrix.getColumnVector(0);\n        RealVector rowVector = matrix.getRowVector(1);\n        \n        // Sum of elements in the column vector\n        double columnSum = columnVector.getL1Norm();\n        System.out.println(\"Sum of elements in the column vector: \" + columnSum);\n        \n        // Sum of elements in the row vector\n        double rowSum = rowVector.getL1Norm();\n        System.out.println(\"Sum of elements in the row vector: \" + rowSum);\n        \n        // Reading the sparse real vector\n        /* read */ RealVector readVector = vector; // Assuming getSparseRealVector returns the same vector\n        System.out.println(\"Sparse Real Vector: \" + readVector);\n        \n        // Additional operations on the sparse real vector\n        double norm = readVector.getNorm();\n        System.out.println(\"Norm of the sparse real vector: \" + norm);\n        \n        // Multiply the sparse vector with a scalar\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Sparse Real Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the sparse real vector\n        double[] data = {1.0, 0.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n        \n        // Reading the sparse real vector\n        /* read */ RealVector readVector = vector; // Assuming getSparseRealVector returns the same vector\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}