{
    "java_code": "import org.apache.commons.math3.linear.DiagonalMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a DiagonalMatrix with size 3\n        DiagonalMatrix matrix = new DiagonalMatrix(3);\n\n        // Perform some unrelated operations\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Resulting Vector: \" + resultVector);\n\n        // Set an entry in the matrix\n        /* write */ matrix.setEntry(1, 5.0);\n\n        // Perform more unrelated operations\n        DiagonalMatrix anotherMatrix = new DiagonalMatrix(new double[]{3.0, 4.0, 5.0});\n        RealVector anotherResultVector = anotherMatrix.operate(vector);\n        System.out.println(\"Another Resulting Vector: \" + anotherResultVector);\n\n        // Read the entry from the matrix\n        /* read */ double value = matrix.getEntry(1);\n        System.out.println(\"Read Value: \" + value);\n\n        // Additional operations with vectors\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        RealVector addedVector = scaledVector.add(new ArrayRealVector(new double[]{1.0, 1.0, 1.0}));\n        System.out.println(\"Added Vector: \" + addedVector);\n\n        // More matrix operations\n        DiagonalMatrix scaledMatrix = new DiagonalMatrix(new double[]{2.0, 2.0, 2.0});\n        RealVector finalResultVector = scaledMatrix.operate(addedVector);\n        System.out.println(\"Final Resulting Vector: \" + finalResultVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.DiagonalMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        DiagonalMatrix matrix = new DiagonalMatrix(3);\n        /* write */ matrix.setEntry(1, 5.0);\n        /* read */ double value = matrix.getEntry(1);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DiagonalMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.DiagonalMatrix",
        "read_method": "getEntry"
    }
}