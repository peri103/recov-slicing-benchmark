{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a column matrix with some values\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        // Perform some unrelated operations\n        RealVector vector1 = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector vector2 = new ArrayRealVector(new double[]{7.0, 8.0, 9.0});\n        \n        // Add vectors\n        RealVector sumVector = vector1.add(vector2);\n        System.out.println(\"Sum of vectors: \" + sumVector);\n        \n        // Scalar multiplication\n        RealVector scaledVector = vector1.mapMultiply(2.0);\n        System.out.println(\"Scaled vector: \" + scaledVector);\n        \n        // Calculate dot product\n        double dotProduct = vector1.dotProduct(vector2);\n        System.out.println(\"Dot product: \" + dotProduct);\n        \n        // Use another matrix operation\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        System.out.println(\"Identity matrix:\");\n        for (int i = 0; i < identityMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < identityMatrix.getColumnDimension(); j++) {\n                System.out.print(identityMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Retrieve the column matrix\n        /* read */ RealMatrix retrievedColumnMatrix = MatrixUtils.getColumnRealMatrix(matrix, 0);\n        \n        // Print the retrieved column matrix\n        System.out.println(\"Retrieved column matrix:\");\n        for (int i = 0; i < retrievedColumnMatrix.getRowDimension(); i++) {\n            System.out.println(retrievedColumnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a column matrix with some values\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        // Retrieve the column matrix\n        /* read */ RealMatrix retrievedColumnMatrix = MatrixUtils.getColumnRealMatrix(matrix, 0);\n        \n        // Print the retrieved column matrix\n        for (int i = 0; i < retrievedColumnMatrix.getRowDimension(); i++) {\n            System.out.println(retrievedColumnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}