{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an OpenMapRealVector using the write method\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(new double[]{1.0, 2.0, 3.0});\n        \n        // Perform some unrelated operations to increase complexity\n        ArrayRealVector arrayVector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector sumVector = vector.add(arrayVector);\n        \n        // Generate random values and add them to the vector\n        Random random = new Random();\n        for (int i = 0; i < vector.getDimension(); i++) {\n            vector.setEntry(i, vector.getEntry(i) + random.nextDouble());\n        }\n        \n        // Print the sum of the vectors\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(\"Sum Vector Entry \" + i + \": \" + sumVector.getEntry(i));\n        }\n        \n        // Access the OpenMapRealVector using the read method\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the vector elements to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(\"Read Vector Entry \" + i + \": \" + readVector.getEntry(i));\n        }\n        \n        // Perform some additional operations on the read vector\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(\"Scaled Vector Entry \" + i + \": \" + scaledVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an OpenMapRealVector using the write method\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(new double[]{1.0, 2.0, 3.0});\n        \n        // Access the OpenMapRealVector using the read method\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the vector elements to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}