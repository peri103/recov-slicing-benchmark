{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to represent the matrix\n        double[][] data = {\n            {1.0, 2.0},\n            {2.0, 3.0}\n        };\n\n        // Create a symmetric matrix using the write method\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = symmetricMatrix.transpose();\n        RealMatrix multipliedMatrix = symmetricMatrix.multiply(transposedMatrix);\n\n        // Create a vector and perform operations with the matrix\n        double[] vectorData = {1.0, 2.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        RealVector resultVector = multipliedMatrix.operate(vector);\n\n        // Initialize another matrix and perform operations\n        double[][] anotherData = {\n            {4.0, 5.0},\n            {5.0, 6.0}\n        };\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherData);\n        RealMatrix addedMatrix = symmetricMatrix.add(anotherMatrix);\n\n        // Read the symmetric matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n\n        // Print the read matrix to verify the output\n        System.out.println(\"Read Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Print the result of matrix-vector operations\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Print the added matrix\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to represent the matrix\n        double[][] data = {\n            {1.0, 2.0},\n            {2.0, 3.0}\n        };\n\n        // Create a symmetric matrix using the write method\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Read the symmetric matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n\n        // Print the read matrix to verify the output\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}