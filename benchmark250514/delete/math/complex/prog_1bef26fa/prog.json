{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sample matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create another matrix for operations\n        double[][] data2 = {\n            {0.5, 1.5, 2.5},\n            {3.5, 4.5, 5.5},\n            {6.5, 7.5, 8.5}\n        };\n        RealMatrix matrix2 = MatrixUtils.createRealMatrix(data2);\n\n        // Perform matrix addition\n        RealMatrix resultMatrix = matrix.add(matrix2);\n        System.out.println(\"Resultant Matrix after addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Create a column real vector\n        double[] columnData = {10.0, 11.0, 12.0};\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(columnData);\n\n        // Set the column vector to the matrix at a specific column index\n        int columnIndex = 1; // For example, replace the second column\n        matrix.setColumnVector(columnIndex, columnVector);\n\n        // Perform matrix multiplication\n        RealMatrix multipliedMatrix = matrix.multiply(matrix2);\n        System.out.println(\"Resultant Matrix after multiplication:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the column real vector from the matrix\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(columnIndex);\n        System.out.println(\"Read Column Vector: \" + readColumnVector);\n\n        // Perform some operations on the read vector\n        RealVector scaledVector = readColumnVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Column Vector: \" + scaledVector);\n\n        // Create a new matrix using Array2DRowRealMatrix for additional operations\n        RealMatrix newMatrix = new Array2DRowRealMatrix(data2);\n        RealMatrix subtractedMatrix = newMatrix.subtract(matrix);\n        System.out.println(\"Resultant Matrix after subtraction:\");\n        for (int i = 0; i < subtractedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < subtractedMatrix.getColumnDimension(); j++) {\n                System.out.print(subtractedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sample matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a column real vector\n        double[] columnData = {10.0, 11.0, 12.0};\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(columnData);\n\n        // Set the column vector to the matrix at a specific column index\n        int columnIndex = 1; // For example, replace the second column\n        matrix.setColumnVector(columnIndex, columnVector);\n\n        // Read the column real vector from the matrix\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(columnIndex);\n        System.out.println(\"Read Column Vector: \" + readColumnVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}