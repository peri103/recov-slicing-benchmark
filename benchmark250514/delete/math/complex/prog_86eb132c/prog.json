{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to represent a column vector\n        double[][] columnData = {{1.0}, {2.0}, {3.0}};\n\n        // Create a column matrix using the write method\n        /* write */ RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(columnData);\n\n        // Perform additional operations unrelated to the read-write pair\n        double[] vectorData = {4.0, 5.0, 6.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = columnMatrix.operate(vector);\n\n        // Print the result of the matrix-vector multiplication\n        System.out.println(\"Result of Matrix-Vector Multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Initialize another matrix and perform matrix addition\n        RealMatrix anotherMatrix = MatrixUtils.createColumnRealMatrix(new double[][]{{7.0}, {8.0}, {9.0}});\n        RealMatrix addedMatrix = columnMatrix.add(anotherMatrix);\n\n        // Print the added matrix\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            System.out.println(addedMatrix.getEntry(i, 0));\n        }\n\n        // Read the column matrix using the read method\n        /* read */ RealMatrix readColumnMatrix = columnMatrix.getColumnMatrix(0);\n\n        // Print the read column matrix\n        System.out.println(\"Column Matrix:\");\n        for (int i = 0; i < readColumnMatrix.getRowDimension(); i++) {\n            System.out.println(readColumnMatrix.getEntry(i, 0));\n        }\n\n        // Perform a scalar multiplication on the read matrix\n        RealMatrix scaledMatrix = readColumnMatrix.scalarMultiply(2.0);\n\n        // Print the scaled matrix\n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            System.out.println(scaledMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to represent a column vector\n        double[][] columnData = {{1.0}, {2.0}, {3.0}};\n\n        // Create a column matrix using the write method\n        /* write */ RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(columnData);\n\n        // Read the column matrix using the read method\n        /* read */ RealMatrix readColumnMatrix = columnMatrix.getColumnMatrix(0);\n\n        // Print the read column matrix\n        System.out.println(\"Column Matrix:\");\n        for (int i = 0; i < readColumnMatrix.getRowDimension(); i++) {\n            System.out.println(readColumnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}