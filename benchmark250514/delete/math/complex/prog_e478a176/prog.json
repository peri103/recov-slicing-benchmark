{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a matrix with a single column vector\n        double[][] data = {{1.0}, {2.0}, {3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create another matrix and perform some operations\n        double[][] anotherData = {{7.0, 8.0}, {9.0, 10.0}, {11.0, 12.0}};\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherData);\n\n        // Add matrices together\n        RealMatrix resultMatrix = matrix.add(anotherMatrix);\n\n        // Write: create a column real vector\n        RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        matrix.setColumnVector(0, columnVector);\n\n        // Perform operations on the result matrix\n        RealVector rowVector = resultMatrix.getRowVector(1);\n        RealVector scaledRowVector = rowVector.mapMultiply(2.0);\n\n        // Calculate the dot product of vectors\n        double dotProduct = columnVector.dotProduct(scaledRowVector);\n\n        // Print the dot product\n        System.out.println(\"Dot Product: \" + dotProduct);\n\n        // Some more operations on vectors\n        RealVector addedVector = columnVector.add(scaledRowVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n\n        // Read: get the column real vector\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n\n        // Print the vector to verify the operation\n        System.out.println(\"Read Column Vector: \" + readColumnVector);\n\n        // Perform subtraction on vectors\n        RealVector subtractedVector = readColumnVector.subtract(rowVector);\n        System.out.println(\"Subtracted Vector: \" + subtractedVector);\n\n        // Create another vector and perform operations\n        RealVector anotherVector = new ArrayRealVector(new double[]{1.0, 1.0, 1.0});\n        RealVector multipliedVector = anotherVector.ebeMultiply(readColumnVector);\n        System.out.println(\"Element-wise Multiplied Vector: \" + multipliedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a matrix with a single column vector\n        double[][] data = {{1.0}, {2.0}, {3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Write: create a column real vector\n        RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        matrix.setColumnVector(0, columnVector);\n\n        // Read: get the column real vector\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        \n        // Print the vector to verify the operation\n        System.out.println(readColumnVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}