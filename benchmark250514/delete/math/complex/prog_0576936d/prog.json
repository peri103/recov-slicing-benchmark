{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row for simplicity\n        double[][] data = {{1.0, 2.0, 3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Use the write method to create a row vector\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{4.0, 5.0, 6.0});\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Perform additional operations on the matrix\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix multipliedMatrix = matrix.multiply(identityMatrix);\n        System.out.println(\"Multiplied Matrix: \" + multipliedMatrix);\n\n        // Create another matrix and perform operations\n        double[][] anotherData = {{7.0, 8.0, 9.0}, {10.0, 11.0, 12.0}};\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherData);\n        RealMatrix addedMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Added Matrix: \" + addedMatrix);\n\n        // Use the read method to get the row vector\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(\"Read Vector: \" + readVector);\n\n        // Further operations on the vector\n        double norm = readVector.getNorm();\n        System.out.println(\"Norm of the read vector: \" + norm);\n\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row for simplicity\n        double[][] data = {{1.0, 2.0, 3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Use the write method to create a row vector\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{4.0, 5.0, 6.0});\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Use the read method to get the row vector\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}