{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a vector using the write method\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(5);\n\n        // Set some values in the vector\n        vector.setEntry(0, 1.0);\n        vector.setEntry(1, 2.0);\n        vector.setEntry(2, 3.0);\n        vector.setEntry(3, 4.0);\n        vector.setEntry(4, 5.0);\n\n        // Additional unrelated code to increase complexity\n        RealVector randomVector = new OpenMapRealVector(5);\n        Random random = new Random();\n        for (int i = 0; i < randomVector.getDimension(); i++) {\n            randomVector.setEntry(i, random.nextDouble() * 10);\n        }\n\n        // Perform operations on randomVector\n        double sum = 0.0;\n        for (int i = 0; i < randomVector.getDimension(); i++) {\n            sum += randomVector.getEntry(i);\n        }\n        System.out.println(\"Sum of random vector entries: \" + sum);\n\n        // More operations to increase complexity\n        RealVector scaledVector = randomVector.mapMultiply(2.0);\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(\"Scaled vector entry \" + i + \": \" + scaledVector.getEntry(i));\n        }\n\n        // Read the vector using the read method\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Print the values to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(\"Original vector entry \" + i + \": \" + readVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a vector using the write method\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(5);\n\n        // Set some values in the vector\n        vector.setEntry(0, 1.0);\n        vector.setEntry(1, 2.0);\n        vector.setEntry(2, 3.0);\n        vector.setEntry(3, 4.0);\n        vector.setEntry(4, 5.0);\n\n        // Read the vector using the read method\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Print the values to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}