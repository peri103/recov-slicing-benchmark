{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector with initial values\n        double[] initialValues = {1.0, 0.0, 3.0, 0.0, 5.0};\n        \n        // Write operation\n        /* write */ RealVector sparseVector = MatrixUtils.createSparseRealVector(initialValues);\n\n        // Create a dense matrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n\n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n\n        // Output the transposed matrix\n        System.out.println(\"Transposed Matrix:\");\n        for (int row = 0; row < transposedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < transposedMatrix.getColumnDimension(); col++) {\n                System.out.print(transposedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform operations on the sparse vector\n        RealVector scaledVector = sparseVector.mapMultiply(2.0);\n        double norm = sparseVector.getNorm();\n\n        // Output the scaled vector and its norm\n        System.out.println(\"Scaled Sparse Vector: \" + scaledVector);\n        System.out.println(\"Norm of Sparse Vector: \" + norm);\n\n        // Read operation\n        /* read */ RealVector readVector = sparseVector;\n\n        // Output the vector to verify the read value\n        System.out.println(\"Sparse Vector: \" + readVector);\n\n        // Output the multiplied matrix\n        System.out.println(\"Multiplied Matrix:\");\n        for (int row = 0; row < multipliedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < multipliedMatrix.getColumnDimension(); col++) {\n                System.out.print(multipliedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector with initial values\n        double[] initialValues = {1.0, 0.0, 3.0, 0.0, 5.0};\n        \n        // Write operation\n        /* write */ RealVector sparseVector = MatrixUtils.createSparseRealVector(initialValues);\n\n        // Read operation\n        /* read */ RealVector readVector = sparseVector;\n\n        // Output the vector to verify the read value\n        System.out.println(\"Sparse Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}