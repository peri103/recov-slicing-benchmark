{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.DecompositionSolver;\nimport org.apache.commons.math3.linear.LUDecomposition;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix\n        double[][] data = {\n            {1.0, 0.5, 0.3},\n            {0.5, 1.0, 0.4},\n            {0.3, 0.4, 1.0}\n        };\n\n        /* write */ RealMatrix matrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Create a vector for linear algebra operations\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n\n        // Print the result of the multiplication\n        System.out.println(\"Matrix-Vector Multiplication Result:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Decompose the matrix using LU decomposition\n        LUDecomposition decomposition = new LUDecomposition(matrix);\n        DecompositionSolver solver = decomposition.getSolver();\n\n        // Solve a linear system\n        RealVector solution = solver.solve(vector);\n\n        // Print the solution of the linear system\n        System.out.println(\"Solution of the Linear System:\");\n        for (int i = 0; i < solution.getDimension(); i++) {\n            System.out.print(solution.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        /* read */ RealMatrix symmetricMatrix = MatrixUtils.getSymmetricMatrix(matrix);\n\n        // Print the symmetric matrix\n        System.out.println(\"Symmetric Matrix:\");\n        for (int i = 0; i < symmetricMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < symmetricMatrix.getColumnDimension(); j++) {\n                System.out.print(symmetricMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix\n        double[][] data = {\n            {1.0, 0.5, 0.3},\n            {0.5, 1.0, 0.4},\n            {0.3, 0.4, 1.0}\n        };\n\n        /* write */ RealMatrix matrix = MatrixUtils.createSymmetricMatrix(data);\n\n        /* read */ RealMatrix symmetricMatrix = MatrixUtils.getSymmetricMatrix(matrix);\n\n        // Print the symmetric matrix\n        for (int i = 0; i < symmetricMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < symmetricMatrix.getColumnDimension(); j++) {\n                System.out.print(symmetricMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}