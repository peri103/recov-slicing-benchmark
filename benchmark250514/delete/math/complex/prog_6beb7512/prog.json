{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix with predefined values\n        double[][] data = {\n            {1.0, 0.5, 0.3},\n            {0.5, 1.0, 0.4},\n            {0.3, 0.4, 1.0}\n        };\n        \n        // Use MatrixUtils to create a symmetric matrix\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n        \n        // Initialize a vector for matrix operations\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        \n        // Perform matrix-vector multiplication\n        RealVector resultVector = symmetricMatrix.operate(vector);\n        \n        // Print the result of matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Additional operations on the matrix\n        RealMatrix transposedMatrix = symmetricMatrix.transpose();\n        \n        // Print the transposed matrix\n        System.out.println(\"Transposed matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Read the symmetric matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n        \n        // Print the read matrix to verify the values\n        System.out.println(\"Read symmetric matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Further operations on the read matrix\n        double determinant = readMatrix.getDeterminant();\n        System.out.println(\"Determinant of the symmetric matrix: \" + determinant);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix with predefined values\n        double[][] data = {\n            {1.0, 0.5, 0.3},\n            {0.5, 1.0, 0.4},\n            {0.3, 0.4, 1.0}\n        };\n        \n        // Use MatrixUtils to create a symmetric matrix\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n        \n        // Read the symmetric matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n        \n        // Print the read matrix to verify the values\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}