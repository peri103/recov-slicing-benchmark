{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        // Create a row vector to write into the matrix\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{10.0, 11.0, 12.0});\n        \n        /* write */ matrix.setRowVector(1, rowVector); // Write the row vector into the matrix at row 1\n        \n        // Perform some unrelated matrix operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix multipliedMatrix = matrix.multiply(identityMatrix);\n        \n        // Create another matrix and perform operations\n        double[][] anotherMatrixData = {\n            {2.0, 4.0, 6.0},\n            {8.0, 10.0, 12.0},\n            {14.0, 16.0, 18.0}\n        };\n        \n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherMatrixData);\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        \n        // Print the resulting matrices\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        System.out.println(\"Sum Matrix:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform calculations with the read vector\n        /* read */ RealVector readVector = matrix.getRowVector(1); // Read the row vector from the matrix at row 1\n        \n        double dotProduct = readVector.dotProduct(MatrixUtils.createRealVector(new double[]{1.0, 1.0, 1.0}));\n        System.out.println(\"Dot Product of Read Vector with [1.0, 1.0, 1.0]: \" + dotProduct);\n        \n        // Create a new vector and perform operations\n        RealVector newVector = MatrixUtils.createRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector addedVector = readVector.add(newVector);\n        \n        System.out.println(\"Added Vector:\");\n        for (int i = 0; i < addedVector.getDimension(); i++) {\n            System.out.print(addedVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        // Create a row vector to write into the matrix\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{10.0, 11.0, 12.0});\n        \n        /* write */ matrix.setRowVector(1, rowVector); // Write the row vector into the matrix at row 1\n        \n        /* read */ RealVector readVector = matrix.getRowVector(1); // Read the row vector from the matrix at row 1\n        \n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}