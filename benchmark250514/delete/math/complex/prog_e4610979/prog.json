{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an OpenMapRealVector instance\n        OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(3);\n        \n        // Set values in the vector\n        vector.setEntry(0, 1.0);\n        vector.setEntry(1, 2.0);\n        vector.setEntry(2, 3.0);\n        \n        // Perform some operations on the OpenMapRealVector\n        vector.mapAddToSelf(5.0);\n        vector.mapMultiplyToSelf(2.0);\n        \n        // Create an ArrayRealVector for additional complexity\n        RealVector arrayVector = new ArrayRealVector(new double[] {4.0, 5.0, 6.0});\n        \n        // Add the two vectors\n        RealVector resultVector = vector.add(arrayVector);\n        \n        // Print the result vector\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(\"Result Vector Entry \" + i + \": \" + resultVector.getEntry(i));\n        }\n        \n        // Retrieve the OpenMapRealVector instance using MatrixUtils\n        /* read */ OpenMapRealVector retrievedVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the values to verify\n        System.out.println(retrievedVector.getEntry(0));\n        System.out.println(retrievedVector.getEntry(1));\n        System.out.println(retrievedVector.getEntry(2));\n        \n        // Create another OpenMapRealVector for further operations\n        OpenMapRealVector anotherVector = MatrixUtils.createOpenMapRealVector(3);\n        anotherVector.setEntry(0, 7.0);\n        anotherVector.setEntry(1, 8.0);\n        anotherVector.setEntry(2, 9.0);\n        \n        // Subtract the vectors\n        RealVector subtractedVector = anotherVector.subtract(retrievedVector);\n        \n        // Print the subtracted vector\n        for (int i = 0; i < subtractedVector.getDimension(); i++) {\n            System.out.println(\"Subtracted Vector Entry \" + i + \": \" + subtractedVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an OpenMapRealVector instance\n        OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(3);\n        \n        // Set values in the vector\n        vector.setEntry(0, 1.0);\n        vector.setEntry(1, 2.0);\n        vector.setEntry(2, 3.0);\n        \n        // Retrieve the OpenMapRealVector instance using MatrixUtils\n        /* read */ OpenMapRealVector retrievedVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the values to verify\n        System.out.println(retrievedVector.getEntry(0));\n        System.out.println(retrievedVector.getEntry(1));\n        System.out.println(retrievedVector.getEntry(2));\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}