{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        // Create a matrix with one column using the column data\n        RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(columnData);\n        \n        // Additional matrix operations\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(matrixData);\n        RealMatrix transposedMatrix = additionalMatrix.transpose();\n        RealMatrix multipliedMatrix = transposedMatrix.multiply(additionalMatrix);\n        \n        System.out.println(\"Transposed Matrix: \");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        System.out.println(\"Multiplied Matrix: \");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Using the original matrix to read the column vector\n        /* read */ RealVector readVector = matrix.getColumnVector(0);\n        \n        System.out.println(\"Written Vector: \" + columnVector);\n        System.out.println(\"Read Vector: \" + readVector);\n        \n        // More operations with vectors\n        RealVector scaledVector = columnVector.mapMultiply(2.0);\n        RealVector addedVector = scaledVector.add(readVector);\n        \n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        // Create a matrix with one column using the column data\n        RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(columnData);\n        \n        /* read */ RealVector readVector = matrix.getColumnVector(0);\n        \n        System.out.println(\"Written Vector: \" + columnVector);\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}