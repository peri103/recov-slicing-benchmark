{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix\n        int size = 3; // specify the size of the identity matrix\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(size);\n\n        // Create a vector\n        RealVector vector = new ArrayRealVector(new double[]{1, 2, 3});\n        System.out.println(\"Vector:\");\n        for (int i = 0; i < vector.getDimension(); i++) {\n            System.out.print(vector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = identityMatrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Some unrelated operations to increase complexity\n        RealMatrix matrixB = MatrixUtils.createRealMatrix(new double[][]{\n            {4, 5, 6},\n            {7, 8, 9},\n            {10, 11, 12}\n        });\n\n        RealMatrix matrixC = identityMatrix.add(matrixB);\n        System.out.println(\"Matrix C (Identity + B):\");\n        for (int i = 0; i < matrixC.getRowDimension(); i++) {\n            for (int j = 0; j < matrixC.getColumnDimension(); j++) {\n                System.out.print(matrixC.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the identity matrix\n        /* read */ RealMatrix retrievedMatrix = identityMatrix; // directly use the created matrix\n\n        // Print the matrix to verify\n        System.out.println(\"Identity Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix\n        int size = 3; // specify the size of the identity matrix\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(size);\n\n        // Read the identity matrix\n        /* read */ RealMatrix retrievedMatrix = identityMatrix; // directly use the created matrix\n\n        // Print the matrix to verify\n        System.out.println(\"Identity Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createIdentityMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getIdentityMatrix"
    }
}