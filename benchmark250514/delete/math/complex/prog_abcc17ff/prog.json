{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixFactory;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Adding complexity: Perform operations on a matrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = RealMatrixFactory.createRealMatrix(matrixData);\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform some calculations with the vector\n        double norm = vector.getNorm();\n        System.out.println(\"Vector Norm: \" + norm);\n\n        // Unrelated code to add complexity\n        double[] anotherData = {4.0, 5.0, 6.0};\n        ArrayRealVector anotherVector = MatrixUtils.createArrayRealVector(anotherData);\n        ArrayRealVector sumVector = vector.add(anotherVector);\n        System.out.println(\"Sum Vector: \" + sumVector);\n\n        // Ensure the original read is far from the write\n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(data);\n        \n        System.out.println(\"Original Vector: \" + vector);\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(data);\n        \n        System.out.println(\"Original Vector: \" + vector);\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}