{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row and multiple columns\n        double[][] matrixData = new double[1][3];\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Create a row vector\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{1.0, 2.0, 3.0});\n\n        // Some unrelated complex operations\n        double[][] anotherMatrixData = {\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherMatrixData);\n        RealMatrix combinedMatrix = matrix.add(anotherMatrix);\n\n        // Perform operations on combinedMatrix\n        double determinant = combinedMatrix.getDeterminant();\n        System.out.println(\"Determinant of combined matrix: \" + determinant);\n\n        // Set the row vector in the matrix\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // More complex operations with vectors\n        RealVector vectorSum = rowVector.add(combinedMatrix.getRowVector(1));\n        System.out.println(\"Sum of vectors: \" + vectorSum);\n\n        // Access the row vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n\n        // Output the read vector\n        System.out.println(\"Read vector: \" + readVector);\n\n        // Further operations with the original matrix\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        System.out.println(\"Scaled matrix: \" + scaledMatrix);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row and multiple columns\n        double[][] matrixData = new double[1][3];\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Create a row vector\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{1.0, 2.0, 3.0});\n        \n        /* write */ matrix.setRowVector(0, rowVector);\n\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n\n        // Output the read vector\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}