{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a row matrix using the write method\n        double[] rowData = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n\n        // Additional computation with the matrix\n        RealVector vector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Create another matrix and perform matrix addition\n        RealMatrix anotherMatrix = MatrixUtils.createRowRealMatrix(new double[]{7.0, 8.0, 9.0});\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Result of matrix addition:\");\n        for (int i = 0; i < sumMatrix.getColumnDimension(); i++) {\n            System.out.print(sumMatrix.getEntry(0, i) + \" \");\n        }\n        System.out.println();\n\n        // Read the same row matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix.getData(), 0);\n        \n        // Print the matrix to verify\n        System.out.println(\"Read matrix:\");\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n        System.out.println();\n\n        // Perform scalar multiplication on the read matrix\n        RealMatrix scaledMatrix = readMatrix.scalarMultiply(2.0);\n        System.out.println(\"Scaled matrix:\");\n        for (int i = 0; i < scaledMatrix.getColumnDimension(); i++) {\n            System.out.print(scaledMatrix.getEntry(0, i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a row matrix using the write method\n        double[] rowData = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n\n        // Read the same row matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix.getData(), 0);\n\n        // Print the matrix to verify\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}