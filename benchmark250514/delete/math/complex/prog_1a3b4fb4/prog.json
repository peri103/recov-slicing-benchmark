{
    "java_code": "import org.apache.commons.math3.linear.DiagonalMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a DiagonalMatrix with a size of 3\n        DiagonalMatrix matrix = new DiagonalMatrix(3);\n        \n        // Write a value to the matrix\n        /* write */ matrix.setEntry(0, 1.5);\n        \n        // Initialize another matrix for complex operations\n        RealMatrix otherMatrix = MatrixUtils.createRealMatrix(new double[][] {\n            {2.0, 0.0, 0.0},\n            {0.0, 3.0, 0.0},\n            {0.0, 0.0, 4.0}\n        });\n        \n        // Perform matrix addition\n        RealMatrix sumMatrix = matrix.add(otherMatrix);\n        \n        // Perform matrix multiplication\n        RealMatrix productMatrix = matrix.multiply(otherMatrix);\n        \n        // Read the value from the original matrix\n        /* read */ double value = matrix.getEntry(0);\n        \n        // Print the read value\n        System.out.println(\"Read value from DiagonalMatrix: \" + value);\n        \n        // Print results of complex operations\n        System.out.println(\"Sum Matrix:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        System.out.println(\"Product Matrix:\");\n        for (int i = 0; i < productMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < productMatrix.getColumnDimension(); j++) {\n                System.out.print(productMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.DiagonalMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a DiagonalMatrix with a size of 3\n        DiagonalMatrix matrix = new DiagonalMatrix(3);\n        \n        // Write a value to the matrix\n        /* write */ matrix.setEntry(0, 1.5);\n        \n        // Read the value from the matrix\n        /* read */ double value = matrix.getEntry(0);\n        \n        // Print the read value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DiagonalMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.DiagonalMatrix",
        "read_method": "getEntry"
    }
}