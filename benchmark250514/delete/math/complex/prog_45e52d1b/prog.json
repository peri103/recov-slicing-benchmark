{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a diagonal array\n        double[] diagonal = {1.0, 2.0, 3.0};\n\n        // Create a diagonal matrix\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n\n        // Initialize another vector\n        double[] vectorData = {4.0, 5.0, 6.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n\n        // Perform a matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n\n        // Print the result of the matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (double value : resultVector.toArray()) {\n            System.out.print(value + \" \");\n        }\n        System.out.println();\n\n        // Perform some unrelated computations\n        double sum = 0;\n        for (int i = 0; i < vectorData.length; i++) {\n            sum += vectorData[i] * vectorData[i];\n        }\n        System.out.println(\"Sum of squares of vector elements: \" + sum);\n\n        // Access and print the diagonal of the matrix\n        /* read */ double[] retrievedDiagonal = matrix.getRow(0); // Assuming getDiagonalMatrix is intended to retrieve the diagonal\n        System.out.println(\"Diagonal of the matrix:\");\n        for (double value : retrievedDiagonal) {\n            System.out.print(value + \" \");\n        }\n        System.out.println();\n\n        // Additional matrix operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonal = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n        /* read */ double[] retrievedDiagonal = matrix.getRow(0); // Assuming getDiagonalMatrix is intended to retrieve the diagonal\n        for (double value : retrievedDiagonal) {\n            System.out.print(value + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}