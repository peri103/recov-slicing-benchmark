{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data for the sparse vector\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a dense vector for additional operations\n        ArrayRealVector denseVector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        \n        // Perform some operations on the dense vector\n        denseVector.mapMultiplyToSelf(2.0);\n        denseVector.setEntry(0, 10.0);\n        \n        /* write */ RealVector sparseVector = MatrixUtils.createSparseRealVector(data);\n        \n        // Perform operations on the sparse vector\n        sparseVector.mapAddToSelf(1.0);\n        sparseVector.setEntry(1, 5.0);\n        \n        // Combine dense and sparse vectors\n        RealVector combinedVector = denseVector.add(sparseVector);\n        \n        // More operations on the combined vector\n        double norm = combinedVector.getNorm();\n        System.out.println(\"Norm of combined vector: \" + norm);\n        \n        // Perform some unrelated calculations\n        double sum = 0;\n        for (int i = 0; i < combinedVector.getDimension(); i++) {\n            sum += combinedVector.getEntry(i);\n        }\n        System.out.println(\"Sum of combined vector elements: \" + sum);\n        \n        /* read */ RealVector readVector = sparseVector;\n        \n        // Display the read vector\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealVector sparseVector = MatrixUtils.createSparseRealVector(data);\n        \n        /* read */ RealVector readVector = sparseVector;\n        \n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}