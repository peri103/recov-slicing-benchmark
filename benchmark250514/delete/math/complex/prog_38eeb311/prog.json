{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix for demonstration purposes\n        double[][] data = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create another row vector and set it to the matrix\n        RealVector anotherRowVector = new ArrayRealVector(new double[]{10.0, 11.0, 12.0});\n        matrix.setRowVector(1, anotherRowVector);\n\n        // Use the write method to create a row vector\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{13.0, 14.0, 15.0});\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Perform some matrix operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n\n        // Print the transposed matrix\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            System.out.println(transposedMatrix.getRowVector(i));\n        }\n\n        // Calculate the sum of each row in the multiplied matrix\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            RealVector row = multipliedMatrix.getRowVector(i);\n            double sum = row.getL1Norm();\n            System.out.println(\"Sum of row \" + i + \": \" + sum);\n        }\n\n        // Use the read method to get the row vector\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n\n        // Print the read vector to verify the operations\n        System.out.println(\"Read Vector: \" + readVector);\n\n        // Create a new matrix and perform addition\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(new double[][]{{1.0, 1.0, 1.0}, {2.0, 2.0, 2.0}, {3.0, 3.0, 3.0}});\n        RealMatrix resultMatrix = matrix.add(additionalMatrix);\n\n        // Print the result matrix\n        System.out.println(\"Result Matrix after Addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            System.out.println(resultMatrix.getRowVector(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2x2 matrix for demonstration purposes\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Use the write method to create a row vector\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{5.0, 6.0});\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Use the read method to get the row vector\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n\n        // Print the read vector to verify the operations\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}