{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix data\n        double[][] data = {\n            {1, 2, 3},\n            {2, 5, 6},\n            {3, 6, 9}\n        };\n\n        // Create a symmetric matrix using the write method\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Create another matrix to perform operations\n        double[][] otherData = {\n            {4, 5, 6},\n            {5, 8, 9},\n            {6, 9, 12}\n        };\n        RealMatrix otherMatrix = new Array2DRowRealMatrix(otherData);\n\n        // Perform matrix addition\n        RealMatrix addedMatrix = symmetricMatrix.add(otherMatrix);\n\n        // Perform matrix multiplication\n        RealMatrix multipliedMatrix = symmetricMatrix.multiply(otherMatrix);\n\n        // Print the matrices to verify operations\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the symmetric matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n\n        // Print the read matrix to verify it matches the written matrix\n        System.out.println(\"Read Symmetric Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix data\n        double[][] data = {\n            {1, 2, 3},\n            {2, 5, 6},\n            {3, 6, 9}\n        };\n\n        // Create a symmetric matrix using the write method\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Read the symmetric matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n\n        // Print the read matrix to verify it matches the written matrix\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}