{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        double[] data2 = {4.0, 5.0, 6.0};\n\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Perform some operations on the vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n\n        // Create another vector and perform addition\n        ArrayRealVector vector2 = new ArrayRealVector(data2);\n        RealVector addedVector = vector.add(vector2);\n        System.out.println(\"Added Vector: \" + addedVector);\n\n        // Calculate the dot product\n        double dotProduct = vector.dotProduct(vector2);\n        System.out.println(\"Dot Product: \" + dotProduct);\n\n        // Perform some unrelated operations\n        int[] numbers = {10, 20, 30, 40, 50};\n        int sum = Arrays.stream(numbers).sum();\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector);\n\n        // More operations on the read vector\n        double norm = readVector.getNorm();\n        System.out.println(\"Norm of the read vector: \" + norm);\n\n        // Print the read vector\n        System.out.println(\"Read Vector: \" + readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector);\n        \n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}