{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with some values\n        double[][] data = {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        };\n\n        // Create a triangular matrix using MatrixUtils\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Create another matrix for additional operations\n        double[][] data2 = {\n            {9, 8, 7},\n            {6, 5, 4},\n            {3, 2, 1}\n        };\n        RealMatrix matrix2 = new Array2DRowRealMatrix(data2);\n\n        // Perform matrix addition\n        RealMatrix resultMatrix = triangularMatrix.add(matrix2);\n\n        // Create a vector for multiplication\n        double[] vectorData = {1, 0, 0};\n        RealVector vector = new ArrayRealVector(vectorData);\n\n        // Multiply the result matrix with the vector\n        RealVector multipliedVector = resultMatrix.operate(vector);\n\n        // Print the multiplied vector\n        System.out.println(\"Multiplied Vector:\");\n        for (int i = 0; i < multipliedVector.getDimension(); i++) {\n            System.out.print(multipliedVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Retrieve the triangular matrix using MatrixUtils\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the retrieved matrix to verify the read operation\n        System.out.println(\"Retrieved Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform additional matrix operations\n        RealMatrix transposedMatrix = retrievedMatrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with some values\n        double[][] data = {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        };\n\n        // Create a triangular matrix using MatrixUtils\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Retrieve the triangular matrix using MatrixUtils\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the retrieved matrix to verify the read operation\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    }
}