{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.BlockRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using MatrixUtils\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Create a dense real vector using ArrayRealVector\n        RealVector denseVector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n\n        // Perform some operations on the dense vector\n        RealVector resultVector = denseVector.mapAdd(10.0);\n        System.out.println(\"Dense Vector after addition: \" + resultVector);\n\n        // Create a real matrix and perform matrix operations\n        RealMatrix matrix = new BlockRealMatrix(new double[][] {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        });\n\n        RealMatrix multipliedMatrix = matrix.scalarMultiply(2.0);\n        System.out.println(\"Multiplied Matrix: \" + multipliedMatrix);\n\n        // Read the sparse real vector using MatrixUtils\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector.toArray());\n\n        // Print the contents of the read vector\n        System.out.println(\"Read Sparse Vector: \" + readVector);\n\n        // Further operations on the read vector\n        double norm = readVector.getNorm();\n        System.out.println(\"Norm of Read Vector: \" + norm);\n\n        // Create another vector and add it to the read vector\n        RealVector anotherVector = new ArrayRealVector(new double[]{0.5, 1.5, 2.5});\n        RealVector sumVector = readVector.add(anotherVector);\n        System.out.println(\"Sum Vector: \" + sumVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using MatrixUtils\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Read the sparse real vector using MatrixUtils\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector.toArray());\n\n        // Print the contents of the read vector\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}