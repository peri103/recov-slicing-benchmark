{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using the write method\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Additional code to make the program more complex\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        \n        // Perform matrix multiplication\n        RealMatrix resultMatrix = matrix.multiply(matrix);\n        System.out.println(\"Result of matrix multiplication:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Use another vector operation\n        RealVector vector2 = MatrixUtils.createRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector sumVector = vector.add(vector2);\n        System.out.println(\"Sum of vectors:\");\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(sumVector.getEntry(i));\n        }\n\n        // Read the sparse real vector using the read method\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector.toArray());\n\n        // Print the values to verify\n        System.out.println(\"Read vector values:\");\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n\n        // Perform vector scaling\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using the write method\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Read the sparse real vector using the read method\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector.toArray());\n\n        // Print the values to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}