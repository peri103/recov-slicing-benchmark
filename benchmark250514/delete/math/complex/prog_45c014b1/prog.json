{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix dimensions\n        int rows = 3;\n        int columns = 3;\n\n        // Create a triangular matrix with specified dimensions\n        RealMatrix triangularMatrix = MatrixUtils.createRealMatrix(rows, columns);\n        \n        // Fill the matrix with some values to make it triangular\n        triangularMatrix.setEntry(0, 0, 1.0);\n        triangularMatrix.setEntry(1, 0, 0.0);\n        triangularMatrix.setEntry(1, 1, 2.0);\n        triangularMatrix.setEntry(2, 0, 0.0);\n        triangularMatrix.setEntry(2, 1, 0.0);\n        triangularMatrix.setEntry(2, 2, 3.0);\n\n        // Create a RealVector and perform operations\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector transformedVector = triangularMatrix.operate(vector);\n        System.out.println(\"Transformed vector:\");\n        for (int i = 0; i < transformedVector.getDimension(); i++) {\n            System.out.print(transformedVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Additional matrix operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(rows);\n        RealMatrix multipliedMatrix = triangularMatrix.multiply(identityMatrix);\n\n        System.out.println(\"Multiplied matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        /* write */ MatrixUtils.createTriangularMatrix(triangularMatrix);\n\n        // Perform some arithmetic operations\n        double sum = 0;\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                sum += triangularMatrix.getEntry(i, j);\n            }\n        }\n        System.out.println(\"Sum of triangular matrix elements: \" + sum);\n\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the matrix to verify it was correctly read\n        System.out.println(\"Read matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Additional calculations\n        double determinant = triangularMatrix.getDeterminant();\n        System.out.println(\"Determinant of triangular matrix: \" + determinant);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix dimensions\n        int rows = 3;\n        int columns = 3;\n\n        // Create a triangular matrix with specified dimensions\n        RealMatrix triangularMatrix = MatrixUtils.createRealMatrix(rows, columns);\n        \n        // Fill the matrix with some values to make it triangular\n        triangularMatrix.setEntry(0, 0, 1.0);\n        triangularMatrix.setEntry(1, 0, 0.0);\n        triangularMatrix.setEntry(1, 1, 2.0);\n        triangularMatrix.setEntry(2, 0, 0.0);\n        triangularMatrix.setEntry(2, 1, 0.0);\n        triangularMatrix.setEntry(2, 2, 3.0);\n        \n        /* write */ MatrixUtils.createTriangularMatrix(triangularMatrix);\n\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the matrix to verify it was correctly read\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    }
}