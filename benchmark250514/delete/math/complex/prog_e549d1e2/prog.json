{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n\n        // Unrelated code to make the program more complex\n        double[][] data = {\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0},\n            {10.0, 11.0, 12.0}\n        };\n        RealMatrix matrix2 = new Array2DRowRealMatrix(data);\n        RealMatrix sumMatrix = matrix.add(matrix2);\n\n        // Performing operations on sumMatrix\n        double[][] sumData = sumMatrix.getData();\n        for (int i = 0; i < sumData.length; i++) {\n            for (int j = 0; j < sumData[i].length; j++) {\n                System.out.print(sumData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n\n        // More unrelated code\n        double determinant = matrix2.getDeterminant();\n        System.out.println(\"Determinant of matrix2: \" + determinant);\n\n        // Back to the original task\n        /* read */ double[] readDiagonal = matrix.getColumn(0);\n\n        for (double value : readDiagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n\n        /* read */ double[] readDiagonal = matrix.getColumn(0);\n        \n        for (double value : readDiagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}