{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row and some columns\n        double[][] initialData = { {1.0, 2.0, 3.0} };\n        RealMatrix matrix = MatrixUtils.createRealMatrix(initialData);\n\n        // Create a row real vector\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[] {4.0, 5.0, 6.0});\n        \n        // Perform some unrelated operations\n        double[][] additionalData = { {7.0, 8.0, 9.0}, {10.0, 11.0, 12.0} };\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalData);\n\n        // Add matrices\n        RealMatrix combinedMatrix = matrix.add(additionalMatrix);\n        System.out.println(\"Combined Matrix:\");\n        for (int i = 0; i < combinedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < combinedMatrix.getColumnDimension(); j++) {\n                System.out.print(combinedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Replace the first row of the matrix with the new vector\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Perform more operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Get the first row real vector\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        \n        // Print the vector to ensure it matches what was written\n        System.out.println(\"Read Vector: \" + readVector);\n\n        // Perform additional operations on the read vector\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row and some columns\n        double[][] data = { {1.0, 2.0, 3.0} };\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a row real vector\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[] {4.0, 5.0, 6.0});\n        \n        // Replace the first row of the matrix with the new vector\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Get the first row real vector\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        \n        // Print the vector to ensure it matches what was written\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}