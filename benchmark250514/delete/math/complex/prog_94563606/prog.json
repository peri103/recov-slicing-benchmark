{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one column\n        double[][] data = {{1.0}, {2.0}, {3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a column vector\n        RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        /* write */ matrix.setColumnVector(0, columnVector);\n\n        // Perform some unrelated operations with matrices and vectors\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(new double[][]{{7.0, 8.0}, {9.0, 10.0}, {11.0, 12.0}});\n        RealVector anotherVector = anotherMatrix.getColumnVector(1);\n        System.out.println(\"Another vector: \" + anotherVector);\n\n        // Add vectors\n        RealVector sumVector = columnVector.add(anotherVector);\n        System.out.println(\"Sum of vectors: \" + sumVector);\n\n        // Multiply matrix with a scalar\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        System.out.println(\"Scaled matrix: \" + scaledMatrix);\n\n        // Read the column vector\n        /* read */ RealVector readVector = MatrixUtils.getColumnRealVector(matrix, 0);\n        System.out.println(\"Read vector: \" + readVector);\n\n        // Perform some operations on the read vector\n        RealVector scaledReadVector = readVector.mapMultiply(3.0);\n        System.out.println(\"Scaled read vector: \" + scaledReadVector);\n\n        // Add the read vector to another vector\n        RealVector combinedVector = scaledReadVector.add(anotherVector);\n        System.out.println(\"Combined vector: \" + combinedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one column\n        double[][] data = {{1.0}, {2.0}, {3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a column vector\n        RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{4.0, 5.0, 6.0});\n        /* write */ matrix.setColumnVector(0, columnVector);\n\n        // Read the column vector\n        /* read */ RealVector readVector = MatrixUtils.getColumnRealVector(matrix, 0);\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}