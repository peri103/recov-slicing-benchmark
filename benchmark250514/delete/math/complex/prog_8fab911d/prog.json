{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing the diagonal array\n        double[] diagonal = {1.0, 2.0, 3.0};\n        \n        // Create a diagonal matrix\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n        \n        // Perform some operations on the matrix\n        RealVector vector = new ArrayRealVector(new double[] {4.0, 5.0, 6.0});\n        RealVector resultVector = matrix.operate(vector);\n        \n        // Print the result of matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n        \n        // Create another matrix and perform addition\n        RealMatrix anotherMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        \n        // Print the result of matrix addition\n        System.out.println(\"Sum of matrices:\");\n        for (int row = 0; row < sumMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < sumMatrix.getColumnDimension(); col++) {\n                System.out.print(sumMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Retrieve the diagonal from the original matrix\n        /* read */ double[] retrievedDiagonal = matrix.getDiagonal();\n        \n        // Print the retrieved diagonal\n        System.out.println(\"Retrieved diagonal:\");\n        for (double value : retrievedDiagonal) {\n            System.out.println(value);\n        }\n        \n        // Additional calculations\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed matrix:\");\n        for (int row = 0; row < transposedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < transposedMatrix.getColumnDimension(); col++) {\n                System.out.print(transposedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Create a zero matrix and check dimensions\n        RealMatrix zeroMatrix = MatrixUtils.createRealMatrix(3, 3);\n        System.out.println(\"Zero matrix dimensions: \" + zeroMatrix.getRowDimension() + \"x\" + zeroMatrix.getColumnDimension());\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonal = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n        \n        /* read */ double[] retrievedDiagonal = matrix.getDiagonal();\n        \n        for (double value : retrievedDiagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}