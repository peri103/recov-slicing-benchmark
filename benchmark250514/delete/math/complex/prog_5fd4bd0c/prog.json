{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        RealMatrix matrix;\n        /* write */ matrix = MatrixUtils.createSparseMatrix(3, 3);\n\n        // Perform some operations on the matrix\n        matrix.setEntry(0, 0, 1.0);\n        matrix.setEntry(1, 1, 2.0);\n        matrix.setEntry(2, 2, 3.0);\n\n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(3);\n        vector.setEntry(0, 5.0);\n        vector.setEntry(1, 6.0);\n        vector.setEntry(2, 7.0);\n\n        // Multiply matrix with vector\n        RealVector resultVector = matrix.operate(vector);\n\n        // Print the result vector\n        System.out.println(\"Resulting Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Additional operations on matrix\n        matrix.setEntry(0, 2, 4.0);\n        matrix.setEntry(1, 0, 5.0);\n        matrix.setEntry(2, 1, 6.0);\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSparseMatrix(matrix);\n\n        // Print the matrix to verify the values\n        System.out.println(\"Sparse Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform additional matrix operations\n        double[][] data = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        RealMatrix denseMatrix = MatrixUtils.createRealMatrix(data);\n        RealMatrix addedMatrix = matrix.add(denseMatrix);\n\n        // Print the added matrix\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        RealMatrix matrix;\n        /* write */ matrix = MatrixUtils.createSparseMatrix(3, 3);\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSparseMatrix(matrix);\n\n        // Print the matrix to verify the values\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}