{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.OpenMapRealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define the dimensions of the sparse matrix\n        int rows = 3;\n        int columns = 3;\n\n        // Create a sparse matrix with the given dimensions\n        /* write */ OpenMapRealMatrix sparseMatrix = (OpenMapRealMatrix) MatrixUtils.createSparseMatrix(rows, columns);\n\n        // Set some values in the sparse matrix\n        sparseMatrix.setEntry(0, 0, 1.0);\n        sparseMatrix.setEntry(1, 1, 2.0);\n        sparseMatrix.setEntry(2, 2, 3.0);\n\n        // Create and manipulate another matrix using Array2DRowRealMatrix\n        double[][] data = {\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0},\n            {10.0, 11.0, 12.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(data);\n        \n        // Perform matrix addition\n        RealMatrix resultMatrix = matrix.add(sparseMatrix);\n        \n        // Print the result of matrix addition\n        System.out.println(\"Result of Matrix Addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Create and manipulate a vector using ArrayRealVector\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        \n        // Perform vector addition\n        RealVector resultVector = vector.mapAdd(5.0);\n        \n        // Print the result of vector addition\n        System.out.println(\"Result of Vector Addition:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Retrieve the sparse matrix\n        /* read */ RealMatrix retrievedMatrix = sparseMatrix;\n        \n        // Print the retrieved matrix entries\n        System.out.println(\"Retrieved Sparse Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.OpenMapRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define the dimensions of the sparse matrix\n        int rows = 3;\n        int columns = 3;\n        \n        // Create a sparse matrix with the given dimensions\n        /* write */ OpenMapRealMatrix sparseMatrix = (OpenMapRealMatrix) MatrixUtils.createSparseMatrix(rows, columns);\n        \n        // Set some values in the sparse matrix\n        sparseMatrix.setEntry(0, 0, 1.0);\n        sparseMatrix.setEntry(1, 1, 2.0);\n        sparseMatrix.setEntry(2, 2, 3.0);\n        \n        // Retrieve the sparse matrix\n        /* read */ RealMatrix retrievedMatrix = sparseMatrix;\n        \n        // Print the retrieved matrix entries\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}