{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with some data\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        // Create a RealMatrix from the data\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a RealVector to be written into the matrix\n        double[] newRowData = {10.0, 11.0, 12.0};\n        RealVector newRowVector = MatrixUtils.createRowRealVector(newRowData);\n\n        // Perform some unrelated operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            System.out.println(transposedMatrix.getRowVector(i));\n        }\n\n        // Create another matrix and perform matrix addition\n        double[][] anotherData = {\n            {2.0, 3.0, 4.0},\n            {5.0, 6.0, 7.0},\n            {8.0, 9.0, 10.0}\n        };\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherData);\n        RealMatrix addedMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            System.out.println(addedMatrix.getRowVector(i));\n        }\n\n        // Write the new row vector into the matrix\n        /* write */ matrix.setRowVector(0, newRowVector);\n\n        // Perform some operations on vectors\n        RealVector columnVector = matrix.getColumnVector(1);\n        System.out.println(\"Column Vector:\");\n        System.out.println(columnVector);\n\n        // Calculate the norm of the column vector\n        double norm = columnVector.getNorm();\n        System.out.println(\"Norm of the Column Vector: \" + norm);\n\n        // Read the row vector back from the matrix\n        /* read */ RealVector readRowVector = matrix.getRowVector(0);\n\n        // Print the read row vector\n        System.out.println(\"Read Row Vector:\");\n        System.out.println(readRowVector);\n\n        // Perform a multiplication operation\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            System.out.println(scaledMatrix.getRowVector(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with some data\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        // Create a RealMatrix from the data\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a RealVector to be written into the matrix\n        double[] newRowData = {10.0, 11.0, 12.0};\n        RealVector newRowVector = MatrixUtils.createRowRealVector(newRowData);\n\n        // Write the new row vector into the matrix\n        /* write */ matrix.setRowVector(0, newRowVector);\n\n        // Read the row vector back from the matrix\n        /* read */ RealVector readRowVector = matrix.getRowVector(0);\n\n        // Print the read row vector\n        System.out.println(readRowVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}