{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using the MatrixUtils class\n        RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(3, 3);\n        \n        // Set a value in the sparse matrix for demonstration\n        sparseMatrix.setEntry(1, 1, 5.0);\n        \n        // Create another matrix for additional operations\n        RealMatrix anotherMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        anotherMatrix.setEntry(0, 0, 10.0);\n        \n        // Perform matrix addition\n        RealMatrix resultMatrix = sparseMatrix.add(anotherMatrix);\n        \n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(new double[] {1.0, 2.0, 3.0});\n        RealVector transformedVector = vector.mapMultiply(2.0);\n        \n        // Print the transformed vector\n        System.out.println(\"Transformed Vector: \" + transformedVector);\n        \n        // Perform matrix-vector multiplication\n        RealVector matrixVectorProduct = resultMatrix.operate(vector);\n        \n        // Print the result of matrix-vector multiplication\n        System.out.println(\"Matrix-Vector Product: \" + matrixVectorProduct);\n        \n        // Perform some unrelated calculations\n        double sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += Math.pow(i, 2);\n        }\n        System.out.println(\"Sum of squares: \" + sum);\n        \n        // Read the matrix using the MatrixUtils class\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n        \n        // Print the value to demonstrate that the read method works\n        System.out.println(readMatrix.getEntry(1, 1));\n        \n        // Additional matrix operations\n        RealMatrix multipliedMatrix = readMatrix.scalarMultiply(3.0);\n        \n        // Print the multiplied matrix entry\n        System.out.println(\"Multiplied Matrix Entry: \" + multipliedMatrix.getEntry(1, 1));\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using the MatrixUtils class\n        RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(3, 3);\n        \n        // Set a value in the sparse matrix for demonstration\n        sparseMatrix.setEntry(1, 1, 5.0);\n        \n        // Read the matrix using the MatrixUtils class\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n        \n        // Print the value to demonstrate that the read method works\n        System.out.println(readMatrix.getEntry(1, 1));\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}