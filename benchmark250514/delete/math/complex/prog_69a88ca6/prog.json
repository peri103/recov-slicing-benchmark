{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a triangular matrix\n        double[][] data = {\n            {1, 2, 3},\n            {0, 4, 5},\n            {0, 0, 6}\n        };\n\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Perform some unrelated matrix operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix productMatrix = triangularMatrix.multiply(identityMatrix);\n\n        // Initialize a vector and perform vector-matrix multiplication\n        RealVector vector = new ArrayRealVector(new double[] {1, 2, 3});\n        RealVector resultVector = productMatrix.operate(vector);\n\n        // Print the result of vector-matrix multiplication\n        System.out.println(\"Result of vector-matrix multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // More complex operations: Calculate the transpose of the product matrix\n        RealMatrix transposeMatrix = productMatrix.transpose();\n\n        // Print the transpose matrix\n        System.out.println(\"Transpose of the product matrix:\");\n        for (int i = 0; i < transposeMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposeMatrix.getColumnDimension(); j++) {\n                System.out.print(transposeMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the read matrix to verify the read operation\n        System.out.println(\"Read triangular matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a triangular matrix\n        double[][] data = {\n            {1, 2, 3},\n            {0, 4, 5},\n            {0, 0, 6}\n        };\n\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the matrix to verify the read operation\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    }
}