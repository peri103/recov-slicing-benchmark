{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = { {1.0, 2.0}, {3.0, 4.0} };\n        \n        // Create a RealMatrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(2);\n        \n        // Create a RealVector and perform operations\n        RealVector vector = new ArrayRealVector(new double[]{5.0, 6.0});\n        RealVector resultVector = transposedMatrix.operate(vector);\n        \n        // Intermediate calculations\n        double vectorNorm = vector.getNorm();\n        double matrixDeterminant = matrix.getDeterminant();\n        \n        // Print intermediate results\n        System.out.println(\"Vector Norm: \" + vectorNorm);\n        System.out.println(\"Matrix Determinant: \" + matrixDeterminant);\n        \n        // Further matrix operations\n        RealMatrix sumMatrix = matrix.add(identityMatrix);\n        RealMatrix scaledMatrix = sumMatrix.scalarMultiply(2.0);\n        \n        // Retrieve the data from the matrix\n        /* read */ double[][] readData = matrix.getData();\n        \n        // Print the original matrix data\n        System.out.println(\"Original Matrix:\");\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Print the transposed matrix data\n        System.out.println(\"Transposed Matrix:\");\n        double[][] transposedData = transposedMatrix.getData();\n        for (int i = 0; i < transposedData.length; i++) {\n            for (int j = 0; j < transposedData[i].length; j++) {\n                System.out.print(transposedData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Print the result vector\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = { {1.0, 2.0}, {3.0, 4.0} };\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        /* read */ double[][] readData = matrix.getData();\n        \n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArray2DRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArray2DRowRealMatrix"
    }
}