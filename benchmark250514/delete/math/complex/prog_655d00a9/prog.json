{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize diagonal values\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n        \n        // Create diagonal matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n        \n        // Perform some unrelated matrix operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix addedMatrix = matrix.add(identityMatrix);\n        \n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector resultVector = addedMatrix.operate(vector);\n        \n        // Output the result of vector operations\n        System.out.println(\"Resulting Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // More complex operations\n        RealMatrix multipliedMatrix = matrix.multiply(identityMatrix);\n        double matrixNorm = multipliedMatrix.getNorm();\n        System.out.println(\"Matrix Norm: \" + matrixNorm);\n\n        // Read the diagonal values from the matrix\n        /* read */ double[] readDiagonalValues = matrix.getColumn(0);\n        \n        // Output the diagonal values\n        System.out.println(\"Diagonal Values:\");\n        for (double value : readDiagonalValues) {\n            System.out.println(value);\n        }\n\n        // Additional matrix operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        double trace = transposedMatrix.getTrace();\n        System.out.println(\"Trace of Transposed Matrix: \" + trace);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n        \n        /* read */ double[] readDiagonalValues = matrix.getColumn(0);\n        \n        for (double value : readDiagonalValues) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}