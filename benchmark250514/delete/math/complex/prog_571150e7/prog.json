{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array of doubles\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Use MatrixUtils to create a RealVector from the array\n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Additional operations on vectors\n        double[] data2 = {4.0, 5.0, 6.0};\n        RealVector vector2 = MatrixUtils.createArrayRealVector(data2);\n        RealVector sumVector = vector.add(vector2);\n        System.out.println(\"Sum of vectors:\");\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(sumVector.getEntry(i));\n        }\n\n        // Matrix operations\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed matrix:\");\n        for (int row = 0; row < transposedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < transposedMatrix.getColumnDimension(); col++) {\n                System.out.print(transposedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform some calculations\n        double dotProduct = vector.dotProduct(vector2);\n        System.out.println(\"Dot product of vector and vector2: \" + dotProduct);\n\n        // Use MatrixUtils to retrieve the RealVector (though typically you'd just use the vector directly)\n        /* read */ RealVector retrievedVector = MatrixUtils.createArrayRealVector(vector.toArray());\n\n        // Print the values of the retrieved vector\n        System.out.println(\"Retrieved vector:\");\n        for (int i = 0; i < retrievedVector.getDimension(); i++) {\n            System.out.println(retrievedVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array of doubles\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Use MatrixUtils to create a RealVector from the array\n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        // Use MatrixUtils to retrieve the RealVector (though typically you'd just use the vector directly)\n        /* read */ RealVector retrievedVector = MatrixUtils.createArrayRealVector(vector.toArray());\n        \n        // Print the values of the retrieved vector\n        for (int i = 0; i < retrievedVector.getDimension(); i++) {\n            System.out.println(retrievedVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}