{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        double[] additionalData = {4.0, 5.0, 6.0};\n        \n        /* write */ \n        RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Perform some operations on the vector\n        RealVector additionalVector = MatrixUtils.createSparseRealVector(additionalData);\n        RealVector sumVector = vector.add(additionalVector);\n        \n        // Create a matrix and perform operations\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealVector matrixRow = matrix.getRowVector(1);\n        RealVector resultVector = matrixRow.ebeMultiply(sumVector);\n        \n        // Use the original vector in some calculation\n        double norm = vector.getNorm();\n        System.out.println(\"Norm of the original vector: \" + norm);\n\n        // Perform a transformation on the resultVector\n        RealVector transformedVector = resultVector.mapMultiply(2.0);\n        \n        // More operations on vectors\n        double dotProduct = transformedVector.dotProduct(additionalVector);\n        System.out.println(\"Dot product of transformed and additional vector: \" + dotProduct);\n\n        // Retrieve the original vector\n        /* read */ \n        RealVector readVector = MatrixUtils.getSparseRealVector(vector);\n        \n        System.out.println(\"Read vector: \" + readVector);\n\n        // Final operations\n        RealVector scaledVector = readVector.mapMultiply(3.0);\n        System.out.println(\"Scaled vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector);\n        \n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}