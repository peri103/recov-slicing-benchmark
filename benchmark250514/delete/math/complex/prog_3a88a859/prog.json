{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the data for the vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Write operation: create a sparse real vector using MatrixUtils\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Perform some unrelated operations to make the program more complex\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        // Create a matrix and perform operations on it\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int row = 0; row < transposedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < transposedMatrix.getColumnDimension(); col++) {\n                System.out.print(transposedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform vector operations\n        RealVector anotherVector = MatrixUtils.createRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector addedVector = vector.add(anotherVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n\n        // Read operation: get the sparse real vector (in this case, it's already stored in 'vector')\n        /* read */ RealVector readVector = vector;\n\n        // Output the vector to verify the read operation\n        System.out.println(\"Read Vector: \" + readVector);\n\n        // Perform additional operations to increase complexity\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        \n        double dotProduct = readVector.dotProduct(anotherVector);\n        System.out.println(\"Dot Product: \" + dotProduct);\n\n        // Generate a random vector for demonstration\n        RealVector randomVector = MatrixUtils.createRealVector(new double[]{0.5, 1.5, 2.5});\n        RealVector combinedVector = scaledVector.add(randomVector);\n        System.out.println(\"Combined Vector: \" + combinedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the data for the vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Write operation: create a sparse real vector using MatrixUtils\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Read operation: get the sparse real vector (in this case, it's already stored in 'vector')\n        /* read */ RealVector readVector = vector;\n\n        // Output the vector to verify the read operation\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}