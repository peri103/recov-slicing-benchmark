{
    "java_code": "import org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the vector with some values\n        double[] values = {1.0, 2.0, 3.0};\n\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(values);\n\n        // Perform some operations on the vector\n        vector.setEntry(0, 5.0); // Modify the first entry\n        vector.addToEntry(1, 2.0); // Add to the second entry\n        System.out.println(\"Modified vector entries:\");\n        for (int i = 0; i < vector.getDimension(); i++) {\n            System.out.println(vector.getEntry(i));\n        }\n\n        // Create another vector using ArrayRealVector\n        RealVector anotherVector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector sumVector = vector.add(anotherVector); // Add vectors\n\n        System.out.println(\"Sum of vectors:\");\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(sumVector.getEntry(i));\n        }\n\n        // Perform dot product\n        double dotProduct = vector.dotProduct(anotherVector);\n        System.out.println(\"Dot product: \" + dotProduct);\n\n        // Perform subtraction\n        RealVector diffVector = vector.subtract(anotherVector);\n        System.out.println(\"Difference of vectors:\");\n        for (int i = 0; i < diffVector.getDimension(); i++) {\n            System.out.println(diffVector.getEntry(i));\n        }\n\n        // Scale the vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Print the values of the read vector to verify correctness\n        System.out.println(\"Read vector entries:\");\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the vector with some values\n        double[] values = {1.0, 2.0, 3.0};\n\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(values);\n\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Print the values of the read vector to verify correctness\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}