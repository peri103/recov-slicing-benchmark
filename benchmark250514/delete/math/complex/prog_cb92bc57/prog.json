{
    "java_code": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create a vector using MatrixUtils\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Perform some operations on the vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        RealVector addedVector = vector.add(new ArrayRealVector(new double[]{4.0, 5.0, 6.0}));\n\n        // Print the results of operations\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n\n        // More complex operations\n        double dotProduct = vector.dotProduct(scaledVector);\n        System.out.println(\"Dot Product: \" + dotProduct);\n\n        // Create another vector\n        ArrayRealVector anotherVector = new ArrayRealVector(new double[]{7.0, 8.0, 9.0});\n        RealVector subtractedVector = anotherVector.subtract(vector);\n        System.out.println(\"Subtracted Vector: \" + subtractedVector);\n\n        // Retrieve the original vector using MatrixUtils\n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector);\n\n        // Print the retrieved vector\n        System.out.println(\"Read Vector: \" + readVector);\n\n        // Further operations on the retrieved vector\n        RealVector normalizedVector = readVector.unitVector();\n        System.out.println(\"Normalized Vector: \" + normalizedVector);\n\n        // Combine vectors\n        RealVector combinedVector = readVector.add(normalizedVector);\n        System.out.println(\"Combined Vector: \" + combinedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector);\n        \n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}