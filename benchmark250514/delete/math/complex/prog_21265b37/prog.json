{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to use for creating a matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n        \n        // Create a RealMatrix from the 2D array\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create another matrix to demonstrate more complex operations\n        double[][] additionalData = {\n            {10.0, 11.0, 12.0},\n            {13.0, 14.0, 15.0}\n        };\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalData);\n        \n        // Perform a matrix addition operation\n        RealMatrix sumMatrix = matrix.add(additionalMatrix);\n        \n        // Use createRowRealVector to write a row vector into the matrix\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[] {7.0, 8.0, 9.0});\n        /* write */ matrix.setRowVector(1, rowVector);\n        \n        // Perform a matrix multiplication operation\n        RealMatrix productMatrix = matrix.multiply(additionalMatrix);\n        \n        // Print the resulting product matrix\n        System.out.println(\"Product Matrix:\");\n        for (int i = 0; i < productMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < productMatrix.getColumnDimension(); j++) {\n                System.out.print(productMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Use getRowRealVector to read the row vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(1);\n        \n        // Print the read vector\n        System.out.println(\"Read Vector:\");\n        System.out.println(readVector);\n        \n        // Additional operations: scaling a vector and matrix\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        RealMatrix scaledMatrix = matrix.scalarMultiply(0.5);\n        \n        // Print the scaled vector and matrix\n        System.out.println(\"Scaled Vector:\");\n        System.out.println(scaledVector);\n        \n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to use for creating a matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n        \n        // Create a RealMatrix from the 2D array\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Use createRowRealVector to write a row vector into the matrix\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[] {7.0, 8.0, 9.0});\n        /* write */ matrix.setRowVector(1, rowVector);\n        \n        // Use getRowRealVector to read the row vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(1);\n        \n        // Print the read vector\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}