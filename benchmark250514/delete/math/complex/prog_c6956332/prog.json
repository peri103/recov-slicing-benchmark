{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(new double[]{1, 2, 3});\n        RealVector resultVector = identityMatrix.operate(vector);\n\n        // Print the resulting vector after operation\n        System.out.println(\"Resulting Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Perform matrix multiplication with another matrix\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(new double[][]{\n            {1, 0, 0},\n            {0, 1, 0},\n            {0, 0, 1}\n        });\n        RealMatrix multipliedMatrix = identityMatrix.multiply(anotherMatrix);\n\n        // Print the multiplied matrix\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the identity matrix created earlier\n        /* read */ RealMatrix readMatrix = identityMatrix;\n\n        // Print the matrix to verify\n        System.out.println(\"Identity Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Create another vector and perform operations\n        RealVector anotherVector = new ArrayRealVector(new double[]{4, 5, 6});\n        RealVector resultVector2 = multipliedMatrix.operate(anotherVector);\n\n        // Print the resulting vector after operation\n        System.out.println(\"Resulting Vector 2:\");\n        for (int i = 0; i < resultVector2.getDimension(); i++) {\n            System.out.print(resultVector2.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Since there is no direct method getIdentityMatrix in MatrixUtils, \n        // we will just read the identity matrix created above.\n        /* read */ RealMatrix readMatrix = identityMatrix;\n\n        // Print the matrix to verify\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createIdentityMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getIdentityMatrix"
    }
}