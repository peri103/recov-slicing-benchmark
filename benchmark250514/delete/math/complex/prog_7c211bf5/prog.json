{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.DecompositionSolver;\nimport org.apache.commons.math3.linear.LUDecomposition;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array to be used for the diagonal matrix\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n\n        // Create a diagonal matrix using the specified write method\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n\n        // Additional complex operations\n        // Create a vector for solving linear equations\n        RealVector b = new ArrayRealVector(new double[] {4.0, 5.0, 6.0});\n        \n        // Perform LU decomposition to solve the linear system Ax = b\n        DecompositionSolver solver = new LUDecomposition(matrix).getSolver();\n        RealVector solution = solver.solve(b);\n\n        // Print the solution of the linear system\n        System.out.println(\"Solution to the linear system Ax = b:\");\n        for (int i = 0; i < solution.getDimension(); i++) {\n            System.out.println(\"x\" + i + \" = \" + solution.getEntry(i));\n        }\n\n        // Some unrelated arithmetic operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Read the diagonal values from the matrix using the specified read method\n        /* read */ double[] readDiagonalValues = matrix.getColumn(0); // Assuming we want to read the first column which is the diagonal\n\n        // Print the read diagonal values\n        System.out.println(\"Diagonal values of the matrix:\");\n        for (double value : readDiagonalValues) {\n            System.out.println(value);\n        }\n\n        // Additional logic to demonstrate usage of vectors\n        RealVector vector = new ArrayRealVector(new double[] {7.0, 8.0, 9.0});\n        RealVector resultVector = vector.mapMultiply(2.0); // Multiply each element by 2\n\n        // Print the result of vector multiplication\n        System.out.println(\"Result of vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(\"v\" + i + \" = \" + resultVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array to be used for the diagonal matrix\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n\n        // Create a diagonal matrix using the specified write method\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n\n        // Read the diagonal values from the matrix using the specified read method\n        /* read */ double[] readDiagonalValues = matrix.getColumn(0); // Assuming we want to read the first column which is the diagonal\n\n        // Print the read diagonal values\n        for (double value : readDiagonalValues) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}