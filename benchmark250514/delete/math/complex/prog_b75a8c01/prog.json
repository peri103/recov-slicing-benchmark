{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector with initial data\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Create a dense matrix and perform operations\n        double[][] matrixData = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n\n        // Print the result of the matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication: \" + resultVector);\n\n        // Create another vector for addition\n        double[] data2 = {4.0, 5.0, 6.0};\n        RealVector vector2 = MatrixUtils.createSparseRealVector(data2);\n\n        // Add two vectors\n        RealVector sumVector = vector.add(vector2);\n\n        // Print the sum of the vectors\n        System.out.println(\"Sum of vectors: \" + sumVector);\n\n        // Read the sparse real vector\n        /* read */ RealVector readVector = vector;\n\n        // Print the original vector to verify\n        System.out.println(\"Original Vector: \" + readVector);\n\n        // Perform some additional operations on the read vector\n        double norm = readVector.getNorm();\n        System.out.println(\"Norm of the original vector: \" + norm);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector with initial data\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Read the sparse real vector\n        /* read */ RealVector readVector = vector;\n\n        // Print the vector to verify\n        System.out.println(\"Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}