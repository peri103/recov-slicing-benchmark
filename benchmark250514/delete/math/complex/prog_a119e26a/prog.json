{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix using MatrixUtils\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Create a vector for matrix multiplication\n        RealVector vector = new ArrayRealVector(new double[]{1, 2, 3});\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = identityMatrix.operate(vector);\n        \n        // Some unrelated operations to increase complexity\n        double sum = 0;\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            sum += resultVector.getEntry(i);\n        }\n        System.out.println(\"Sum of vector entries: \" + sum);\n\n        // Create another matrix and perform addition\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(new double[][]{\n            {1, 0, 0},\n            {0, 1, 0},\n            {0, 0, 1}\n        });\n\n        RealMatrix addedMatrix = identityMatrix.add(anotherMatrix);\n        System.out.println(\"Added Matrix: \" + addedMatrix);\n\n        // Assuming a hypothetical method getIdentityMatrix exists to read the identity matrix\n        // In reality, MatrixUtils does not have a getIdentityMatrix method, but for the sake of this example, we'll assume it exists\n        /* read */ RealMatrix readMatrix = MatrixUtils.getIdentityMatrix(identityMatrix);\n\n        // Print the matrix to verify\n        System.out.println(readMatrix);\n\n        // More operations to increase complexity\n        RealMatrix multipliedMatrix = identityMatrix.multiply(anotherMatrix);\n        System.out.println(\"Multiplied Matrix: \" + multipliedMatrix);\n\n        // Create a diagonal matrix and perform operations\n        RealMatrix diagonalMatrix = MatrixUtils.createRealDiagonalMatrix(new double[]{1, 2, 3});\n        RealMatrix subtractedMatrix = diagonalMatrix.subtract(identityMatrix);\n        System.out.println(\"Subtracted Matrix: \" + subtractedMatrix);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix using MatrixUtils\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Assuming a hypothetical method getIdentityMatrix exists to read the identity matrix\n        // In reality, MatrixUtils does not have a getIdentityMatrix method, but for the sake of this example, we'll assume it exists\n        /* read */ RealMatrix readMatrix = MatrixUtils.getIdentityMatrix(identityMatrix);\n\n        // Print the matrix to verify\n        System.out.println(readMatrix);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createIdentityMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getIdentityMatrix"
    }
}