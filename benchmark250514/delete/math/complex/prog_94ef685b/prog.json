{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize matrix data\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        // Create a vector\n        RealVector vector = new ArrayRealVector(new double[]{10.0, 20.0, 30.0});\n\n        // Perform vector operations\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.print(scaledVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Create another matrix for operations\n        double[][] additionalData = {\n            {9.0, 8.0, 7.0},\n            {6.0, 5.0, 4.0},\n            {3.0, 2.0, 1.0}\n        };\n        RealMatrix additionalMatrix = MatrixUtils.createBlockRealMatrix(additionalData);\n\n        // Matrix addition\n        RealMatrix resultMatrix = additionalMatrix.add(MatrixUtils.createRealMatrix(data));\n        System.out.println(\"Result Matrix after Addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Original write method\n        /* write */ RealMatrix matrix = MatrixUtils.createBlockRealMatrix(data);\n\n        // Perform some unrelated operations\n        double sum = 0.0;\n        for (int i = 0; i < data.length; i++) {\n            for (int j = 0; j < data[i].length; j++) {\n                sum += data[i][j];\n            }\n        }\n        System.out.println(\"Sum of original data: \" + sum);\n\n        // Original read method\n        /* read */ double[][] readData = matrix.getData();\n\n        // Print the matrix to verify the read operation\n        System.out.println(\"Read Matrix:\");\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        /* write */ RealMatrix matrix = MatrixUtils.createBlockRealMatrix(data);\n        /* read */ double[][] readData = matrix.getData();\n\n        // Print the matrix to verify the read operation\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createBlockRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getBlockRealMatrix"
    }
}