{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        double[] columnData = {4.0, 5.0, 6.0};\n        \n        // Create a column vector\n        RealVector columnVector = new ArrayRealVector(columnData);\n        \n        // Perform matrix multiplication\n        RealMatrix matrix1 = MatrixUtils.createRowRealMatrix(rowData);\n        RealMatrix matrix2 = MatrixUtils.createRowRealMatrix(columnData);\n        \n        RealMatrix resultMatrix = matrix1.multiply(matrix2.transpose());\n        \n        // Some unrelated operations\n        double sum = 0;\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                sum += resultMatrix.getEntry(i, j);\n            }\n        }\n        \n        System.out.println(\"Sum of elements in resultMatrix: \" + sum);\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        // Additional operations with matrix\n        double trace = 0;\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            trace += matrix.getEntry(i, i);\n        }\n        \n        System.out.println(\"Trace of matrix: \" + trace);\n        \n        // More operations\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        RealMatrix addedMatrix = matrix.add(scaledMatrix);\n        \n        System.out.println(\"Added matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n        \n        System.out.println(\"Retrieved matrix:\");\n        for (int i = 0; i < retrievedMatrix.getColumnDimension(); i++) {\n            System.out.print(retrievedMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n        \n        for (int i = 0; i < retrievedMatrix.getColumnDimension(); i++) {\n            System.out.print(retrievedMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}