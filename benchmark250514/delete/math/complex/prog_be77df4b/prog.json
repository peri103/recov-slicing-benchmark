{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        \n        // Additional matrix operations\n        double[][] matrixData = {\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix additionalMatrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        RealVector columnVector = new ArrayRealVector(new double[]{10.0, 11.0});\n        RealMatrix modifiedMatrix = additionalMatrix.add(columnVector.outerProduct(columnVector));\n        \n        System.out.println(\"Modified Matrix: \");\n        for (int i = 0; i < modifiedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < modifiedMatrix.getColumnDimension(); j++) {\n                System.out.print(modifiedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        \n        // More operations\n        RealMatrix multipliedMatrix = matrix.multiply(modifiedMatrix);\n        \n        System.out.println(\"Multiplied Matrix: \");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n        \n        System.out.println(\"Retrieved Matrix Row: \");\n        for (int i = 0; i < retrievedMatrix.getColumnDimension(); i++) {\n            System.out.print(retrievedMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        \n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n        \n        System.out.println(\"Retrieved Matrix Row: \");\n        for (int i = 0; i < retrievedMatrix.getColumnDimension(); i++) {\n            System.out.print(retrievedMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}