{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 3x3 matrix for demonstration\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create another matrix for additional operations\n        double[][] data2 = {\n            {1.5, 2.5, 3.5},\n            {4.5, 5.5, 6.5},\n            {7.5, 8.5, 9.5}\n        };\n        \n        RealMatrix matrix2 = MatrixUtils.createRealMatrix(data2);\n        \n        // Perform matrix addition\n        RealMatrix resultMatrix = matrix.add(matrix2);\n        \n        // Print the result of matrix addition\n        System.out.println(\"Result of matrix addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            System.out.println(resultMatrix.getRowVector(i));\n        }\n\n        // Write: Create a row vector and set it in the original matrix\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{10.0, 11.0, 12.0});\n        /* write */ matrix.setRowVector(1, rowVector);\n\n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            System.out.println(transposedMatrix.getRowVector(i));\n        }\n\n        // Some unrelated computations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        System.out.println(\"Identity matrix:\");\n        for (int i = 0; i < identityMatrix.getRowDimension(); i++) {\n            System.out.println(identityMatrix.getRowVector(i));\n        }\n\n        // Read: Get the row vector from the matrix\n        /* read */ RealVector readRowVector = matrix.getRowVector(1);\n\n        // Print the row vector to verify\n        System.out.println(\"Modified row vector:\");\n        System.out.println(readRowVector);\n\n        // Further operations with the read vector\n        double norm = readRowVector.getNorm();\n        System.out.println(\"Norm of the modified row vector: \" + norm);\n\n        // Create a new matrix using the read row vector\n        RealMatrix newMatrix = new Array2DRowRealMatrix(new double[][]{\n            readRowVector.toArray(),\n            {0, 0, 0},\n            {0, 0, 0}\n        });\n\n        System.out.println(\"New matrix using the modified row vector:\");\n        for (int i = 0; i < newMatrix.getRowDimension(); i++) {\n            System.out.println(newMatrix.getRowVector(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 3x3 matrix for demonstration\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Write: Create a row vector and set it in the matrix\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{10.0, 11.0, 12.0});\n        /* write */ matrix.setRowVector(1, rowVector);\n\n        // Read: Get the row vector from the matrix\n        /* read */ RealVector readRowVector = matrix.getRowVector(1);\n\n        // Print the row vector to verify\n        System.out.println(readRowVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}