{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixChangingVisitor;\nimport org.apache.commons.math3.linear.RealMatrixPreservingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(data);\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(new double[][]{{1.0}, {2.0}, {3.0}});\n        \n        // Additional complex operations\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {}\n\n            public double visit(int row, int column, double value) {\n                return value * 2; // Double each element\n            }\n\n            public double end() {\n                return 0;\n            }\n        };\n        \n        matrix.walkInRowOrder(visitor);\n\n        RealMatrixPreservingVisitor preservingVisitor = new RealMatrixPreservingVisitor() {\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {}\n\n            public void visit(int row, int column, double value) {\n                System.out.println(\"Matrix element [\" + row + \"][\" + column + \"] = \" + value);\n            }\n\n            public double end() {\n                return 0;\n            }\n        };\n        \n        matrix.walkInRowOrder(preservingVisitor);\n\n        // More unrelated computations\n        double sum = 0;\n        for (int i = 0; i < data.length; i++) {\n            sum += data[i];\n        }\n        System.out.println(\"Sum of data array: \" + sum);\n\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        \n        System.out.println(\"Written Vector: \" + columnVector);\n        System.out.println(\"Read Vector: \" + readColumnVector);\n        \n        // Further unrelated operations\n        double[] additionalData = {4.0, 5.0, 6.0};\n        RealVector additionalVector = MatrixUtils.createColumnRealVector(additionalData);\n        RealMatrix additionalMatrix = MatrixUtils.createRealMatrix(new double[][]{{4.0}, {5.0}, {6.0}});\n        \n        RealVector additionalReadVector = additionalMatrix.getColumnVector(0);\n        System.out.println(\"Additional Written Vector: \" + additionalVector);\n        System.out.println(\"Additional Read Vector: \" + additionalReadVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(data);\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(new double[][]{{1.0}, {2.0}, {3.0}});\n        \n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        \n        System.out.println(\"Written Vector: \" + columnVector);\n        System.out.println(\"Read Vector: \" + readColumnVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}