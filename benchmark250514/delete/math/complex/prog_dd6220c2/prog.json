{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a diagonal array\n        double[] diagonal = {1.0, 2.0, 3.0};\n\n        // Create a diagonal matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n\n        // Perform some unrelated matrix operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix sumMatrix = matrix.add(identityMatrix);\n\n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector resultVector = sumMatrix.operate(vector);\n\n        // Print the result of the vector operation\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Perform some additional matrix operations\n        RealMatrix scalarMatrix = matrix.scalarMultiply(2.0);\n        RealMatrix transposedMatrix = scalarMatrix.transpose();\n\n        // Print the transposed matrix\n        System.out.println(\"Transposed matrix:\");\n        for (int row = 0; row < transposedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < transposedMatrix.getColumnDimension(); col++) {\n                System.out.print(transposedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Extract the diagonal matrix using MatrixUtils (assuming getDiagonalMatrix is a valid method)\n        /* read */ double[] extractedDiagonal = matrix.getColumn(0);\n\n        // Print the extracted diagonal to verify\n        System.out.println(\"Extracted diagonal:\");\n        for (double value : extractedDiagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a diagonal array\n        double[] diagonal = {1.0, 2.0, 3.0};\n\n        // Create a diagonal matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n\n        // Extract the diagonal matrix using MatrixUtils (assuming getDiagonalMatrix is a valid method)\n        /* read */ double[] extractedDiagonal = matrix.getColumn(0);\n\n        // Print the extracted diagonal to verify\n        for (double value : extractedDiagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}