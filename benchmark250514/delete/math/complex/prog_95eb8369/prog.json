{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2x3 matrix with some data\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n        \n        // Create a RealMatrix object\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create a RealVector to insert into the matrix\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{7.0, 8.0, 9.0});\n        \n        // Set the first row of the matrix to the new vector\n        /* write */ matrix.setRowVector(0, rowVector);\n        \n        // Perform additional operations on the matrix\n        RealMatrix matrix2 = new Array2DRowRealMatrix(new double[][]{\n            {10.0, 11.0, 12.0},\n            {13.0, 14.0, 15.0}\n        });\n        \n        // Add two matrices\n        RealMatrix resultMatrix = matrix.add(matrix2);\n        \n        // Print out the result of the addition\n        System.out.println(\"Resultant Matrix after addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Create another vector and perform dot product\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 0.5, -1.0});\n        double dotProduct = rowVector.dotProduct(vector);\n        System.out.println(\"Dot product of rowVector and vector: \" + dotProduct);\n        \n        // Retrieve the modified row vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        \n        // Print out the retrieved row vector\n        System.out.println(\"Retrieved Row Vector: \" + readVector);\n        \n        // Create a new matrix and multiply with the original matrix\n        RealMatrix matrix3 = new Array2DRowRealMatrix(new double[][]{\n            {1.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        });\n        \n        RealMatrix multipliedMatrix = matrix.multiply(matrix3);\n        System.out.println(\"Matrix after multiplication:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{7.0, 8.0, 9.0});\n        /* write */ matrix.setRowVector(0, rowVector);\n        \n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}