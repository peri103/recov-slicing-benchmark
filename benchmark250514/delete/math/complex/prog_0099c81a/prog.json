{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 2D array to initialize the matrix\n        double[][] data = {\n            {0, 0, 0},\n            {0, 0, 0},\n            {0, 0, 0}\n        };\n\n        // Create a RealMatrix from the data\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a RealVector to be written to the matrix\n        RealVector vector = MatrixUtils.createRowRealVector(new double[]{1, 2, 3});\n\n        // Create another matrix for complex operations\n        double[][] complexData = {\n            {5, 6, 7},\n            {8, 9, 10},\n            {11, 12, 13}\n        };\n        RealMatrix complexMatrix = new Array2DRowRealMatrix(complexData);\n\n        // Perform some operations on complexMatrix\n        RealVector columnVector = complexMatrix.getColumnVector(0);\n        System.out.println(\"Column vector from complexMatrix: \" + columnVector);\n\n        // Create a new vector for matrix addition\n        RealVector additionVector = new ArrayRealVector(new double[]{2, 2, 2});\n        RealVector resultVector = columnVector.add(additionVector);\n        System.out.println(\"Result vector after addition: \" + resultVector);\n\n        /* write */\n        matrix.setRowVector(1, vector);\n\n        // More complex operations\n        RealMatrix multipliedMatrix = complexMatrix.scalarMultiply(2);\n        System.out.println(\"Multiplied matrix: \");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            System.out.println(multipliedMatrix.getRowVector(i));\n        }\n\n        /* read */\n        RealVector readVector = matrix.getRowVector(1);\n\n        System.out.println(\"Read vector: \" + readVector);\n\n        // Additional operations to make the program more complex\n        RealMatrix sumMatrix = matrix.add(multipliedMatrix);\n        System.out.println(\"Sum matrix: \");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            System.out.println(sumMatrix.getRowVector(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 2D array to initialize the matrix\n        double[][] data = {\n            {0, 0, 0},\n            {0, 0, 0},\n            {0, 0, 0}\n        };\n\n        // Create a RealMatrix from the data\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create a RealVector to be written to the matrix\n        RealVector vector = MatrixUtils.createRowRealVector(new double[]{1, 2, 3});\n\n        /* write */\n        matrix.setRowVector(1, vector);\n\n        /* read */\n        RealVector readVector = matrix.getRowVector(1);\n\n        System.out.println(\"Read vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}