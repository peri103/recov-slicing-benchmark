{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n        double[] vectorValues = {4.0, 5.0, 6.0};\n        \n        RealVector vector = new ArrayRealVector(vectorValues);\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n        \n        RealMatrix multipliedMatrix = matrix.scalarMultiply(2.0);\n        \n        RealVector resultVector = multipliedMatrix.operate(vector);\n        \n        double sum = 0.0;\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            sum += resultVector.getEntry(i);\n        }\n        \n        System.out.println(\"Sum of elements in result vector: \" + sum);\n        \n        double[] readDiagonal = matrix.getColumn(0);\n        \n        /* read */ for (double value : readDiagonal) {\n            System.out.println(value);\n        }\n        \n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        \n        RealMatrix addedMatrix = matrix.add(identityMatrix);\n        \n        RealVector finalVector = addedMatrix.operate(vector);\n        \n        System.out.println(\"Final vector after addition:\");\n        for (int i = 0; i < finalVector.getDimension(); i++) {\n            System.out.println(finalVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] diagonalValues = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonalValues);\n        \n        /* read */ double[] readDiagonal = matrix.getColumn(0);\n        \n        for (double value : readDiagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    }
}