{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        // Creating a matrix with one column\n        RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        // Additional unrelated code to make the program more complex\n        double[][] matrixData = {\n            {4.0, 5.0},\n            {6.0, 7.0},\n            {8.0, 9.0}\n        };\n        \n        RealMatrix complexMatrix = new Array2DRowRealMatrix(matrixData);\n        RealVector vectorFromComplexMatrix = complexMatrix.getRowVector(0);\n        \n        System.out.println(\"Complex Matrix Row Vector: \" + vectorFromComplexMatrix);\n        \n        // Writing a column vector to the matrix\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(columnData);\n        \n        // Perform some operations on the complex matrix\n        RealMatrix transposedMatrix = complexMatrix.transpose();\n        RealVector anotherVector = transposedMatrix.getColumnVector(1);\n        \n        System.out.println(\"Transposed Matrix Column Vector: \" + anotherVector);\n        \n        // Reading the column vector from the matrix\n        /* read */ RealVector readVector = matrix.getColumnVector(0);\n        \n        // Output the read vector\n        System.out.println(\"Read Vector: \" + readVector);\n        \n        // More complex operations\n        RealMatrix scaledMatrix = complexMatrix.scalarMultiply(2.0);\n        RealVector scaledVector = scaledMatrix.getRowVector(1);\n        \n        System.out.println(\"Scaled Matrix Row Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        // Creating a matrix with one column\n        RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        // Writing a column vector to the matrix\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(columnData);\n        \n        // Reading the column vector from the matrix\n        /* read */ RealVector readVector = matrix.getColumnVector(0);\n        \n        // Output the read vector\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}