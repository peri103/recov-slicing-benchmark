{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n\n        // Additional complex operations\n        double[] rowData = {4.0, 5.0, 6.0};\n        RealMatrix rowMatrix = MatrixUtils.createRowRealMatrix(rowData);\n\n        RealMatrix addedMatrix = matrix.add(rowMatrix.transpose());\n\n        RealVector vector = new ArrayRealVector(columnData);\n        RealVector resultVector = addedMatrix.operate(vector);\n\n        // Unrelated complex operations\n        double sum = 0;\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            sum += resultVector.getEntry(i);\n        }\n        System.out.println(\"Sum of result vector entries: \" + sum);\n\n        // More complex operations\n        RealMatrix multipliedMatrix = addedMatrix.multiply(matrix);\n        double trace = multipliedMatrix.getTrace();\n        System.out.println(\"Trace of the multiplied matrix: \" + trace);\n\n        /* read */ RealMatrix columnMatrix = MatrixUtils.getColumnRealMatrix(matrix, 0);\n        \n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(\"Column Matrix Entry \" + i + \": \" + columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        /* read */ RealMatrix columnMatrix = MatrixUtils.getColumnRealMatrix(matrix, 0);\n        \n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}