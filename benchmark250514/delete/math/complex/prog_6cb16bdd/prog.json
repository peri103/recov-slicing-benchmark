{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] values = {1.0, 2.0, 3.0};\n        \n        // Create a sparse real vector\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(values);\n        \n        // Perform some operations on a matrix\n        double[][] matrixData = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealMatrix transposedMatrix = matrix.transpose();\n        \n        // Print the transposed matrix\n        System.out.println(\"Transposed Matrix:\");\n        for (int row = 0; row < transposedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < transposedMatrix.getColumnDimension(); col++) {\n                System.out.print(transposedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Calculate the dot product of the vector with itself\n        double dotProduct = vector.dotProduct(vector);\n        System.out.println(\"Dot Product of vector with itself: \" + dotProduct);\n        \n        // Retrieve the sparse real vector\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector);\n        \n        // Print the retrieved vector\n        System.out.println(\"Retrieved Vector:\");\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.print(readVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Additional complex operations\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n        System.out.println(\"Multiplied Matrix:\");\n        for (int row = 0; row < multipliedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < multipliedMatrix.getColumnDimension(); col++) {\n                System.out.print(multipliedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] values = {1.0, 2.0, 3.0};\n        \n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(values);\n        \n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector);\n        \n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}