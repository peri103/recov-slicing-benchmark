{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Step 1: Initialize a matrix with one row and multiple columns\n        double[][] matrixData = {{0.0, 0.0, 0.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Step 2: Create a row vector\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector rowVector = MatrixUtils.createRowRealVector(vectorData);\n        \n        // Step 3: Write the row vector into the matrix\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Additional operations with matrices and vectors\n        double[][] additionalMatrixData = {\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalMatrixData);\n\n        // Add the original matrix to the additional matrix\n        RealMatrix sumMatrix = matrix.add(additionalMatrix);\n        System.out.println(\"Sum Matrix:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform scalar multiplication on the row vector\n        RealVector scaledVector = rowVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n\n        // Step 4: Read the row vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n\n        // Print the read vector\n        System.out.println(\"Read vector: \" + readVector);\n\n        // More operations\n        RealVector anotherVector = MatrixUtils.createRowRealVector(new double[]{10.0, 11.0, 12.0});\n        RealVector combinedVector = readVector.add(anotherVector);\n        System.out.println(\"Combined Vector: \" + combinedVector);\n\n        RealMatrix transposedMatrix = sumMatrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with one row and multiple columns\n        double[][] matrixData = {{0.0, 0.0, 0.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Create a row vector\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector rowVector = MatrixUtils.createRowRealVector(vectorData);\n        \n        // Write the row vector into the matrix\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Read the row vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n\n        // Print the read vector\n        System.out.println(\"Read vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}