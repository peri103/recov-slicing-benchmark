{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] initialData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(initialData);\n        \n        // Additional matrices and vectors\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(new double[][]{\n            {10.0, 11.0, 12.0},\n            {13.0, 14.0, 15.0},\n            {16.0, 17.0, 18.0}\n        });\n\n        RealVector additionalVector = new ArrayRealVector(new double[]{19.0, 20.0, 21.0});\n        \n        // Perform operations on the additional matrix\n        RealMatrix resultMatrix = matrix.add(additionalMatrix);\n        System.out.println(\"Result Matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform operations on the additional vector\n        RealVector resultVector = additionalVector.mapAdd(5.0);\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{10.0, 11.0, 12.0});\n        matrix.setColumnVector(0, columnVector);\n\n        // Perform some unrelated operations\n        RealVector unrelatedVector = new ArrayRealVector(new double[]{22.0, 23.0, 24.0});\n        RealVector scaledVector = unrelatedVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.print(scaledVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Calculate the norm of an unrelated vector\n        double norm = unrelatedVector.getNorm();\n        System.out.println(\"Norm of Unrelated Vector: \" + norm);\n\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        System.out.println(\"Read Column Vector:\");\n        for (int i = 0; i < readColumnVector.getDimension(); i++) {\n            System.out.print(readColumnVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{10.0, 11.0, 12.0});\n        matrix.setColumnVector(0, columnVector);\n        \n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        System.out.println(readColumnVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}