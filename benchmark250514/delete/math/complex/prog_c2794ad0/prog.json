{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with some values\n        double[][] matrixData = {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        // Create a row real vector using the write method\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{10, 11, 12});\n        /* write */ matrix.setRowVector(1, rowVector); // Set the vector to the second row\n\n        // Additional complex operations\n        double[][] anotherMatrixData = {\n            {2, 3, 4},\n            {5, 6, 7},\n            {8, 9, 10}\n        };\n        \n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherMatrixData);\n        RealMatrix resultMatrix = matrix.add(anotherMatrix);\n        \n        System.out.println(\"Result Matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform some operations on the result matrix\n        RealVector columnVector = resultMatrix.getColumnVector(0);\n        System.out.println(\"First column of the result matrix: \" + columnVector);\n        \n        // Read the row real vector using the read method\n        /* read */ RealVector readRowVector = matrix.getRowVector(1);\n        \n        // Print the read values to verify the operation\n        System.out.println(\"Read Row Vector: \" + readRowVector);\n        \n        // Further operations\n        RealMatrix transposedMatrix = resultMatrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with some values\n        double[][] matrixData = {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        // Create a row real vector using the write method\n        RealVector rowVector = MatrixUtils.createRowRealVector(new double[]{10, 11, 12});\n        /* write */ matrix.setRowVector(1, rowVector); // Set the vector to the second row\n        \n        // Read the row real vector using the read method\n        /* read */ RealVector readRowVector = matrix.getRowVector(1);\n        \n        // Print the read values to verify the operation\n        System.out.println(\"Read Row Vector: \" + readRowVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    }
}