{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix\n        double[][] data = {\n            {1, 0, 0},\n            {2, 3, 0},\n            {4, 5, 6}\n        };\n        \n        // Create a triangular matrix using the write method\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Perform some operations on the matrix\n        RealVector vector = new ArrayRealVector(new double[] {1, 2, 3});\n        RealVector result = triangularMatrix.operate(vector);\n        \n        // Output the result of the matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < result.getDimension(); i++) {\n            System.out.print(result.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Create another matrix and perform operations\n        double[][] data2 = {\n            {7, 8, 9},\n            {10, 11, 12},\n            {13, 14, 15}\n        };\n        RealMatrix matrix2 = MatrixUtils.createRealMatrix(data2);\n        RealMatrix sumMatrix = triangularMatrix.add(matrix2);\n\n        // Output the sum matrix\n        System.out.println(\"Sum Matrix:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the triangular matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Output the matrix to verify\n        System.out.println(\"Triangular Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform additional operations\n        RealMatrix transposedMatrix = readMatrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix\n        double[][] data = {\n            {1, 0, 0},\n            {2, 3, 0},\n            {4, 5, 6}\n        };\n        \n        // Create a triangular matrix using the write method\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Read the triangular matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Output the matrix to verify\n        System.out.println(\"Triangular Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    }
}