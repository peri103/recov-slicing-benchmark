{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a symmetric matrix using MatrixUtils\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {2.0, 5.0, 6.0},\n            {3.0, 6.0, 9.0}\n        };\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Create a vector and perform some operations\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Matrix-Vector Multiplication Result: \" + resultVector);\n\n        // Perform matrix addition with another matrix\n        double[][] otherData = {\n            {0.0, 1.0, 0.0},\n            {1.0, 0.0, 1.0},\n            {0.0, 1.0, 0.0}\n        };\n        RealMatrix otherMatrix = MatrixUtils.createSymmetricMatrix(otherData);\n        RealMatrix addedMatrix = matrix.add(otherMatrix);\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Retrieve the symmetric matrix using MatrixUtils\n        /* read */ RealMatrix symmetricMatrix = MatrixUtils.getSymmetricMatrix(matrix);\n        \n        // Print the symmetric matrix\n        System.out.println(\"Symmetric Matrix:\");\n        for (int i = 0; i < symmetricMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < symmetricMatrix.getColumnDimension(); j++) {\n                System.out.print(symmetricMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform matrix subtraction with another matrix\n        RealMatrix subtractedMatrix = matrix.subtract(otherMatrix);\n        System.out.println(\"Subtracted Matrix:\");\n        for (int i = 0; i < subtractedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < subtractedMatrix.getColumnDimension(); j++) {\n                System.out.print(subtractedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a symmetric matrix using MatrixUtils\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {2.0, 5.0, 6.0},\n            {3.0, 6.0, 9.0}\n        };\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createSymmetricMatrix(data);\n        \n        // Retrieve the symmetric matrix using MatrixUtils\n        /* read */ RealMatrix symmetricMatrix = MatrixUtils.getSymmetricMatrix(matrix);\n        \n        // Print the symmetric matrix\n        for (int i = 0; i < symmetricMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < symmetricMatrix.getColumnDimension(); j++) {\n                System.out.print(symmetricMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}