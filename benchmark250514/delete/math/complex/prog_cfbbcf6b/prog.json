{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.SparseRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a double array to create a sparse real vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create another vector for additional operations\n        double[] otherData = {4.0, 5.0, 6.0};\n        SparseRealVector otherVector = MatrixUtils.createSparseRealVector(otherData);\n\n        // Perform operations on the other vector\n        RealVector sumVector = otherVector.mapAdd(10);\n\n        // Use an ArrayList for additional complexity\n        ArrayList<Double> arrayList = new ArrayList<>();\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            arrayList.add(sumVector.getEntry(i));\n        }\n\n        /* write */ SparseRealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Perform operations on the arrayList\n        double total = 0;\n        for (Double value : arrayList) {\n            total += value;\n        }\n        System.out.println(\"Sum of elements in the modified vector: \" + total);\n\n        // Some unrelated computations\n        int[] numbers = {5, 10, 15, 20};\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n\n        /* read */ SparseRealVector readVector = MatrixUtils.getSparseRealVector(vector);\n\n        // Print the read vector to verify\n        System.out.println(readVector);\n\n        // Additional operations on the read vector\n        RealVector scaledVector = readVector.mapMultiply(2);\n        System.out.println(\"Scaled vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.SparseRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a double array to create a sparse real vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        /* write */ SparseRealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        /* read */ SparseRealVector readVector = MatrixUtils.getSparseRealVector(vector);\n\n        // Print the read vector to verify\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}