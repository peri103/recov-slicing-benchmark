{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using MatrixUtils\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Create a dense matrix for additional complexity\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n\n        // Perform matrix operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix matrixProduct = matrix.multiply(transposedMatrix);\n        \n        // Print matrix operations results\n        System.out.println(\"Transposed Matrix: \");\n        System.out.println(transposedMatrix);\n        System.out.println(\"Matrix Product: \");\n        System.out.println(matrixProduct);\n\n        // Add some unrelated operations to increase complexity\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Retrieve the sparse real vector using MatrixUtils\n        /* read */ RealVector retrievedVector = MatrixUtils.getSparseRealVector(vector);\n\n        // Print the retrieved vector to verify the operations\n        System.out.println(\"Retrieved Vector: \" + retrievedVector);\n\n        // More unrelated operations\n        double[] additionalData = {10.0, 20.0, 30.0};\n        RealVector additionalVector = MatrixUtils.createSparseRealVector(additionalData);\n        RealVector combinedVector = vector.add(additionalVector);\n        \n        // Print combined vector\n        System.out.println(\"Combined Vector: \" + combinedVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse real vector using MatrixUtils\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n        \n        // Retrieve the sparse real vector using MatrixUtils\n        /* read */ RealVector retrievedVector = MatrixUtils.getSparseRealVector(vector);\n        \n        // Print the retrieved vector to verify the operations\n        System.out.println(\"Retrieved Vector: \" + retrievedVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}