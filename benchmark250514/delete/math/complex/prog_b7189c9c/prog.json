{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        double[] additionalRowData = {4.0, 5.0, 6.0};\n\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n\n        // Create another matrix and perform some operations\n        RealMatrix anotherMatrix = MatrixUtils.createRowRealMatrix(additionalRowData);\n        RealMatrix combinedMatrix = matrix.add(anotherMatrix);\n\n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(new double[]{7.0, 8.0, 9.0});\n        RealVector resultVector = vector.mapAdd(10.0);\n\n        // Print vector data\n        System.out.println(\"Vector values after adding 10:\");\n        for (double value : resultVector.toArray()) {\n            System.out.print(value + \" \");\n        }\n        System.out.println();\n\n        // Perform some matrix operations\n        RealMatrix scaledMatrix = combinedMatrix.scalarMultiply(2.0);\n        System.out.println(\"Scaled matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (double value : scaledMatrix.getRow(i)) {\n                System.out.print(value + \" \");\n            }\n            System.out.println();\n        }\n\n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n\n        // Printing the read matrix row data\n        System.out.println(\"Read matrix row data:\");\n        for (double value : readMatrix.getRow(0)) {\n            System.out.print(value + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        \n        /* read */ RealMatrix readMatrix = MatrixUtils.getRowRealMatrix(matrix, 0);\n        \n        // Printing the read matrix row data\n        for (double value : readMatrix.getRow(0)) {\n            System.out.print(value + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}