{
    "java_code": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixImpl;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize some data for the vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Additional unrelated operations\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = new RealMatrixImpl(matrixData);\n        double[] row = matrix.getRow(1);\n        \n        for (double value : row) {\n            System.out.println(\"Matrix row value: \" + value);\n        }\n\n        // Creating the ArrayRealVector using MatrixUtils\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Perform some operations on the vector\n        double norm = vector.getNorm();\n        System.out.println(\"Vector norm: \" + norm);\n\n        // More unrelated operations\n        RealMatrix matrix2 = matrix.transpose();\n        double[] column = matrix2.getColumn(0);\n\n        for (double value : column) {\n            System.out.println(\"Transposed matrix column value: \" + value);\n        }\n\n        // Reading the ArrayRealVector using MatrixUtils\n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector.toArray());\n\n        // Output the read vector values\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(\"Read vector value: \" + readVector.getEntry(i));\n        }\n\n        // Final operations\n        ArrayRealVector scaledVector = readVector.mapMultiply(2.0);\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(\"Scaled vector value: \" + scaledVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector.toArray());\n        \n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    }
}