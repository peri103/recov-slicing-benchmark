{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an OpenMapRealVector using MatrixUtils\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(new double[]{1.0, 2.0, 3.0});\n        \n        // Perform some unrelated operations\n        Random random = new Random();\n        double[] randomValues = new double[5];\n        for (int i = 0; i < randomValues.length; i++) {\n            randomValues[i] = random.nextDouble() * 10; // Generate random values\n        }\n        \n        // Create an ArrayRealVector using random values\n        ArrayRealVector arrayVector = new ArrayRealVector(randomValues);\n        System.out.println(\"ArrayRealVector: \" + arrayVector);\n        \n        // Scale the vector\n        RealVector scaledVector = arrayVector.mapMultiply(2.0);\n        System.out.println(\"Scaled ArrayRealVector: \" + scaledVector);\n        \n        // Read the OpenMapRealVector using MatrixUtils\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Output the OpenMapRealVector for verification\n        System.out.println(\"OpenMapRealVector: \" + readVector);\n\n        // Add the scaled vector to the OpenMapRealVector\n        RealVector combinedVector = readVector.add(scaledVector);\n        System.out.println(\"Combined Vector: \" + combinedVector);\n        \n        // Calculate the norm of the combined vector\n        double norm = combinedVector.getNorm();\n        System.out.println(\"Norm of Combined Vector: \" + norm);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an OpenMapRealVector using MatrixUtils\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(new double[]{1.0, 2.0, 3.0});\n\n        // Read the OpenMapRealVector using MatrixUtils\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Output the vector for verification\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}