{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix using MatrixUtils\n        RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3); /* write */\n\n        // Create a vector to perform operations\n        RealVector vector = new ArrayRealVector(new double[]{1, 2, 3});\n        \n        // Perform some matrix-vector multiplication\n        RealVector resultVector = identityMatrix.operate(vector);\n        \n        // Print the result of the multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Create another matrix and perform addition\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(new double[][]{\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        });\n\n        RealMatrix sumMatrix = identityMatrix.add(anotherMatrix);\n\n        // Print the sum matrix\n        System.out.println(\"Sum Matrix:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the identity matrix using MatrixUtils\n        RealMatrix readMatrix = MatrixUtils.getIdentityMatrix(3); /* read */\n\n        // Print the matrix to verify the read value\n        System.out.println(\"Identity Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform some operations with the read matrix\n        RealVector transformedVector = readMatrix.operate(vector);\n        \n        // Print the transformed vector\n        System.out.println(\"Transformed Vector:\");\n        for (int i = 0; i < transformedVector.getDimension(); i++) {\n            System.out.print(transformedVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix using MatrixUtils\n        RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3); /* write */\n\n        // Read the identity matrix using MatrixUtils\n        RealMatrix readMatrix = MatrixUtils.getIdentityMatrix(3); /* read */\n\n        // Print the matrix to verify the read value\n        System.out.println(\"Identity Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createIdentityMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getIdentityMatrix"
    }
}