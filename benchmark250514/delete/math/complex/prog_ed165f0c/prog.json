{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix of size 3x3\n        RealMatrix identityMatrix;\n        /* write */ identityMatrix = MatrixUtils.createIdentityMatrix(3);\n        \n        // Perform some operations unrelated to the original write-read pair\n        RealVector vector = new ArrayRealVector(new double[]{1, 2, 3});\n        RealMatrix matrix = MatrixUtils.createRealMatrix(new double[][]{\n            {1, 0, 0},\n            {0, 1, 0},\n            {0, 0, 1}\n        });\n        \n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Resulting Vector after operation:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // More complex operations\n        RealMatrix multipliedMatrix = matrix.multiply(identityMatrix);\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Read the identity matrix\n        RealMatrix readMatrix;\n        /* read */ readMatrix = MatrixUtils.getIdentityMatrix(3);\n        \n        // Print the matrix to verify\n        System.out.println(\"Identity Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Additional operations\n        RealVector addedVector = vector.add(resultVector);\n        System.out.println(\"Added Vector:\");\n        for (int i = 0; i < addedVector.getDimension(); i++) {\n            System.out.print(addedVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix of size 3x3\n        RealMatrix identityMatrix;\n        /* write */ identityMatrix = MatrixUtils.createIdentityMatrix(3);\n        \n        // Read the identity matrix\n        RealMatrix readMatrix;\n        /* read */ readMatrix = MatrixUtils.getIdentityMatrix(3);\n        \n        // Print the matrix to verify\n        System.out.println(\"Identity Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createIdentityMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getIdentityMatrix"
    }
}