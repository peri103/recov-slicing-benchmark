{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.OpenMapRealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        OpenMapRealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(3, 3);\n        /* write */ sparseMatrix.setEntry(0, 0, 1.0); // set a value to ensure the matrix is not empty\n\n        // Create a dense matrix and perform operations\n        Array2DRowRealMatrix denseMatrix = new Array2DRowRealMatrix(3, 3);\n        denseMatrix.setEntry(0, 0, 2.0);\n        denseMatrix.setEntry(1, 1, 3.0);\n        denseMatrix.setEntry(2, 2, 4.0);\n\n        // Create a real vector and perform operations\n        RealVector vector = new ArrayRealVector(3);\n        vector.setEntry(0, 1.0);\n        vector.setEntry(1, 2.0);\n        vector.setEntry(2, 3.0);\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = denseMatrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = sparseMatrix;\n        \n        // Print the value at (0, 0) to verify the read operation\n        System.out.println(\"Sparse matrix value at (0, 0): \" + readMatrix.getEntry(0, 0));\n\n        // Perform matrix addition\n        RealMatrix addedMatrix = denseMatrix.add(readMatrix);\n        System.out.println(\"Result of matrix addition:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.OpenMapRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        OpenMapRealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(3, 3);\n        /* write */ sparseMatrix.setEntry(0, 0, 1.0); // set a value to ensure the matrix is not empty\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = sparseMatrix;\n        \n        // Print the value at (0, 0) to verify the read operation\n        System.out.println(readMatrix.getEntry(0, 0));\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}