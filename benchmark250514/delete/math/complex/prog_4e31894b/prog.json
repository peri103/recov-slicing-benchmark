{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.OpenMapRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize dimensions and values for the sparse matrix\n        int rows = 3;\n        int columns = 3;\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {0.0, 2.0, 0.0},\n            {0.0, 0.0, 3.0}\n        };\n\n        // Create a sparse matrix using the data\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(data);\n\n        // Additional code to make the program more complex\n        // Create a dense vector\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n\n        // Perform a matrix-vector multiplication\n        RealVector resultVector = sparseMatrix.operate(vector);\n\n        // Print the result of the matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Perform some operations with a new matrix\n        double[][] newData = {\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0},\n            {10.0, 11.0, 12.0}\n        };\n        RealMatrix newMatrix = MatrixUtils.createRealMatrix(newData);\n\n        // Add the new matrix to the sparse matrix\n        RealMatrix sumMatrix = sparseMatrix.add(newMatrix);\n\n        // Print the sum matrix\n        System.out.println(\"Sum of sparse matrix and new matrix:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Retrieve the sparse matrix\n        /* read */ OpenMapRealMatrix retrievedMatrix = (OpenMapRealMatrix) sparseMatrix;\n\n        // Print the retrieved matrix to verify the contents\n        System.out.println(\"Retrieved sparse matrix:\");\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.OpenMapRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize dimensions and values for the sparse matrix\n        int rows = 3;\n        int columns = 3;\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {0.0, 2.0, 0.0},\n            {0.0, 0.0, 3.0}\n        };\n\n        // Create a sparse matrix using the data\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(data);\n\n        // Retrieve the sparse matrix\n        /* read */ OpenMapRealMatrix retrievedMatrix = (OpenMapRealMatrix) sparseMatrix;\n\n        // Print the retrieved matrix to verify the contents\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}