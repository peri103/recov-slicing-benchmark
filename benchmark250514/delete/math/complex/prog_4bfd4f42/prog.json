{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a vector using MatrixUtils\n        OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(new double[]{1.0, 2.0, 3.0});\n        \n        // Create a matrix using MatrixUtils\n        RealMatrix matrix = MatrixUtils.createRealMatrix(new double[][]{\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        });\n\n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n\n        // Print the multiplied matrix\n        for (int row = 0; row < multipliedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < multipliedMatrix.getColumnDimension(); col++) {\n                System.out.print(multipliedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform operations on the vector\n        vector.setEntry(0, 10.0);\n        vector.setEntry(1, 20.0);\n        vector.setEntry(2, 30.0);\n\n        // Print the modified vector entries\n        for (int i = 0; i < vector.getDimension(); i++) {\n            System.out.println(\"Vector Entry \" + i + \": \" + vector.getEntry(i));\n        }\n\n        // Read the vector using MatrixUtils\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Print the values of the read vector to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(\"Read Vector Entry \" + i + \": \" + readVector.getEntry(i));\n        }\n\n        // Create another matrix and perform operations\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(new double[][]{\n            {2.0, 4.0, 6.0},\n            {8.0, 10.0, 12.0},\n            {14.0, 16.0, 18.0}\n        });\n\n        RealMatrix addedMatrix = matrix.add(anotherMatrix);\n\n        // Print the added matrix\n        for (int row = 0; row < addedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < addedMatrix.getColumnDimension(); col++) {\n                System.out.print(addedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a vector using MatrixUtils\n        OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(new double[]{1.0, 2.0, 3.0});\n        \n        // Read the vector using MatrixUtils\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the values of the read vector to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}