{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a new OpenMapRealVector with specified size\n        OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(3);\n        \n        // Initialize vector with some values\n        vector.setEntry(0, 1.0);\n        vector.setEntry(1, 2.0);\n        vector.setEntry(2, 3.0);\n        \n        // Write operation: createOpenMapRealVector\n        /* write */ OpenMapRealVector writeVector = MatrixUtils.createOpenMapRealVector(vector.getDimension());\n        writeVector.setSubVector(0, vector);\n        \n        // Additional unrelated code: create and manipulate an ArrayRealVector\n        ArrayRealVector arrayVector = new ArrayRealVector(3);\n        arrayVector.setEntry(0, 4.0);\n        arrayVector.setEntry(1, 5.0);\n        arrayVector.setEntry(2, 6.0);\n        \n        // Perform some operations on ArrayRealVector\n        RealVector sumVector = arrayVector.add(vector);\n        System.out.println(\"Sum of vectors: \");\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(\"Value at index \" + i + \": \" + sumVector.getEntry(i));\n        }\n        \n        // Further manipulation of OpenMapRealVector\n        writeVector.mapMultiplyToSelf(2.0);\n        System.out.println(\"After multiplication: \");\n        for (int i = 0; i < writeVector.getDimension(); i++) {\n            System.out.println(\"Value at index \" + i + \": \" + writeVector.getEntry(i));\n        }\n        \n        // Read operation: getOpenMapRealVector\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(writeVector);\n        \n        // Display the values in the read vector\n        System.out.println(\"Read vector values: \");\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(\"Value at index \" + i + \": \" + readVector.getEntry(i));\n        }\n        \n        // Additional unrelated code: further operations on ArrayRealVector\n        RealVector diffVector = arrayVector.subtract(vector);\n        System.out.println(\"Difference of vectors: \");\n        for (int i = 0; i < diffVector.getDimension(); i++) {\n            System.out.println(\"Value at index \" + i + \": \" + diffVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a new OpenMapRealVector with specified size\n        OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(3);\n        \n        // Initialize vector with some values\n        vector.setEntry(0, 1.0);\n        vector.setEntry(1, 2.0);\n        vector.setEntry(2, 3.0);\n        \n        // Write operation: createOpenMapRealVector\n        /* write */ OpenMapRealVector writeVector = MatrixUtils.createOpenMapRealVector(vector.getDimension());\n        writeVector.setSubVector(0, vector);\n        \n        // Read operation: getOpenMapRealVector\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(writeVector);\n        \n        // Display the values in the read vector\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(\"Value at index \" + i + \": \" + readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}