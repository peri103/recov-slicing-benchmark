{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix\n        double[][] data = {\n            {1, 2, 3},\n            {2, 5, 6},\n            {3, 6, 9}\n        };\n\n        // Create a symmetric matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Perform some unrelated operations to make the program complex\n        RealVector vector1 = new ArrayRealVector(new double[] {1, 2, 3});\n        RealVector vector2 = new ArrayRealVector(new double[] {4, 5, 6});\n        \n        // Add two vectors\n        RealVector resultVector = vector1.add(vector2);\n        System.out.println(\"Result of vector addition: \" + resultVector);\n\n        // Multiply the matrix with a vector\n        RealVector matrixVectorProduct = matrix.operate(vector1);\n        System.out.println(\"Matrix-vector product: \" + matrixVectorProduct);\n\n        // Perform more operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix multipliedMatrix = matrix.multiply(identityMatrix);\n        System.out.println(\"Multiplied matrix: \");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the symmetric matrix using MatrixUtils\n        /* read */ RealMatrix symmetricMatrix = MatrixUtils.getSymmetricMatrix(matrix);\n\n        // Print the symmetric matrix\n        System.out.println(\"Symmetric matrix: \");\n        for (int i = 0; i < symmetricMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < symmetricMatrix.getColumnDimension(); j++) {\n                System.out.print(symmetricMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix\n        double[][] data = {\n            {1, 2, 3},\n            {2, 5, 6},\n            {3, 6, 9}\n        };\n\n        // Create a symmetric matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Read the symmetric matrix using MatrixUtils\n        /* read */ RealMatrix symmetricMatrix = MatrixUtils.getSymmetricMatrix(matrix);\n\n        // Print the symmetric matrix\n        for (int i = 0; i < symmetricMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < symmetricMatrix.getColumnDimension(); j++) {\n                System.out.print(symmetricMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}