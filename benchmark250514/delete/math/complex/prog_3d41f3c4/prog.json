{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0}; // Example data for the vector\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n\n        // Additional complex code\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealVector columnVector = matrix.getColumnVector(1);\n\n        for (int i = 0; i < columnVector.getDimension(); i++) {\n            columnVector.setEntry(i, columnVector.getEntry(i) * 2);\n        }\n\n        RealVector sumVector = vector.add(columnVector);\n\n        double norm = sumVector.getNorm();\n        System.out.println(\"Norm of sum vector: \" + norm);\n\n        // Some unrelated operations\n        double[] newData = {10.0, 20.0, 30.0};\n        RealVector newVector = MatrixUtils.createRealVector(newData);\n        RealVector differenceVector = newVector.subtract(columnVector);\n        System.out.println(\"Difference Vector: \" + differenceVector);\n\n        // More operations\n        double dotProduct = newVector.dotProduct(columnVector);\n        System.out.println(\"Dot Product: \" + dotProduct);\n\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector);\n        System.out.println(\"Vector: \" + readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0}; // Example data for the vector\n        /* write */ RealVector vector = MatrixUtils.createSparseRealVector(data);\n        /* read */ RealVector readVector = MatrixUtils.getSparseRealVector(vector);\n        \n        System.out.println(\"Vector: \" + readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}