{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the vector with some values\n        double[] values = {1.0, 2.0, 3.0};\n        \n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(values);\n        \n        // Perform some unrelated computations\n        double[] randomValues = new double[5];\n        Random random = new Random();\n        for (int i = 0; i < randomValues.length; i++) {\n            randomValues[i] = random.nextDouble() * 10;\n        }\n        \n        OpenMapRealVector randomVector = new OpenMapRealVector(randomValues);\n        RealVector sumVector = vector.add(randomVector);\n        \n        // Print the sum of vectors\n        System.out.println(\"Sum of vectors:\");\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(sumVector.getEntry(i));\n        }\n        \n        // Perform some operations on the original vector\n        double scaleFactor = 2.0;\n        OpenMapRealVector scaledVector = vector.mapMultiply(scaleFactor);\n        \n        // Print the scaled vector\n        System.out.println(\"Scaled vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n        \n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the values to verify\n        System.out.println(\"Original vector:\");\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n        \n        // Perform additional operations\n        double dotProduct = vector.dotProduct(randomVector);\n        System.out.println(\"Dot product of original and random vectors: \" + dotProduct);\n        \n        RealVector unitVector = vector.unitVector();\n        System.out.println(\"Unit vector:\");\n        for (int i = 0; i < unitVector.getDimension(); i++) {\n            System.out.println(unitVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the vector with some values\n        double[] values = {1.0, 2.0, 3.0};\n        \n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(values);\n        \n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n        \n        // Print the values to verify\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.println(readVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    }
}