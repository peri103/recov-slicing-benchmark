{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Create another matrix and perform some operations\n        double[][] otherData = {{5.0, 6.0}, {7.0, 8.0}};\n        RealMatrix otherMatrix = MatrixUtils.createRealMatrix(otherData);\n        \n        // Add the two matrices\n        RealMatrix sumMatrix = matrix.add(otherMatrix);\n        System.out.println(\"Sum Matrix:\");\n        for (int row = 0; row < sumMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < sumMatrix.getColumnDimension(); col++) {\n                System.out.print(sumMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Create a vector and perform multiplication\n        double[] vectorData = {1.0, 2.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        RealVector resultVector = matrix.operate(vector);\n        \n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Some unrelated operations\n        double[][] unrelatedData = {{9.0, 10.0}, {11.0, 12.0}};\n        RealMatrix unrelatedMatrix = MatrixUtils.createRealMatrix(unrelatedData);\n        RealMatrix productMatrix = unrelatedMatrix.multiply(otherMatrix);\n        \n        System.out.println(\"Product Matrix:\");\n        for (int row = 0; row < productMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < productMatrix.getColumnDimension(); col++) {\n                System.out.print(productMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ RealMatrix readMatrix = MatrixUtils.getRealMatrix(matrix.getData());\n        \n        System.out.println(\"Read Matrix:\");\n        for (int row = 0; row < readMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < readMatrix.getColumnDimension(); col++) {\n                System.out.print(readMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        /* read */ RealMatrix readMatrix = MatrixUtils.getRealMatrix(matrix.getData());\n        \n        System.out.println(\"Read Matrix:\");\n        for (int row = 0; row < readMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < readMatrix.getColumnDimension(); col++) {\n                System.out.print(readMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRealMatrix"
    }
}