{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix\n        double[][] data = {\n            {1, 2, 3},\n            {2, 4, 5},\n            {3, 5, 6}\n        };\n        \n        // Create a symmetric matrix using the write method\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n        \n        // Additional operations with matrices and vectors\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(new double[][] {\n            {7, 8, 9},\n            {8, 10, 11},\n            {9, 11, 12}\n        });\n        \n        RealMatrix sumMatrix = symmetricMatrix.add(anotherMatrix);\n        \n        RealVector vector = new ArrayRealVector(new double[] {1, 2, 3});\n        RealVector resultVector = sumMatrix.operate(vector);\n        \n        System.out.println(\"Resulting vector after matrix operation:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Perform some unrelated calculations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n        \n        // Read the symmetric matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n        \n        // Print the read matrix to verify\n        System.out.println(\"Read symmetric matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // More complex operations\n        double determinant = readMatrix.getDeterminant();\n        System.out.println(\"Determinant of the read matrix: \" + determinant);\n        \n        RealMatrix inverseMatrix = MatrixUtils.inverse(readMatrix);\n        System.out.println(\"Inverse of the read matrix:\");\n        for (int i = 0; i < inverseMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < inverseMatrix.getColumnDimension(); j++) {\n                System.out.print(inverseMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix\n        double[][] data = {\n            {1, 2, 3},\n            {2, 4, 5},\n            {3, 5, 6}\n        };\n        \n        // Create a symmetric matrix using the write method\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n        \n        // Read the symmetric matrix using the read method\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n        \n        // Print the read matrix to verify\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}