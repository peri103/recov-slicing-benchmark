{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix using MatrixUtils\n        double[][] data = {\n            {1, 2, 3},\n            {2, 4, 5},\n            {3, 5, 6}\n        };\n\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n\n        // Perform operations on the matrix\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix resultMatrix = symmetricMatrix.multiply(identityMatrix);\n        \n        // Create a vector and perform operations\n        double[] vectorData = {1, 2, 3};\n        RealVector vector = new ArrayRealVector(vectorData);\n        RealVector transformedVector = resultMatrix.operate(vector);\n\n        // Complex operation: sum of elements in the transformed vector\n        double sum = 0;\n        for (int i = 0; i < transformedVector.getDimension(); i++) {\n            sum += transformedVector.getEntry(i);\n        }\n        System.out.println(\"Sum of transformed vector elements: \" + sum);\n        \n        // Add more matrix operations\n        RealMatrix transposedMatrix = symmetricMatrix.transpose();\n        RealMatrix addedMatrix = symmetricMatrix.add(transposedMatrix);\n\n        // Further operations with matrices\n        double[][] additionalData = {\n            {0, 1, 2},\n            {1, 0, 2},\n            {2, 2, 0}\n        };\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(additionalData);\n        RealMatrix combinedMatrix = addedMatrix.add(anotherMatrix);\n\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n\n        // Display the matrix read from the symmetric matrix\n        System.out.println(\"Read Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Display the combined matrix\n        System.out.println(\"Combined Matrix:\");\n        for (int i = 0; i < combinedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < combinedMatrix.getColumnDimension(); j++) {\n                System.out.print(combinedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix using MatrixUtils\n        double[][] data = {\n            {1, 2, 3},\n            {2, 4, 5},\n            {3, 5, 6}\n        };\n\n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createSymmetricMatrix(data);\n\n        /* read */ RealMatrix readMatrix = MatrixUtils.getSymmetricMatrix(symmetricMatrix);\n\n        // Display the matrix read from the symmetric matrix\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}