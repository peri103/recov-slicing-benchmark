{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a matrix\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Create a RealMatrix from the 2D array\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create a RealVector using createColumnRealVector\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{5.0, 6.0});\n        \n        // Perform some unrelated operations on the matrix\n        double[][] additionalData = {{7.0, 8.0}, {9.0, 10.0}};\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalData);\n        RealMatrix resultMatrix = matrix.add(additionalMatrix);\n        \n        // Print the result of the matrix addition\n        System.out.println(\"Result of matrix addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Set the column vector to the matrix at column index 1\n        matrix.setColumnVector(1, columnVector);\n        \n        // Perform some unrelated operations using the matrix\n        double[] rowSum = new double[matrix.getRowDimension()];\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            rowSum[i] = matrix.getRowVector(i).getSum();\n        }\n        \n        // Print the sum of each row\n        System.out.println(\"Sum of each row:\");\n        for (double sum : rowSum) {\n            System.out.println(sum);\n        }\n        \n        // Retrieve the column vector from the matrix\n        /* read */ RealVector retrievedVector = matrix.getColumnVector(1);\n        \n        // Print the retrieved vector to verify\n        System.out.println(\"Retrieved column vector:\");\n        System.out.println(retrievedVector);\n        \n        // Perform some more unrelated operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a matrix\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Create a RealMatrix from the 2D array\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create a RealVector using createColumnRealVector\n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(new double[]{5.0, 6.0});\n        \n        // Set the column vector to the matrix at column index 1\n        matrix.setColumnVector(1, columnVector);\n        \n        // Retrieve the column vector from the matrix\n        /* read */ RealVector retrievedVector = matrix.getColumnVector(1);\n        \n        // Print the retrieved vector to verify\n        System.out.println(retrievedVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}