{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = { { 1 }, { 2 }, { 3 } };\n        \n        // Create a row matrix\n        RealMatrix rowMatrix = MatrixUtils.createRowRealMatrix(new double[] { 4, 5, 6 });\n        \n        // Perform some operations on the row matrix\n        RealMatrix multipliedMatrix = rowMatrix.scalarMultiply(2);\n        \n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(new double[] { 7, 8, 9 });\n        RealVector addedVector = vector.mapAdd(1.0);\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        // Perform some operations on the vector\n        RealVector subtractedVector = vector.mapSubtract(3.0);\n        \n        // Output the results of vector operations\n        System.out.println(\"Added Vector:\");\n        for (int i = 0; i < addedVector.getDimension(); i++) {\n            System.out.println(addedVector.getEntry(i));\n        }\n        \n        System.out.println(\"Subtracted Vector:\");\n        for (int i = 0; i < subtractedVector.getDimension(); i++) {\n            System.out.println(subtractedVector.getEntry(i));\n        }\n        \n        // Perform operations on multiplied matrix\n        RealMatrix transposedMatrix = multipliedMatrix.transpose();\n        \n        // Output the transposed matrix\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ RealMatrix columnMatrix = MatrixUtils.getColumnRealMatrix(matrix, 0);\n        \n        // Output the column matrix\n        System.out.println(\"Column Matrix:\");\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = { { 1 }, { 2 }, { 3 } };\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        /* read */ RealMatrix columnMatrix = MatrixUtils.getColumnRealMatrix(matrix, 0);\n        \n        // Output the column matrix\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}