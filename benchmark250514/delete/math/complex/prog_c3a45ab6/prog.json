{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a sparse real vector using MatrixUtils\n        double[] data = {1.0, 0.0, 3.0, 0.0, 5.0};\n        /* write */ RealVector sparseVector = MatrixUtils.createSparseRealVector(data);\n\n        // Perform some unrelated operations with matrices\n        double[][] matrixData = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n\n        // Print the original and transposed matrices\n        System.out.println(\"Original Matrix:\");\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                System.out.print(matrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Some operations with vectors\n        RealVector anotherVector = MatrixUtils.createRealVector(new double[] {2.0, 4.0, 6.0, 8.0, 10.0});\n        RealVector sumVector = sparseVector.add(anotherVector);\n\n        // Print the sum of vectors\n        System.out.println(\"Sum Vector:\");\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.print(sumVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Read the sparse real vector using MatrixUtils\n        /* read */ RealVector readSparseVector = MatrixUtils.getSparseRealVector(sparseVector);\n\n        // Print the read sparse vector to verify\n        System.out.println(\"Read Sparse Vector:\");\n        for (int i = 0; i < readSparseVector.getDimension(); i++) {\n            System.out.print(readSparseVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a sparse real vector using MatrixUtils\n        double[] data = {1.0, 0.0, 3.0, 0.0, 5.0};\n        /* write */ RealVector sparseVector = MatrixUtils.createSparseRealVector(data);\n\n        // Read the sparse real vector using MatrixUtils\n        /* read */ RealVector readSparseVector = MatrixUtils.getSparseRealVector(sparseVector);\n\n        // Print the read sparse vector to verify\n        System.out.println(readSparseVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseRealVector"
    }
}