{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(3, 1);\n        \n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(data);\n        matrix.setColumnVector(0, columnVector);\n\n        // Additional complex operations\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix complexMatrix = new Array2DRowRealMatrix(matrixData);\n        \n        // Perform matrix multiplication\n        RealMatrix resultMatrix = complexMatrix.multiply(matrix);\n\n        // Calculate the norm of the result vector\n        double norm = resultMatrix.getColumnVector(0).getNorm();\n        System.out.println(\"Norm of the result vector: \" + norm);\n\n        // Create another vector and perform addition\n        RealVector anotherVector = MatrixUtils.createColumnRealVector(new double[]{10.0, 20.0, 30.0});\n        RealVector sumVector = columnVector.add(anotherVector);\n        System.out.println(\"Sum Vector: \" + sumVector);\n\n        // Extract the original column vector\n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        \n        System.out.println(\"Read Column Vector: \" + readColumnVector);\n\n        // More operations\n        RealVector scaledVector = readColumnVector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(3, 1);\n        \n        /* write */ RealVector columnVector = MatrixUtils.createColumnRealVector(data);\n        matrix.setColumnVector(0, columnVector);\n        \n        /* read */ RealVector readColumnVector = matrix.getColumnVector(0);\n        \n        System.out.println(readColumnVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealVector"
    }
}