{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using the write method\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(3, 3);\n        \n        // Perform some operations on the matrix\n        sparseMatrix.setEntry(0, 0, 1.0);\n        sparseMatrix.setEntry(1, 1, 2.0);\n        sparseMatrix.setEntry(2, 2, 3.0);\n        \n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector resultVector = sparseMatrix.operate(vector);\n        \n        // Print the result of vector operations\n        System.out.println(\"Result of matrix-vector operation: \" + resultVector);\n        \n        // Perform additional matrix operations\n        RealMatrix transposedMatrix = sparseMatrix.transpose();\n        double determinant = transposedMatrix.getDeterminant();\n        \n        // Print the determinant of the transposed matrix\n        System.out.println(\"Determinant of transposed matrix: \" + determinant);\n        \n        // Read the sparse matrix using the read method\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n        \n        // Print the retrieved matrix to verify correctness\n        System.out.println(\"Retrieved sparse matrix: \" + retrievedMatrix);\n        \n        // Additional operations to make the program more complex\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix multipliedMatrix = retrievedMatrix.multiply(identityMatrix);\n        \n        // Print the multiplied matrix\n        System.out.println(\"Multiplied matrix: \" + multipliedMatrix);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using the write method\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(3, 3);\n        \n        // Read the sparse matrix using the read method\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getSparseMatrix(sparseMatrix);\n        \n        // Print the retrieved matrix to verify correctness\n        System.out.println(retrievedMatrix);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    }
}