{
    "files": {
        "MatrixHandler.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixHandler {\n    private RealMatrix matrix;\n\n    public void createMatrix(double[][] data) {\n        /* write */ matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n    }\n\n    public RealMatrix getMatrix() {\n        return matrix;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String title;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String title) {\n        this.title = title;\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize matrix data\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Create and handle matrix\n        MatrixHandler matrixHandler = new MatrixHandler();\n        matrixHandler.createMatrix(data);\n        \n        // Create students and courses\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n        \n        Course math = new Course(\"Math\");\n        Course science = new Course(\"Science\");\n        \n        // Enroll students in courses\n        math.enrollStudent(alice);\n        math.enrollStudent(bob);\n        \n        science.enrollStudent(alice);\n        \n        // Display enrolled students in Math course\n        System.out.println(\"Students enrolled in Math:\");\n        for (Student student : math.getStudents()) {\n            System.out.println(student.getName());\n        }\n        \n        // Read the matrix back using the MatrixHandler class\n        RealMatrix matrix = matrixHandler.getMatrix();\n        /* read */ double[][] readData = matrix.getData();\n        \n        // Output the read data to verify\n        System.out.println(\"Original Matrix:\");\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArray2DRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArray2DRowRealMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to use with the matrix\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Create a RealMatrix using the MatrixUtils class\n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        // Read the matrix back using the MatrixUtils class\n        /* read */ double[][] readData = matrix.getData();\n        \n        // Output the read data to verify\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.SingularValueDecomposition;\nimport org.apache.commons.math3.linear.DecompositionSolver;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to use with the matrix\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Create a RealMatrix using the MatrixUtils class\n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Decompose the matrix using Singular Value Decomposition\n        SingularValueDecomposition svd = new SingularValueDecomposition(matrix);\n        DecompositionSolver solver = svd.getSolver();\n        \n        // Create another matrix for solving Ax = b\n        double[][] bData = {{5.0}, {6.0}};\n        RealMatrix bMatrix = new Array2DRowRealMatrix(bData);\n        \n        // Solve the system of equations\n        RealMatrix solution = solver.solve(bMatrix);\n        System.out.println(\"Solution Matrix:\");\n        for (int i = 0; i < solution.getRowDimension(); i++) {\n            for (int j = 0; j < solution.getColumnDimension(); j++) {\n                System.out.print(solution.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Read the matrix back using the MatrixUtils class\n        /* read */ double[][] readData = matrix.getData();\n        \n        // Output the read data to verify\n        System.out.println(\"Original Matrix:\");\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}