{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    private RealMatrix triangularMatrix;\n\n    public void createTriangularMatrix(double[][] data) {\n        /* write */ triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n    }\n\n    public RealMatrix getTriangularMatrix() {\n        return triangularMatrix;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Matrix operations\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {2.0, 3.0, 0.0},\n            {4.0, 5.0, 6.0}\n        };\n        MatrixOperations matrixOps = new MatrixOperations();\n        matrixOps.createTriangularMatrix(data);\n\n        // Course operations\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\", 20);\n        Student student2 = new Student(\"Bob\", 22);\n        course.enrollStudent(student1);\n        course.enrollStudent(student2);\n\n        // Print enrolled students\n        System.out.println(\"Enrolled students in \" + course.getCourseName() + \":\");\n        for (Student student : course.getEnrolledStudents()) {\n            System.out.println(student.getName() + \", Age: \" + student.getAge());\n        }\n\n        // Retrieve and print the triangular matrix\n        /* read */ RealMatrix retrievedMatrix = matrixOps.getTriangularMatrix();\n        System.out.println(\"Retrieved Triangular Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {2.0, 3.0, 0.0},\n            {4.0, 5.0, 6.0}\n        };\n        \n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n        \n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n        \n        System.out.println(\"Retrieved Triangular Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {2.0, 3.0, 0.0},\n            {4.0, 5.0, 6.0}\n        };\n        \n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n        \n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(new double[] {1.0, 2.0, 3.0});\n        RealVector resultVector = triangularMatrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Perform matrix addition with another matrix\n        double[][] additionalData = {\n            {0.0, 0.0, 0.0},\n            {0.0, 1.0, 0.0},\n            {0.0, 0.0, 1.0}\n        };\n        RealMatrix additionalMatrix = MatrixUtils.createRealMatrix(additionalData);\n        RealMatrix sumMatrix = triangularMatrix.add(additionalMatrix);\n        System.out.println(\"Sum of matrices:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform some unrelated calculations\n        double[] array = {2.0, 4.0, 6.0, 8.0, 10.0};\n        double sum = 0.0;\n        for (double num : array) {\n            sum += num;\n        }\n        System.out.println(\"Sum of array elements: \" + sum);\n        \n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n        \n        System.out.println(\"Retrieved Triangular Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}