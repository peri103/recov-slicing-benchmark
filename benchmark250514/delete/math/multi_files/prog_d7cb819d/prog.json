{
    "files": {
        "MatrixHandler.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixHandler {\n    private RealMatrix sparseMatrix;\n\n    public void createSparseMatrix(double[][] data) {\n        /* write */ sparseMatrix = MatrixUtils.createSparseMatrix(data.length, data[0].length, data);\n    }\n\n    public RealMatrix getSparseMatrix() {\n        return sparseMatrix;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private MatrixHandler matrixHandler = new MatrixHandler();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void createSparseMatrix(double[][] data) {\n        matrixHandler.createSparseMatrix(data);\n    }\n\n    public RealMatrix getSparseMatrix() {\n        return matrixHandler.getSparseMatrix();\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a course and a student\n        Course course = new Course(\"Mathematics\");\n        Student student = new Student(\"Alice\");\n\n        // Enroll the student in the course\n        course.enrollStudent(student);\n\n        // Create a sparse matrix for the student\n        double[][] sparseData = {\n            {0, 0, 0},\n            {0, 1, 0},\n            {0, 0, 0}\n        };\n        student.createSparseMatrix(sparseData);\n\n        // Retrieve and print the sparse matrix\n        /* read */ RealMatrix readSparseMatrix = student.getSparseMatrix();\n        System.out.println(\"Sparse Matrix for \" + student.getName() + \":\");\n        for (int i = 0; i < readSparseMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readSparseMatrix.getColumnDimension(); j++) {\n                System.out.print(readSparseMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSparseMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSparseMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        double[][] data = {\n            {0, 0, 0},\n            {0, 1, 0},\n            {0, 0, 0}\n        };\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(data.length, data[0].length, data);\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */ RealMatrix readSparseMatrix = sparseMatrix; // Directly use the sparseMatrix as there's no getSparseMatrix method\n\n        // Print the read sparse matrix\n        for (int i = 0; i < readSparseMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readSparseMatrix.getColumnDimension(); j++) {\n                System.out.print(readSparseMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a sparse matrix using MatrixUtils\n        double[][] sparseData = {\n            {0, 0, 0},\n            {0, 1, 0},\n            {0, 0, 0}\n        };\n        /* write */ RealMatrix sparseMatrix = MatrixUtils.createSparseMatrix(sparseData.length, sparseData[0].length, sparseData);\n\n        // Create a dense matrix for additional operations\n        double[][] denseData = {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        };\n        RealMatrix denseMatrix = new Array2DRowRealMatrix(denseData);\n\n        // Perform matrix addition\n        RealMatrix resultMatrix = denseMatrix.add(sparseMatrix);\n\n        // Create a vector and perform multiplication with the dense matrix\n        double[] vectorData = {1, 2, 3};\n        RealVector vector = new ArrayRealVector(vectorData);\n        RealVector resultVector = denseMatrix.operate(vector);\n\n        // Print the result of matrix addition\n        System.out.println(\"Result Matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Print the result of vector multiplication\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Read the sparse matrix using MatrixUtils\n        /* read */ RealMatrix readSparseMatrix = sparseMatrix; // Directly use the sparseMatrix as there's no getSparseMatrix method\n\n        // Print the read sparse matrix\n        System.out.println(\"Read Sparse Matrix:\");\n        for (int i = 0; i < readSparseMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readSparseMatrix.getColumnDimension(); j++) {\n                System.out.print(readSparseMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}