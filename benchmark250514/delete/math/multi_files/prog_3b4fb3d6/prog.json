{
    "files": {
        "VectorOperations.java": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class VectorOperations {\n    private RealVector vector;\n\n    public VectorOperations(double[] data) {\n        /* write */ this.vector = MatrixUtils.createArrayRealVector(data);\n    }\n\n    public RealVector getVector() {\n        return vector;\n    }\n\n    public double calculateNorm() {\n        return vector.getNorm();\n    }\n\n    public double calculateDotProduct(RealVector otherVector) {\n        return vector.dotProduct(otherVector);\n    }\n}\n",
        "MatrixOperations.java": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(double[][] data) {\n        this.matrix = new Array2DRowRealMatrix(data);\n    }\n\n    public RealVector multiplyWithVector(RealVector vector) {\n        return matrix.operate(vector);\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] vectorData = {1.0, 2.0, 3.0};\n        VectorOperations vectorOps = new VectorOperations(vectorData);\n\n        double norm = vectorOps.calculateNorm();\n        System.out.println(\"Norm of the vector: \" + norm);\n\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        MatrixOperations matrixOps = new MatrixOperations(matrixData);\n\n        RealVector resultVector = matrixOps.multiplyWithVector(vectorOps.getVector());\n        System.out.println(\"Result of matrix-vector multiplication: \" + resultVector);\n\n        /* read */ RealVector readVector = vectorOps.getVector();\n        double dotProduct = vectorOps.calculateDotProduct(readVector);\n        System.out.println(\"Dot product of vector with itself: \" + dotProduct);\n\n        double[] additionalData = {4.0, 5.0, 6.0};\n        VectorOperations additionalVectorOps = new VectorOperations(additionalData);\n        double distance = readVector.getDistance(additionalVectorOps.getVector());\n        System.out.println(\"Distance between vectors: \" + distance);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n        \n        /* read */ RealVector readVector = MatrixUtils.getArrayRealVector(vector);\n        \n        System.out.println(readVector);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a data array for the RealVector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create a RealVector using MatrixUtils\n        /* write */ RealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Perform operations on the RealVector\n        double norm = vector.getNorm();\n        System.out.println(\"Norm of the vector: \" + norm);\n\n        // Create a RealMatrix using Array2DRowRealMatrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n\n        // Perform matrix multiplication with the vector\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication: \" + resultVector);\n\n        // Read the RealVector using MatrixUtils\n        /* read */ RealVector readVector = MatrixUtils.getArrayRealVector(vector);\n\n        // Perform operations on the read RealVector\n        double dotProduct = readVector.dotProduct(vector);\n        System.out.println(\"Dot product of vector with itself: \" + dotProduct);\n\n        // Adding some unrelated code to increase complexity\n        double[] additionalData = {4.0, 5.0, 6.0};\n        RealVector additionalVector = MatrixUtils.createArrayRealVector(additionalData);\n        RealVector sumVector = vector.add(additionalVector);\n        System.out.println(\"Sum of vectors: \" + sumVector);\n\n        // Calculate the distance between two vectors\n        double distance = vector.getDistance(additionalVector);\n        System.out.println(\"Distance between vectors: \" + distance);\n    }\n}"
}