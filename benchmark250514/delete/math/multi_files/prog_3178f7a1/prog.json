{
    "files": {
        "SymmetricMatrixWrapper.java": "import org.apache.commons.math3.linear.SymmetricMatrix;\n\npublic class SymmetricMatrixWrapper {\n    private SymmetricMatrix matrix;\n\n    public SymmetricMatrixWrapper(int size) {\n        this.matrix = new SymmetricMatrix(size);\n    }\n\n    public void setMatrixEntry(int row, int col, double value) {\n        /* write */ matrix.setEntry(row, col, value);\n    }\n\n    public double getMatrixEntry(int row, int col) {\n        return matrix.getEntry(row, col);\n    }\n}",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Double> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(double grade) {\n        grades.add(grade);\n    }\n\n    public List<Double> getGrades() {\n        return grades;\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Main.java": "import org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a symmetric matrix wrapper\n        SymmetricMatrixWrapper matrixWrapper = new SymmetricMatrixWrapper(3);\n\n        // Set an entry in the symmetric matrix\n        matrixWrapper.setMatrixEntry(0, 1, 5.0);\n\n        // Create a course and add students\n        Course course = new Course(\"Advanced Mathematics\");\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n        course.addStudent(alice);\n        course.addStudent(bob);\n\n        // Add grades to students\n        alice.addGrade(85.5);\n        bob.addGrade(90.0);\n\n        // Process additional matrix operations\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(3, 3);\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                additionalMatrix.setEntry(i, j, i + j);\n            }\n        }\n\n        RealMatrix resultMatrix = additionalMatrix.add(additionalMatrix);\n        double sum = 0.0;\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                sum += resultMatrix.getEntry(i, j);\n            }\n        }\n        System.out.println(\"Sum of entries in result matrix: \" + sum);\n\n        // Read the value from the symmetric matrix\n        /* read */ double matrixValue = matrixWrapper.getMatrixEntry(0, 1);\n        System.out.println(\"Value from symmetric matrix: \" + matrixValue);\n\n        // Print student grades\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Grades for \" + student.getName() + \": \" + student.getGrades());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.SymmetricMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.SymmetricMatrix",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.SymmetricMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the symmetric matrix with a size of 3x3\n        SymmetricMatrix matrix = new SymmetricMatrix(3);\n\n        // Write a value to the matrix at position (0, 1)\n        /* write */ matrix.setEntry(0, 1, 5.0);\n\n        // Read the value from the matrix at position (0, 1)\n        /* read */ double value = matrix.getEntry(0, 1);\n\n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.SymmetricMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the symmetric matrix with a size of 3x3\n        SymmetricMatrix matrix = new SymmetricMatrix(3);\n\n        // Initialize another matrix to perform additional operations\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(3, 3);\n\n        // Fill the additional matrix with some values\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                additionalMatrix.setEntry(i, j, i + j);\n            }\n        }\n\n        // Perform a matrix addition operation\n        RealMatrix resultMatrix = additionalMatrix.add(additionalMatrix);\n\n        // Write a value to the symmetric matrix at position (0, 1)\n        /* write */ matrix.setEntry(0, 1, 5.0);\n\n        // Perform some operations on the result matrix\n        double sum = 0.0;\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                sum += resultMatrix.getEntry(i, j);\n            }\n        }\n\n        // Print the sum of entries in the result matrix\n        System.out.println(\"Sum of entries in result matrix: \" + sum);\n\n        // Read the value from the symmetric matrix at position (0, 1)\n        /* read */ double value = matrix.getEntry(0, 1);\n\n        // Print the value read from the symmetric matrix\n        System.out.println(\"Value from symmetric matrix: \" + value);\n\n        // Perform additional operations on the symmetric matrix\n        double diagonalSum = 0.0;\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            diagonalSum += matrix.getEntry(i, i);\n        }\n\n        // Print the sum of diagonal entries in the symmetric matrix\n        System.out.println(\"Sum of diagonal entries in symmetric matrix: \" + diagonalSum);\n    }\n}"
}