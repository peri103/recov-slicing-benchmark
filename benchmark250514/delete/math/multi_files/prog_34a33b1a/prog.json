{
    "files": {
        "VectorOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class VectorOperations {\n    private OpenMapRealVector vector;\n\n    public VectorOperations(double[] data) {\n        /* write */ this.vector = MatrixUtils.createOpenMapRealVector(data);\n    }\n\n    public RealVector addVector(RealVector otherVector) {\n        return vector.add(otherVector);\n    }\n\n    public double dotProduct(RealVector otherVector) {\n        return vector.dotProduct(otherVector);\n    }\n\n    public OpenMapRealVector getVector() {\n        return vector;\n    }\n}",
        "Student.java": "public class Student {\n    private String name;\n    private VectorOperations vectorOperations;\n\n    public Student(String name, double[] initialData) {\n        this.name = name;\n        this.vectorOperations = new VectorOperations(initialData);\n    }\n\n    public double calculateDotProduct(RealVector otherVector) {\n        return vectorOperations.dotProduct(otherVector);\n    }\n\n    public RealVector addVectors(RealVector otherVector) {\n        return vectorOperations.addVector(otherVector);\n    }\n\n    public OpenMapRealVector getStudentVector() {\n        return vectorOperations.getVector();\n    }\n}",
        "Main.java": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] initialData = {1.0, 2.0, 3.0};\n        Student student = new Student(\"Bob\", initialData);\n\n        ArrayRealVector unrelatedVector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector sumVector = student.addVectors(unrelatedVector);\n        System.out.println(\"Sum Vector: \" + sumVector);\n\n        double dotProduct = student.calculateDotProduct(unrelatedVector);\n        System.out.println(\"Dot Product: \" + dotProduct);\n\n        // Read the OpenMapRealVector using the read method\n        /* read */ OpenMapRealVector readVector = student.getStudentVector();\n\n        // Print the vector to verify the correct value is read\n        System.out.println(\"Read Vector: \" + readVector);\n\n        ArrayRealVector anotherVector = new ArrayRealVector(new double[]{7.0, 8.0, 9.0});\n        RealVector combinedVector = anotherVector.add(readVector);\n        System.out.println(\"Combined Vector: \" + combinedVector);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an OpenMapRealVector using the write method\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(new double[]{1.0, 2.0, 3.0});\n\n        // Read the OpenMapRealVector using the read method\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Print the vector to verify the correct value is read\n        System.out.println(readVector);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an OpenMapRealVector using the write method\n        /* write */ OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(new double[]{1.0, 2.0, 3.0});\n\n        // Perform some unrelated operations\n        ArrayRealVector unrelatedVector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector sumVector = vector.add(unrelatedVector);\n        System.out.println(\"Sum Vector: \" + sumVector);\n\n        double dotProduct = unrelatedVector.dotProduct(vector);\n        System.out.println(\"Dot Product: \" + dotProduct);\n\n        // More unrelated operations\n        for (int i = 0; i < unrelatedVector.getDimension(); i++) {\n            unrelatedVector.setEntry(i, unrelatedVector.getEntry(i) * 2);\n        }\n        System.out.println(\"Modified Unrelated Vector: \" + unrelatedVector);\n\n        // Read the OpenMapRealVector using the read method\n        /* read */ OpenMapRealVector readVector = MatrixUtils.getOpenMapRealVector(vector);\n\n        // Print the vector to verify the correct value is read\n        System.out.println(\"Read Vector: \" + readVector);\n\n        // Additional operations\n        ArrayRealVector anotherVector = new ArrayRealVector(new double[]{7.0, 8.0, 9.0});\n        RealVector combinedVector = anotherVector.add(readVector);\n        System.out.println(\"Combined Vector: \" + combinedVector);\n    }\n}"
}