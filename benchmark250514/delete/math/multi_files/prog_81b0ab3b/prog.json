{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(int size) {\n        /* write */ this.matrix = MatrixUtils.createIdentityMatrix(size);\n    }\n\n    public RealVector multiplyWithVector(double[] vectorData) {\n        RealVector vector = new ArrayRealVector(vectorData);\n        return matrix.operate(vector);\n    }\n\n    public RealMatrix getMatrix() {\n        return matrix;\n    }\n}\n",
        "VectorOperations.java": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class VectorOperations {\n    private RealVector vector;\n\n    public VectorOperations(double[] data) {\n        this.vector = new ArrayRealVector(data);\n    }\n\n    public RealVector scaleVector(double scalar) {\n        return vector.mapMultiply(scalar);\n    }\n\n    public RealVector addVectors(RealVector otherVector) {\n        return vector.add(otherVector);\n    }\n\n    public RealVector getVector() {\n        return vector;\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize matrix operations\n        MatrixOperations matrixOps = new MatrixOperations(3);\n\n        // Initialize vector operations\n        VectorOperations vectorOps = new VectorOperations(new double[]{1, 2, 3});\n\n        // Multiply matrix by vector\n        RealVector resultVector = matrixOps.multiplyWithVector(vectorOps.getVector().toArray());\n        System.out.println(\"Result of multiplying identity matrix by vector: \" + resultVector);\n\n        // Perform vector operations\n        RealVector scaledVector = vectorOps.scaleVector(2);\n        RealVector addedVector = vectorOps.addVectors(scaledVector);\n\n        System.out.println(\"Original Vector: \" + vectorOps.getVector());\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n\n        // Access the matrix from MatrixOperations\n        /* read */ RealMatrix identityMatrix = matrixOps.getMatrix();\n        double determinant = identityMatrix.getDeterminant();\n        System.out.println(\"Determinant of the identity matrix: \" + determinant);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createIdentityMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getIdentityMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix using MatrixUtils\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Read the identity matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getIdentityMatrix(identityMatrix.getRowDimension());\n\n        // Print the read matrix\n        System.out.println(readMatrix);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an identity matrix using MatrixUtils\n        /* write */ RealMatrix identityMatrix = MatrixUtils.createIdentityMatrix(3);\n\n        // Create a vector\n        RealVector vector = new ArrayRealVector(new double[]{1, 2, 3});\n\n        // Multiply the identity matrix by the vector\n        RealVector resultVector = identityMatrix.operate(vector);\n\n        // Print the result of multiplication\n        System.out.println(\"Result of multiplying identity matrix by vector: \" + resultVector);\n\n        // Perform some operations on the vector\n        RealVector scaledVector = vector.mapMultiply(2);\n        RealVector addedVector = vector.add(scaledVector);\n\n        // Print the operations results\n        System.out.println(\"Original Vector: \" + vector);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        System.out.println(\"Added Vector: \" + addedVector);\n\n        // Read the identity matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getIdentityMatrix(identityMatrix.getRowDimension());\n\n        // Calculate the determinant of the identity matrix\n        double determinant = readMatrix.getDeterminant();\n\n        // Print the determinant of the identity matrix\n        System.out.println(\"Determinant of the identity matrix: \" + determinant);\n    }\n}"
}