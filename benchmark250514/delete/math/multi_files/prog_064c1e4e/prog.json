{
    "files": {
        "DiagonalMatrixWrapper.java": "import org.apache.commons.math3.linear.DiagonalMatrix;\n\npublic class DiagonalMatrixWrapper {\n    private DiagonalMatrix matrix;\n\n    public DiagonalMatrixWrapper(int size) {\n        this.matrix = new DiagonalMatrix(size);\n    }\n\n    public void setDiagonalEntry(int index, double value) {\n        /* write */ matrix.setEntry(index, value);\n    }\n\n    public double getDiagonalEntry(int index) {\n        return matrix.getEntry(index);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        DiagonalMatrixWrapper matrixWrapper = new DiagonalMatrixWrapper(3);\n        \n        // Set a diagonal entry\n        matrixWrapper.setDiagonalEntry(1, 5.0);\n\n        // Create a course and add students\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Perform operations with the course\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student in course: \" + student.getName());\n        }\n\n        // Retrieve and print the diagonal entry\n        /* read */ double value = matrixWrapper.getDiagonalEntry(1);\n        System.out.println(\"Diagonal Matrix Value: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DiagonalMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.DiagonalMatrix",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.DiagonalMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        DiagonalMatrix matrix = new DiagonalMatrix(3);\n        /* write */ matrix.setEntry(1, 5.0);\n        /* read */ double value = matrix.getEntry(1);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.DiagonalMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        DiagonalMatrix matrix = new DiagonalMatrix(3);\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n\n        // Perform operations on identityMatrix\n        identityMatrix.setEntry(0, 1, 2.0);\n        identityMatrix.setEntry(1, 0, 3.0);\n        double identityValue = identityMatrix.getEntry(0, 1);\n        System.out.println(\"Identity Matrix Value: \" + identityValue);\n\n        // Complex operation with matrix\n        double[] diagonalValues = {1.0, 5.0, 3.0};\n        DiagonalMatrix complexMatrix = new DiagonalMatrix(diagonalValues);\n        RealMatrix multipliedMatrix = matrix.multiply(complexMatrix);\n        double multipliedValue = multipliedMatrix.getEntry(1, 1);\n        System.out.println(\"Multiplied Matrix Value: \" + multipliedValue);\n\n        // Original write operation\n        /* write */ matrix.setEntry(1, 5.0);\n\n        // Additional operations\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                matrix.setEntry(i, i + j);\n            }\n        }\n\n        // Original read operation\n        /* read */ double value = matrix.getEntry(1);\n        System.out.println(\"Diagonal Matrix Value: \" + value);\n\n        // Further operations\n        double trace = 0.0;\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            trace += matrix.getEntry(i);\n        }\n        System.out.println(\"Trace of Diagonal Matrix: \" + trace);\n    }\n}"
}