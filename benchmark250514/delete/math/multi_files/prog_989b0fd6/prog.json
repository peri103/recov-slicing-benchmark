{
    "files": {
        "VectorUtils.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class VectorUtils {\n    private ArrayRealVector vector;\n\n    public void createVector(double[] data) {\n        /* write */ vector = MatrixUtils.createArrayRealVector(data);\n    }\n\n    public ArrayRealVector getVector() {\n        return vector;\n    }\n}\n",
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixFormat;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public void createMatrix(double[][] data) {\n        matrix = MatrixUtils.createRealMatrix(data);\n    }\n\n    public void printMatrix() {\n        RealMatrixFormat formatter = new RealMatrixFormat();\n        System.out.println(\"Matrix:\");\n        System.out.println(formatter.format(matrix));\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize vector data\n        double[] vectorData = {1.0, 2.0, 3.0};\n\n        // Use VectorUtils to create and manipulate vectors\n        VectorUtils vectorUtils = new VectorUtils();\n        vectorUtils.createVector(vectorData);\n\n        // Perform operations on the vector\n        ArrayRealVector vector = vectorUtils.getVector();\n        vector.mapAddToSelf(2.0); // Add 2 to each element\n        vector.mapMultiplyToSelf(0.5); // Multiply each element by 0.5\n\n        // Initialize matrix data\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        // Use MatrixOperations to create and print matrices\n        MatrixOperations matrixOps = new MatrixOperations();\n        matrixOps.createMatrix(matrixData);\n        matrixOps.printMatrix();\n\n        // Access the original ArrayRealVector using the read method\n        /* read */ ArrayRealVector readVector = vectorUtils.getVector();\n\n        // Print the values to ensure the read method accessed the correct data\n        System.out.println(\"Read Vector:\");\n        for (double v : readVector.toArray()) {\n            System.out.println(v);\n        }\n\n        // Perform additional operations\n        ArrayRealVector anotherVector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        ArrayRealVector sumVector = readVector.add(anotherVector);\n\n        System.out.println(\"Sum Vector:\");\n        for (double v : sumVector.toArray()) {\n            System.out.println(v);\n        }\n\n        // Calculate the dot product of two vectors\n        double dotProduct = readVector.dotProduct(anotherVector);\n        System.out.println(\"Dot Product: \" + dotProduct);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArrayRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArrayRealVector"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array with some values\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Use the write method to create an ArrayRealVector\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Use the read method to access the ArrayRealVector\n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector);\n\n        // Print the values to ensure the read method accessed the correct data\n        for (double v : readVector.toArray()) {\n            System.out.println(v);\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array with some values\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Use the write method to create an ArrayRealVector\n        /* write */ ArrayRealVector vector = MatrixUtils.createArrayRealVector(data);\n\n        // Perform some operations on the vector\n        vector.mapAddToSelf(2.0); // Add 2 to each element\n        vector.mapMultiplyToSelf(0.5); // Multiply each element by 0.5\n\n        // Create a RealMatrix using MatrixUtils\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Format the matrix for printing\n        RealMatrixFormat formatter = new RealMatrixFormat();\n        System.out.println(\"Matrix:\");\n        System.out.println(formatter.format(matrix));\n\n        // Access the original ArrayRealVector using the read method\n        /* read */ ArrayRealVector readVector = MatrixUtils.getArrayRealVector(vector);\n\n        // Print the values to ensure the read method accessed the correct data\n        System.out.println(\"Read Vector:\");\n        for (double v : readVector.toArray()) {\n            System.out.println(v);\n        }\n\n        // Perform additional operations to make the program more complex\n        ArrayRealVector anotherVector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        ArrayRealVector sumVector = readVector.add(anotherVector);\n\n        System.out.println(\"Sum Vector:\");\n        for (double v : sumVector.toArray()) {\n            System.out.println(v);\n        }\n\n        // Calculate the dot product of two vectors\n        double dotProduct = readVector.dotProduct(anotherVector);\n        System.out.println(\"Dot Product: \" + dotProduct);\n    }\n}"
}