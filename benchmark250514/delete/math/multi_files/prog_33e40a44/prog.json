{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public void createDiagonalMatrix(double[] diagonal) {\n        /* write */ matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n    }\n\n    public RealMatrix getMatrix() {\n        return matrix;\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createDiagonalMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getDiagonalMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a diagonal matrix using MatrixUtils\n        double[] diagonal = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n\n        // Read the diagonal matrix using MatrixUtils\n        /* read */ double[] retrievedDiagonal = matrix.getColumn(0);\n\n        // Print the diagonal values to verify\n        for (double value : retrievedDiagonal) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize some data\n        double[] diagonal = {1.0, 2.0, 3.0};\n        double[] vectorData = {4.0, 5.0, 6.0};\n\n        // Create a diagonal matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createDiagonalMatrix(diagonal);\n\n        // Perform some unrelated matrix operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix addedMatrix = matrix.add(identityMatrix);\n        System.out.println(\"Added matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Create and manipulate a vector\n        RealVector vector = new ArrayRealVector(vectorData);\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.print(scaledVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Read the diagonal matrix using MatrixUtils\n        /* read */ double[] retrievedDiagonal = matrix.getColumn(0);\n\n        // Print the diagonal values to verify\n        System.out.println(\"Retrieved diagonal:\");\n        for (double value : retrievedDiagonal) {\n            System.out.println(value);\n        }\n\n        // Further operations using the retrieved diagonal\n        double sumOfDiagonal = 0.0;\n        for (double value : retrievedDiagonal) {\n            sumOfDiagonal += value;\n        }\n        System.out.println(\"Sum of diagonal: \" + sumOfDiagonal);\n    }\n}"
}