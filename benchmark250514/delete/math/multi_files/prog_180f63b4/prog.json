{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public void createMatrix(double[] rowData) {\n        /* write */ matrix = MatrixUtils.createRowRealMatrix(rowData);\n    }\n\n    public RealMatrix getRowMatrix(int rowIndex) {\n        return matrix.getRowMatrix(rowIndex);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private String course;\n\n    public Student(String name, int age, String course) {\n        this.name = name;\n        this.age = age;\n        this.course = course;\n    }\n\n    public void displayStudentInfo() {\n        System.out.println(\"Student Name: \" + name);\n        System.out.println(\"Age: \" + age);\n        System.out.println(\"Course: \" + course);\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        MatrixOperations matrixOps = new MatrixOperations();\n        matrixOps.createMatrix(rowData);\n\n        Student student = new Student(\"John Doe\", 20, \"Mathematics\");\n        student.displayStudentInfo();\n\n        // Perform matrix operations\n        RealMatrix anotherMatrix = MatrixUtils.createRowRealMatrix(new double[]{4.0, 5.0, 6.0});\n        RealMatrix productMatrix = matrixOps.getRowMatrix(0).multiply(anotherMatrix.transpose());\n\n        System.out.println(\"Product matrix:\");\n        for (int i = 0; i < productMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < productMatrix.getColumnDimension(); j++) {\n                System.out.print(productMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        /* read */ RealMatrix rowMatrix = matrixOps.getRowMatrix(0);\n        \n        System.out.println(\"Row matrix:\");\n        for (int i = 0; i < rowMatrix.getColumnDimension(); i++) {\n            System.out.print(rowMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        \n        /* read */ RealMatrix rowMatrix = matrix.getRowMatrix(0);\n        \n        for (int i = 0; i < rowMatrix.getColumnDimension(); i++) {\n            System.out.print(rowMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData1 = {1.0, 2.0, 3.0};\n        double[] rowData2 = {4.0, 5.0, 6.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData1);\n        \n        // Perform some unrelated operations with vectors\n        RealVector vector1 = new ArrayRealVector(rowData1);\n        RealVector vector2 = new ArrayRealVector(rowData2);\n        RealVector sumVector = vector1.add(vector2);\n        \n        System.out.println(\"Sum of vectors:\");\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.print(sumVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Perform matrix multiplication with another matrix\n        RealMatrix anotherMatrix = MatrixUtils.createRowRealMatrix(rowData2);\n        RealMatrix productMatrix = matrix.multiply(anotherMatrix.transpose());\n        \n        System.out.println(\"Product matrix:\");\n        for (int i = 0; i < productMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < productMatrix.getColumnDimension(); j++) {\n                System.out.print(productMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Additional matrix operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix addedMatrix = matrix.add(identityMatrix);\n        \n        System.out.println(\"Added matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        /* read */ RealMatrix rowMatrix = matrix.getRowMatrix(0);\n        \n        System.out.println(\"Row matrix:\");\n        for (int i = 0; i < rowMatrix.getColumnDimension(); i++) {\n            System.out.print(rowMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}"
}