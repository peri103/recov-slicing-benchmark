{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    private RealMatrix triangularMatrix;\n\n    public void createTriangularMatrix(double[][] data) {\n        /* write */ triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n    }\n\n    public RealMatrix getTriangularMatrix() {\n        return triangularMatrix;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<String> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollCourse(String course) {\n        courses.add(course);\n    }\n\n    public List<String> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with some values\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        // Use MatrixOperations to create and handle matrices\n        MatrixOperations matrixOps = new MatrixOperations();\n        matrixOps.createTriangularMatrix(data);\n\n        // Perform other unrelated operations\n        Student student = new Student(\"John Doe\");\n        student.enrollCourse(\"Mathematics\");\n        student.enrollCourse(\"Physics\");\n\n        System.out.println(\"Student: \" + student.getName());\n        System.out.println(\"Enrolled Courses: \" + student.getCourses());\n\n        // Read the triangular matrix using MatrixOperations\n        /* read */ RealMatrix readMatrix = matrixOps.getTriangularMatrix();\n\n        // Print the read matrix to verify the values\n        System.out.println(\"Read Triangular Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with some values\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        // Create a triangular matrix using MatrixUtils\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Read the triangular matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the read matrix to verify the values\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with some values\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        // Create a triangular matrix using MatrixUtils\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n        \n        // Create another matrix using Array2DRowRealMatrix\n        double[][] randomData = new double[3][3];\n        Random rand = new Random();\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                randomData[i][j] = rand.nextDouble() * 10;\n            }\n        }\n        RealMatrix randomMatrix = new Array2DRowRealMatrix(randomData);\n\n        // Perform matrix addition\n        RealMatrix sumMatrix = triangularMatrix.add(randomMatrix);\n\n        // Print the sum matrix\n        System.out.println(\"Sum Matrix:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the triangular matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the read matrix to verify the values\n        System.out.println(\"Read Triangular Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform matrix multiplication\n        RealMatrix productMatrix = triangularMatrix.multiply(randomMatrix);\n\n        // Print the product matrix\n        System.out.println(\"Product Matrix:\");\n        for (int i = 0; i < productMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < productMatrix.getColumnDimension(); j++) {\n                System.out.print(productMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}