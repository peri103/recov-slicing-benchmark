{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(double[][] data) {\n        this.matrix = MatrixUtils.createRealMatrix(data);\n    }\n\n    public void modifyRow(int rowIndex, double[] rowData) {\n        /* write */ matrix.setRowVector(rowIndex, MatrixUtils.createRowRealVector(rowData));\n    }\n\n    public RealVector getRow(int rowIndex) {\n        return matrix.getRowVector(rowIndex);\n    }\n\n    public RealMatrix addMatrix(RealMatrix otherMatrix) {\n        return matrix.add(otherMatrix);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private double[][] scores;\n\n    public Student(String name, double[][] scores) {\n        this.name = name;\n        this.scores = scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public double[][] getScores() {\n        return scores;\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] initialData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        MatrixOperations matrixOps = new MatrixOperations(initialData);\n        \n        double[] newRowData = {10.0, 11.0, 12.0};\n        matrixOps.modifyRow(0, newRowData);\n        \n        // Additional complex operations\n        double[][] anotherMatrixData = {\n            {9.0, 8.0, 7.0},\n            {6.0, 5.0, 4.0},\n            {3.0, 2.0, 1.0}\n        };\n\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherMatrixData);\n        RealMatrix resultMatrix = matrixOps.addMatrix(anotherMatrix);\n\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        Student student = new Student(\"John\", initialData);\n        System.out.println(\"Student Name: \" + student.getName());\n\n        // Finally, read the modified row vector from the matrix\n        /* read */ RealVector readVector = matrixOps.getRow(0);\n        System.out.println(\"Modified row vector:\");\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.print(readVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        double[] rowData = {10.0, 11.0, 12.0};\n        /* write */ matrix.setRowVector(0, MatrixUtils.createRowRealVector(rowData));\n        \n        /* read */ RealVector vector = matrix.getRowVector(0);\n        System.out.println(vector);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        \n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n        \n        double[] rowData = {10.0, 11.0, 12.0};\n        /* write */ matrix.setRowVector(0, MatrixUtils.createRowRealVector(rowData));\n        \n        // Additional complex operations\n        double[][] anotherMatrixData = {\n            {9.0, 8.0, 7.0},\n            {6.0, 5.0, 4.0},\n            {3.0, 2.0, 1.0}\n        };\n        \n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherMatrixData);\n        RealMatrix resultMatrix = matrix.add(anotherMatrix);\n        \n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Some unrelated calculations\n        double[] vectorData = {2.0, 3.0, 4.0};\n        RealVector vector = MatrixUtils.createRealVector(vectorData);\n        RealVector resultVector = vector.mapMultiply(2.0);\n\n        System.out.println(\"Scaled vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Finally, read the modified row vector from the matrix\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(\"Modified row vector:\");\n        for (int i = 0; i < readVector.getDimension(); i++) {\n            System.out.print(readVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}"
}