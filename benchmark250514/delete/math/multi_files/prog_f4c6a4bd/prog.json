{
    "files": {
        "SymmetricMatrixHandler.java": "import org.apache.commons.math3.linear.SymmetricMatrix;\n\npublic class SymmetricMatrixHandler {\n    private SymmetricMatrix matrix;\n\n    public SymmetricMatrixHandler(int size) {\n        matrix = new SymmetricMatrix(size);\n    }\n\n    public void setMatrixEntry(int row, int col, double value) {\n        /* write */ matrix.setEntry(row, col, value);\n    }\n\n    public SymmetricMatrix getMatrix() {\n        return matrix;\n    }\n}\n",
        "MatrixOperations.java": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(int rows, int cols) {\n        matrix = MatrixUtils.createRealMatrix(rows, cols);\n    }\n\n    public void fillMatrix() {\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                matrix.setEntry(i, j, i + j);\n            }\n        }\n    }\n\n    public RealMatrix transposeMatrix() {\n        return matrix.transpose();\n    }\n\n    public void printMatrix(RealMatrix matrix) {\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                System.out.print(matrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        SymmetricMatrixHandler matrixHandler = new SymmetricMatrixHandler(3);\n        matrixHandler.setMatrixEntry(0, 1, 5.0);\n\n        MatrixOperations matrixOperations = new MatrixOperations(3, 3);\n        matrixOperations.fillMatrix();\n        RealMatrix transposedMatrix = matrixOperations.transposeMatrix();\n        \n        System.out.println(\"Transposed Matrix:\");\n        matrixOperations.printMatrix(transposedMatrix);\n\n        SymmetricMatrix matrix = matrixHandler.getMatrix();\n        /* read */ double value = matrix.getEntry(0, 1);\n        System.out.println(\"Symmetric Matrix Entry (0,1): \" + value);\n\n        matrix.setEntry(1, 2, 10.0);\n        double anotherValue = matrix.getEntry(1, 2);\n        System.out.println(\"Symmetric Matrix Entry (1,2): \" + anotherValue);\n\n        double sum = 0.0;\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = i; j < matrix.getColumnDimension(); j++) {\n                sum += matrix.getEntry(i, j);\n            }\n        }\n        System.out.println(\"Sum of Symmetric Matrix Entries: \" + sum);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.SymmetricMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.SymmetricMatrix",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.SymmetricMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix of size 3x3\n        SymmetricMatrix matrix = new SymmetricMatrix(3);\n        \n        // Set an entry in the matrix\n        /* write */ matrix.setEntry(0, 1, 5.0);\n        \n        // Read the entry from the matrix\n        /* read */ double value = matrix.getEntry(0, 1);\n        \n        // Print the value to verify it was set correctly\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.SymmetricMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a symmetric matrix of size 3x3\n        SymmetricMatrix matrix = new SymmetricMatrix(3);\n        \n        // Set an entry in the matrix\n        /* write */ matrix.setEntry(0, 1, 5.0);\n        \n        // Initialize another matrix using MatrixUtils for additional operations\n        RealMatrix realMatrix = MatrixUtils.createRealMatrix(3, 3);\n        \n        // Fill the matrix with some values\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                realMatrix.setEntry(i, j, i + j);\n            }\n        }\n        \n        // Perform some matrix operations\n        RealMatrix transposedMatrix = realMatrix.transpose();\n        \n        // Print the transposed matrix\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Read the entry from the symmetric matrix\n        /* read */ double value = matrix.getEntry(0, 1);\n        \n        // Print the value to verify it was set correctly\n        System.out.println(\"Symmetric Matrix Entry (0,1): \" + value);\n        \n        // Perform some additional operations on the symmetric matrix\n        matrix.setEntry(1, 2, 10.0);\n        double anotherValue = matrix.getEntry(1, 2);\n        \n        // Print the additional value\n        System.out.println(\"Symmetric Matrix Entry (1,2): \" + anotherValue);\n        \n        // Calculate and print the sum of all entries in the symmetric matrix\n        double sum = 0.0;\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = i; j < matrix.getColumnDimension(); j++) { // Only iterate over upper triangle\n                sum += matrix.getEntry(i, j);\n            }\n        }\n        System.out.println(\"Sum of Symmetric Matrix Entries: \" + sum);\n    }\n}"
}