{
    "files": {
        "MatrixHandler.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixHandler {\n    private RealMatrix matrix;\n\n    public void createMatrix(double[] data) {\n        /* write */ matrix = MatrixUtils.createColumnRealMatrix(data);\n    }\n\n    public RealMatrix getColumnMatrix(int column) {\n        return matrix.getColumnMatrix(column);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Double> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(double grade) {\n        grades.add(grade);\n    }\n\n    public List<Double> getGrades() {\n        return grades;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Initialize MatrixHandler and create a column matrix\n        MatrixHandler matrixHandler = new MatrixHandler();\n        double[] data = {1.0, 2.0, 3.0};\n        matrixHandler.createMatrix(data);\n\n        // Initialize Course and add students\n        Course course = new Course(\"Math 101\");\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n        alice.addGrade(85.5);\n        bob.addGrade(90.0);\n        course.addStudent(alice);\n        course.addStudent(bob);\n\n        // Print course details\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Grades: \" + student.getGrades());\n        }\n\n        // Retrieve and print the column matrix\n        /* read */ RealMatrix columnMatrix = matrixHandler.getColumnMatrix(0);\n        System.out.println(\"Column matrix:\");\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a column real matrix from the data array\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        // Retrieve the column real matrix\n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        // Print the column matrix\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a column real matrix from the data array\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n\n        // Additional matrix manipulation\n        double[][] additionalData = {{4.0, 5.0}, {6.0, 7.0}, {8.0, 9.0}};\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalData);\n        \n        // Perform matrix addition\n        RealMatrix resultMatrix = matrix.multiply(additionalMatrix);\n        \n        // Print the result of the multiplication\n        System.out.println(\"Result of matrix multiplication:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Some unrelated calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 integers: \" + sum);\n\n        // Retrieve the column real matrix\n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        // Print the column matrix\n        System.out.println(\"Column matrix:\");\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n        \n        // More unrelated logic\n        double[][] randomData = {{10.0, 11.0}, {12.0, 13.0}};\n        RealMatrix randomMatrix = new Array2DRowRealMatrix(randomData);\n        \n        // Perform another matrix operation\n        RealMatrix finalMatrix = resultMatrix.add(randomMatrix);\n        \n        // Print the final matrix\n        System.out.println(\"Final matrix after addition:\");\n        for (int i = 0; i < finalMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < finalMatrix.getColumnDimension(); j++) {\n                System.out.print(finalMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}