{
    "files": {
        "DiagonalMatrixHandler.java": "import org.apache.commons.math3.linear.DiagonalMatrix;\n\npublic class DiagonalMatrixHandler {\n    private DiagonalMatrix matrix;\n\n    public DiagonalMatrixHandler(int size) {\n        this.matrix = new DiagonalMatrix(size);\n    }\n\n    public void setMatrixEntry(int index, double value) {\n        /* write */ matrix.setEntry(index, value);\n    }\n\n    public double getMatrixEntry(int index) {\n        return matrix.getEntry(index);\n    }\n}",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private double gpa;\n\n    public Student(String name, int age, double gpa) {\n        this.name = name;\n        this.age = age;\n        this.gpa = gpa;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public double getGpa() {\n        return gpa;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Main.java": "import org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a DiagonalMatrixHandler and set a value\n        DiagonalMatrixHandler matrixHandler = new DiagonalMatrixHandler(3);\n        matrixHandler.setMatrixEntry(1, 5.0);\n\n        // Create a Course and add Students\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(new Student(\"Alice\", 20, 3.5));\n        course.addStudent(new Student(\"Bob\", 22, 3.8));\n\n        // Print course details\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge() + \", GPA: \" + student.getGpa());\n        }\n\n        // Perform operations on a 3x3 matrix\n        RealMatrix matrix2 = new Array2DRowRealMatrix(3, 3);\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                matrix2.setEntry(i, j, i + j);\n            }\n        }\n\n        RealMatrix transposedMatrix = matrix2.transpose();\n        RealMatrix addedMatrix = matrix2.add(transposedMatrix);\n\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the value from the DiagonalMatrixHandler\n        /* read */ double value = matrixHandler.getMatrixEntry(1);\n\n        // Print the value to ensure the read method works correctly\n        System.out.println(\"Read value from DiagonalMatrix: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DiagonalMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.DiagonalMatrix",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.DiagonalMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a new DiagonalMatrix with size 3\n        DiagonalMatrix matrix = new DiagonalMatrix(3);\n\n        // Write a value to the matrix at position (1, 1)\n        /* write */ matrix.setEntry(1, 5.0);\n\n        // Read the value from the matrix at position (1, 1)\n        /* read */ double value = matrix.getEntry(1);\n\n        // Print the value to ensure the read method works correctly\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.DiagonalMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a new DiagonalMatrix with size 3\n        DiagonalMatrix matrix = new DiagonalMatrix(3);\n\n        // Create a new Array2DRowRealMatrix with size 3x3\n        RealMatrix matrix2 = new Array2DRowRealMatrix(3, 3);\n\n        // Fill the Array2DRowRealMatrix with values\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                matrix2.setEntry(i, j, i + j);\n            }\n        }\n\n        // Perform some operations on matrix2\n        RealMatrix transposedMatrix = matrix2.transpose();\n        RealMatrix addedMatrix = matrix2.add(transposedMatrix);\n\n        // Print the addedMatrix to check the result\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Write a value to the DiagonalMatrix at position (1, 1)\n        /* write */ matrix.setEntry(1, 5.0);\n\n        // Perform some unrelated operations\n        double determinant = matrix2.getDeterminant();\n        System.out.println(\"Determinant of matrix2: \" + determinant);\n\n        RealMatrix multipliedMatrix = matrix2.multiply(matrix2);\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the value from the DiagonalMatrix at position (1, 1)\n        /* read */ double value = matrix.getEntry(1);\n\n        // Print the value to ensure the read method works correctly\n        System.out.println(\"Read value from DiagonalMatrix: \" + value);\n    }\n}"
}