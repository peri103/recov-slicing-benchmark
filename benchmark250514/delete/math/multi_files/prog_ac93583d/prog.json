{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(double[][] data) {\n        this.matrix = MatrixUtils.createRealMatrix(data);\n    }\n\n    public void modifyRow(int rowIndex, double[] rowData) {\n        RealVector rowVector = MatrixUtils.createRowRealVector(rowData);\n        /* write */ matrix.setRowVector(rowIndex, rowVector);\n    }\n\n    public RealVector getRowVector(int rowIndex) {\n        return matrix.getRowVector(rowIndex);\n    }\n\n    public RealMatrix getMatrix() {\n        return matrix;\n    }\n\n    public RealMatrix transposeMatrix() {\n        return matrix.transpose();\n    }\n\n    public RealMatrix scalarMultiply(double scalar) {\n        return matrix.scalarMultiply(scalar);\n    }\n\n    public RealMatrix addMatrix(RealMatrix otherMatrix) {\n        return matrix.add(otherMatrix);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', id=\" + id + '}';\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    @Override\n    public String toString() {\n        return \"Course{courseName='\" + courseName + \"', students=\" + students + '}';\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n        MatrixOperations matrixOps = new MatrixOperations(data);\n\n        double[] newRowData = {7.0, 8.0, 9.0};\n        matrixOps.modifyRow(0, newRowData);\n\n        // Create a course and add students\n        Course mathCourse = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\", 1);\n        Student student2 = new Student(\"Bob\", 2);\n        mathCourse.addStudent(student1);\n        mathCourse.addStudent(student2);\n\n        System.out.println(\"Course details: \" + mathCourse);\n\n        // Perform matrix operations\n        RealMatrix transposedMatrix = matrixOps.transposeMatrix();\n        RealMatrix scaledMatrix = matrixOps.scalarMultiply(2.0);\n\n        System.out.println(\"Transposed matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        System.out.println(\"Scaled matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Access the modified row vector\n        /* read */ RealVector readVector = matrixOps.getRowVector(0);\n        System.out.println(\"Modified row vector: \" + readVector);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        double[] rowData = {7.0, 8.0, 9.0};\n        RealVector rowVector = MatrixUtils.createRowRealVector(rowData);\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(readVector);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        double[] rowData = {7.0, 8.0, 9.0};\n        RealVector rowVector = MatrixUtils.createRowRealVector(rowData);\n        /* write */ matrix.setRowVector(0, rowVector);\n\n        // Create another matrix and perform operations\n        double[][] additionalData = {{10.0, 11.0, 12.0}, {13.0, 14.0, 15.0}};\n        RealMatrix additionalMatrix = new Array2DRowRealMatrix(additionalData);\n\n        RealVector columnVector = additionalMatrix.getColumnVector(1);\n        RealVector sumVector = rowVector.add(columnVector);\n\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(\"Sum element \" + i + \": \" + sumVector.getEntry(i));\n        }\n\n        // Perform some calculations on the original matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealVector transposedRowVector = transposedMatrix.getRowVector(1);\n\n        double dotProduct = rowVector.dotProduct(transposedRowVector);\n        System.out.println(\"Dot product: \" + dotProduct);\n\n        // Access the modified row vector\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(\"Modified row vector: \" + readVector);\n\n        // Additional operations on the matrix\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        RealMatrix addedMatrix = matrix.add(additionalMatrix);\n\n        System.out.println(\"Scaled matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        System.out.println(\"Added matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}