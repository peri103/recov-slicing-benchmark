{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    private RealMatrix triangularMatrix;\n\n    public MatrixOperations(double[][] data) {\n        // Create a triangular matrix\n        /* write */ this.triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n    }\n\n    public RealMatrix getTriangularMatrix() {\n        return this.triangularMatrix;\n    }\n}",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Double> grades = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addGrade(double grade) {\n        grades.add(grade);\n    }\n\n    public List<Double> getGrades() {\n        return grades;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix data\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {0.0, 4.0, 5.0},\n            {0.0, 0.0, 6.0}\n        };\n\n        // Create a MatrixOperations object\n        MatrixOperations matrixOps = new MatrixOperations(data);\n\n        // Create a student and courses\n        Student student = new Student(\"Alice\");\n        Course math = new Course(\"Mathematics\");\n        Course science = new Course(\"Science\");\n\n        // Add grades to courses\n        math.addGrade(95.0);\n        science.addGrade(88.5);\n\n        // Add courses to student\n        student.addCourse(math);\n        student.addCourse(science);\n\n        // Retrieve the triangular matrix\n        /* read */ RealMatrix retrievedMatrix = matrixOps.getTriangularMatrix();\n\n        // Print the retrieved triangular matrix\n        System.out.println(\"Retrieved triangular matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Display student information\n        System.out.println(\"Student Name: \" + student.getName());\n        for (Course course : student.getCourses()) {\n            System.out.println(\"Course: \" + course.getCourseName());\n            System.out.println(\"Grades: \" + course.getGrades());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {0.0, 4.0, 5.0},\n            {0.0, 0.0, 6.0}\n        };\n\n        // Create a triangular matrix\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Get the triangular matrix\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the matrix to verify\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {0.0, 4.0, 5.0},\n            {0.0, 0.0, 6.0}\n        };\n\n        // Create a triangular matrix\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Create a vector\n        RealVector vector = new ArrayRealVector(new double[] {1.0, 2.0, 3.0});\n\n        // Perform some operations with the vector\n        RealVector resultVector = triangularMatrix.operate(vector);\n\n        // Print the result of vector operation\n        System.out.println(\"Result of vector operation:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Create another matrix for additional operations\n        double[][] data2 = {\n            {7.0, 8.0, 9.0},\n            {0.0, 10.0, 11.0},\n            {0.0, 0.0, 12.0}\n        };\n\n        RealMatrix anotherMatrix = MatrixUtils.createTriangularMatrix(data2);\n\n        // Perform matrix addition\n        RealMatrix sumMatrix = triangularMatrix.add(anotherMatrix);\n\n        // Print the sum matrix\n        System.out.println(\"Sum of matrices:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Get the triangular matrix\n        /* read */ RealMatrix retrievedMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the matrix to verify\n        System.out.println(\"Retrieved triangular matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}