{
    "files": {
        "TriangularMatrixHandler.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class TriangularMatrixHandler {\n    private RealMatrix triangularMatrix;\n\n    public void createMatrix(double[][] data) {\n        /* write */ triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n    }\n\n    public RealMatrix getMatrix() {\n        return triangularMatrix;\n    }\n}\n",
        "MatrixOperations.java": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class MatrixOperations {\n    public RealMatrix addMatrices(RealMatrix matrix1, RealMatrix matrix2) {\n        return matrix1.add(matrix2);\n    }\n\n    public RealVector multiplyMatrixVector(RealMatrix matrix, double[] vectorData) {\n        RealVector vector = new ArrayRealVector(vectorData);\n        return matrix.operate(vector);\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data for matrices\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {2.0, 3.0, 0.0},\n            {4.0, 5.0, 6.0}\n        };\n\n        double[][] otherData = {\n            {7.0, 8.0, 9.0},\n            {10.0, 11.0, 12.0},\n            {13.0, 14.0, 15.0}\n        };\n\n        // Initialize the handler and operations\n        TriangularMatrixHandler handler = new TriangularMatrixHandler();\n        MatrixOperations operations = new MatrixOperations();\n\n        // Create a triangular matrix\n        handler.createMatrix(data);\n\n        // Perform operations with another matrix\n        RealMatrix otherMatrix = new Array2DRowRealMatrix(otherData);\n        RealMatrix addedMatrix = operations.addMatrices(handler.getMatrix(), otherMatrix);\n\n        // Create a vector and perform multiplication\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector resultVector = operations.multiplyMatrixVector(addedMatrix, vectorData);\n\n        // Print the result of matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Read the triangular matrix using the handler\n        /* read */ RealMatrix readMatrix = handler.getMatrix();\n\n        // Print the read matrix to verify the operation\n        System.out.println(\"Read triangular matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a triangular matrix\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {2.0, 3.0, 0.0},\n            {4.0, 5.0, 6.0}\n        };\n\n        // Create a triangular matrix using MatrixUtils\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Read the triangular matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the matrix to verify the read operation\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a triangular matrix\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {2.0, 3.0, 0.0},\n            {4.0, 5.0, 6.0}\n        };\n\n        // Create a triangular matrix using MatrixUtils\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createTriangularMatrix(data);\n\n        // Create another matrix for operations\n        double[][] otherData = {\n            {7.0, 8.0, 9.0},\n            {10.0, 11.0, 12.0},\n            {13.0, 14.0, 15.0}\n        };\n        RealMatrix otherMatrix = new Array2DRowRealMatrix(otherData);\n\n        // Perform matrix addition\n        RealMatrix addedMatrix = triangularMatrix.add(otherMatrix);\n\n        // Create a vector\n        double[] vectorData = {1.0, 2.0, 3.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = addedMatrix.operate(vector);\n\n        // Print the result of matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Read the triangular matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.getTriangularMatrix(triangularMatrix);\n\n        // Print the read matrix to verify the operation\n        System.out.println(\"Read triangular matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}