{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private StudentScores scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new StudentScores();\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public int getScore(int index) {\n        return scores.getScore(index);\n    }\n}\n",
        "StudentScores.java": "import java.util.ArrayList;\n\npublic class StudentScores {\n    private ArrayList<Integer> scores;\n\n    public StudentScores() {\n        scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        /* write */ scores.add(score);\n    }\n\n    public int getScore(int index) {\n        return scores.get(index);\n    }\n}\n",
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    public RealMatrix createMatrix(double[][] data) {\n        return MatrixUtils.createArray2DRowRealMatrix(data);\n    }\n\n    public double[][] getMatrixData(RealMatrix matrix) {\n        /* read */ return matrix.getData();\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a student and add scores\n        Student student = new Student(\"Bob\");\n        student.addScore(85);\n        student.addScore(90);\n\n        // Retrieve and print a score\n        int score = student.getScore(0);\n        System.out.println(\"Student's first score: \" + score);\n\n        // Perform matrix operations\n        MatrixOperations matrixOps = new MatrixOperations();\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        RealMatrix matrix = matrixOps.createMatrix(data);\n\n        // Retrieve matrix data and print it\n        double[][] retrievedData = matrixOps.getMatrixData(matrix);\n        System.out.println(\"Matrix Data:\");\n        for (double[] row : retrievedData) {\n            for (double value : row) {\n                System.out.print(value + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArray2DRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArray2DRowRealMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 2D array to be used for matrix creation\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n\n        // Using MatrixUtils to create a RealMatrix from the 2D array\n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n\n        // Retrieve the array from the RealMatrix\n        /* read */ double[][] retrievedData = matrix.getData();\n\n        // Print the retrieved data to verify it matches the original data\n        for (double[] row : retrievedData) {\n            for (double value : row) {\n                System.out.print(value + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 2D array to be used for matrix creation\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Create a RealVector using ArrayRealVector\n        RealVector vector = new ArrayRealVector(new double[]{5.0, 6.0});\n        \n        // Perform some operations on the vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        \n        // Using MatrixUtils to create a RealMatrix from the 2D array\n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        // Perform matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication: \" + resultVector);\n        \n        // Create another matrix for addition\n        RealMatrix anotherMatrix = MatrixUtils.createArray2DRowRealMatrix(new double[][]{{7.0, 8.0}, {9.0, 10.0}});\n        \n        // Add the two matrices\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Sum Matrix: \");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Retrieve the array from the RealMatrix\n        /* read */ double[][] retrievedData = matrix.getData();\n        \n        // Print the retrieved data to verify it matches the original data\n        System.out.println(\"Retrieved Matrix Data:\");\n        for (double[] row : retrievedData) {\n            for (double value : row) {\n                System.out.print(value + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}