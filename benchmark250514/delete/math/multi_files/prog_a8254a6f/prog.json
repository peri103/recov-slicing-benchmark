{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport java.util.Arrays;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public void createMatrix(double[][] data) {\n        /* write */ matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n    }\n\n    public RealVector multiplyWithVector(double[] vectorData) {\n        RealVector vector = new ArrayRealVector(vectorData);\n        return matrix.operate(vector);\n    }\n\n    public RealMatrix addMatrix(double[][] data) {\n        RealMatrix matrix2 = MatrixUtils.createArray2DRowRealMatrix(data);\n        return matrix.add(matrix2);\n    }\n\n    public double[][] getMatrixData() {\n        /* read */ return matrix.getData();\n    }\n}\n",
        "MatrixDemo.java": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport java.util.Arrays;\n\npublic class MatrixDemo {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        MatrixOperations matrixOps = new MatrixOperations();\n        matrixOps.createMatrix(data);\n\n        double[] vectorData = {5.0, 6.0};\n        RealVector resultVector = matrixOps.multiplyWithVector(vectorData);\n        System.out.println(\"Result of matrix-vector multiplication: \" + Arrays.toString(resultVector.toArray()));\n\n        double[][] data2 = {{7.0, 8.0}, {9.0, 10.0}};\n        RealMatrix sumMatrix = matrixOps.addMatrix(data2);\n        System.out.println(\"Sum of matrices:\");\n        for (double[] row : sumMatrix.getData()) {\n            System.out.println(Arrays.toString(row));\n        }\n\n        double[][] originalMatrixData = matrixOps.getMatrixData();\n        System.out.println(\"Original matrix data:\");\n        for (double[] row : originalMatrixData) {\n            System.out.println(Arrays.toString(row));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArray2DRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArray2DRowRealMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 2D array to be used for the matrix\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n        \n        /* read */ double[][] array = matrix.getData();\n        \n        // Print the read matrix data to verify\n        for (double[] row : array) {\n            for (double value : row) {\n                System.out.print(value + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 2D array to be used for the matrix\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n\n        /* write */ RealMatrix matrix = MatrixUtils.createArray2DRowRealMatrix(data);\n\n        // Perform some operations on the matrix\n        RealVector vector = new ArrayRealVector(new double[]{5.0, 6.0});\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication: \" + Arrays.toString(resultVector.toArray()));\n\n        // Create another matrix and perform addition\n        double[][] data2 = {{7.0, 8.0}, {9.0, 10.0}};\n        RealMatrix matrix2 = MatrixUtils.createArray2DRowRealMatrix(data2);\n        RealMatrix sumMatrix = matrix.add(matrix2);\n        System.out.println(\"Sum of matrices:\");\n        for (double[] row : sumMatrix.getData()) {\n            System.out.println(Arrays.toString(row));\n        }\n\n        // Insert some unrelated code to increase complexity\n        double[] vectorData = {11.0, 12.0};\n        RealVector anotherVector = new ArrayRealVector(vectorData);\n        double dotProduct = vector.dotProduct(anotherVector);\n        System.out.println(\"Dot product of vectors: \" + dotProduct);\n\n        // Now read the original matrix data\n        /* read */ double[][] array = matrix.getData();\n\n        // Print the read matrix data to verify\n        System.out.println(\"Original matrix data:\");\n        for (double[] row : array) {\n            System.out.println(Arrays.toString(row));\n        }\n    }\n}"
}