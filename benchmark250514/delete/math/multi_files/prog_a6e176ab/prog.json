{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(double[][] data) {\n        this.matrix = MatrixUtils.createRealMatrix(data);\n    }\n\n    public void setRowVector(int row, RealVector vector) {\n        /* write */ matrix.setRowVector(row, vector);\n    }\n\n    public RealVector getRowVector(int row) {\n        return matrix.getRowVector(row);\n    }\n\n    public void printMatrix() {\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            System.out.println(matrix.getRowVector(i));\n        }\n    }\n}\n",
        "Student.java": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Student {\n    private String name;\n    private MatrixOperations grades;\n\n    public Student(String name, double[][] initialGrades) {\n        this.name = name;\n        this.grades = new MatrixOperations(initialGrades);\n    }\n\n    public void updateGrades(int row, double[] newGrades) {\n        RealVector vector = MatrixUtils.createRowRealVector(newGrades);\n        grades.setRowVector(row, vector);\n    }\n\n    public RealVector getGrades(int row) {\n        return grades.getRowVector(row);\n    }\n\n    public void printGrades() {\n        System.out.println(\"Grades for \" + name + \":\");\n        grades.printMatrix();\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] initialGrades = {{85.0, 90.0, 92.0}};\n        Student student = new Student(\"Alice\", initialGrades);\n\n        student.printGrades();\n\n        // Update grades\n        double[] newGrades = {88.0, 91.0, 93.0};\n        student.updateGrades(0, newGrades);\n\n        // Retrieve and print updated grades\n        /* read */ RealVector updatedGrades = student.getGrades(0);\n        System.out.println(\"Updated Grades: \" + updatedGrades);\n\n        // Additional operations\n        double norm = updatedGrades.getNorm();\n        System.out.println(\"Norm of updated grades: \" + norm);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0, 3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        RealVector vector = MatrixUtils.createRowRealVector(data[0]);\n        \n        /* write */ matrix.setRowVector(0, vector);\n        \n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(readVector);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {{1.0, 2.0, 3.0}};\n        RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        RealVector vector = MatrixUtils.createRowRealVector(data[0]);\n\n        // Additional code to make the program more complex\n        double[][] data2 = {{4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}};\n        RealMatrix matrix2 = MatrixUtils.createRealMatrix(data2);\n        RealVector vector2 = matrix2.getRowVector(1);\n        System.out.println(\"Vector from matrix2: \" + vector2);\n\n        // Operations on the second matrix\n        matrix2.setColumnVector(0, vector);\n        System.out.println(\"Updated matrix2:\");\n        for (int i = 0; i < matrix2.getRowDimension(); i++) {\n            System.out.println(matrix2.getRowVector(i));\n        }\n\n        // Original write operation\n        /* write */ matrix.setRowVector(0, vector);\n\n        // More complex operations\n        RealVector sumVector = vector.add(vector2);\n        System.out.println(\"Sum of vectors: \" + sumVector);\n\n        RealMatrix matrix3 = matrix2.add(matrix);\n        System.out.println(\"Sum of matrices:\");\n        for (int i = 0; i < matrix3.getRowDimension(); i++) {\n            System.out.println(matrix3.getRowVector(i));\n        }\n\n        // Original read operation\n        /* read */ RealVector readVector = matrix.getRowVector(0);\n        System.out.println(\"Read vector from matrix: \" + readVector);\n\n        // Additional operations\n        double norm = readVector.getNorm();\n        System.out.println(\"Norm of read vector: \" + norm);\n\n        RealVector scaledVector = readVector.mapMultiply(2.0);\n        System.out.println(\"Scaled read vector: \" + scaledVector);\n    }\n}"
}