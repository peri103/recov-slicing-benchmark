{
    "files": {
        "VectorOperations.java": "import org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class VectorOperations {\n    private OpenMapRealVector vector;\n\n    public VectorOperations(int size) {\n        this.vector = MatrixUtils.createOpenMapRealVector(size);\n    }\n\n    public void writeValue(int index, double value) {\n        /* write */ vector.setEntry(index, value);\n    }\n\n    public OpenMapRealVector getVector() {\n        return vector;\n    }\n}\n",
        "ComplexCalculations.java": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class ComplexCalculations {\n    public RealVector addVectors(OpenMapRealVector vector1, OpenMapRealVector vector2) {\n        return vector1.add(vector2);\n    }\n\n    public RealVector scaleVector(RealVector vector, double scale) {\n        return vector.mapMultiply(scale);\n    }\n\n    public OpenMapRealVector subtractVectors(OpenMapRealVector vector1, OpenMapRealVector vector2) {\n        return vector1.subtract(vector2);\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.OpenMapRealVector;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        VectorOperations vectorOps = new VectorOperations(5);\n        vectorOps.writeValue(0, 1.0);\n\n        OpenMapRealVector anotherVector = new OpenMapRealVector(5);\n        Random random = new Random();\n        for (int i = 0; i < 5; i++) {\n            anotherVector.setEntry(i, random.nextDouble() * 100);\n        }\n\n        ComplexCalculations calculations = new ComplexCalculations();\n        RealVector sumVector = calculations.addVectors(vectorOps.getVector(), anotherVector);\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(\"Sum vector entry \" + i + \": \" + sumVector.getEntry(i));\n        }\n\n        RealVector scaledVector = calculations.scaleVector(sumVector, 2.0);\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(\"Scaled vector entry \" + i + \": \" + scaledVector.getEntry(i));\n        }\n\n        double value = /* read */ vectorOps.getVector().getEntry(0);\n        System.out.println(\"Original vector entry 0: \" + value);\n\n        OpenMapRealVector differenceVector = calculations.subtractVectors(anotherVector, vectorOps.getVector());\n        for (int i = 0; i < differenceVector.getDimension(); i++) {\n            System.out.println(\"Difference vector entry \" + i + \": \" + differenceVector.getEntry(i));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createOpenMapRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getOpenMapRealVector"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a vector with initial size and default value\n        OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(5);\n\n        // Set a value to the vector\n        vector.setEntry(0, 1.0); // Writing value 1.0 at index 0\n\n        /* write */ MatrixUtils.createOpenMapRealVector(5).setEntry(0, 1.0);\n\n        // Read the value from the vector\n        double value = /* read */ vector.getEntry(0);\n        \n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a vector with initial size and default value\n        OpenMapRealVector vector = MatrixUtils.createOpenMapRealVector(5);\n\n        // Set a value to the vector\n        vector.setEntry(0, 1.0); // Writing value 1.0 at index 0\n\n        /* write */ MatrixUtils.createOpenMapRealVector(5).setEntry(0, 1.0);\n\n        // Add some unrelated complex operations\n        OpenMapRealVector anotherVector = new OpenMapRealVector(5);\n        Random random = new Random();\n        for (int i = 0; i < 5; i++) {\n            anotherVector.setEntry(i, random.nextDouble() * 100);\n        }\n\n        RealVector sumVector = vector.add(anotherVector);\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(\"Sum vector entry \" + i + \": \" + sumVector.getEntry(i));\n        }\n\n        // Perform some mathematical operations\n        RealVector scaledVector = sumVector.mapMultiply(2.0);\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(\"Scaled vector entry \" + i + \": \" + scaledVector.getEntry(i));\n        }\n\n        // Read the value from the original vector\n        double value = /* read */ vector.getEntry(0);\n        \n        System.out.println(\"Original vector entry 0: \" + value);\n\n        // Further operations on vectors\n        OpenMapRealVector differenceVector = anotherVector.subtract(vector);\n        for (int i = 0; i < differenceVector.getDimension(); i++) {\n            System.out.println(\"Difference vector entry \" + i + \": \" + differenceVector.getEntry(i));\n        }\n    }\n}"
}