{
    "files": {
        "SymmetricMatrixHandler.java": "import org.apache.commons.math3.linear.SymmetricMatrix;\n\npublic class SymmetricMatrixHandler {\n    private SymmetricMatrix matrix;\n\n    public SymmetricMatrixHandler(int size) {\n        matrix = new SymmetricMatrix(size);\n    }\n\n    public void setMatrixEntry(int row, int col, double value) {\n        /* write */ matrix.setEntry(row, col, value);\n    }\n\n    public double getMatrixEntry(int row, int col) {\n        return matrix.getEntry(row, col);\n    }\n}\n",
        "University.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class University {\n    private List<Student> students = new ArrayList<>();\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Double> grades = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public void addGrade(double grade) {\n        grades.add(grade);\n    }\n\n    public List<Double> getGrades() {\n        return grades;\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a university and add students\n        University university = new University();\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n        university.addStudent(student1);\n        university.addStudent(student2);\n\n        // Enroll students in courses\n        Course math = new Course(\"Mathematics\");\n        Course physics = new Course(\"Physics\");\n        student1.enrollCourse(math);\n        student2.enrollCourse(physics);\n\n        // Add grades to courses\n        math.addGrade(95.0);\n        physics.addGrade(88.0);\n\n        // Create and manipulate a symmetric matrix\n        SymmetricMatrixHandler matrixHandler = new SymmetricMatrixHandler(3);\n        matrixHandler.setMatrixEntry(1, 1, 5.0);\n\n        // Output student information\n        for (Student student : university.getStudents()) {\n            System.out.println(\"Student: \" + student.getName());\n            for (Course course : student.getCourses()) {\n                System.out.println(\"Course: \" + course.getCourseName());\n                System.out.println(\"Grades: \" + course.getGrades());\n            }\n        }\n\n        // Read the value from the matrix at position (1, 1)\n        /* read */ double value = matrixHandler.getMatrixEntry(1, 1);\n        System.out.println(\"Matrix value at (1,1): \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.SymmetricMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.SymmetricMatrix",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.SymmetricMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the symmetric matrix with a size of 3x3 for demonstration purposes\n        int size = 3;\n        SymmetricMatrix matrix = new SymmetricMatrix(size);\n\n        // Write a value into the matrix at position (1, 1)\n        /* write */ matrix.setEntry(1, 1, 5.0);\n\n        // Read the value from the matrix at position (1, 1)\n        /* read */ double value = matrix.getEntry(1, 1);\n\n        // Output the value read from the matrix\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.SymmetricMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the symmetric matrix with a size of 3x3 for demonstration purposes\n        int size = 3;\n        SymmetricMatrix matrix = new SymmetricMatrix(size);\n\n        // Initialize another symmetric matrix with random values\n        SymmetricMatrix randomMatrix = new SymmetricMatrix(size);\n        for (int i = 0; i < size; i++) {\n            for (int j = i; j < size; j++) {\n                randomMatrix.setEntry(i, j, Math.random() * 10);\n            }\n        }\n\n        // Write a value into the matrix at position (1, 1)\n        /* write */ matrix.setEntry(1, 1, 5.0);\n\n        // Perform some operations on the random matrix\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(size);\n        RealMatrix resultMatrix = randomMatrix.multiply(identityMatrix);\n\n        // Output the random matrix and the result of multiplication\n        System.out.println(\"Random Matrix:\");\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j < size; j++) {\n                System.out.print(randomMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        System.out.println(\"Result Matrix:\");\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j < size; j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the value from the matrix at position (1, 1)\n        /* read */ double value = matrix.getEntry(1, 1);\n\n        // Output the value read from the matrix\n        System.out.println(\"Value at (1,1): \" + value);\n\n        // Perform additional operations on the symmetric matrix\n        double sum = 0.0;\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j <= i; j++) {\n                sum += matrix.getEntry(i, j);\n            }\n        }\n        System.out.println(\"Sum of elements in the symmetric matrix: \" + sum);\n    }\n}"
}