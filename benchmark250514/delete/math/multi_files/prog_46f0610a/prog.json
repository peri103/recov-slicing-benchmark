{
    "files": {
        "VectorOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class VectorOperations {\n    private RealVector vector;\n\n    public void createVector(double[] data) {\n        /* write */ vector = MatrixUtils.createRowRealVector(data);\n    }\n\n    public RealVector getVector() {\n        return vector;\n    }\n}\n",
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(double[][] data) {\n        this.matrix = MatrixUtils.createRealMatrix(data);\n    }\n\n    public void setRowVector(int row, RealVector vector) {\n        matrix.setRowVector(row, vector);\n    }\n\n    public RealVector getRowVector(int row) {\n        /* read */ return matrix.getRowVector(row);\n    }\n\n    public RealMatrix getMatrix() {\n        return matrix;\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize matrix data\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n\n        // Create MatrixOperations instance\n        MatrixOperations matrixOps = new MatrixOperations(matrixData);\n\n        // Create VectorOperations instance and create a vector\n        VectorOperations vectorOps = new VectorOperations();\n        double[] rowData = {7.0, 8.0, 9.0};\n        vectorOps.createVector(rowData);\n\n        // Set the vector as a row in the matrix\n        RealVector vector = vectorOps.getVector();\n        matrixOps.setRowVector(1, vector);\n\n        // Get the row vector from the matrix\n        RealVector readVector = matrixOps.getRowVector(1);\n\n        // Print the read vector\n        System.out.println(\"Read Vector:\");\n        System.out.println(readVector);\n\n        // Perform additional operations on the matrix\n        RealMatrix matrix = matrixOps.getMatrix();\n        RealMatrix multipliedMatrix = matrix.scalarMultiply(2.0);\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            System.out.println(multipliedMatrix.getRowVector(i));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealVector"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a matrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n\n        // Create a RealMatrix from the 2D array\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Create a RealVector using createRowRealVector method from MatrixUtils\n        double[] rowData = {7.0, 8.0, 9.0};\n        /* write */ RealVector vector = MatrixUtils.createRowRealVector(rowData);\n\n        // Set the vector as a row in the matrix\n        matrix.setRowVector(1, vector);\n\n        // Read the vector from the matrix using getRowVector method\n        /* read */ RealVector readVector = matrix.getRowVector(1);\n\n        // Print the read vector\n        System.out.println(readVector);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a matrix\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0}\n        };\n\n        // Create a RealMatrix from the 2D array\n        RealMatrix matrix = MatrixUtils.createRealMatrix(matrixData);\n\n        // Create a RealVector using createRowRealVector method from MatrixUtils\n        double[] rowData = {7.0, 8.0, 9.0};\n        /* write */ RealVector vector = MatrixUtils.createRowRealVector(rowData);\n\n        // Perform some unrelated operations on the matrix\n        RealMatrix multipliedMatrix = matrix.scalarMultiply(2.0);\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            System.out.println(multipliedMatrix.getRowVector(i));\n        }\n\n        // Set the vector as a row in the matrix\n        matrix.setRowVector(1, vector);\n\n        // Perform more unrelated operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            System.out.println(transposedMatrix.getRowVector(i));\n        }\n\n        // Read the vector from the matrix using getRowVector method\n        /* read */ RealVector readVector = matrix.getRowVector(1);\n\n        // Print the read vector\n        System.out.println(\"Read Vector:\");\n        System.out.println(readVector);\n\n        // Additional operations with another matrix\n        double[][] anotherMatrixData = {\n            {10.0, 11.0, 12.0},\n            {13.0, 14.0, 15.0}\n        };\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherMatrixData);\n        RealMatrix addedMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            System.out.println(addedMatrix.getRowVector(i));\n        }\n    }\n}"
}