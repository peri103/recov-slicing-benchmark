{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;\nimport java.util.zip.Deflater;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ZipArchiveEntry object\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n\n        // Use the write method to set the compression method\n        /* write */ zipEntry.setMethod(ZipArchiveEntry.DEFLATED);\n\n        // Perform some unrelated operations to increase complexity\n        ZipArchiveEntry zipEntry2 = new ZipArchiveEntry(\"anotherExample.txt\");\n        zipEntry2.setMethod(ZipArchiveEntry.STORED);\n\n        Deflater deflater = new Deflater();\n        deflater.setLevel(Deflater.BEST_COMPRESSION);\n        \n        ZipArchiveOutputStream zipOutputStream = new ZipArchiveOutputStream(System.out);\n        zipOutputStream.setLevel(Deflater.BEST_SPEED);\n        \n        // Insert more logic that manipulates the ZipArchiveEntry objects\n        if (zipEntry.getName().equals(\"example.txt\")) {\n            zipEntry.setSize(1024);\n        }\n        \n        zipOutputStream.putArchiveEntry(zipEntry2);\n        zipOutputStream.closeArchiveEntry();\n        \n        // Use the read method to get the compression method\n        /* read */ int method = zipEntry.getMethod();\n\n        // Output the method to verify it was set and read correctly\n        System.out.println(\"Compression method of zipEntry: \" + method);\n        \n        // Additional logic using the Deflater object\n        byte[] data = new byte[100];\n        deflater.setInput(data);\n        deflater.finish();\n        \n        byte[] compressedData = new byte[100];\n        int compressedSize = deflater.deflate(compressedData);\n        System.out.println(\"Compressed size: \" + compressedSize);\n        \n        zipOutputStream.finish();\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ZipArchiveEntry object\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n\n        // Use the write method to set the compression method\n        /* write */ zipEntry.setMethod(ZipArchiveEntry.DEFLATED);\n\n        // Use the read method to get the compression method\n        /* read */ int method = zipEntry.getMethod();\n\n        // Output the method to verify it was set and read correctly\n        System.out.println(method);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setMethod",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getMethod"
    }
}