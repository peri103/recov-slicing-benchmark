{
    "java_code": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.Date;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize GzipParameters and set modification time\n        GzipParameters parameters = new GzipParameters();\n        Date modificationTime = new Date();\n        \n        /* write */ parameters.setModificationTime(modificationTime);\n        \n        // Create and manipulate an ArrayList\n        ArrayList<String> names = new ArrayList<>();\n        names.add(\"Alice\");\n        names.add(\"Bob\");\n        names.add(\"Charlie\");\n        \n        // Perform operations on the ArrayList\n        for (int i = 0; i < names.size(); i++) {\n            System.out.println(\"Name: \" + names.get(i));\n        }\n        \n        // Create and manipulate a HashMap\n        HashMap<String, Integer> nameToAge = new HashMap<>();\n        nameToAge.put(\"Alice\", 30);\n        nameToAge.put(\"Bob\", 25);\n        nameToAge.put(\"Charlie\", 35);\n        \n        // Retrieve and print values from the HashMap\n        for (String name : names) {\n            System.out.println(name + \" is \" + nameToAge.get(name) + \" years old.\");\n        }\n        \n        // More complex logic\n        int sumOfAges = 0;\n        for (Integer age : nameToAge.values()) {\n            sumOfAges += age;\n        }\n        System.out.println(\"Total age: \" + sumOfAges);\n        \n        // Read the modification time from GzipParameters\n        /* read */ Date readModificationTime = parameters.getModificationTime();\n        System.out.println(\"Modification Time: \" + readModificationTime);\n        \n        // Additional logic involving arithmetic operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers 1 to 5: \" + product);\n        \n        // Final statement to ensure program complexity\n        if (product > 100) {\n            System.out.println(\"Product is greater than 100.\");\n        } else {\n            System.out.println(\"Product is less than or equal to 100.\");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters parameters = new GzipParameters();\n        Date modificationTime = new Date(); // Initialize with the current date and time\n        \n        /* write */ parameters.setModificationTime(modificationTime);\n        \n        /* read */ Date readModificationTime = parameters.getModificationTime();\n        \n        System.out.println(\"Modification Time: \" + readModificationTime);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setModificationTime",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getModificationTime"
    }
}