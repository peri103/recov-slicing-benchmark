{
    "java_code": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            byte[] data = new byte[0]; // Empty byte array for initialization\n            ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(data);\n            BZip2CompressorInputStream bzip2InputStream = new BZip2CompressorInputStream(byteArrayInputStream);\n\n            /* write */ bzip2InputStream.setBlockSize(9); // Set block size to maximum value 9\n\n            // Additional unrelated code to increase complexity\n            ArrayList<Integer> intList = new ArrayList<>();\n            HashMap<String, Integer> map = new HashMap<>();\n\n            for (int i = 0; i < 5; i++) {\n                intList.add(i * 10);\n                map.put(\"Key\" + i, i);\n            }\n\n            for (int i = 0; i < intList.size(); i++) {\n                System.out.println(\"List value: \" + intList.get(i));\n            }\n\n            for (String key : map.keySet()) {\n                System.out.println(\"Map value for \" + key + \": \" + map.get(key));\n            }\n\n            // Additional logic before reading the block size\n            int sum = 0;\n            for (int value : intList) {\n                sum += value;\n            }\n            System.out.println(\"Sum of list values: \" + sum);\n\n            /* read */ int blockSize = bzip2InputStream.getBlockSize();\n            System.out.println(\"Block size: \" + blockSize);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            byte[] data = new byte[0]; // Empty byte array for initialization\n            ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(data);\n            BZip2CompressorInputStream bzip2InputStream = new BZip2CompressorInputStream(byteArrayInputStream);\n\n            /* write */ bzip2InputStream.setBlockSize(9); // Set block size to maximum value 9\n\n            /* read */ int blockSize = bzip2InputStream.getBlockSize();\n            System.out.println(\"Block size: \" + blockSize);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "write_method": "setBlockSize",
        "read_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "read_method": "getBlockSize"
    }
}