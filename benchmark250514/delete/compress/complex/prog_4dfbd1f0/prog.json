{
    "java_code": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.io.ByteArrayOutputStream;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n            DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n\n            HashMap<String, Integer> map = new HashMap<>();\n            ArrayList<Integer> list = new ArrayList<>();\n\n            map.put(\"key1\", 100);\n            map.put(\"key2\", 200);\n            list.add(10);\n            list.add(20);\n\n            /* write */ deflateStream.setFlushMode(FlushMode.SYNC_FLUSH);\n\n            int sum = 0;\n            for (Integer value : map.values()) {\n                sum += value;\n            }\n\n            for (Integer number : list) {\n                sum += number;\n            }\n\n            System.out.println(\"Sum: \" + sum);\n\n            String flushModeStr = \"Flush mode is: \";\n            /* read */ FlushMode flushMode = deflateStream.getFlushMode();\n            flushModeStr += flushMode.toString();\n\n            System.out.println(flushModeStr);\n\n            for (int i = 0; i < list.size(); i++) {\n                list.set(i, list.get(i) * 2);\n            }\n\n            for (Integer number : list) {\n                System.out.println(\"List value: \" + number);\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.io.ByteArrayOutputStream;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n            DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n\n            /* write */ deflateStream.setFlushMode(FlushMode.SYNC_FLUSH);\n            /* read */ FlushMode flushMode = deflateStream.getFlushMode();\n\n            System.out.println(flushMode);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "write_method": "setFlushMode",
        "read_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "read_method": "getFlushMode"
    }
}