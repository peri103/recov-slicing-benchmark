{
    "java_code": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n        ArrayList<String> stringList = new ArrayList<>();\n        Map<String, Integer> wordCount = new HashMap<>();\n        \n        try {\n            DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n            \n            byte[] dictionary = {1, 2, 3, 4, 5};\n            /* write */ deflateStream.setDictionary(dictionary);\n            \n            // Add some words to the list\n            stringList.add(\"apple\");\n            stringList.add(\"banana\");\n            stringList.add(\"apple\");\n            stringList.add(\"orange\");\n            stringList.add(\"banana\");\n            stringList.add(\"banana\");\n            \n            // Count the occurrences of each word\n            for (String word : stringList) {\n                wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);\n            }\n            \n            // Print the word count\n            for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {\n                System.out.println(\"Word: \" + entry.getKey() + \", Count: \" + entry.getValue());\n            }\n            \n            // Perform some complex operations\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n            \n            int sum = 0;\n            for (int number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n            \n            /* read */ byte[] readDictionary = deflateStream.getDictionary();\n            for (byte b : readDictionary) {\n                System.out.print(b + \" \");\n            }\n            \n            deflateStream.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n        try {\n            DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n            \n            byte[] dictionary = {1, 2, 3, 4, 5};\n            /* write */ deflateStream.setDictionary(dictionary);\n            \n            /* read */ byte[] readDictionary = deflateStream.getDictionary();\n            for (byte b : readDictionary) {\n                System.out.print(b + \" \");\n            }\n            \n            deflateStream.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "write_method": "setDictionary",
        "read_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "read_method": "getDictionary"
    }
}