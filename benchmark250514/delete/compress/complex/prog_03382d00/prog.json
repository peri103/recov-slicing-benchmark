{
    "java_code": "import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        CpioArchiveEntry entry = new CpioArchiveEntry(\"test.txt\", 100);\n        /* write */ entry.setMode(755);\n        \n        // Additional code to increase complexity\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"entry1\", entry.getMode());\n        map.put(\"entry2\", 644);\n        \n        for (Map.Entry<String, Integer> e : map.entrySet()) {\n            System.out.println(\"Key: \" + e.getKey() + \", Value: \" + e.getValue());\n        }\n        \n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n        \n        // Simulate some complex operations\n        int complexCalculation = (sum * 2) + map.get(\"entry2\");\n        System.out.println(\"Result of complex calculation: \" + complexCalculation);\n        \n        // Ensure original read method is far apart\n        /* read */ int mode = entry.getMode();\n        System.out.println(\"Retrieved mode: \" + mode);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        CpioArchiveEntry entry = new CpioArchiveEntry(\"test.txt\", 100);\n        /* write */ entry.setMode(755);\n        /* read */ int mode = entry.getMode();\n        System.out.println(mode);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry",
        "write_method": "setMode",
        "read_class": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry",
        "read_method": "getMode"
    }
}