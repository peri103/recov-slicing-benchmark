{
    "java_code": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize GzipParameters instance\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        // Other unrelated code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        \n        for (String key : map.keySet()) {\n            System.out.println(key + \": \" + map.get(key));\n        }\n        \n        // Set compressed size using GzipParameters\n        /* write */ gzipParameters.setCompressedSize(2048L);\n\n        // More unrelated code\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Retrieve compressed size using GzipParameters\n        /* read */ long compressedSize = gzipParameters.getCompressedSize();\n        \n        System.out.println(\"Compressed Size: \" + compressedSize);\n        \n        // Further unrelated code\n        for (int i = 0; i < numbers.size(); i++) {\n            System.out.println(\"Number at index \" + i + \": \" + numbers.get(i));\n        }\n        \n        map.put(\"Three\", 3);\n        System.out.println(\"Updated map: \" + map);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        /* write */ gzipParameters.setCompressedSize(1024L);\n        /* read */ long compressedSize = gzipParameters.getCompressedSize();\n        \n        System.out.println(compressedSize);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setCompressedSize",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getCompressedSize"
    }
}