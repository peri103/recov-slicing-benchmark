{
    "java_code": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize GzipParameters object\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        // Create a byte array to use with setExtra and getExtra methods\n        byte[] extraData = new byte[]{1, 2, 3, 4, 5};\n        \n        /* write */ gzipParameters.setExtra(extraData);\n        \n        // Create a list and a map to make the program more complex\n        List<Integer> numbers = new ArrayList<>();\n        Map<String, Integer> nameToAge = new HashMap<>();\n        \n        // Populate the list and map\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        nameToAge.put(\"Alice\", 30);\n        nameToAge.put(\"Bob\", 25);\n        nameToAge.put(\"Charlie\", 35);\n        \n        // Perform some operations on the list and map\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        \n        int ageSum = 0;\n        for (String name : nameToAge.keySet()) {\n            ageSum += nameToAge.get(name);\n        }\n        \n        // Print the results of operations\n        System.out.println(\"Sum of numbers: \" + sum);\n        System.out.println(\"Sum of ages: \" + ageSum);\n        \n        // Further processing\n        int maxNumber = numbers.stream().max(Integer::compareTo).orElse(0);\n        System.out.println(\"Max number: \" + maxNumber);\n        \n        int minAge = nameToAge.values().stream().min(Integer::compareTo).orElse(0);\n        System.out.println(\"Min age: \" + minAge);\n        \n        /* read */ byte[] readData = gzipParameters.getExtra();\n        \n        // Print the read data to verify it matches the written data\n        System.out.print(\"Read extra data: \");\n        for (byte b : readData) {\n            System.out.print(b + \" \");\n        }\n        System.out.println();\n        \n        // Additional logic to make the program more complex\n        List<String> names = new ArrayList<>(nameToAge.keySet());\n        names.sort(String::compareTo);\n        \n        System.out.println(\"Sorted names: \" + names);\n        \n        int product = numbers.stream().reduce(1, (a, b) -> a * b);\n        System.out.println(\"Product of numbers: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize GzipParameters object\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        // Create a byte array to use with setExtra and getExtra methods\n        byte[] extraData = new byte[]{1, 2, 3, 4, 5};\n        \n        /* write */ gzipParameters.setExtra(extraData);\n        /* read */ byte[] readData = gzipParameters.getExtra();\n        \n        // Print the read data to verify it matches the written data\n        for (byte b : readData) {\n            System.out.print(b + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setExtra",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getExtra"
    }
}