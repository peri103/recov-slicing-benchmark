{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"initialName\");\n        ArrayList<String> nameList = new ArrayList<>();\n        HashMap<String, Integer> nameMap = new HashMap<>();\n\n        // Add some initial names to the list and map\n        nameList.add(\"firstName\");\n        nameList.add(\"secondName\");\n        nameMap.put(\"firstName\", 1);\n        nameMap.put(\"secondName\", 2);\n\n        // Use the original write method\n        /* write */ jarEntry.setName(\"updatedName\");\n\n        // Add the updated name to the list and map\n        nameList.add(jarEntry.getName());\n        nameMap.put(jarEntry.getName(), 3);\n\n        // Process the list\n        for (String name : nameList) {\n            System.out.println(\"Processing name: \" + name);\n        }\n\n        // Use the original read method\n        /* read */ String name = jarEntry.getName();\n        System.out.println(\"Read name from JarArchiveEntry: \" + name);\n\n        // Further processing with the map\n        if (nameMap.containsKey(name)) {\n            System.out.println(\"Found \" + name + \" in map with value: \" + nameMap.get(name));\n        }\n\n        // Adding more complexity with additional calculations\n        int sum = 0;\n        for (int value : nameMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in nameMap: \" + sum);\n\n        // More unrelated code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 5);\n        }\n\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"initialName\");\n        /* write */ jarEntry.setName(\"updatedName\");\n        /* read */ String name = jarEntry.getName();\n        System.out.println(name);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setName",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getName"
    }
}