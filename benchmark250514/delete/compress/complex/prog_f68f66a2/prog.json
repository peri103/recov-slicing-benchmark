{
    "java_code": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 0);\n        ArrayList<ArArchiveEntry> entryList = new ArrayList<>();\n        HashMap<String, ArArchiveEntry> entryMap = new HashMap<>();\n\n        // Adding to list and map\n        entryList.add(entry);\n        entryMap.put(\"entry1\", entry);\n\n        // Manipulating additional entries\n        ArArchiveEntry entry2 = new ArArchiveEntry(\"example2.txt\", 0);\n        entry2.setSize(54321); // Different write-read pair\n        entryList.add(entry2);\n        entryMap.put(\"entry2\", entry2);\n\n        // Complex processing\n        for (ArArchiveEntry e : entryList) {\n            System.out.println(\"Processing entry: \" + e.getName());\n        }\n\n        // Original write\n        /* write */ entry.setSize(12345);\n\n        // More complex logic\n        if (entryMap.containsKey(\"entry1\")) {\n            ArArchiveEntry retrievedEntry = entryMap.get(\"entry1\");\n            System.out.println(\"Retrieved entry name: \" + retrievedEntry.getName());\n        }\n\n        // Original read\n        /* read */ long size = entry.getSize();\n        System.out.println(\"Original entry size: \" + size);\n\n        // Further processing\n        for (String key : entryMap.keySet()) {\n            ArArchiveEntry e = entryMap.get(key);\n            System.out.println(\"Key: \" + key + \", Size: \" + e.getSize());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 0);\n        /* write */ entry.setSize(12345);\n        /* read */ long size = entry.getSize();\n        System.out.println(size);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setSize",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getSize"
    }
}