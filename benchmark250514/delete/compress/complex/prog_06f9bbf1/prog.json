{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipFile;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        List<String> commentsList = new ArrayList<>();\n        \n        // Adding some unrelated operations\n        for (int i = 0; i < 5; i++) {\n            commentsList.add(\"Comment \" + i);\n        }\n        \n        // Perform operations on ZipFile (unrelated to original pair)\n        ZipFile zipFile = new ZipFile(\"dummy.zip\");\n        zipFile.addRawArchiveEntry(zipEntry, null); // Dummy operation\n        \n        // Continue with some more unrelated operations\n        int sum = 0;\n        for (String comment : commentsList) {\n            sum += comment.length();\n        }\n        System.out.println(\"Total length of comments: \" + sum);\n        \n        /* write */ zipEntry.setComment(\"This is a comment\");\n        \n        // More unrelated operations\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * i);\n        }\n        int total = 0;\n        for (Integer num : numbers) {\n            total += num;\n        }\n        System.out.println(\"Sum of squares: \" + total);\n        \n        /* read */ String comment = zipEntry.getComment();\n        \n        System.out.println(comment);\n        \n        // Even more unrelated operations\n        for (int i = 0; i < numbers.size(); i++) {\n            System.out.println(\"Square of \" + i + \": \" + numbers.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        \n        /* write */ zipEntry.setComment(\"This is a comment\");\n        \n        /* read */ String comment = zipEntry.getComment();\n        \n        System.out.println(comment);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setComment",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getComment"
    }
}