{
    "java_code": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 1000);\n        /* write */ entry.setCompressedSize(500);\n        \n        // Additional code to make the program more complex\n        ArrayList<ArArchiveEntry> archiveList = new ArrayList<>();\n        archiveList.add(entry);\n        \n        ArArchiveEntry anotherEntry = new ArArchiveEntry(\"another_example.txt\", 1500);\n        anotherEntry.setCompressedSize(750);\n        archiveList.add(anotherEntry);\n\n        for (ArArchiveEntry arEntry : archiveList) {\n            System.out.println(\"Entry Name: \" + arEntry.getName());\n            System.out.println(\"Original Size: \" + arEntry.getSize());\n        }\n        \n        // Manipulating the list to add complexity\n        ArrayList<Long> compressedSizes = new ArrayList<>();\n        for (ArArchiveEntry arEntry : archiveList) {\n            compressedSizes.add(arEntry.getCompressedSize());\n        }\n\n        for (Long size : compressedSizes) {\n            System.out.println(\"Compressed Size: \" + size);\n        }\n\n        // Continuing with original read operation\n        /* read */ long compressedSize = entry.getCompressedSize();\n        System.out.println(\"Read Compressed Size: \" + compressedSize);\n\n        // Further manipulation and complexity\n        long totalCompressedSize = 0;\n        for (Long size : compressedSizes) {\n            totalCompressedSize += size;\n        }\n        System.out.println(\"Total Compressed Size: \" + totalCompressedSize);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 1000);\n        /* write */ entry.setCompressedSize(500);\n        /* read */ long compressedSize = entry.getCompressedSize();\n        System.out.println(compressedSize);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setCompressedSize",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getCompressedSize"
    }
}