{
    "java_code": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        /* write */ gzipParameters.setCompressedSize(12345L);\n        \n        // Additional complexity: Using ArrayList\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numberList.add(i * 5);\n        }\n        \n        // Additional complexity: Using HashMap\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n        \n        // Processing data from ArrayList\n        for (int number : numberList) {\n            if (number % 2 == 0) {\n                System.out.println(\"Even number: \" + number);\n            }\n        }\n        \n        // Accessing data from HashMap\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n        \n        // Simulate some calculations\n        int sum = 0;\n        for (int i = 1; i <= 100; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 100 numbers: \" + sum);\n        \n        // More processing\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 numbers: \" + product);\n        \n        /* read */ long compressedSize = gzipParameters.getCompressedSize();\n        System.out.println(\"Compressed Size: \" + compressedSize);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        /* write */ gzipParameters.setCompressedSize(12345L);\n        /* read */ long compressedSize = gzipParameters.getCompressedSize();\n        System.out.println(compressedSize);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setCompressedSize",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getCompressedSize"
    }
}