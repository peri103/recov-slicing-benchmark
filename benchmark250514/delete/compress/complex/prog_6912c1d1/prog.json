{
    "java_code": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a TarArchiveEntry object\n        TarArchiveEntry entry = new TarArchiveEntry(\"example.txt\");\n        \n        // Set the modification time\n        long modTime = System.currentTimeMillis();\n        /* write */ entry.setModTime(modTime);\n\n        // Add some complexity using a HashMap\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        \n        // Perform operations on the HashMap\n        if (map.containsKey(\"key1\")) {\n            map.put(\"key1\", map.get(\"key1\") + 50);\n        }\n        \n        // Initialize an ArrayList\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            list.add(i * 10);\n        }\n        \n        // Iterate over the ArrayList and print values\n        for (Integer num : list) {\n            System.out.println(\"List Value: \" + num);\n        }\n        \n        // Generate a random number\n        Random random = new Random();\n        int randomNumber = random.nextInt(100);\n        System.out.println(\"Random Number: \" + randomNumber);\n        \n        // Retrieve and print the modification time\n        /* read */ long readModTime = entry.getModTime();\n        System.out.println(\"Modification Time: \" + readModTime);\n        \n        // Perform additional operations on the HashMap\n        map.put(\"key3\", randomNumber);\n        System.out.println(\"Map Size: \" + map.size());\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        TarArchiveEntry entry = new TarArchiveEntry(\"example.txt\");\n        long modTime = System.currentTimeMillis();\n        /* write */ entry.setModTime(modTime);\n        /* read */ long readModTime = entry.getModTime();\n        System.out.println(\"Modification Time: \" + readModTime);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "write_method": "setModTime",
        "read_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "read_method": "getModTime"
    }
}