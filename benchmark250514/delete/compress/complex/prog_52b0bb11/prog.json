{
    "java_code": "import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        CpioArchiveEntry entry = new CpioArchiveEntry(\"test.txt\", 100);\n        long lastModifiedTime = System.currentTimeMillis();\n        /* write */ entry.setLastModified(lastModifiedTime);\n\n        // Additional complex code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        Map<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < numbers.size(); i++) {\n            map.put(\"Key\" + i, numbers.get(i));\n        }\n\n        int sum = 0;\n        for (int value : numbers) {\n            sum += value;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Accessing map values\n        for (Map.Entry<String, Integer> entrySet : map.entrySet()) {\n            System.out.println(\"Key: \" + entrySet.getKey() + \", Value: \" + entrySet.getValue());\n        }\n\n        // More complex operations\n        int max = Integer.MIN_VALUE;\n        for (int value : numbers) {\n            if (value > max) {\n                max = value;\n            }\n        }\n        System.out.println(\"Max value: \" + max);\n\n        // Read the last modified time from the entry\n        /* read */ long readTime = entry.getLastModified();\n        System.out.println(\"Last Modified Time: \" + readTime);\n\n        // Perform some calculations\n        double average = sum / (double) numbers.size();\n        System.out.println(\"Average: \" + average);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        CpioArchiveEntry entry = new CpioArchiveEntry(\"test.txt\", 100);\n        long lastModifiedTime = System.currentTimeMillis();\n        /* write */ entry.setLastModified(lastModifiedTime);\n        /* read */ long readTime = entry.getLastModified();\n        System.out.println(readTime);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry",
        "write_method": "setLastModified",
        "read_class": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry",
        "read_method": "getLastModified"
    }
}