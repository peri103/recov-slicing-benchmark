{
    "java_code": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.io.ByteArrayOutputStream;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n            DeflateCompressorOutputStream deflateOutputStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n\n            // Initialize some collections\n            ArrayList<Integer> numbers = new ArrayList<>();\n            HashMap<String, String> map = new HashMap<>();\n            map.put(\"key1\", \"value1\");\n            map.put(\"key2\", \"value2\");\n\n            // Perform some operations on the collections\n            for (int i = 0; i < 5; i++) {\n                numbers.add(i * 10);\n            }\n            for (String key : map.keySet()) {\n                System.out.println(\"Map Entry: \" + key + \" -> \" + map.get(key));\n            }\n\n            /* write */ deflateOutputStream.setFlushMode(FlushMode.SYNC_FLUSH);\n\n            // More operations on the numbers list\n            for (int number : numbers) {\n                System.out.println(\"Number: \" + number);\n            }\n\n            // Additional logic unrelated to the main task\n            int sum = 0;\n            for (int number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            /* read */ FlushMode flushMode = deflateOutputStream.getFlushMode();\n            System.out.println(\"Flush mode set to: \" + flushMode);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.io.ByteArrayOutputStream;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n            DeflateCompressorOutputStream deflateOutputStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n\n            /* write */ deflateOutputStream.setFlushMode(FlushMode.SYNC_FLUSH);\n            /* read */ FlushMode flushMode = deflateOutputStream.getFlushMode();\n            \n            System.out.println(flushMode);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "write_method": "setFlushMode",
        "read_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "read_method": "getFlushMode"
    }
}