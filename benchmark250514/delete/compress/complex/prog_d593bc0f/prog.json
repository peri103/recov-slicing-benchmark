{
    "java_code": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing a dummy InputStream, as BZip2CompressorInputStream requires an InputStream.\n        InputStream dummyInputStream = new InputStream() {\n            @Override\n            public int read() throws IOException {\n                return -1; // Return end of stream indicator\n            }\n        };\n\n        try {\n            BZip2CompressorInputStream bzip2Stream = new BZip2CompressorInputStream(dummyInputStream);\n\n            /* write */ bzip2Stream.setBlockSize(900000); // Set the block size to 900000\n\n            // Additional complex code\n            List<String> stringList = new ArrayList<>();\n            Map<String, Integer> stringLengthMap = new HashMap<>();\n\n            stringList.add(\"Hello\");\n            stringList.add(\"World\");\n            stringList.add(\"Complex\");\n            stringList.add(\"Program\");\n\n            for (String str : stringList) {\n                stringLengthMap.put(str, str.length());\n            }\n\n            // Print the string lengths\n            for (Map.Entry<String, Integer> entry : stringLengthMap.entrySet()) {\n                System.out.println(\"String: \" + entry.getKey() + \", Length: \" + entry.getValue());\n            }\n\n            // More unrelated operations\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 10 integers: \" + sum);\n\n            // Retrieve the block size\n            /* read */ int blockSize = bzip2Stream.getBlockSize(); // Get the block size\n\n            System.out.println(\"Block size: \" + blockSize);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing a dummy InputStream, as BZip2CompressorInputStream requires an InputStream.\n        InputStream dummyInputStream = new InputStream() {\n            @Override\n            public int read() throws IOException {\n                return -1; // Return end of stream indicator\n            }\n        };\n\n        try {\n            BZip2CompressorInputStream bzip2Stream = new BZip2CompressorInputStream(dummyInputStream);\n\n            /* write */ bzip2Stream.setBlockSize(900000); // Set the block size to 900000\n\n            /* read */ int blockSize = bzip2Stream.getBlockSize(); // Get the block size\n\n            System.out.println(blockSize);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "write_method": "setBlockSize",
        "read_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "read_method": "getBlockSize"
    }
}