{
    "java_code": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport org.apache.commons.compress.archivers.ar.ArArchiveOutputStream;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 0);\n        /* write */ entry.setSize(1024);\n        \n        // Create a collection to store multiple entries\n        ArrayList<ArArchiveEntry> archiveEntries = new ArrayList<>();\n        archiveEntries.add(entry);\n        \n        // Create a map to simulate some metadata storage\n        HashMap<String, Long> entrySizes = new HashMap<>();\n        for (ArArchiveEntry e : archiveEntries) {\n            entrySizes.put(e.getName(), e.getSize());\n        }\n\n        // Add more entries to demonstrate complexity\n        ArArchiveEntry entry2 = new ArArchiveEntry(\"example2.txt\", 2048);\n        archiveEntries.add(entry2);\n        entrySizes.put(entry2.getName(), entry2.getSize());\n\n        // Simulate some processing on the entries\n        for (ArArchiveEntry e : archiveEntries) {\n            System.out.println(\"Processing entry: \" + e.getName());\n        }\n\n        // Retrieve the size of the first entry\n        /* read */ long size = entry.getSize();\n        System.out.println(\"Size of 'example.txt': \" + size);\n\n        // Further processing on entry sizes\n        long totalSize = 0;\n        for (Long entrySize : entrySizes.values()) {\n            totalSize += entrySize;\n        }\n        System.out.println(\"Total size of all entries: \" + totalSize);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 0);\n        /* write */ entry.setSize(1024);\n        /* read */ long size = entry.getSize();\n        System.out.println(size);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setSize",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getSize"
    }
}