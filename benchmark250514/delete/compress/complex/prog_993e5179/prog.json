{
    "java_code": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 1000);\n        Map<String, Integer> attributesMap = new HashMap<>();\n        \n        // Adding some attributes to the map\n        attributesMap.put(\"attribute1\", 11111);\n        attributesMap.put(\"attribute2\", 22222);\n\n        // Simulate some operations with the map\n        for (Map.Entry<String, Integer> mapEntry : attributesMap.entrySet()) {\n            System.out.println(\"Key: \" + mapEntry.getKey() + \", Value: \" + mapEntry.getValue());\n        }\n\n        /* write */ entry.setExternalAttributes(12345);\n\n        // More operations\n        int total = 0;\n        for (Integer value : attributesMap.values()) {\n            total += value;\n        }\n        System.out.println(\"Total of attribute values: \" + total);\n\n        // Simulate a different object and operations\n        ArArchiveEntry anotherEntry = new ArArchiveEntry(\"another.txt\", 500);\n        anotherEntry.setExternalAttributes(67890);\n        System.out.println(\"Another entry attributes: \" + anotherEntry.getExternalAttributes());\n\n        /* read */ int attributes = entry.getExternalAttributes();\n        System.out.println(\"External attributes of entry: \" + attributes);\n\n        // Additional operations to make program more complex\n        int complexCalculation = attributes * total;\n        System.out.println(\"Result of complex calculation: \" + complexCalculation);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 1000);\n        /* write */ entry.setExternalAttributes(12345);\n        /* read */ int attributes = entry.getExternalAttributes();\n        System.out.println(attributes);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setExternalAttributes",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getExternalAttributes"
    }
}