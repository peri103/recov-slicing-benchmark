{
    "java_code": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\nimport java.io.InputStream;\nimport java.io.ByteArrayInputStream;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a dummy InputStream for BZip2CompressorInputStream\n        byte[] dummyData = new byte[0];\n        InputStream dummyInputStream = new ByteArrayInputStream(dummyData);\n\n        try {\n            BZip2CompressorInputStream bzip2Stream = new BZip2CompressorInputStream(dummyInputStream);\n            \n            // Hypothetical API usage\n            /* write */ bzip2Stream.setStreamSize(1024);\n\n            // Additional unrelated code to increase complexity\n            ArrayList<String> stringList = new ArrayList<>();\n            stringList.add(\"Hello\");\n            stringList.add(\"World\");\n\n            HashMap<String, Integer> wordCountMap = new HashMap<>();\n            for (String word : stringList) {\n                wordCountMap.put(word, word.length());\n            }\n\n            int totalLength = 0;\n            for (Integer length : wordCountMap.values()) {\n                totalLength += length;\n            }\n            System.out.println(\"Total length of words: \" + totalLength);\n\n            // More complex logic\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n            // Read the stream size set earlier\n            /* read */ int streamSize = bzip2Stream.getStreamSize();\n            System.out.println(\"Stream Size: \" + streamSize);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\nimport java.io.InputStream;\nimport java.io.ByteArrayInputStream;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Since BZip2CompressorInputStream requires an InputStream, we create a dummy one\n        byte[] dummyData = new byte[0];\n        InputStream dummyInputStream = new ByteArrayInputStream(dummyData);\n        \n        try {\n            BZip2CompressorInputStream bzip2Stream = new BZip2CompressorInputStream(dummyInputStream);\n            \n            // Assuming setStreamSize and getStreamSize are existing methods in the BZip2CompressorInputStream\n            // As per the actual Apache Commons Compress library, these methods do not exist.\n            // This is a hypothetical example based on the given input.\n            \n            /* write */ bzip2Stream.setStreamSize(1024);\n            /* read */ int streamSize = bzip2Stream.getStreamSize();\n            System.out.println(\"Stream Size: \" + streamSize);\n            \n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "write_method": "setStreamSize",
        "read_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "read_method": "getStreamSize"
    }
}