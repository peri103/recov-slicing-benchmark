{
    "java_code": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        \n        // Unrelated complex code\n        ArrayList<String> namesList = new ArrayList<>();\n        namesList.add(\"Alice\");\n        namesList.add(\"Bob\");\n        namesList.add(\"Charlie\");\n        \n        HashMap<String, Integer> nameLengthMap = new HashMap<>();\n        for (String name : namesList) {\n            nameLengthMap.put(name, name.length());\n        }\n        \n        int totalLength = 0;\n        for (Integer length : nameLengthMap.values()) {\n            totalLength += length;\n        }\n        \n        System.out.println(\"Total length of names: \" + totalLength);\n        \n        /* write */ entry.setName(\"exampleName\");\n        \n        // More unrelated code\n        ArrayList<Integer> numbersList = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbersList.add(i * i);\n        }\n        \n        int sumOfSquares = 0;\n        for (int number : numbersList) {\n            sumOfSquares += number;\n        }\n        \n        System.out.println(\"Sum of squares: \" + sumOfSquares);\n        \n        /* read */ String name = entry.getName();\n        System.out.println(\"DumpArchiveEntry name: \" + name);\n        \n        // Further unrelated code\n        HashMap<String, String> nameToUpperMap = new HashMap<>();\n        for (String name : namesList) {\n            nameToUpperMap.put(name, name.toUpperCase());\n        }\n        \n        for (String key : nameToUpperMap.keySet()) {\n            System.out.println(key + \" -> \" + nameToUpperMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        /* write */ entry.setName(\"exampleName\");\n        /* read */ String name = entry.getName();\n        System.out.println(name);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "write_method": "setName",
        "read_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "read_method": "getName"
    }
}