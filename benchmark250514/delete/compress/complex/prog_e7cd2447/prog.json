{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a JarArchiveEntry\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"initialName\");\n        /* write */ jarEntry.setName(\"newName\");\n        \n        // Create a list of JarArchiveEntries\n        List<JarArchiveEntry> jarEntries = new ArrayList<>();\n        jarEntries.add(jarEntry);\n        \n        // Create a map to store the names of the entries\n        Map<String, JarArchiveEntry> entryMap = new HashMap<>();\n        \n        // Populate the map with entries\n        for (JarArchiveEntry entry : jarEntries) {\n            entryMap.put(entry.getName(), entry);\n        }\n\n        // Perform some operations on the map\n        if (entryMap.containsKey(\"newName\")) {\n            JarArchiveEntry retrievedEntry = entryMap.get(\"newName\");\n            System.out.println(\"Entry found: \" + retrievedEntry.getName());\n        } else {\n            System.out.println(\"Entry not found.\");\n        }\n\n        // Further processing\n        for (JarArchiveEntry entry : jarEntries) {\n            System.out.println(\"Processing entry: \" + entry.getName());\n        }\n\n        // Final read operation\n        /* read */ String name = jarEntry.getName();\n        System.out.println(\"Final name: \" + name);\n\n        // Additional unrelated operations to increase complexity\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        for (int num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"initialName\");\n        /* write */ jarEntry.setName(\"newName\");\n        /* read */ String name = jarEntry.getName();\n        System.out.println(name);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setName",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getName"
    }
}