{
    "java_code": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        HashMap<String, Long> sizeMap = new HashMap<>();\n        ArrayList<Long> sizeList = new ArrayList<>();\n\n        // Initialize some data\n        sizeMap.put(\"file1\", 2048L);\n        sizeMap.put(\"file2\", 4096L);\n        sizeMap.put(\"file3\", 8192L);\n\n        // Add sizes to list\n        sizeList.add(sizeMap.get(\"file1\"));\n        sizeList.add(sizeMap.get(\"file2\"));\n        sizeList.add(sizeMap.get(\"file3\"));\n\n        // Perform some calculations\n        long totalSize = 0;\n        for (Long size : sizeList) {\n            totalSize += size;\n        }\n        System.out.println(\"Total size: \" + totalSize);\n\n        // Set compressed size for entry\n        /* write */ entry.setCompressedSize(1024L);\n\n        // Additional operations\n        sizeMap.put(\"compressed\", entry.getCompressedSize());\n        sizeList.add(sizeMap.get(\"compressed\"));\n\n        totalSize = 0;\n        for (Long size : sizeList) {\n            totalSize += size;\n        }\n        System.out.println(\"Total size after compression: \" + totalSize);\n\n        // Read the compressed size\n        /* read */ long compressedSize = entry.getCompressedSize();\n        System.out.println(\"Compressed size: \" + compressedSize);\n\n        // More complex operations\n        for (int i = 0; i < sizeList.size(); i++) {\n            System.out.println(\"Size at index \" + i + \": \" + sizeList.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        /* write */ entry.setCompressedSize(1024L);\n        /* read */ long compressedSize = entry.getCompressedSize();\n        System.out.println(compressedSize);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "write_method": "setCompressedSize",
        "read_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "read_method": "getCompressedSize"
    }
}