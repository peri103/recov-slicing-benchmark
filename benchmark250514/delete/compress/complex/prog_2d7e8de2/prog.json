{
    "java_code": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport org.apache.commons.compress.archivers.ar.ArArchiveOutputStream;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 100);\n        long lastModifiedTime = 1625164800000L; // Example timestamp\n        \n        // Additional complexity: Create another ArArchiveEntry and manipulate it\n        ArArchiveEntry anotherEntry = new ArArchiveEntry(\"anotherExample.txt\", 200);\n        anotherEntry.setLastModified(1625164900000L);\n        long anotherTime = anotherEntry.getLastModified();\n        System.out.println(\"Another entry last modified: \" + anotherTime);\n\n        // Manipulate a collection of entries\n        ArrayList<ArArchiveEntry> entryList = new ArrayList<>();\n        entryList.add(entry);\n        entryList.add(anotherEntry);\n        \n        // Perform operations on the list\n        for (ArArchiveEntry e : entryList) {\n            System.out.println(\"Entry name: \" + e.getName() + \", Size: \" + e.getSize());\n        }\n        \n        // Use ArArchiveOutputStream (without actual file operations)\n        ArArchiveOutputStream archiveOutputStream = null; // Placeholder\n        for (ArArchiveEntry e : entryList) {\n            // Hypothetical operation on the stream\n            // archiveOutputStream.putArchiveEntry(e);\n            System.out.println(\"Would write entry: \" + e.getName());\n        }\n        \n        /* write */ entry.setLastModified(lastModifiedTime);\n        \n        // Perform some unrelated computations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i * 10;\n        }\n        System.out.println(\"Sum of multiples of 10: \" + sum);\n        \n        // Retrieve and print the last modified time of the original entry\n        /* read */ long retrievedTime = entry.getLastModified();\n        System.out.println(\"Original entry last modified: \" + retrievedTime);\n\n        // Further unrelated logic\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 3; i++) {\n            numbers.add(i * 100);\n        }\n        for (int num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 100);\n        long lastModifiedTime = 1625164800000L; // Example timestamp\n        /* write */ entry.setLastModified(lastModifiedTime);\n        /* read */ long retrievedTime = entry.getLastModified();\n        System.out.println(retrievedTime);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setLastModified",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getLastModified"
    }
}