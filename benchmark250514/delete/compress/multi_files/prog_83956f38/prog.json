{
    "files": {
        "ArchiveEntry.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class ArchiveEntry {\n    private ArArchiveEntry entry;\n\n    public ArchiveEntry(String name, long size) {\n        this.entry = new ArArchiveEntry(name, size);\n    }\n\n    public void setUserId(int userId) {\n        /* write */ entry.setUserId(userId);\n    }\n\n    public int getUserId() {\n        return entry.getUserId();\n    }\n\n    public String getName() {\n        return entry.getName();\n    }\n\n    public long getSize() {\n        return entry.getSize();\n    }\n}\n",
        "ArchiveManager.java": "import java.util.HashMap;\n\npublic class ArchiveManager {\n    private HashMap<String, ArchiveEntry> archiveMap = new HashMap<>();\n\n    public void addEntry(ArchiveEntry entry) {\n        archiveMap.put(entry.getName(), entry);\n    }\n\n    public ArchiveEntry getEntry(String name) {\n        return archiveMap.get(name);\n    }\n\n    public void printEntries() {\n        for (String name : archiveMap.keySet()) {\n            ArchiveEntry entry = archiveMap.get(name);\n            System.out.println(\"File: \" + name + \", Size: \" + entry.getSize() + \", User ID: \" + entry.getUserId());\n        }\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        ArchiveManager manager = new ArchiveManager();\n        \n        ArchiveEntry entry1 = new ArchiveEntry(\"example.txt\", 100);\n        entry1.setUserId(12345);\n        manager.addEntry(entry1);\n        \n        ArchiveEntry entry2 = new ArchiveEntry(\"another.txt\", 200);\n        entry2.setUserId(67890);\n        manager.addEntry(entry2);\n        \n        manager.printEntries();\n        \n        ArchiveEntry retrievedEntry = manager.getEntry(\"example.txt\");\n        /* read */ int userId = retrievedEntry.getUserId();\n        System.out.println(\"Retrieved User ID for \" + retrievedEntry.getName() + \": \" + userId);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setUserId",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getUserId"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 100);\n        /* write */ entry.setUserId(12345);\n        /* read */ int userId = entry.getUserId();\n        System.out.println(userId);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport org.apache.commons.compress.archivers.ar.ArArchiveOutputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 100);\n        /* write */ entry.setUserId(12345);\n        \n        // Create a map to store file entries and their user ids\n        HashMap<String, Integer> fileUserMap = new HashMap<>();\n        fileUserMap.put(entry.getName(), entry.getUserId());\n\n        // Create another entry and add it to the map\n        ArArchiveEntry entry2 = new ArArchiveEntry(\"another.txt\", 200);\n        entry2.setUserId(67890);\n        fileUserMap.put(entry2.getName(), entry2.getUserId());\n\n        // Create a list to store archive entries\n        ArrayList<ArArchiveEntry> archiveList = new ArrayList<>();\n        archiveList.add(entry);\n        archiveList.add(entry2);\n\n        // Simulate adding entries to an archive output stream\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        ArArchiveOutputStream aos = new ArArchiveOutputStream(baos);\n        for (ArArchiveEntry e : archiveList) {\n            try {\n                aos.putArchiveEntry(e);\n                aos.closeArchiveEntry();\n            } catch (Exception ex) {\n                System.out.println(\"Error processing entry: \" + e.getName());\n            }\n        }\n        \n        // Retrieve and print userId for the original entry\n        /* read */ int userId = entry.getUserId();\n        System.out.println(\"User ID for \" + entry.getName() + \": \" + userId);\n\n        // Print all entries and their user ids\n        for (String fileName : fileUserMap.keySet()) {\n            System.out.println(\"File: \" + fileName + \", User ID: \" + fileUserMap.get(fileName));\n        }\n    }\n}"
}