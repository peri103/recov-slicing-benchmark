{
    "files": {
        "ArchiveEntryManager.java": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\nimport java.util.ArrayList;\n\npublic class ArchiveEntryManager {\n    private ArrayList<DumpArchiveEntry> entryList = new ArrayList<>();\n\n    public void addEntry(DumpArchiveEntry entry) {\n        entryList.add(entry);\n    }\n\n    public DumpArchiveEntry getEntry(int index) {\n        if (index >= 0 && index < entryList.size()) {\n            return entryList.get(index);\n        }\n        return null;\n    }\n\n    public int getTotalEntries() {\n        return entryList.size();\n    }\n}\n",
        "EntryUtil.java": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class EntryUtil {\n    public static void updateUserName(DumpArchiveEntry entry, String newUserName) {\n        /* write */ entry.setUserName(newUserName);\n    }\n\n    public static String fetchUserName(DumpArchiveEntry entry) {\n        /* read */ return entry.getUserName();\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArchiveEntryManager manager = new ArchiveEntryManager();\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n\n        EntryUtil.updateUserName(entry, \"testUser\");\n        manager.addEntry(entry);\n\n        DumpArchiveEntry anotherEntry = new DumpArchiveEntry();\n        EntryUtil.updateUserName(anotherEntry, \"anotherUser\");\n        manager.addEntry(anotherEntry);\n\n        for (int i = 0; i < manager.getTotalEntries(); i++) {\n            DumpArchiveEntry currentEntry = manager.getEntry(i);\n            System.out.println(\"Entry UserName: \" + EntryUtil.fetchUserName(currentEntry));\n        }\n\n        String userName = EntryUtil.fetchUserName(entry);\n        System.out.println(\"Final UserName of first entry: \" + userName);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "write_method": "setUserName",
        "read_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "read_method": "getUserName"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        /* write */ entry.setUserName(\"testUser\");\n        /* read */ String userName = entry.getUserName();\n        System.out.println(userName);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        ArrayList<DumpArchiveEntry> entryList = new ArrayList<>();\n\n        /* write */ entry.setUserName(\"testUser\");\n        entryList.add(entry);\n\n        // Adding more complexity with additional operations\n        DumpArchiveEntry anotherEntry = new DumpArchiveEntry();\n        anotherEntry.setUserName(\"anotherUser\");\n        entryList.add(anotherEntry);\n\n        for (DumpArchiveEntry e : entryList) {\n            System.out.println(\"Entry UserName: \" + e.getUserName());\n        }\n\n        // Manipulating the list of entries\n        if (!entryList.isEmpty()) {\n            DumpArchiveEntry firstEntry = entryList.get(0);\n            firstEntry.setUserName(\"updatedUser\");\n        }\n\n        // More operations to increase complexity\n        int totalEntries = entryList.size();\n        System.out.println(\"Total Entries: \" + totalEntries);\n\n        // Some dummy logic to interact with the entries\n        for (int i = 0; i < totalEntries; i++) {\n            DumpArchiveEntry currentEntry = entryList.get(i);\n            if (currentEntry.getUserName().startsWith(\"test\")) {\n                System.out.println(\"Found test user at index: \" + i);\n            }\n        }\n\n        // Final read operation\n        /* read */ String userName = entry.getUserName();\n        System.out.println(\"Final UserName of first entry: \" + userName);\n    }\n}"
}