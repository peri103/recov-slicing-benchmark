{
    "files": {
        "LinkEntry.java": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class LinkEntry {\n    private DumpArchiveEntry entry;\n\n    public LinkEntry() {\n        entry = new DumpArchiveEntry();\n    }\n\n    public void setLink(String linkName) {\n        /* write */ entry.setLinkName(linkName);\n    }\n\n    public String getLink() {\n        return entry.getLinkName();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n\n    public double getAverageGrade() {\n        int sum = 0;\n        for (int grade : grades) {\n            sum += grade;\n        }\n        return grades.size() > 0 ? (double) sum / grades.size() : 0.0;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public Student getTopStudent() {\n        Student topStudent = null;\n        double highestAverage = 0.0;\n        for (Student student : students) {\n            double average = student.getAverageGrade();\n            if (average > highestAverage) {\n                highestAverage = average;\n                topStudent = student;\n            }\n        }\n        return topStudent;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        LinkEntry linkEntry = new LinkEntry();\n        linkEntry.setLink(\"exampleLink\");\n\n        // Create students and a course\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n        alice.addGrade(85);\n        alice.addGrade(90);\n        bob.addGrade(78);\n        bob.addGrade(82);\n\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(alice);\n        course.addStudent(bob);\n\n        // Output top student\n        Student topStudent = course.getTopStudent();\n        System.out.println(\"Top student in \" + course.getCourseName() + \": \" + topStudent.getName());\n\n        // Read link name\n        /* read */ String linkName = linkEntry.getLink();\n        System.out.println(\"Link Name: \" + linkName);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "write_method": "setLinkName",
        "read_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "read_method": "getLinkName"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        /* write */ entry.setLinkName(\"exampleLink\");\n        /* read */ String linkName = entry.getLinkName();\n        System.out.println(linkName);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        /* write */ entry.setLinkName(\"exampleLink\");\n\n        // Unrelated operations to increase complexity\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numberList.add(i * 2);\n        }\n\n        HashMap<String, Integer> map = new HashMap<>();\n        for (Integer number : numberList) {\n            map.put(\"Key\" + number, number);\n        }\n\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n\n        System.out.println(\"Sum of numbers in map: \" + sum);\n\n        // Another unrelated operation\n        int[] array = new int[5];\n        for (int i = 0; i < array.length; i++) {\n            array[i] = i + 1;\n        }\n\n        int product = 1;\n        for (int num : array) {\n            product *= num;\n        }\n\n        System.out.println(\"Product of array elements: \" + product);\n\n        // Read operation\n        /* read */ String linkName = entry.getLinkName();\n        System.out.println(\"Link Name: \" + linkName);\n    }\n}"
}