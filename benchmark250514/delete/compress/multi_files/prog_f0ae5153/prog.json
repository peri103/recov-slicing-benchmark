{
    "files": {
        "BlockSizeManager.java": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\n\npublic class BlockSizeManager {\n    private BZip2CompressorInputStream bzip2Stream;\n\n    public BlockSizeManager() throws Exception {\n        // Initialize the BZip2CompressorInputStream with a dummy InputStream\n        this.bzip2Stream = new BZip2CompressorInputStream(new java.io.ByteArrayInputStream(new byte[0]));\n    }\n\n    public void setBlockSize(int size) {\n        /* write */ bzip2Stream.setBlockSize(size);\n    }\n\n    public int getBlockSize() {\n        /* read */ return bzip2Stream.getBlockSize();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n\n    public double getAverageScore() {\n        int sum = 0;\n        for (int score : scores) {\n            sum += score;\n        }\n        return scores.isEmpty() ? 0 : (double) sum / scores.size();\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Manage block size\n            BlockSizeManager blockSizeManager = new BlockSizeManager();\n            blockSizeManager.setBlockSize(900);\n\n            // Create a student and manage scores\n            Student student = new Student(\"Alice\");\n            student.addScore(85);\n            student.addScore(92);\n            student.addScore(76);\n\n            // Calculate average score\n            double averageScore = student.getAverageScore();\n            System.out.println(\"Average Score: \" + averageScore);\n\n            // Get block size\n            int blockSize = blockSizeManager.getBlockSize();\n            System.out.println(\"Block Size: \" + blockSize);\n            \n            // More student score operations\n            ArrayList<Integer> scores = new ArrayList<>(student.getScores());\n            scores.add(88);\n            System.out.println(\"Updated Scores: \" + scores);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "write_method": "setBlockSize",
        "read_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "read_method": "getBlockSize"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the BZip2CompressorInputStream with a dummy InputStream\n            BZip2CompressorInputStream bzip2Stream = new BZip2CompressorInputStream(new java.io.ByteArrayInputStream(new byte[0]));\n\n            // Set a block size using the write method\n            /* write */ bzip2Stream.setBlockSize(900);\n\n            // Read the block size using the read method\n            /* read */ int blockSize = bzip2Stream.getBlockSize();\n\n            System.out.println(\"Block Size: \" + blockSize);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the BZip2CompressorInputStream with a dummy InputStream\n            BZip2CompressorInputStream bzip2Stream = new BZip2CompressorInputStream(new java.io.ByteArrayInputStream(new byte[0]));\n\n            // Initialize an ArrayList to perform various operations\n            ArrayList<Integer> numberList = new ArrayList<>();\n\n            // Add elements to the ArrayList\n            for (int i = 0; i < 10; i++) {\n                numberList.add(i * 10);\n            }\n\n            // Perform some operations on the ArrayList\n            int sum = 0;\n            for (int num : numberList) {\n                sum += num;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // Set a block size using the write method\n            /* write */ bzip2Stream.setBlockSize(900);\n\n            // Perform more operations on the ArrayList\n            int max = Integer.MIN_VALUE;\n            for (int num : numberList) {\n                if (num > max) {\n                    max = num;\n                }\n            }\n            System.out.println(\"Max number: \" + max);\n\n            // Read the block size using the read method\n            /* read */ int blockSize = bzip2Stream.getBlockSize();\n\n            System.out.println(\"Block Size: \" + blockSize);\n\n            // Perform additional calculations\n            double average = sum / (double) numberList.size();\n            System.out.println(\"Average of numbers: \" + average);\n\n            // Reverse the ArrayList\n            ArrayList<Integer> reversedList = new ArrayList<>();\n            for (int i = numberList.size() - 1; i >= 0; i--) {\n                reversedList.add(numberList.get(i));\n            }\n            System.out.println(\"Reversed List: \" + reversedList);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}"
}