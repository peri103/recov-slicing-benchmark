{
    "files": {
        "GzipParametersWrapper.java": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.Date;\n\npublic class GzipParametersWrapper {\n    private GzipParameters gzipParameters = new GzipParameters();\n\n    public void setModificationTime(Date date) {\n        /* write */ gzipParameters.setModificationTime(date);\n    }\n\n    public Date getModificationTime() {\n        return gzipParameters.getModificationTime();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int credits;\n\n    public Course(String courseName, int credits) {\n        this.courseName = courseName;\n        this.credits = credits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "Main.java": "import java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Working with GzipParametersWrapper\n        GzipParametersWrapper gzipWrapper = new GzipParametersWrapper();\n        Date modificationTime = new Date();\n        gzipWrapper.setModificationTime(modificationTime);\n\n        // Working with Student and Course\n        Student student = new Student(\"Alice\");\n        Course math = new Course(\"Mathematics\", 3);\n        Course science = new Course(\"Science\", 4);\n        \n        student.enrollInCourse(math);\n        student.enrollInCourse(science);\n\n        for (Course course : student.getCourses()) {\n            System.out.println(\"Enrolled in: \" + course.getCourseName() + \" for \" + course.getCredits() + \" credits.\");\n        }\n\n        // Read the modification time\n        /* read */ Date retrievedTime = gzipWrapper.getModificationTime();\n        System.out.println(\"Modification Time: \" + retrievedTime);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setModificationTime",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getModificationTime"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        // Set the modification time using the write method\n        Date modificationTime = new Date();\n        /* write */ gzipParameters.setModificationTime(modificationTime);\n        \n        // Retrieve the modification time using the read method\n        /* read */ Date retrievedTime = gzipParameters.getModificationTime();\n        \n        System.out.println(\"Modification Time: \" + retrievedTime);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.Date;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        // Set the modification time using the write method\n        Date modificationTime = new Date();\n        /* write */ gzipParameters.setModificationTime(modificationTime);\n        \n        // Additional logic to increase complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * i);\n        }\n        \n        HashMap<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < numbers.size(); i++) {\n            map.put(\"Square of \" + i, numbers.get(i));\n        }\n        \n        for (String key : map.keySet()) {\n            System.out.println(key + \": \" + map.get(key));\n        }\n        \n        // Further unrelated logic\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of squares: \" + sum);\n        \n        // Retrieve the modification time using the read method\n        /* read */ Date retrievedTime = gzipParameters.getModificationTime();\n        \n        System.out.println(\"Modification Time: \" + retrievedTime);\n        \n        // Even more unrelated logic\n        ArrayList<String> messages = new ArrayList<>();\n        messages.add(\"Hello\");\n        messages.add(\"World\");\n        messages.add(\"Complexity\");\n        messages.add(\"Increased\");\n\n        for (String message : messages) {\n            System.out.println(message);\n        }\n    }\n}"
}