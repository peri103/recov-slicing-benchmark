{
    "files": {
        "ZipEntryManager.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ZipEntryManager {\n    private Map<String, ZipArchiveEntry> entryMap = new HashMap<>();\n\n    public void addEntry(String key, String name) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(name);\n        entryMap.put(key, entry);\n    }\n\n    public void updateEntryName(String key, String newName) {\n        ZipArchiveEntry entry = entryMap.get(key);\n        if (entry != null) {\n            /* write */ entry.setName(newName);\n        }\n    }\n\n    public String getEntryName(String key) {\n        ZipArchiveEntry entry = entryMap.get(key);\n        if (entry != null) {\n            return entry.getName();\n        }\n        return null;\n    }\n\n    public void printAllEntries() {\n        for (Map.Entry<String, ZipArchiveEntry> mapEntry : entryMap.entrySet()) {\n            System.out.println(\"Key: \" + mapEntry.getKey() + \", Entry Name: \" + mapEntry.getValue().getName());\n        }\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        ZipEntryManager manager = new ZipEntryManager();\n        manager.addEntry(\"entry1\", \"initialName\");\n        manager.addEntry(\"entry2\", \"anotherName\");\n\n        // Additional unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Update an entry name\n        manager.updateEntryName(\"entry1\", \"newName\");\n\n        // Additional unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n\n        // Read the updated entry name\n        /* read */ String name = manager.getEntryName(\"entry1\");\n        System.out.println(\"Read Entry Name: \" + name);\n\n        // Print all entries\n        manager.printAllEntries();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setName",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getName"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"initialName\");\n        /* write */ entry.setName(\"newName\");\n        /* read */ String name = entry.getName();\n        System.out.println(name);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"initialName\");\n        \n        // Additional code to add complexity\n        Map<String, ZipArchiveEntry> entryMap = new HashMap<>();\n        entryMap.put(\"entry1\", entry);\n        \n        ZipArchiveEntry anotherEntry = new ZipArchiveEntry(\"anotherName\");\n        entryMap.put(\"entry2\", anotherEntry);\n        \n        for (Map.Entry<String, ZipArchiveEntry> mapEntry : entryMap.entrySet()) {\n            System.out.println(\"Key: \" + mapEntry.getKey() + \", Entry Name: \" + mapEntry.getValue().getName());\n        }\n\n        // Perform operations on anotherEntry\n        anotherEntry.setName(\"updatedAnotherName\");\n        String anotherName = anotherEntry.getName();\n        System.out.println(\"Updated Another Entry Name: \" + anotherName);\n\n        // More unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Original write-read pair\n        /* write */ entry.setName(\"newName\");\n        \n        // Additional unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n        \n        // Continue with more operations\n        entryMap.put(\"entry3\", new ZipArchiveEntry(\"thirdEntry\"));\n        \n        for (Map.Entry<String, ZipArchiveEntry> mapEntry : entryMap.entrySet()) {\n            System.out.println(\"Key: \" + mapEntry.getKey() + \", Entry Name: \" + mapEntry.getValue().getName());\n        }\n        \n        // Read operation\n        /* read */ String name = entry.getName();\n        System.out.println(\"Read Entry Name: \" + name);\n    }\n}"
}