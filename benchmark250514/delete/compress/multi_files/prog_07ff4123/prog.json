{
    "files": {
        "ArchiveEntryManager.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ArchiveEntryManager {\n    private List<ArArchiveEntry> entries = new ArrayList<>();\n\n    public void addEntry(ArArchiveEntry entry) {\n        entries.add(entry);\n    }\n\n    public ArArchiveEntry getEntry(int index) {\n        return entries.get(index);\n    }\n\n    public void setEntryUserId(int index, long userId) {\n        ArArchiveEntry entry = entries.get(index);\n        /* write */ entry.setUserId(userId);\n    }\n}\n",
        "ArchiveAnalyzer.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class ArchiveAnalyzer {\n    public long analyzeEntryUserId(ArArchiveEntry entry) {\n        /* read */ return entry.getUserId();\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArchiveEntryManager manager = new ArchiveEntryManager();\n        ArchiveAnalyzer analyzer = new ArchiveAnalyzer();\n\n        // Create and add entries\n        ArArchiveEntry entry1 = new ArArchiveEntry(\"example.txt\", 1000);\n        ArArchiveEntry entry2 = new ArArchiveEntry(\"example2.txt\", 2000);\n        manager.addEntry(entry1);\n        manager.addEntry(entry2);\n\n        // Set user ID for the first entry\n        manager.setEntryUserId(0, 12345);\n\n        // Analyze and print the user ID of the first entry\n        long userId = analyzer.analyzeEntryUserId(manager.getEntry(0));\n        System.out.println(\"User ID of the first entry: \" + userId);\n\n        // Print the user IDs of all entries\n        for (int i = 0; i < 2; i++) {\n            ArArchiveEntry entry = manager.getEntry(i);\n            System.out.println(\"Entry: \" + entry.getName() + \", User ID: \" + entry.getUserId());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setUserId",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getUserId"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 1000);\n        /* write */ entry.setUserId(12345);\n        /* read */ long userId = entry.getUserId();\n        System.out.println(userId);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport org.apache.commons.compress.archivers.ar.ArArchiveOutputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an ArArchiveEntry\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 1000);\n        \n        // Initialize a list of entries\n        ArrayList<ArArchiveEntry> entries = new ArrayList<>();\n        entries.add(entry);\n        \n        // Create another entry and add it to the list\n        ArArchiveEntry entry2 = new ArArchiveEntry(\"example2.txt\", 2000);\n        entry2.setUserId(54321);\n        entries.add(entry2);\n\n        // Use ArArchiveOutputStream to simulate archive operations\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        ArArchiveOutputStream arOut = new ArArchiveOutputStream(baos);\n        \n        // Write the entries to the archive output stream\n        for (ArArchiveEntry e : entries) {\n            try {\n                arOut.putArchiveEntry(e);\n                arOut.closeArchiveEntry();\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n        }\n        \n        // Set user ID for the first entry\n        /* write */ entry.setUserId(12345);\n        \n        // Perform some unrelated computations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n        \n        // Access the user ID of the first entry\n        /* read */ long userId = entry.getUserId();\n        System.out.println(\"User ID of first entry: \" + userId);\n        \n        // Print the user IDs of all entries\n        for (ArArchiveEntry e : entries) {\n            System.out.println(\"Entry: \" + e.getName() + \", User ID: \" + e.getUserId());\n        }\n    }\n}"
}