{
    "files": {
        "GzipParametersWrapper.java": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class GzipParametersWrapper {\n    private GzipParameters gzipParameters = new GzipParameters();\n\n    public void setUncompressedSize(long size) {\n        /* write */ gzipParameters.setUncompressedSize(size);\n    }\n\n    public long getUncompressedSize() {\n        return gzipParameters.getUncompressedSize();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int credits;\n\n    public Course(String courseName, int credits) {\n        this.courseName = courseName;\n        this.credits = credits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "Main.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Using GzipParametersWrapper\n        GzipParametersWrapper gzipWrapper = new GzipParametersWrapper();\n        gzipWrapper.setUncompressedSize(1024L);\n\n        // Creating students and courses\n        Student student1 = new Student(\"Alice\");\n        Course math = new Course(\"Mathematics\", 3);\n        Course science = new Course(\"Science\", 4);\n        student1.enrollCourse(math);\n        student1.enrollCourse(science);\n\n        Student student2 = new Student(\"Bob\");\n        Course history = new Course(\"History\", 2);\n        student2.enrollCourse(history);\n\n        // Print student information\n        printStudentInfo(student1);\n        printStudentInfo(student2);\n\n        // Using a Map for additional complexity\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"key1\", 100);\n        dataMap.put(\"key2\", 200);\n        dataMap.put(\"key3\", 300);\n\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in dataMap: \" + sum);\n\n        // Original read operation\n        /* read */ long uncompressedSize = gzipWrapper.getUncompressedSize();\n        System.out.println(\"Original uncompressed size: \" + uncompressedSize);\n    }\n\n    public static void printStudentInfo(Student student) {\n        System.out.println(\"Student: \" + student.getName());\n        for (Course course : student.getCourses()) {\n            System.out.println(\"  Course: \" + course.getCourseName() + \", Credits: \" + course.getCredits());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setUncompressedSize",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getUncompressedSize"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        /* write */ gzipParameters.setUncompressedSize(1024L);\n        /* read */ long uncompressedSize = gzipParameters.getUncompressedSize();\n        System.out.println(uncompressedSize);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        GzipParameters gzipParameters = new GzipParameters();\n        /* write */ gzipParameters.setUncompressedSize(1024L);\n\n        // Additional code to make the program more complex\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"key1\", 100);\n        dataMap.put(\"key2\", 200);\n        dataMap.put(\"key3\", 300);\n\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in dataMap: \" + sum);\n\n        // Additional similar write-read pair\n        GzipParameters anotherGzipParameters = new GzipParameters();\n        anotherGzipParameters.setUncompressedSize(2048L);\n        long anotherUncompressedSize = anotherGzipParameters.getUncompressedSize();\n        System.out.println(\"Another uncompressed size: \" + anotherUncompressedSize);\n\n        // More unrelated code\n        int[] numbers = {1, 2, 3, 4, 5};\n        int product = 1;\n        for (int num : numbers) {\n            product *= num;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n\n        // Original read operation\n        /* read */ long uncompressedSize = gzipParameters.getUncompressedSize();\n        System.out.println(\"Original uncompressed size: \" + uncompressedSize);\n    }\n}"
}