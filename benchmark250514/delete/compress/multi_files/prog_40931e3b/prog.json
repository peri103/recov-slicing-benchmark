{
    "files": {
        "GzipParametersWrapper.java": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class GzipParametersWrapper {\n    private GzipParameters gzipParameters = new GzipParameters();\n\n    public void setFlags(int flags) {\n        /* write */ gzipParameters.setFlags(flags);\n    }\n\n    public int getFlags() {\n        return gzipParameters.getFlags();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> enrolledStudents;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.enrolledStudents = new ArrayList<>();\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public ArrayList<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a Course and enroll Students\n        Course course = new Course(\"Computer Science\");\n        course.enrollStudent(new Student(\"Alice\", 20));\n        course.enrollStudent(new Student(\"Bob\", 22));\n\n        // Create GzipParametersWrapper and set flags\n        GzipParametersWrapper gzipWrapper = new GzipParametersWrapper();\n        gzipWrapper.setFlags(2);\n\n        // Retrieve and print enrolled students\n        ArrayList<Student> students = course.getEnrolledStudents();\n        for (Student student : students) {\n            System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n\n        // Get flags from GzipParametersWrapper\n        /* read */ int flags = gzipWrapper.getFlags();\n        System.out.println(\"Flags: \" + flags);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setFlags",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getFlags"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        /* write */ gzipParameters.setFlags(1);\n        /* read */ int flags = gzipParameters.getFlags();\n        System.out.println(flags);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize GzipParameters and ArrayList\n        GzipParameters gzipParameters = new GzipParameters();\n        ArrayList<Integer> numbers = new ArrayList<>();\n\n        // Populate the ArrayList with some numbers\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 10);\n        }\n\n        // Perform some operations on the ArrayList\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Set flags in GzipParameters\n        /* write */ gzipParameters.setFlags(1);\n\n        // More operations on the ArrayList\n        int max = Integer.MIN_VALUE;\n        for (int num : numbers) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        System.out.println(\"Max number: \" + max);\n\n        // Get flags from GzipParameters\n        /* read */ int flags = gzipParameters.getFlags();\n        System.out.println(\"Flags: \" + flags);\n\n        // Additional complex operations\n        ArrayList<String> strings = new ArrayList<>();\n        strings.add(\"Hello\");\n        strings.add(\"World\");\n\n        for (String str : strings) {\n            System.out.println(str.toUpperCase());\n        }\n\n        // Perform a transformation on the numbers list\n        ArrayList<Integer> squaredNumbers = new ArrayList<>();\n        for (int num : numbers) {\n            squaredNumbers.add(num * num);\n        }\n\n        // Print the squared numbers\n        for (int squared : squaredNumbers) {\n            System.out.println(\"Squared: \" + squared);\n        }\n    }\n}"
}