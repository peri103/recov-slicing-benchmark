{
    "files": {
        "ArchiveEntryManager.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\n\npublic class ArchiveEntryManager {\n    private ArrayList<ArArchiveEntry> entries = new ArrayList<>();\n\n    public void addEntry(String name, long size) {\n        ArArchiveEntry entry = new ArArchiveEntry(name, size);\n        entries.add(entry);\n    }\n\n    public void updateEntrySize(int index, long newSize) {\n        if (index >= 0 && index < entries.size()) {\n            /* write */ entries.get(index).setSize(newSize);\n        }\n    }\n\n    public ArArchiveEntry getEntry(int index) {\n        if (index >= 0 && index < entries.size()) {\n            return entries.get(index);\n        }\n        return null;\n    }\n\n    public ArrayList<ArArchiveEntry> getAllEntries() {\n        return entries;\n    }\n}\n",
        "ArchiveManager.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class ArchiveManager {\n    private ArchiveEntryManager entryManager = new ArchiveEntryManager();\n\n    public void addEntry(String name, long size) {\n        entryManager.addEntry(name, size);\n    }\n\n    public void updateEntrySize(int index, long newSize) {\n        entryManager.updateEntrySize(index, newSize);\n    }\n\n    public long getEntrySize(int index) {\n        ArArchiveEntry entry = entryManager.getEntry(index);\n        if (entry != null) {\n            /* read */ return entry.getSize();\n        }\n        return -1;\n    }\n\n    public void displayAllEntries() {\n        for (ArArchiveEntry entry : entryManager.getAllEntries()) {\n            System.out.println(\"Entry Name: \" + entry.getName() + \", Size: \" + entry.getSize());\n        }\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        ArchiveManager manager = new ArchiveManager();\n        \n        manager.addEntry(\"File1\", 1000);\n        manager.addEntry(\"File2\", 2000);\n        \n        manager.updateEntrySize(0, 12345);\n        \n        manager.displayAllEntries();\n        \n        long size = manager.getEntrySize(0);\n        System.out.println(\"Updated Size of Entry 0: \" + size);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setSize",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getSize"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"test\", 0);\n        /* write */ entry.setSize(12345);\n        /* read */ long size = entry.getSize();\n        System.out.println(size);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"test\", 0);\n        ArrayList<ArArchiveEntry> archiveList = new ArrayList<>();\n        \n        // Add multiple entries to the list\n        for (int i = 0; i < 5; i++) {\n            ArArchiveEntry tempEntry = new ArArchiveEntry(\"entry\" + i, i * 1000);\n            archiveList.add(tempEntry);\n        }\n        \n        // Perform operations on the list\n        for (ArArchiveEntry arEntry : archiveList) {\n            System.out.println(\"Entry Name: \" + arEntry.getName() + \", Size: \" + arEntry.getSize());\n        }\n        \n        /* write */ entry.setSize(12345);\n        \n        // Perform some unrelated arithmetic operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n        \n        // Modify the list and perform more operations\n        archiveList.add(entry);\n        for (ArArchiveEntry arEntry : archiveList) {\n            arEntry.setSize(arEntry.getSize() + 500);\n        }\n        \n        // Retrieve size of the original entry\n        /* read */ long size = entry.getSize();\n        System.out.println(\"Original Entry Size: \" + size);\n        \n        // Display updated sizes\n        for (ArArchiveEntry arEntry : archiveList) {\n            System.out.println(\"Updated Entry Name: \" + arEntry.getName() + \", Updated Size: \" + arEntry.getSize());\n        }\n    }\n}"
}