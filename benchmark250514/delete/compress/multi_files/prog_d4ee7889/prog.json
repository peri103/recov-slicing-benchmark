{
    "files": {
        "ArchiveEntryManager.java": "import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;\n\npublic class ArchiveEntryManager {\n    private CpioArchiveEntry entry;\n\n    public ArchiveEntryManager(String fileName) {\n        entry = new CpioArchiveEntry(fileName);\n    }\n\n    public void setLastModifiedTime(long time) {\n        /* write */ entry.setLastModified(time);\n    }\n\n    public long getLastModifiedTime() {\n        return entry.getLastModified();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Manage archive entry\n        ArchiveEntryManager manager = new ArchiveEntryManager(\"example.txt\");\n        manager.setLastModifiedTime(1625097600000L);\n\n        // Create a course and add students\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(new Student(\"Alice\", 20));\n        course.addStudent(new Student(\"Bob\", 22));\n\n        // Display student information\n        ArrayList<Student> students = course.getStudents();\n        for (Student student : students) {\n            System.out.println(student.getName() + \" is \" + student.getAge() + \" years old.\");\n        }\n\n        // Retrieve and display last modified time\n        /* read */ long retrievedLastModifiedTime = manager.getLastModifiedTime();\n        System.out.println(\"Last Modified Time: \" + retrievedLastModifiedTime);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry",
        "write_method": "setLastModified",
        "read_class": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry",
        "read_method": "getLastModified"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        CpioArchiveEntry entry = new CpioArchiveEntry(\"example.txt\");\n\n        // Set the last modified time to a specific value\n        long lastModifiedTime = 1625097600000L; // Example timestamp\n        /* write */ entry.setLastModified(lastModifiedTime);\n\n        // Retrieve the last modified time\n        /* read */ long retrievedLastModifiedTime = entry.getLastModified();\n\n        // Output the retrieved last modified time\n        System.out.println(retrievedLastModifiedTime);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CpioArchiveEntry\n        CpioArchiveEntry entry = new CpioArchiveEntry(\"example.txt\");\n\n        // Set the last modified time to a specific value\n        long lastModifiedTime = 1625097600000L; // Example timestamp\n        /* write */ entry.setLastModified(lastModifiedTime);\n\n        // Initialize a list and a map\n        ArrayList<String> namesList = new ArrayList<>();\n        HashMap<String, Integer> nameAgeMap = new HashMap<>();\n\n        // Add elements to the list and the map\n        namesList.add(\"Alice\");\n        namesList.add(\"Bob\");\n        nameAgeMap.put(\"Alice\", 30);\n        nameAgeMap.put(\"Bob\", 25);\n\n        // Perform some operations on the list and the map\n        for (String name : namesList) {\n            if (nameAgeMap.containsKey(name)) {\n                int age = nameAgeMap.get(name);\n                System.out.println(name + \" is \" + age + \" years old.\");\n            }\n        }\n\n        // More complex operations\n        int sumOfAges = 0;\n        for (String name : namesList) {\n            if (nameAgeMap.containsKey(name)) {\n                sumOfAges += nameAgeMap.get(name);\n            }\n        }\n        System.out.println(\"Total age: \" + sumOfAges);\n\n        // Retrieve the last modified time\n        /* read */ long retrievedLastModifiedTime = entry.getLastModified();\n\n        // Output the retrieved last modified time\n        System.out.println(\"Last Modified Time: \" + retrievedLastModifiedTime);\n\n        // Additional operations on the list\n        namesList.add(\"Charlie\");\n        nameAgeMap.put(\"Charlie\", 28);\n\n        for (String name : namesList) {\n            System.out.println(\"Hello, \" + name + \"!\");\n        }\n    }\n}"
}