{
    "files": {
        "DumpArchiveEntryWrapper.java": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class DumpArchiveEntryWrapper {\n    private DumpArchiveEntry entry;\n\n    public DumpArchiveEntryWrapper() {\n        this.entry = new DumpArchiveEntry();\n    }\n\n    public void setCompressedSize(long size) {\n        /* write */ entry.setCompressedSize(size);\n    }\n\n    public long getCompressedSize() {\n        return entry.getCompressedSize();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Course> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n    }\n\n    public ArrayList<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String title;\n    private int credits;\n\n    public Course(String title, int credits) {\n        this.title = title;\n        this.credits = credits;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a wrapper for DumpArchiveEntry\n        DumpArchiveEntryWrapper entryWrapper = new DumpArchiveEntryWrapper();\n        entryWrapper.setCompressedSize(2048);\n\n        // Create students and courses\n        Student student1 = new Student(\"John Doe\");\n        Course math = new Course(\"Mathematics\", 3);\n        Course science = new Course(\"Science\", 4);\n\n        // Enroll student in courses\n        student1.enrollInCourse(math);\n        student1.enrollInCourse(science);\n\n        // Display student information\n        System.out.println(\"Student: \" + student1.getName());\n        for (Course course : student1.getCourses()) {\n            System.out.println(\"Enrolled in: \" + course.getTitle() + \" (\" + course.getCredits() + \" credits)\");\n        }\n\n        // Use the read method from DumpArchiveEntryWrapper\n        /* read */ long compressedSize = entryWrapper.getCompressedSize();\n        System.out.println(\"Compressed Size: \" + compressedSize);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "write_method": "setCompressedSize",
        "read_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "read_method": "getCompressedSize"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        /* write */ entry.setCompressedSize(1024);\n        /* read */ long compressedSize = entry.getCompressedSize();\n        System.out.println(compressedSize);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        \n        // Initialize a list and a map for additional complexity\n        ArrayList<String> stringList = new ArrayList<>();\n        HashMap<String, Integer> stringMap = new HashMap<>();\n        \n        // Populate the list and map\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n        stringMap.put(\"Key1\", 100);\n        stringMap.put(\"Key2\", 200);\n        \n        // Perform some operations on the list and map\n        for (String str : stringList) {\n            System.out.println(\"List item: \" + str);\n        }\n        \n        int sum = 0;\n        for (Integer value : stringMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n        \n        /* write */ entry.setCompressedSize(1024);\n        \n        // Additional operations to increase complexity\n        stringList.add(\"Complexity\");\n        stringMap.put(\"Key3\", 300);\n        \n        // Perform some more operations on the list and map\n        for (int i = 0; i < stringList.size(); i++) {\n            System.out.println(\"Updated List item: \" + stringList.get(i));\n        }\n        \n        int product = 1;\n        for (Integer value : stringMap.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of map values: \" + product);\n        \n        /* read */ long compressedSize = entry.getCompressedSize();\n        System.out.println(\"Compressed Size: \" + compressedSize);\n        \n        // Further operations for complexity\n        stringList.remove(\"World\");\n        stringMap.remove(\"Key1\");\n        \n        // Final operations on list and map\n        for (String str : stringList) {\n            System.out.println(\"Final List item: \" + str);\n        }\n        \n        for (String key : stringMap.keySet()) {\n            System.out.println(\"Final Map Key: \" + key + \", Value: \" + stringMap.get(key));\n        }\n    }\n}"
}