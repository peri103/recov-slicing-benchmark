{
    "files": {
        "CompressorSettings.java": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\n\npublic class CompressorSettings {\n    private BZip2CompressorInputStream bzip2InputStream;\n\n    public CompressorSettings(BZip2CompressorInputStream bzip2InputStream) {\n        this.bzip2InputStream = bzip2InputStream;\n    }\n\n    public void setBlockSize(int size) {\n        /* write */ bzip2InputStream.setBlockSize(size);\n    }\n\n    public int getBlockSize() {\n        return bzip2InputStream.getBlockSize();\n    }\n}\n",
        "Course.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Course {\n    private String courseName;\n    private Map<String, Integer> studentScores;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.studentScores = new HashMap<>();\n    }\n\n    public void addStudentScore(String studentName, int score) {\n        studentScores.put(studentName, score);\n    }\n\n    public Map<String, Integer> getStudentScores() {\n        return studentScores;\n    }\n\n    public int getTotalScore() {\n        int total = 0;\n        for (int score : studentScores.values()) {\n            total += score;\n        }\n        return total;\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the BZip2CompressorInputStream object\n        BZip2CompressorInputStream bzip2InputStream = new BZip2CompressorInputStream(System.in);\n\n        // Create a CompressorSettings object and set the block size\n        CompressorSettings compressorSettings = new CompressorSettings(bzip2InputStream);\n        compressorSettings.setBlockSize(9);\n\n        // Create a Course object and add student scores\n        Course course = new Course(\"Mathematics\");\n        course.addStudentScore(\"Alice\", 85);\n        course.addStudentScore(\"Bob\", 92);\n        course.addStudentScore(\"Charlie\", 78);\n\n        // Calculate and print the total score\n        int totalScore = course.getTotalScore();\n        System.out.println(\"Total score of all students: \" + totalScore);\n\n        // Read the block size using the read method\n        /* read */ int blockSize = compressorSettings.getBlockSize();\n\n        // Print the block size to verify\n        System.out.println(\"Block size: \" + blockSize);\n\n        // Perform some mathematical operations\n        int result = totalScore * blockSize;\n        System.out.println(\"Result of multiplication: \" + result);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "write_method": "setBlockSize",
        "read_class": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
        "read_method": "getBlockSize"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the BZip2CompressorInputStream object\n        BZip2CompressorInputStream bzip2InputStream = new BZip2CompressorInputStream(System.in);\n\n        // Set the block size using the write method\n        /* write */ bzip2InputStream.setBlockSize(9);\n\n        // Read the block size using the read method\n        /* read */ int blockSize = bzip2InputStream.getBlockSize();\n\n        // Print the block size to verify\n        System.out.println(blockSize);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the BZip2CompressorInputStream object\n        BZip2CompressorInputStream bzip2InputStream = new BZip2CompressorInputStream(System.in);\n\n        // Set the block size using the write method\n        /* write */ bzip2InputStream.setBlockSize(9);\n\n        // Create a HashMap and populate it with some values\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n\n        // Perform some operations on the map\n        if (map.containsKey(\"two\")) {\n            map.put(\"two\", map.get(\"two\") + 10);\n        }\n\n        // Iterate over the map and print its contents\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Read the block size using the read method\n        /* read */ int blockSize = bzip2InputStream.getBlockSize();\n\n        // Print the block size to verify\n        System.out.println(\"Block size: \" + blockSize);\n\n        // Additional logic to make the program more complex\n        int sum = 0;\n        for (int value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n\n        // Perform some mathematical operations\n        int result = sum * blockSize;\n        System.out.println(\"Result of multiplication: \" + result);\n    }\n}"
}