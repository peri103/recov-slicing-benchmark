{
    "files": {
        "ArchiveEntryManager.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\n\npublic class ArchiveEntryManager {\n    private ArrayList<ArArchiveEntry> entries = new ArrayList<>();\n\n    public void addEntry(String name, long length, long groupId) {\n        ArArchiveEntry entry = new ArArchiveEntry(name, length);\n        /* write */ entry.setGroupId(groupId);\n        entries.add(entry);\n    }\n\n    public ArArchiveEntry getEntry(int index) {\n        return entries.get(index);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int studentId;\n\n    public Student(String name, int studentId) {\n        this.name = name;\n        this.studentId = studentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getStudentId() {\n        return studentId;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Manage archive entries\n        ArchiveEntryManager manager = new ArchiveEntryManager();\n        manager.addEntry(\"example.txt\", 100, 12345);\n        manager.addEntry(\"another.txt\", 200, 67890);\n\n        // Retrieve and read group ID from the first entry\n        ArArchiveEntry entry = manager.getEntry(0);\n        /* read */ long groupId = entry.getGroupId();\n        System.out.println(\"Group ID of first entry: \" + groupId);\n\n        // Manage students and courses\n        Student student1 = new Student(\"Alice\", 1);\n        Student student2 = new Student(\"Bob\", 2);\n\n        Course course = new Course(\"Computer Science\");\n        course.enrollStudent(student1);\n        course.enrollStudent(student2);\n\n        // Print enrolled students\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student Name: \" + student.getName() + \", ID: \" + student.getStudentId());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setGroupId",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getGroupId"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of ArArchiveEntry\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 100);\n        \n        // Write operation: set group ID\n        /* write */ entry.setGroupId(12345);\n        \n        // Read operation: get group ID\n        /* read */ long groupId = entry.getGroupId();\n        \n        // Print the group ID to verify the read operation\n        System.out.println(groupId);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of ArArchiveEntry\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 100);\n        \n        // Create a list to store multiple ArArchiveEntry objects\n        ArrayList<ArArchiveEntry> entries = new ArrayList<>();\n        entries.add(entry);\n        \n        // Create another entry and add it to the list\n        ArArchiveEntry anotherEntry = new ArArchiveEntry(\"another.txt\", 200);\n        anotherEntry.setGroupId(67890);\n        entries.add(anotherEntry);\n        \n        // Write operation: set group ID for the first entry\n        /* write */ entry.setGroupId(12345);\n        \n        // Perform some unrelated operations\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"first\", 1);\n        map.put(\"second\", 2);\n        \n        // Iterate over the map and print values\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n        \n        // Perform some operations on the list of entries\n        for (ArArchiveEntry e : entries) {\n            System.out.println(\"Entry: \" + e.getName() + \", Length: \" + e.getLength());\n        }\n        \n        // Read operation: get group ID for the first entry\n        /* read */ long groupId = entry.getGroupId();\n        \n        // Print the group ID to verify the read operation\n        System.out.println(\"Group ID of first entry: \" + groupId);\n        \n        // Further operations to increase complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        for (int num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}"
}