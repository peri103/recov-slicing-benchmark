{
    "files": {
        "CompressorManager.java": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.io.ByteArrayOutputStream;\n\npublic class CompressorManager {\n    private DeflateCompressorOutputStream deflateStream;\n\n    public CompressorManager() throws Exception {\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n        deflateStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n    }\n\n    public void setFlushMode(FlushMode mode) {\n        /* write */ deflateStream.setFlushMode(mode);\n    }\n\n    public FlushMode getFlushMode() {\n        return deflateStream.getFlushMode();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            CompressorManager compressorManager = new CompressorManager();\n\n            Student student = new Student(\"John\");\n            student.addScore(85);\n            student.addScore(92);\n\n            HashMap<String, Integer> map = new HashMap<>();\n            map.put(\"Math\", 90);\n            map.put(\"Science\", 95);\n\n            int total = 0;\n            for (Integer score : student.getScores()) {\n                total += score;\n            }\n\n            for (Integer value : map.values()) {\n                total += value;\n            }\n\n            System.out.println(\"Total Score: \" + total);\n\n            compressorManager.setFlushMode(FlushMode.SYNC_FLUSH);\n\n            FlushMode mode = compressorManager.getFlushMode();\n            /* read */ System.out.println(\"Flush Mode: \" + mode);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "write_method": "setFlushMode",
        "read_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "read_method": "getFlushMode"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.io.ByteArrayOutputStream;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n            DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n\n            /* write */ deflateStream.setFlushMode(FlushMode.SYNC_FLUSH);\n            /* read */ FlushMode flushMode = deflateStream.getFlushMode();\n\n            System.out.println(flushMode);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.io.ByteArrayOutputStream;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n            DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(byteArrayOutputStream);\n\n            HashMap<String, Integer> map = new HashMap<>();\n            ArrayList<Integer> list = new ArrayList<>();\n\n            map.put(\"key1\", 100);\n            map.put(\"key2\", 200);\n            list.add(10);\n            list.add(20);\n\n            /* write */ deflateStream.setFlushMode(FlushMode.SYNC_FLUSH);\n\n            int sum = 0;\n            for (Integer value : map.values()) {\n                sum += value;\n            }\n\n            for (Integer number : list) {\n                sum += number;\n            }\n\n            System.out.println(\"Sum: \" + sum);\n\n            String flushModeStr = \"Flush mode is: \";\n            /* read */ FlushMode flushMode = deflateStream.getFlushMode();\n            flushModeStr += flushMode.toString();\n\n            System.out.println(flushModeStr);\n\n            for (int i = 0; i < list.size(); i++) {\n                list.set(i, list.get(i) * 2);\n            }\n\n            for (Integer number : list) {\n                System.out.println(\"List value: \" + number);\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}"
}