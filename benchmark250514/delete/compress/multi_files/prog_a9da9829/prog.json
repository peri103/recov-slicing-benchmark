{
    "files": {
        "GzipParametersWrapper.java": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.Date;\n\npublic class GzipParametersWrapper {\n    private GzipParameters gzipParameters = new GzipParameters();\n\n    public void setModificationTime(Date date) {\n        /* write */ gzipParameters.setModificationTime(date);\n    }\n\n    public Date getModificationTime() {\n        return gzipParameters.getModificationTime();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enroll(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int credits;\n\n    public Course(String courseName, int credits) {\n        this.courseName = courseName;\n        this.credits = credits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "Main.java": "import java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize GzipParametersWrapper and set modification time\n        GzipParametersWrapper gzipWrapper = new GzipParametersWrapper();\n        Date currentTime = new Date();\n        gzipWrapper.setModificationTime(currentTime);\n\n        // Create a student and enroll in courses\n        Student student = new Student(\"John Doe\");\n        Course math = new Course(\"Mathematics\", 3);\n        Course science = new Course(\"Science\", 4);\n\n        student.enroll(math);\n        student.enroll(science);\n\n        // Display student details\n        System.out.println(\"Student Name: \" + student.getName());\n        for (Course course : student.getCourses()) {\n            System.out.println(\"Enrolled in: \" + course.getCourseName() + \" (\" + course.getCredits() + \" credits)\");\n        }\n\n        // Retrieve and print the modification time\n        /* read */ Date modificationTime = gzipWrapper.getModificationTime();\n        System.out.println(\"Gzip Modification Time: \" + modificationTime);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setModificationTime",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getModificationTime"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the GzipParameters object\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        // Create a Date object representing the current time\n        Date currentTime = new Date();\n        \n        // Use the write method to set the modification time\n        /* write */ gzipParameters.setModificationTime(currentTime);\n        \n        // Use the read method to get the modification time\n        /* read */ Date modificationTime = gzipParameters.getModificationTime();\n        \n        // Print the modification time to verify\n        System.out.println(modificationTime);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\nimport java.util.Date;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the GzipParameters object\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        // Create a Date object representing the current time\n        Date currentTime = new Date();\n        \n        // Use the write method to set the modification time\n        /* write */ gzipParameters.setModificationTime(currentTime);\n        \n        // Additional complex operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        \n        // Populate the ArrayList with some numbers\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        // Populate the HashMap with some key-value pairs\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n        \n        // Perform operations on ArrayList\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n        \n        // Perform operations on HashMap\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n        \n        // Use the read method to get the modification time\n        /* read */ Date modificationTime = gzipParameters.getModificationTime();\n        \n        // Print the modification time to verify\n        System.out.println(\"Modification Time: \" + modificationTime);\n        \n        // Further operations to increase complexity\n        int sum = 0;\n        for (Integer number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        int product = 1;\n        for (Integer number : numbers) {\n            product *= number;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n        \n        // Check if map contains a specific key\n        if (map.containsKey(\"Two\")) {\n            System.out.println(\"Map contains key 'Two'\");\n        }\n    }\n}"
}