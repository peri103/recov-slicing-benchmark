{
    "files": {
        "CompressorSettings.java": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\n\npublic class CompressorSettings {\n    private DeflateCompressorOutputStream deflateStream;\n\n    public CompressorSettings(DeflateCompressorOutputStream deflateStream) {\n        this.deflateStream = deflateStream;\n    }\n\n    public void configureFlushMode(FlushMode mode) {\n        /* write */ deflateStream.setFlushMode(mode);\n    }\n}\n",
        "CompressorReader.java": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\n\npublic class CompressorReader {\n    private DeflateCompressorOutputStream deflateStream;\n\n    public CompressorReader(DeflateCompressorOutputStream deflateStream) {\n        this.deflateStream = deflateStream;\n    }\n\n    public FlushMode readFlushMode() {\n        /* read */ return deflateStream.getFlushMode();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize DeflateCompressorOutputStream\n        DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(System.out);\n\n        // Setup CompressorSettings and configure flush mode\n        CompressorSettings compressorSettings = new CompressorSettings(deflateStream);\n        compressorSettings.configureFlushMode(FlushMode.SYNC_FLUSH);\n\n        // Setup CompressorReader to read the flush mode\n        CompressorReader compressorReader = new CompressorReader(deflateStream);\n        FlushMode flushMode = compressorReader.readFlushMode();\n        System.out.println(\"FlushMode: \" + flushMode);\n\n        // Create a student and a course\n        Student student = new Student(\"John Doe\");\n        Course course = new Course(\"Computer Science\");\n\n        // Enroll student in the course\n        student.enrollCourse(course);\n        course.addStudent(student);\n\n        // Print enrolled courses for the student\n        for (Course c : student.getCourses()) {\n            System.out.println(\"Enrolled in: \" + c.courseName);\n        }\n\n        // Print students in the course\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student in course: \" + s.name);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "write_method": "setFlushMode",
        "read_class": "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
        "read_method": "getFlushMode"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize DeflateCompressorOutputStream\n        DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(System.out);\n\n        // Set flush mode to SYNC_FLUSH\n        /* write */ deflateStream.setFlushMode(FlushMode.SYNC_FLUSH);\n\n        // Read the flush mode\n        /* read */ FlushMode flushMode = deflateStream.getFlushMode();\n\n        // Print the flush mode\n        System.out.println(flushMode);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\nimport org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.FlushMode;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize DeflateCompressorOutputStream\n        DeflateCompressorOutputStream deflateStream = new DeflateCompressorOutputStream(System.out);\n\n        // Initialize another compressor stream for demonstration\n        DeflateCompressorOutputStream anotherStream = new DeflateCompressorOutputStream(System.out);\n\n        // Set flush mode to SYNC_FLUSH for the original stream\n        /* write */ deflateStream.setFlushMode(FlushMode.SYNC_FLUSH);\n\n        // Set flush mode to NO_FLUSH for the another stream\n        anotherStream.setFlushMode(FlushMode.NO_FLUSH);\n\n        // Create an ArrayList to store flush modes\n        ArrayList<FlushMode> flushModes = new ArrayList<>();\n\n        // Add flush mode of anotherStream to the list\n        flushModes.add(anotherStream.getFlushMode());\n\n        // Perform some unrelated computations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n\n        // Add a few more operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 natural numbers: \" + product);\n\n        // Read the flush mode from the original stream\n        /* read */ FlushMode flushMode = deflateStream.getFlushMode();\n\n        // Add the read flush mode to the list\n        flushModes.add(flushMode);\n\n        // Print the flush modes stored in the list\n        for (FlushMode mode : flushModes) {\n            System.out.println(\"Stored FlushMode: \" + mode);\n        }\n    }\n}"
}