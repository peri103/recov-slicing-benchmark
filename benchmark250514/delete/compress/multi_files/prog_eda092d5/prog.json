{
    "files": {
        "ArchiveManager.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\n\npublic class ArchiveManager {\n    private ArrayList<ArArchiveEntry> archiveList = new ArrayList<>();\n\n    public void addEntry(ArArchiveEntry entry) {\n        /* write */ entry.setLastModified(System.currentTimeMillis());\n        archiveList.add(entry);\n    }\n\n    public ArrayList<ArArchiveEntry> getArchiveList() {\n        return archiveList;\n    }\n}\n",
        "ArchiveEntryHandler.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class ArchiveEntryHandler {\n    private ArArchiveEntry entry;\n\n    public ArchiveEntryHandler(String name, long size) {\n        entry = new ArArchiveEntry(name, size);\n    }\n\n    public void handleEntry(ArchiveManager manager) {\n        manager.addEntry(entry);\n    }\n\n    public long getEntryLastModified() {\n        /* read */ return entry.getLastModified();\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArchiveManager manager = new ArchiveManager();\n        ArchiveEntryHandler handler = new ArchiveEntryHandler(\"example.txt\", 1000);\n\n        handler.handleEntry(manager);\n\n        // Additional operations\n        ArArchiveEntry anotherEntry = new ArArchiveEntry(\"another.txt\", 2000);\n        anotherEntry.setLastModified(System.currentTimeMillis() - 10000);\n        manager.addEntry(anotherEntry);\n\n        for (ArArchiveEntry archiveEntry : manager.getArchiveList()) {\n            System.out.println(\"Archive Entry: \" + archiveEntry.getName() + \", Size: \" + archiveEntry.getSize());\n        }\n\n        long totalSize = 0;\n        for (ArArchiveEntry archiveEntry : manager.getArchiveList()) {\n            totalSize += archiveEntry.getSize();\n        }\n        System.out.println(\"Total Size of Archives: \" + totalSize);\n\n        if (totalSize > 1500) {\n            System.out.println(\"Total size exceeds 1500.\");\n        } else {\n            System.out.println(\"Total size is within limit.\");\n        }\n\n        long lastModified = handler.getEntryLastModified();\n        System.out.println(\"Last Modified Time of 'example.txt': \" + lastModified);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "write_method": "setLastModified",
        "read_class": "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
        "read_method": "getLastModified"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 1000);\n        long currentTime = System.currentTimeMillis();\n        \n        /* write */ entry.setLastModified(currentTime);\n        /* read */ long lastModified = entry.getLastModified();\n        \n        System.out.println(\"Last Modified Time: \" + lastModified);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArArchiveEntry entry = new ArArchiveEntry(\"example.txt\", 1000);\n        long currentTime = System.currentTimeMillis();\n        \n        /* write */ entry.setLastModified(currentTime);\n        \n        // Additional code to make the program more complex\n        ArrayList<ArArchiveEntry> archiveList = new ArrayList<>();\n        archiveList.add(entry);\n\n        ArArchiveEntry anotherEntry = new ArArchiveEntry(\"another.txt\", 2000);\n        anotherEntry.setLastModified(currentTime - 10000);\n        archiveList.add(anotherEntry);\n\n        for (ArArchiveEntry archiveEntry : archiveList) {\n            System.out.println(\"Archive Entry: \" + archiveEntry.getName() + \", Size: \" + archiveEntry.getSize());\n        }\n\n        // Perform some operations\n        long totalSize = 0;\n        for (ArArchiveEntry archiveEntry : archiveList) {\n            totalSize += archiveEntry.getSize();\n        }\n        System.out.println(\"Total Size of Archives: \" + totalSize);\n\n        // More operations\n        if (totalSize > 1500) {\n            System.out.println(\"Total size exceeds 1500.\");\n        } else {\n            System.out.println(\"Total size is within limit.\");\n        }\n\n        /* read */ long lastModified = entry.getLastModified();\n        \n        System.out.println(\"Last Modified Time of 'example.txt': \" + lastModified);\n    }\n}"
}