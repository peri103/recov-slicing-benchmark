{
    "files": {
        "ArchiveEntryManager.java": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ArchiveEntryManager {\n    private Map<String, TarArchiveEntry> archiveMap = new HashMap<>();\n\n    public void addEntry(String name, TarArchiveEntry entry) {\n        archiveMap.put(name, entry);\n    }\n\n    public TarArchiveEntry getEntry(String name) {\n        return archiveMap.get(name);\n    }\n\n    public void setEntryGroupId(String name, long groupId) {\n        TarArchiveEntry entry = archiveMap.get(name);\n        if (entry != null) {\n            /* write */ entry.setGroupId(groupId);\n        }\n    }\n}\n",
        "ArchiveReader.java": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n\npublic class ArchiveReader {\n    private ArchiveEntryManager manager;\n\n    public ArchiveReader(ArchiveEntryManager manager) {\n        this.manager = manager;\n    }\n\n    public long getEntryGroupId(String name) {\n        TarArchiveEntry entry = manager.getEntry(name);\n        if (entry != null) {\n            /* read */ return entry.getGroupId();\n        }\n        return -1;\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArchiveEntryManager manager = new ArchiveEntryManager();\n        TarArchiveEntry entry1 = new TarArchiveEntry(\"example1\");\n        manager.addEntry(\"entry1\", entry1);\n\n        ArchiveReader reader = new ArchiveReader(manager);\n\n        // Set group ID for entry1\n        manager.setEntryGroupId(\"entry1\", 1001);\n\n        // Read group ID for entry1\n        long groupId = reader.getEntryGroupId(\"entry1\");\n        System.out.println(\"Group ID for entry1: \" + groupId);\n\n        // Additional code to make the program more complex\n        TarArchiveEntry entry2 = new TarArchiveEntry(\"example2\");\n        entry2.setUserId(2002);\n        manager.addEntry(\"entry2\", entry2);\n\n        long groupId2 = reader.getEntryGroupId(\"entry2\");\n        System.out.println(\"Group ID for entry2: \" + groupId2);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "write_method": "setGroupId",
        "read_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "read_method": "getGroupId"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        TarArchiveEntry entry = new TarArchiveEntry(\"example\");\n        /* write */ entry.setGroupId(1001);\n        /* read */ long groupId = entry.getGroupId();\n        System.out.println(groupId);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        TarArchiveEntry entry = new TarArchiveEntry(\"example\");\n        Map<String, TarArchiveEntry> archiveMap = new HashMap<>();\n        archiveMap.put(\"entry1\", entry);\n\n        // Additional code to make the program more complex\n        TarArchiveEntry entry2 = new TarArchiveEntry(\"example2\");\n        entry2.setUserId(2002);\n        archiveMap.put(\"entry2\", entry2);\n\n        for (Map.Entry<String, TarArchiveEntry> mapEntry : archiveMap.entrySet()) {\n            System.out.println(\"Processing: \" + mapEntry.getKey());\n            if (mapEntry.getValue().getUserId() == 2002) {\n                System.out.println(\"User ID for entry2 is 2002\");\n            }\n        }\n\n        /* write */ entry.setGroupId(1001);\n\n        // More complex logic\n        TarArchiveEntry entry3 = new TarArchiveEntry(\"example3\");\n        entry3.setUserId(3003);\n        entry3.setGroupId(2002);\n        archiveMap.put(\"entry3\", entry3);\n\n        for (Map.Entry<String, TarArchiveEntry> mapEntry : archiveMap.entrySet()) {\n            long groupId = mapEntry.getValue().getGroupId();\n            System.out.println(\"Group ID for \" + mapEntry.getKey() + \": \" + groupId);\n        }\n\n        // Final read operation\n        /* read */ long groupId = entry.getGroupId();\n        System.out.println(\"Group ID for entry1: \" + groupId);\n    }\n}"
}