{
    "files": {
        "ImmutableRangeMapBuilder.java": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\n\npublic class ImmutableRangeMapBuilder {\n    private ImmutableRangeMap.Builder<Integer, String> builder = ImmutableRangeMap.builder();\n\n    public void addRange(Range<Integer> range, String value) {\n        /* write */ builder.put(range, value);\n    }\n\n    public ImmutableRangeMap<Integer, String> build() {\n        return builder.build();\n    }\n}\n",
        "RangeMapReader.java": "import com.google.common.collect.ImmutableRangeMap;\n\npublic class RangeMapReader {\n    private ImmutableRangeMap<Integer, String> rangeMap;\n\n    public RangeMapReader(ImmutableRangeMap<Integer, String> rangeMap) {\n        this.rangeMap = rangeMap;\n    }\n\n    public String getValue(int key) {\n        /* read */ return rangeMap.get(key);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<String> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollCourse(String course) {\n        courses.add(course);\n    }\n\n    public List<String> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create and use ImmutableRangeMapBuilder\n        ImmutableRangeMapBuilder rangeMapBuilder = new ImmutableRangeMapBuilder();\n        rangeMapBuilder.addRange(Range.closed(1, 10), \"Value in range\");\n\n        // Build the ImmutableRangeMap\n        ImmutableRangeMap<Integer, String> rangeMap = rangeMapBuilder.build();\n\n        // Use RangeMapReader to read from the ImmutableRangeMap\n        RangeMapReader rangeMapReader = new RangeMapReader(rangeMap);\n        String value = rangeMapReader.getValue(5);\n        System.out.println(\"ImmutableRangeMap Value: \" + value);\n\n        // Create Student and Course objects for additional complexity\n        Student student = new Student(\"Alice\");\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(student);\n        student.enrollCourse(course.getCourseName());\n\n        // Print student and course information\n        System.out.println(\"Student Name: \" + student.getName());\n        System.out.println(\"Enrolled Courses: \" + student.getCourses());\n        System.out.println(\"Course Name: \" + course.getCourseName());\n        System.out.println(\"Students in Course: \" + course.getStudents().get(0).getName());\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableRangeMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableRangeMap\n        ImmutableRangeMap.Builder<Integer, String> builder = ImmutableRangeMap.builder();\n        \n        // Define a range and associate a value with it\n        Range<Integer> range = Range.closed(1, 10);\n        /* write */ builder.put(range, \"Value in range\");\n\n        // Build the ImmutableRangeMap from the builder\n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n        \n        // Read the value associated with a key within the range\n        /* read */ String value = rangeMap.get(5); // 5 is within the range 1 to 10\n        \n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.RangeMap;\nimport com.google.common.collect.TreeRangeMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableRangeMap\n        ImmutableRangeMap.Builder<Integer, String> builder = ImmutableRangeMap.builder();\n        \n        // Define a range and associate a value with it\n        Range<Integer> range = Range.closed(1, 10);\n        /* write */ builder.put(range, \"Value in range\");\n\n        // Create a TreeRangeMap for additional complexity\n        RangeMap<Integer, String> treeRangeMap = TreeRangeMap.create();\n        treeRangeMap.put(Range.closed(11, 20), \"Another range value\");\n        \n        // Add more ranges to the TreeRangeMap\n        treeRangeMap.put(Range.closed(21, 30), \"Yet another range value\");\n        \n        // Use a HashMap for unrelated operations\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"Key1\", 100);\n        hashMap.put(\"Key2\", 200);\n        \n        // Perform some operations on the HashMap\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            System.out.println(\"HashMap Entry: \" + entry.getKey() + \" = \" + entry.getValue());\n        }\n        \n        // Build the ImmutableRangeMap from the builder\n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n        \n        // Perform operations on the TreeRangeMap\n        System.out.println(\"TreeRangeMap Value: \" + treeRangeMap.get(15)); // Should print \"Another range value\"\n        System.out.println(\"TreeRangeMap Value: \" + treeRangeMap.get(25)); // Should print \"Yet another range value\"\n        \n        // Read the value associated with a key within the original range\n        /* read */ String value = rangeMap.get(5); // 5 is within the range 1 to 10\n        \n        // Print the value\n        System.out.println(\"ImmutableRangeMap Value: \" + value);\n    }\n}"
}