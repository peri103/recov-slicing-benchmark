{
    "files": {
        "CustomMapBuilder.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class CustomMapBuilder {\n    private ImmutableClassToInstanceMap.Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n\n    public void addEntry(Class<?> clazz, Object instance) {\n        /* write */ builder.put(clazz, instance);\n    }\n\n    public ImmutableClassToInstanceMap<Object> build() {\n        return builder.build();\n    }\n}\n",
        "CustomMapReader.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class CustomMapReader {\n    private ImmutableClassToInstanceMap<Object> map;\n\n    public CustomMapReader(ImmutableClassToInstanceMap<Object> map) {\n        this.map = map;\n    }\n\n    public <T> T getInstance(Class<T> clazz) {\n        /* read */ return map.getInstance(clazz);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CustomMapBuilder to add entries\n        CustomMapBuilder mapBuilder = new CustomMapBuilder();\n        \n        // Add a String instance to the map\n        mapBuilder.addEntry(String.class, \"Hello, World!\");\n        \n        // Build the map\n        ImmutableClassToInstanceMap<Object> map = mapBuilder.build();\n        \n        // Create a CustomMapReader to read entries\n        CustomMapReader mapReader = new CustomMapReader(map);\n        \n        // Retrieve the String instance\n        String value = mapReader.getInstance(String.class);\n        System.out.println(value);\n        \n        // Create a Course and add Students\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(new Student(\"Alice\", 20));\n        course.addStudent(new Student(\"Bob\", 22));\n        \n        // Output student details\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student Name: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap.Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Add an instance to the map\n        /* write */ builder.put(String.class, \"Hello, World!\");\n        \n        // Build the ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n        \n        // Retrieve the instance from the map\n        /* read */ String value = (String) map.getInstance(String.class);\n        \n        // Output the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableMap;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap.Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Add an instance to the map\n        /* write */ builder.put(String.class, \"Hello, World!\");\n        \n        // Create another ImmutableList to demonstrate complexity\n        ImmutableList.Builder<Integer> listBuilder = ImmutableList.builder();\n        for (int i = 0; i < 5; i++) {\n            listBuilder.add(i * 10);\n        }\n        ImmutableList<Integer> numberList = listBuilder.build();\n        \n        // Perform some operations on the list\n        int sum = 0;\n        for (Integer number : numberList) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Build the ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n        \n        // Create another ImmutableClassToInstanceMap with different types\n        ImmutableClassToInstanceMap.Builder<Object> anotherBuilder = ImmutableClassToInstanceMap.builder();\n        anotherBuilder.put(Integer.class, 42);\n        ImmutableClassToInstanceMap<Object> anotherMap = anotherBuilder.build();\n        \n        // Retrieve the instance from the original map\n        /* read */ String value = (String) map.getInstance(String.class);\n        \n        // Output the value\n        System.out.println(value);\n        \n        // Retrieve the instance from the second map\n        Integer numberValue = (Integer) anotherMap.getInstance(Integer.class);\n        System.out.println(\"Number from another map: \" + numberValue);\n        \n        // Additional operations to increase complexity\n        for (int i = 0; i < numberList.size(); i++) {\n            System.out.println(\"Number at index \" + i + \": \" + numberList.get(i));\n        }\n    }\n}"
}