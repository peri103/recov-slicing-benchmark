{
    "files": {
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private StudentScores scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new StudentScores();\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public StudentScores getScores() {\n        return scores;\n    }\n}\n",
        "StudentScores.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class StudentScores {\n    private ImmutableClassToInstanceMap<Object> scoreMap;\n\n    public StudentScores() {\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        /* write */ scoreMap = builder.put(Integer.class, 95).build(); // Initial score\n    }\n\n    public Integer getInitialScore() {\n        /* read */ return scoreMap.getInstance(Integer.class);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Creating a student and adding scores\n        Student student = new Student(\"Alice\");\n        System.out.println(\"Student Name: \" + student.getName());\n\n        // Accessing the initial score from StudentScores\n        Integer initialScore = student.getScores().getInitialScore();\n        System.out.println(\"Initial Score: \" + initialScore);\n\n        // Creating a course and adding the student\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(student);\n\n        // Display course details\n        System.out.println(\"Course Name: \" + course.getCourseName());\n        for (Student enrolledStudent : course.getStudents()) {\n            System.out.println(\"Enrolled Student: \" + enrolledStudent.getName());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.put(String.class, \"Hello, World!\").build();\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.put(String.class, \"Hello, World!\").build();\n\n        // Additional unrelated code to make the program more complex\n        ImmutableMap.Builder<String, Integer> mapBuilder = ImmutableMap.builder();\n        mapBuilder.put(\"One\", 1);\n        mapBuilder.put(\"Two\", 2);\n        mapBuilder.put(\"Three\", 3);\n        ImmutableMap<String, Integer> numberMap = mapBuilder.build();\n\n        int sum = 0;\n        for (String key : numberMap.keySet()) {\n            sum += numberMap.get(key);\n        }\n        System.out.println(\"Sum of values in numberMap: \" + sum);\n\n        // More complex code manipulating data\n        ImmutableMap.Builder<Class<?>, Object> classToInstanceMapBuilder = ImmutableMap.builder();\n        classToInstanceMapBuilder.put(Integer.class, 42);\n        classToInstanceMapBuilder.put(Double.class, 3.14);\n        ImmutableMap<Class<?>, Object> classToInstanceMap = classToInstanceMapBuilder.build();\n\n        Integer integerValue = (Integer) classToInstanceMap.get(Integer.class);\n        Double doubleValue = (Double) classToInstanceMap.get(Double.class);\n        System.out.println(\"Integer value: \" + integerValue);\n        System.out.println(\"Double value: \" + doubleValue);\n\n        // Original read operation\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n\n        // Further operations\n        ImmutableMap.Builder<String, String> stringMapBuilder = ImmutableMap.builder();\n        stringMapBuilder.put(\"Key1\", \"Value1\");\n        stringMapBuilder.put(\"Key2\", \"Value2\");\n        ImmutableMap<String, String> stringMap = stringMapBuilder.build();\n\n        for (String key : stringMap.keySet()) {\n            System.out.println(key + \": \" + stringMap.get(key));\n        }\n    }\n}"
}