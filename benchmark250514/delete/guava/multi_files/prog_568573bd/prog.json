{
    "files": {
        "ColorMultiset.java": "import com.google.common.collect.EnumMultiset;\nimport java.util.EnumSet;\n\npublic class ColorMultiset {\n    enum Color {\n        RED, GREEN, BLUE\n    }\n\n    private EnumMultiset<Color> multiset = EnumMultiset.create(EnumSet.allOf(Color.class));\n\n    public void addColor(Color color) {\n        /* write */ multiset.add(color);\n    }\n\n    public int countColor(Color color) {\n        return multiset.count(color);\n    }\n}",
        "ColorManager.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class ColorManager {\n    private ColorMultiset colorMultiset = new ColorMultiset();\n    private Map<ColorMultiset.Color, Integer> colorMap = new HashMap<>();\n\n    public void addColor(ColorMultiset.Color color) {\n        colorMultiset.addColor(color);\n    }\n\n    public void updateColorCounts() {\n        for (ColorMultiset.Color color : ColorMultiset.Color.values()) {\n            colorMap.put(color, colorMultiset.countColor(color));\n        }\n    }\n\n    public int getColorCount(ColorMultiset.Color color) {\n        return colorMap.getOrDefault(color, 0);\n    }\n\n    public Map<ColorMultiset.Color, Integer> getAllColorCounts() {\n        return colorMap;\n    }\n}",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        ColorManager colorManager = new ColorManager();\n\n        // Add colors\n        colorManager.addColor(ColorMultiset.Color.RED);\n        colorManager.addColor(ColorMultiset.Color.GREEN);\n        colorManager.addColor(ColorMultiset.Color.BLUE);\n        colorManager.addColor(ColorMultiset.Color.RED);\n\n        // Update color counts in the manager\n        colorManager.updateColorCounts();\n\n        // Perform unrelated operations\n        int totalColors = 0;\n        for (int count : colorManager.getAllColorCounts().values()) {\n            totalColors += count;\n        }\n        System.out.println(\"Total colors counted: \" + totalColors);\n\n        // Get the count of RED color\n        /* read */ int countRed = colorManager.getColorCount(ColorMultiset.Color.RED);\n\n        // Print the count of RED\n        System.out.println(\"Count of RED: \" + countRed);\n\n        // Print all color counts\n        for (Map.Entry<ColorMultiset.Color, Integer> entry : colorManager.getAllColorCounts().entrySet()) {\n            System.out.println(\"Color \" + entry.getKey() + \" has count: \" + entry.getValue());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.EnumMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.EnumMultiset",
        "read_method": "count"
    },
    "java_code_simple": "import com.google.common.collect.EnumMultiset;\nimport java.util.EnumSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define an enum for demonstration\n        enum Color {\n            RED, GREEN, BLUE\n        }\n\n        // Create an EnumMultiset for the Color enum\n        EnumMultiset<Color> multiset = EnumMultiset.create(EnumSet.allOf(Color.class));\n\n        // Add an element to the multiset\n        /* write */ multiset.add(Color.RED);\n\n        // Count the occurrences of the element in the multiset\n        /* read */ int count = multiset.count(Color.RED);\n\n        // Print the count\n        System.out.println(count);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.EnumMultiset;\nimport java.util.EnumSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define an enum for demonstration\n        enum Color {\n            RED, GREEN, BLUE\n        }\n\n        // Create an EnumMultiset for the Color enum\n        EnumMultiset<Color> multiset = EnumMultiset.create(EnumSet.allOf(Color.class));\n\n        // Create a map to store counts of different colors\n        Map<Color, Integer> colorMap = new HashMap<>();\n\n        // Add an element to the multiset\n        /* write */ multiset.add(Color.RED);\n\n        // Add more elements to the multiset\n        multiset.add(Color.GREEN);\n        multiset.add(Color.BLUE);\n        multiset.add(Color.RED);\n\n        // Populate the map with counts from the multiset\n        for (Color color : Color.values()) {\n            colorMap.put(color, multiset.count(color));\n        }\n\n        // Perform some unrelated operations\n        int totalColors = 0;\n        for (Integer count : colorMap.values()) {\n            totalColors += count;\n        }\n        System.out.println(\"Total colors counted: \" + totalColors);\n\n        // Count the occurrences of the element in the multiset\n        /* read */ int count = multiset.count(Color.RED);\n\n        // Print the count\n        System.out.println(\"Count of RED: \" + count);\n\n        // Print counts of all colors from the map\n        for (Map.Entry<Color, Integer> entry : colorMap.entrySet()) {\n            System.out.println(\"Color \" + entry.getKey() + \" has count: \" + entry.getValue());\n        }\n    }\n}"
}