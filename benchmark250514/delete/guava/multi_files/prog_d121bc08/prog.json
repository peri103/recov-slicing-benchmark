{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n}\n",
        "Course.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Course {\n    private String courseName;\n    private ImmutableClassToInstanceMap<Object> instanceMap;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.instanceMap = buildInstanceMap();\n    }\n\n    private ImmutableClassToInstanceMap<Object> buildInstanceMap() {\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        /* write */ return builder.putInstance(Integer.class, 42).build();\n    }\n\n    public ImmutableClassToInstanceMap<Object> getInstanceMap() {\n        return instanceMap;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.HashMap;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a course with a name\n        Course course = new Course(\"Mathematics\");\n\n        // Create a student enrolled in the course\n        Student student = new Student(\"John Doe\", course);\n\n        // Output student information\n        System.out.println(\"Student: \" + student.getName());\n        System.out.println(\"Course: \" + student.getCourse().getCourseName());\n\n        // Retrieve the instance of Integer from the course's instanceMap\n        /* read */ Integer value = course.getInstanceMap().getInstance(Integer.class);\n        System.out.println(\"Instance value from course: \" + value);\n\n        // Create a HashMap and populate it with some data\n        HashMap<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"key1\", \"value1\");\n        hashMap.put(\"key2\", \"value2\");\n\n        // Create an ImmutableMap from the HashMap\n        ImmutableMap<String, String> immutableMap = ImmutableMap.copyOf(hashMap);\n\n        // Perform some operations on the immutableMap\n        if (immutableMap.containsKey(\"key1\")) {\n            System.out.println(\"Key1 exists with value: \" + immutableMap.get(\"key1\"));\n        }\n\n        // Perform additional operations on the HashMap\n        hashMap.put(\"key3\", \"value3\");\n        hashMap.remove(\"key2\");\n\n        // Iterate over the hashMap and print its contents\n        for (String key : hashMap.keySet()) {\n            System.out.println(\"HashMap Key: \" + key + \", Value: \" + hashMap.get(key));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Using the builder to put an instance of Integer\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.putInstance(Integer.class, 42).build();\n        \n        // Retrieve the instance of Integer from the map\n        /* read */ Integer value = map.getInstance(Integer.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\nimport com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n\n        // Using the builder to put an instance of Integer\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.putInstance(Integer.class, 42).build();\n\n        // Create a HashMap and populate it with some data\n        HashMap<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"key1\", \"value1\");\n        hashMap.put(\"key2\", \"value2\");\n\n        // Create an ImmutableMap from the HashMap\n        ImmutableMap<String, String> immutableMap = ImmutableMap.copyOf(hashMap);\n\n        // Perform some operations on the immutableMap\n        if (immutableMap.containsKey(\"key1\")) {\n            System.out.println(\"Key1 exists with value: \" + immutableMap.get(\"key1\"));\n        }\n\n        // Retrieve the instance of Integer from the map\n        /* read */ Integer value = map.getInstance(Integer.class);\n\n        // Print the retrieved value\n        System.out.println(value);\n\n        // Perform additional operations on the HashMap\n        hashMap.put(\"key3\", \"value3\");\n        hashMap.remove(\"key2\");\n\n        // Iterate over the hashMap and print its contents\n        for (String key : hashMap.keySet()) {\n            System.out.println(\"HashMap Key: \" + key + \", Value: \" + hashMap.get(key));\n        }\n    }\n}"
}