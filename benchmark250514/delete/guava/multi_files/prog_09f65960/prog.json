{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private String id;\n\n    public Student(String name, String id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getId() {\n        return id;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "InstanceManager.java": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\n\npublic class InstanceManager {\n    private ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n\n    public void storeInstance(Class<?> clazz, Object instance) {\n        /* write */ map.putInstance(clazz, instance);\n    }\n\n    public <T> T retrieveInstance(Class<T> clazz) {\n        /* read */ return map.getInstance(clazz);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student1 = new Student(\"Alice\", \"S001\");\n        Student student2 = new Student(\"Bob\", \"S002\");\n\n        Course course = new Course(\"Computer Science\");\n        course.enrollStudent(student1);\n        course.enrollStudent(student2);\n\n        InstanceManager instanceManager = new InstanceManager();\n        instanceManager.storeInstance(Course.class, course);\n\n        // Perform some operations\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Enrolled student: \" + student.getName() + \", ID: \" + student.getId());\n        }\n\n        // Retrieve and use stored instance\n        Course retrievedCourse = instanceManager.retrieveInstance(Course.class);\n        System.out.println(\"Retrieved course: \" + retrievedCourse.getStudents().size() + \" students enrolled.\");\n\n        // Additional operations\n        if (retrievedCourse.getStudents().size() > 1) {\n            System.out.println(\"There are multiple students in the course.\");\n        } else {\n            System.out.println(\"There is only one student in the course.\");\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        /* write */ map.putInstance(String.class, \"Hello, World!\");\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        Map<String, Integer> additionalMap = new HashMap<>();\n        additionalMap.put(\"One\", 1);\n        additionalMap.put(\"Two\", 2);\n\n        // Perform some operations on the additional map\n        for (Map.Entry<String, Integer> entry : additionalMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        /* write */ map.putInstance(String.class, \"Hello, World!\");\n\n        // More complex operations\n        int sum = 0;\n        for (Integer value : additionalMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in additionalMap: \" + sum);\n\n        // Some unrelated logic\n        if (sum > 2) {\n            System.out.println(\"Sum is greater than 2\");\n        } else {\n            System.out.println(\"Sum is less than or equal to 2\");\n        }\n\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n\n        // Additional map operations\n        additionalMap.put(\"Three\", 3);\n        for (String key : additionalMap.keySet()) {\n            System.out.println(\"Processing key: \" + key);\n        }\n    }\n}"
}