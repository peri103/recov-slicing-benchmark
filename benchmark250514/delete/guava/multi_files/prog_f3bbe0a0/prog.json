{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "StudentScores.java": "import com.google.common.collect.LinkedHashBiMap;\n\npublic class StudentScores {\n    private LinkedHashBiMap<String, Integer> scores = LinkedHashBiMap.create();\n\n    public void addScore(String subject, int score) {\n        /* write */ scores.put(subject, score);\n    }\n\n    public Integer getScore(String subject) {\n        /* read */ return scores.get(subject);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\", 1);\n        Course course = new Course(\"Mathematics\");\n        \n        course.enrollStudent(student);\n        System.out.println(\"Enrolled students in \" + course.getCourseName() + \":\");\n        for (Student s : course.getEnrolledStudents()) {\n            System.out.println(\"Student Name: \" + s.getName() + \", ID: \" + s.getId());\n        }\n\n        StudentScores studentScores = new StudentScores();\n        studentScores.addScore(\"Math\", 95);\n        studentScores.addScore(\"Science\", 88);\n\n        System.out.println(\"Scores for \" + student.getName() + \":\");\n        System.out.println(\"Math: \" + studentScores.getScore(\"Math\"));\n        System.out.println(\"Science: \" + studentScores.getScore(\"Science\"));\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedHashBiMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.LinkedHashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashBiMap<String, Integer> map = LinkedHashBiMap.create();\n        /* write */ map.put(\"key\", 100);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.LinkedHashBiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashBiMap<String, Integer> map = LinkedHashBiMap.create();\n        Map<String, String> stringMap = new HashMap<>();\n\n        // Using the stringMap to store some values\n        stringMap.put(\"A\", \"Apple\");\n        stringMap.put(\"B\", \"Banana\");\n\n        // Performing some operations on stringMap\n        for (Map.Entry<String, String> entry : stringMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Add more entries to map\n        map.put(\"key1\", 200);\n        map.put(\"key2\", 300);\n\n        /* write */ map.put(\"key\", 100);\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // More unrelated operations\n        for (int i = 0; i < 5; i++) {\n            stringMap.put(\"C\" + i, \"Value\" + i);\n        }\n\n        // Print the updated stringMap\n        for (String key : stringMap.keySet()) {\n            System.out.println(\"Updated Key: \" + key + \", Value: \" + stringMap.get(key));\n        }\n\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n\n        // Further operations on map\n        map.put(\"key3\", 400);\n        map.put(\"key4\", 500);\n\n        int maxValue = Integer.MIN_VALUE;\n        for (Integer val : map.values()) {\n            if (val > maxValue) {\n                maxValue = val;\n            }\n        }\n        System.out.println(\"Max value in map: \" + maxValue);\n    }\n}"
}