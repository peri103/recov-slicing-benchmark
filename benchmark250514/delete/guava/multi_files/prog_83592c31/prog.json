{
    "files": {
        "ImmutableMapBuilder.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ImmutableMapBuilder {\n    private Builder<Object> builder;\n    private Map<Class<?>, Object> additionalValues;\n\n    public ImmutableMapBuilder() {\n        builder = ImmutableClassToInstanceMap.builder();\n        additionalValues = new HashMap<>();\n    }\n\n    public void addValue(Class<?> clazz, Object instance) {\n        /* write */ builder.put(clazz, instance);\n    }\n\n    public void addAdditionalValues() {\n        additionalValues.put(Integer.class, 123);\n        additionalValues.put(Double.class, 456.78);\n        for (Map.Entry<Class<?>, Object> entry : additionalValues.entrySet()) {\n            builder.put(entry.getKey(), entry.getValue());\n        }\n    }\n\n    public ImmutableClassToInstanceMap<Object> buildMap() {\n        return builder.build();\n    }\n}\n",
        "ImmutableMapReader.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class ImmutableMapReader {\n    private ImmutableClassToInstanceMap<Object> map;\n\n    public ImmutableMapReader(ImmutableClassToInstanceMap<Object> map) {\n        this.map = map;\n    }\n\n    public String getStringInstance() {\n        /* read */ return map.getInstance(String.class);\n    }\n\n    public Integer getIntegerInstance() {\n        return map.getInstance(Integer.class);\n    }\n\n    public Double getDoubleInstance() {\n        return map.getInstance(Double.class);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create and populate the ImmutableMapBuilder\n        ImmutableMapBuilder mapBuilder = new ImmutableMapBuilder();\n        mapBuilder.addValue(String.class, \"Hello, World!\");\n        mapBuilder.addAdditionalValues();\n        \n        // Build the map\n        ImmutableClassToInstanceMap<Object> map = mapBuilder.buildMap();\n\n        // Create the ImmutableMapReader to read from the map\n        ImmutableMapReader mapReader = new ImmutableMapReader(map);\n\n        // Retrieve and print the String instance\n        String stringValue = mapReader.getStringInstance();\n        System.out.println(\"String value: \" + stringValue);\n\n        // Retrieve and print the Integer and Double instances\n        Integer intValue = mapReader.getIntegerInstance();\n        Double doubleValue = mapReader.getDoubleInstance();\n        System.out.println(\"Integer value: \" + intValue);\n        System.out.println(\"Double value: \" + doubleValue);\n\n        // Create a course and add students\n        Course course = new Course(\"Computer Science\");\n        course.addStudent(new Student(\"Alice\", 20));\n        course.addStudent(new Student(\"Bob\", 22));\n\n        // Print course details\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of ImmutableClassToInstanceMap.Builder\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Add an instance of String to the builder with String.class as the key\n        /* write */ builder.put(String.class, \"Hello, World!\");\n        \n        // Build the ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n        \n        // Retrieve the instance using String.class as the key\n        /* read */ String value = map.getInstance(String.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of ImmutableClassToInstanceMap.Builder\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n\n        // Add an instance of String to the builder with String.class as the key\n        /* write */ builder.put(String.class, \"Hello, World!\");\n\n        // Create a map to store additional values\n        Map<Class<?>, Object> additionalMap = new HashMap<>();\n        additionalMap.put(Integer.class, 123);\n        additionalMap.put(Double.class, 456.78);\n\n        // Add additional values to the builder\n        for (Map.Entry<Class<?>, Object> entry : additionalMap.entrySet()) {\n            builder.put(entry.getKey(), entry.getValue());\n        }\n\n        // Build the ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n\n        // Perform some operations with the map\n        Integer intValue = map.getInstance(Integer.class);\n        Double doubleValue = map.getInstance(Double.class);\n        System.out.println(\"Integer value: \" + intValue);\n        System.out.println(\"Double value: \" + doubleValue);\n\n        // Retrieve the instance using String.class as the key\n        /* read */ String value = map.getInstance(String.class);\n\n        // Print the retrieved value\n        System.out.println(value);\n\n        // Additional complexity: perform calculations and print results\n        int result = intValue * 2;\n        double resultDouble = doubleValue / 2;\n        System.out.println(\"Result of integer calculation: \" + result);\n        System.out.println(\"Result of double calculation: \" + resultDouble);\n\n        // Create a new map to demonstrate further operations\n        Map<String, Integer> demoMap = new HashMap<>();\n        demoMap.put(\"A\", 10);\n        demoMap.put(\"B\", 20);\n        demoMap.put(\"C\", 30);\n\n        // Iterate and print values from demoMap\n        for (String key : demoMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + demoMap.get(key));\n        }\n    }\n}"
}