{
    "files": {
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Student.java": "import com.google.common.collect.LinkedHashBiMap;\n\npublic class Student {\n    private String name;\n    private LinkedHashBiMap<String, Integer> scores = LinkedHashBiMap.create();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(String subject, int score) {\n        /* write */ scores.put(subject, score);\n    }\n\n    public Integer getScore(String subject) {\n        /* read */ return scores.get(subject);\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create course and students\n        Course mathCourse = new Course(\"Mathematics\");\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n\n        // Enroll students in the course\n        mathCourse.enrollStudent(alice);\n        mathCourse.enrollStudent(bob);\n\n        // Add scores for students\n        alice.addScore(\"Math\", 95);\n        bob.addScore(\"Math\", 85);\n\n        // Retrieve and print scores\n        for (Student student : mathCourse.getEnrolledStudents()) {\n            int score = student.getScore(\"Math\");\n            System.out.println(student.getName() + \"'s Math score: \" + score);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedHashBiMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.LinkedHashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashBiMap<String, Integer> map = LinkedHashBiMap.create();\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.LinkedHashBiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LinkedHashBiMap and a HashMap\n        LinkedHashBiMap<String, Integer> map = LinkedHashBiMap.create();\n        Map<String, String> stringMap = new HashMap<>();\n\n        // Add some values to the HashMap\n        stringMap.put(\"A\", \"Apple\");\n        stringMap.put(\"B\", \"Banana\");\n        stringMap.put(\"C\", \"Cherry\");\n\n        // Perform some operations on the HashMap\n        if (stringMap.containsKey(\"A\")) {\n            System.out.println(\"Contains key 'A': \" + stringMap.get(\"A\"));\n        }\n\n        // Insert a value into the LinkedHashBiMap\n        /* write */ map.put(\"key\", 42);\n\n        // Add more values to the LinkedHashBiMap\n        map.put(\"anotherKey\", 100);\n        map.put(\"yetAnotherKey\", 200);\n\n        // Retrieve and print values from LinkedHashBiMap\n        System.out.println(\"Value for 'anotherKey': \" + map.get(\"anotherKey\"));\n        System.out.println(\"Value for 'yetAnotherKey': \" + map.get(\"yetAnotherKey\"));\n\n        // Perform some operations on the LinkedHashBiMap\n        if (map.containsKey(\"key\")) {\n            System.out.println(\"Map contains 'key'.\");\n        }\n\n        // Retrieve the value inserted earlier\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(\"Retrieved value: \" + value);\n\n        // Perform some additional operations\n        for (Map.Entry<String, String> entry : stringMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Add and manipulate more data\n        stringMap.put(\"D\", \"Date\");\n        stringMap.remove(\"B\");\n\n        // Print final state of the HashMap\n        System.out.println(\"Final state of stringMap: \" + stringMap);\n    }\n}"
}