{
    "files": {
        "RangeMapBuilder.java": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\n\npublic class RangeMapBuilder {\n    private ImmutableRangeMap.Builder<Integer, String> builder = new ImmutableRangeMap.Builder<>();\n\n    public void addRange(int start, int end, String value) {\n        /* write */ builder.put(Range.closed(start, end), value);\n    }\n\n    public ImmutableRangeMap<Integer, String> build() {\n        return builder.build();\n    }\n}\n",
        "RangeReader.java": "import com.google.common.collect.ImmutableRangeMap;\n\npublic class RangeReader {\n    private ImmutableRangeMap<Integer, String> rangeMap;\n\n    public RangeReader(ImmutableRangeMap<Integer, String> rangeMap) {\n        this.rangeMap = rangeMap;\n    }\n\n    public String readValue(int key) {\n        /* read */ return rangeMap.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Use RangeMapBuilder to add ranges\n        RangeMapBuilder rangeMapBuilder = new RangeMapBuilder();\n        rangeMapBuilder.addRange(0, 10, \"Value1\");\n        rangeMapBuilder.addRange(20, 30, \"Value2\");\n\n        // Build the range map\n        ImmutableRangeMap<Integer, String> rangeMap = rangeMapBuilder.build();\n\n        // Use RangeReader to read values\n        RangeReader rangeReader = new RangeReader(rangeMap);\n        String value = rangeReader.readValue(5);\n        System.out.println(\"Read from ImmutableRangeMap: \" + value);\n\n        // Create a Course and add Students\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(new Student(\"Alice\", 20));\n        course.addStudent(new Student(\"Bob\", 22));\n\n        // Print Course details\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student Name: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableRangeMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableRangeMap.Builder<Integer, String> builder = new ImmutableRangeMap.Builder<>();\n        /* write */ builder.put(Range.closed(0, 10), \"Value1\");\n        \n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n        /* read */ String value = rangeMap.get(5);\n        \n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.RangeMap;\nimport com.google.common.collect.TreeRangeMap;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        ImmutableRangeMap.Builder<Integer, String> builder = new ImmutableRangeMap.Builder<>();\n        /* write */ builder.put(Range.closed(0, 10), \"Value1\");\n\n        // Additional unrelated complex code\n        Map<String, Integer> stringToIntMap = new HashMap<>();\n        stringToIntMap.put(\"A\", 1);\n        stringToIntMap.put(\"B\", 2);\n        stringToIntMap.put(\"C\", 3);\n\n        for (String key : stringToIntMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + stringToIntMap.get(key));\n        }\n\n        RangeMap<Integer, String> treeRangeMap = TreeRangeMap.create();\n        treeRangeMap.put(Range.closed(20, 30), \"TreeMapValue1\");\n        treeRangeMap.put(Range.closed(31, 40), \"TreeMapValue2\");\n\n        System.out.println(\"TreeRangeMap Get: \" + treeRangeMap.get(25));\n\n        // More complex logic\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 4: \" + sum);\n\n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n        /* read */ String value = rangeMap.get(5);\n\n        System.out.println(\"ImmutableRangeMap Get: \" + value);\n\n        // Additional logic to further increase complexity\n        for (int i = 0; i < 3; i++) {\n            System.out.println(\"Iteration: \" + i);\n        }\n\n        Map<Integer, String> intToStringMap = new HashMap<>();\n        for (int i = 1; i <= 3; i++) {\n            intToStringMap.put(i, \"Number\" + i);\n        }\n\n        for (Map.Entry<Integer, String> entry : intToStringMap.entrySet()) {\n            System.out.println(\"Integer: \" + entry.getKey() + \", String: \" + entry.getValue());\n        }\n    }\n}"
}