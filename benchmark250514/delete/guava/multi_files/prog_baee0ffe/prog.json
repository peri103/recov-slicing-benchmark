{
    "files": {
        "ImmutableDataWriter.java": "import com.google.common.collect.MutableClassToInstanceMap;\n\npublic class ImmutableDataWriter {\n    private MutableClassToInstanceMap<Object> mutableMap = MutableClassToInstanceMap.create();\n\n    public void writeData() {\n        /* write */ mutableMap.putInstance(String.class, \"Hello, World!\");\n    }\n\n    public MutableClassToInstanceMap<Object> getMutableMap() {\n        return mutableMap;\n    }\n}",
        "ImmutableDataReader.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class ImmutableDataReader {\n    private ImmutableClassToInstanceMap<Object> immutableMap;\n\n    public ImmutableDataReader(MutableClassToInstanceMap<Object> mutableMap) {\n        immutableMap = ImmutableClassToInstanceMap.copyOf(mutableMap);\n    }\n\n    public String readData() {\n        /* read */ return immutableMap.getInstance(String.class);\n    }\n}",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Initialize data writer and write data\n        ImmutableDataWriter dataWriter = new ImmutableDataWriter();\n        dataWriter.writeData();\n\n        // Initialize data reader and read data\n        ImmutableDataReader dataReader = new ImmutableDataReader(dataWriter.getMutableMap());\n        String value = dataReader.readData();\n        System.out.println(value);\n\n        // Create students and courses\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n\n        Course math = new Course(\"Mathematics\");\n        Course science = new Course(\"Science\");\n\n        // Enroll students in courses\n        math.enrollStudent(alice);\n        science.enrollStudent(bob);\n\n        // Enroll students in courses\n        alice.enrollInCourse(math);\n        bob.enrollInCourse(science);\n\n        // Print student details\n        for (Student student : math.getEnrolledStudents()) {\n            System.out.println(student.getName() + \" is enrolled in \" + math.getCourseName());\n        }\n        for (Student student : science.getEnrolledStudents()) {\n            System.out.println(student.getName() + \" is enrolled in \" + science.getCourseName());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.MutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a mutable map to build the immutable map\n        MutableClassToInstanceMap<Object> mutableMap = MutableClassToInstanceMap.create();\n        \n        // Use the write method to put an instance into the map\n        /* write */ mutableMap.putInstance(String.class, \"Hello, World!\");\n        \n        // Build the immutable map from the mutable map\n        ImmutableClassToInstanceMap<Object> immutableMap = ImmutableClassToInstanceMap.copyOf(mutableMap);\n        \n        // Use the read method to get the instance from the map\n        /* read */ String value = immutableMap.getInstance(String.class);\n        \n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.MutableClassToInstanceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a mutable map to build the immutable map\n        MutableClassToInstanceMap<Object> mutableMap = MutableClassToInstanceMap.create();\n        \n        // Use the write method to put an instance into the map\n        /* write */ mutableMap.putInstance(String.class, \"Hello, World!\");\n        \n        // Create another map to store data\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"One\", 1);\n        dataMap.put(\"Two\", 2);\n        dataMap.put(\"Three\", 3);\n        \n        // Perform operations on dataMap\n        int sum = 0;\n        for (Integer value : dataMap.values()) {\n            sum += value;\n        }\n        \n        // Print the sum of values in dataMap\n        System.out.println(\"Sum of values in dataMap: \" + sum);\n        \n        // Build the immutable map from the mutable map\n        ImmutableClassToInstanceMap<Object> immutableMap = ImmutableClassToInstanceMap.copyOf(mutableMap);\n        \n        // Perform some unrelated operations\n        Map<Integer, String> reverseMap = new HashMap<>();\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            reverseMap.put(entry.getValue(), entry.getKey());\n        }\n        \n        // Print the reverse map\n        System.out.println(\"Reverse map: \" + reverseMap);\n        \n        // Use the read method to get the instance from the map\n        /* read */ String value = immutableMap.getInstance(String.class);\n        \n        // Print the value\n        System.out.println(value);\n        \n        // Perform additional operations on reverseMap\n        for (int i = 1; i <= reverseMap.size(); i++) {\n            System.out.println(\"Value for key \" + i + \": \" + reverseMap.get(i));\n        }\n    }\n}"
}