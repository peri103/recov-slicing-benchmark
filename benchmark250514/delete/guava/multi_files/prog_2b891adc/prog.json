{
    "files": {
        "FruitInventory.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class FruitInventory {\n    private Map<String, Integer> inventory = new HashMap<>();\n\n    public void addFruit(String fruit, int quantity) {\n        inventory.put(fruit, quantity);\n    }\n\n    public int getTotalInventory() {\n        int total = 0;\n        for (int quantity : inventory.values()) {\n            total += quantity;\n        }\n        return total;\n    }\n\n    public void removeFruit(String fruit) {\n        inventory.remove(fruit);\n    }\n\n    public Map<String, Integer> getInventory() {\n        return inventory;\n    }\n}",
        "FruitMultiset.java": "import com.google.common.collect.LinkedHashMultiset;\nimport com.google.common.collect.Multiset;\n\npublic class FruitMultiset {\n    private Multiset<String> multiset = LinkedHashMultiset.create();\n\n    public void addFruit(String fruit) {\n        /* write */ multiset.add(fruit);\n    }\n\n    public int getFruitCount(String fruit) {\n        return multiset.count(fruit);\n    }\n\n    public void addMultipleFruits(String fruit, int count) {\n        multiset.add(fruit, count);\n    }\n\n    public int getTotalFruits() {\n        int total = 0;\n        for (String fruit : multiset.elementSet()) {\n            total += multiset.count(fruit);\n        }\n        return total;\n    }\n}",
        "Main.java": "import java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        FruitInventory inventory = new FruitInventory();\n        FruitMultiset multiset = new FruitMultiset();\n\n        // Add fruits to inventory\n        inventory.addFruit(\"banana\", 5);\n        inventory.addFruit(\"orange\", 4);\n        inventory.addFruit(\"apple\", 10);\n        inventory.addFruit(\"kiwi\", 7);\n\n        // Display inventory\n        for (Map.Entry<String, Integer> entry : inventory.getInventory().entrySet()) {\n            System.out.println(\"Fruit: \" + entry.getKey() + \", Quantity: \" + entry.getValue());\n        }\n\n        // Add fruits to multiset\n        multiset.addMultipleFruits(\"banana\", 3);\n        multiset.addMultipleFruits(\"orange\", 2);\n        \n        // Calculate total inventory\n        int totalInventory = inventory.getTotalInventory();\n        System.out.println(\"Total inventory: \" + totalInventory);\n\n        // Remove a fruit from inventory\n        inventory.removeFruit(\"banana\");\n        System.out.println(\"Updated inventory after removing 'banana': \" + inventory.getInventory());\n\n        // Add a single fruit to multiset\n        multiset.addFruit(\"apple\");\n\n        // Calculate total fruits in multiset\n        int totalFruits = multiset.getTotalFruits();\n        System.out.println(\"Total fruits in multiset: \" + totalFruits);\n\n        // Get count of a specific fruit\n        /* read */ int appleCount = multiset.getFruitCount(\"apple\");\n        System.out.println(\"Count of 'apple' in multiset: \" + appleCount);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.LinkedHashMultiset",
        "read_method": "count"
    },
    "java_code_simple": "import com.google.common.collect.LinkedHashMultiset;\nimport com.google.common.collect.Multiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multiset<String> multiset = LinkedHashMultiset.create();\n        /* write */ multiset.add(\"apple\");\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(count);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.LinkedHashMultiset;\nimport com.google.common.collect.Multiset;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multiset<String> multiset = LinkedHashMultiset.create();\n        Map<String, Integer> fruitInventory = new HashMap<>();\n        \n        // Adding multiple items to the multiset\n        multiset.add(\"banana\", 3);\n        multiset.add(\"orange\", 2);\n        \n        // Adding items to the inventory map\n        fruitInventory.put(\"banana\", 5);\n        fruitInventory.put(\"orange\", 4);\n        \n        // Performing operations on the inventory map\n        for (Map.Entry<String, Integer> entry : fruitInventory.entrySet()) {\n            System.out.println(\"Fruit: \" + entry.getKey() + \", Quantity: \" + entry.getValue());\n        }\n        \n        // A complex operation using the multiset\n        int totalFruits = 0;\n        for (String fruit : multiset.elementSet()) {\n            totalFruits += multiset.count(fruit);\n        }\n        System.out.println(\"Total fruits in multiset: \" + totalFruits);\n        \n        /* write */ multiset.add(\"apple\");\n        \n        // More operations with the inventory map\n        fruitInventory.put(\"apple\", 10);\n        fruitInventory.put(\"kiwi\", 7);\n        \n        // Calculating the total quantity of fruits in the inventory\n        int totalInventory = 0;\n        for (int quantity : fruitInventory.values()) {\n            totalInventory += quantity;\n        }\n        System.out.println(\"Total inventory: \" + totalInventory);\n        \n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(\"Count of 'apple' in multiset: \" + count);\n        \n        // Further operations\n        fruitInventory.remove(\"banana\");\n        System.out.println(\"Updated inventory after removing 'banana': \" + fruitInventory);\n    }\n}"
}