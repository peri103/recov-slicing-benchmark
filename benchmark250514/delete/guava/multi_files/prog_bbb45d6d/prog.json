{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name) {\n        this.name = name;\n        this.course = new Course();\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void enrollInCourse(String courseName) {\n        course.setCourseName(courseName);\n    }\n\n    public String getCourseName() {\n        return course.getCourseName();\n    }\n\n    public void addGrade(int grade) {\n        course.addGrade(grade);\n    }\n\n    public int getGrade(int index) {\n        return course.getGrade(index);\n    }\n}\n",
        "Course.java": "import com.google.common.collect.ImmutableList;\n\npublic class Course {\n    private String courseName;\n    private ImmutableList.Builder<Integer> gradesBuilder = ImmutableList.builder();\n    private ImmutableList<Integer> grades;\n\n    public void setCourseName(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public void addGrade(int grade) {\n        /* write */ gradesBuilder.add(grade);\n    }\n\n    public void finalizeGrades() {\n        grades = gradesBuilder.build();\n    }\n\n    public int getGrade(int index) {\n        return grades.get(index);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Bob\");\n        student.enrollInCourse(\"Mathematics\");\n\n        // Add grades for the student\n        student.addGrade(85);\n        student.addGrade(90);\n        student.addGrade(95);\n\n        // Finalize grades in the course\n        student.getCourseName(); // Just to illustrate accessing courseName\n        student.getCourseName().finalizeGrades();\n\n        // Read a specific grade\n        /* read */ int grade = student.getGrade(1);\n        System.out.println(\"Grade at index 1: \" + grade);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableList",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableList",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableList\n        ImmutableList.Builder<Integer> builder = ImmutableList.builder();\n        \n        // Write a value to the builder\n        /* write */ builder.add(42);\n        \n        // Build the ImmutableList\n        ImmutableList<Integer> immutableList = builder.build();\n        \n        // Read the value from the ImmutableList\n        /* read */ int value = immutableList.get(0);\n        \n        // Output the read value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableList\n        ImmutableList.Builder<Integer> builder = ImmutableList.builder();\n        \n        // Additional unrelated code: Create and manipulate a HashMap\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n        \n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n        \n        // Write a value to the builder\n        /* write */ builder.add(42);\n\n        // More unrelated code: Perform some calculations\n        int a = 5;\n        int b = 10;\n        int c = a + b;\n        int d = a * b;\n        System.out.println(\"Sum: \" + c + \", Product: \" + d);\n        \n        // Build the ImmutableList\n        ImmutableList<Integer> immutableList = builder.build();\n        \n        // Additional unrelated code: Iterate and print elements from the map\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \" = \" + entry.getValue());\n        }\n        \n        // Read the value from the ImmutableList\n        /* read */ int value = immutableList.get(0);\n        \n        // Output the read value\n        System.out.println(\"Read value: \" + value);\n    }\n}"
}