{
    "files": {
        "FruitMultisetBuilder.java": "import com.google.common.collect.ImmutableMultiset;\n\npublic class FruitMultisetBuilder {\n    private ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n\n    public void addFruits() {\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n    }\n\n    public ImmutableMultiset<String> build() {\n        return builder.build();\n    }\n}\n",
        "FruitAnalyzer.java": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableMap;\n\npublic class FruitAnalyzer {\n    private ImmutableMultiset<String> multiset;\n\n    public FruitAnalyzer(ImmutableMultiset<String> multiset) {\n        this.multiset = multiset;\n    }\n\n    public void analyzeFruits() {\n        // Create and use an ImmutableSet\n        ImmutableSet<String> fruitSet = ImmutableSet.of(\"apple\", \"banana\", \"orange\");\n        System.out.println(\"ImmutableSet contains 'banana': \" + fruitSet.contains(\"banana\"));\n\n        // Create and use an ImmutableMap\n        ImmutableMap<String, Integer> fruitMap = ImmutableMap.of(\"apple\", 2, \"banana\", 3, \"orange\", 1);\n        System.out.println(\"FruitMap size: \" + fruitMap.size());\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 4: \" + sum);\n\n        // More unrelated operations\n        int product = 1;\n        for (String fruit : fruitSet) {\n            product *= fruit.length();\n        }\n        System.out.println(\"Product of string lengths in fruitSet: \" + product);\n\n        // Additional unrelated code\n        String[] fruits = {\"apple\", \"banana\", \"orange\"};\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n\n    public int getAppleCount() {\n        // Use the count method to read the number of occurrences of \"apple\"\n        /* read */ return multiset.count(\"apple\");\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        FruitMultisetBuilder builder = new FruitMultisetBuilder();\n        builder.addFruits();\n        \n        ImmutableMultiset<String> multiset = builder.build();\n        \n        FruitAnalyzer analyzer = new FruitAnalyzer(multiset);\n        analyzer.analyzeFruits();\n        \n        int appleCount = analyzer.getAppleCount();\n        System.out.println(\"Count of 'apple' in multiset: \" + appleCount);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableMultiset",
        "read_method": "count"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        \n        // Add elements using the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n        \n        // Use the count method to read the number of occurrences of \"apple\"\n        /* read */ int appleCount = multiset.count(\"apple\");\n        \n        // Print the count of \"apple\"\n        System.out.println(appleCount);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        \n        // Add elements using the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n\n        // Create and use an ImmutableSet\n        ImmutableSet<String> fruitSet = ImmutableSet.of(\"apple\", \"banana\", \"orange\");\n        System.out.println(\"ImmutableSet contains 'banana': \" + fruitSet.contains(\"banana\"));\n\n        // Create and use an ImmutableMap\n        ImmutableMap<String, Integer> fruitMap = ImmutableMap.of(\"apple\", 2, \"banana\", 3, \"orange\", 1);\n        System.out.println(\"FruitMap size: \" + fruitMap.size());\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 4: \" + sum);\n\n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n\n        // More unrelated operations\n        int product = 1;\n        for (String fruit : fruitSet) {\n            product *= fruit.length();\n        }\n        System.out.println(\"Product of string lengths in fruitSet: \" + product);\n\n        // Use the count method to read the number of occurrences of \"apple\"\n        /* read */ int appleCount = multiset.count(\"apple\");\n\n        // Print the count of \"apple\"\n        System.out.println(\"Count of 'apple' in multiset: \" + appleCount);\n\n        // Additional unrelated code\n        String[] fruits = {\"apple\", \"banana\", \"orange\"};\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n}"
}