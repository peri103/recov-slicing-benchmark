{
    "files": {
        "RangeManager.java": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\n\npublic class RangeManager {\n    private ImmutableRangeSet.Builder<Integer> builder = ImmutableRangeSet.builder();\n\n    public void addRange(int start, int end) {\n        /* write */ builder.add(Range.closed(start, end));\n    }\n\n    public ImmutableRangeSet<Integer> buildRangeSet() {\n        return builder.build();\n    }\n}\n",
        "RangeChecker.java": "import com.google.common.collect.ImmutableRangeSet;\n\npublic class RangeChecker {\n    private ImmutableRangeSet<Integer> rangeSet;\n\n    public RangeChecker(ImmutableRangeSet<Integer> rangeSet) {\n        this.rangeSet = rangeSet;\n    }\n\n    public boolean contains(int value) {\n        /* read */ return rangeSet.contains(value);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Managing ranges\n        RangeManager rangeManager = new RangeManager();\n        rangeManager.addRange(20, 30);\n        rangeManager.addRange(40, 50);\n        rangeManager.addRange(1, 10); // This is where the write happens\n\n        ImmutableRangeSet<Integer> rangeSet = rangeManager.buildRangeSet();\n        RangeChecker rangeChecker = new RangeChecker(rangeSet);\n\n        // Checking if a value is within any of the defined ranges\n        boolean containsValue = rangeChecker.contains(5); // This is where the read happens\n        System.out.println(\"RangeSet contains 5: \" + containsValue);\n\n        // Managing students and courses\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\", 20);\n        Student student2 = new Student(\"Bob\", 22);\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableRangeSet",
        "read_method": "contains"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableRangeSet.Builder<Integer> builder = ImmutableRangeSet.builder();\n        /* write */ builder.add(Range.closed(1, 10));\n        ImmutableRangeSet<Integer> rangeSet = builder.build();\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.ImmutableSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing a builder for ImmutableRangeSet\n        ImmutableRangeSet.Builder<Integer> builder = ImmutableRangeSet.builder();\n        \n        // Adding ranges to the builder\n        builder.add(Range.closed(20, 30));\n        builder.add(Range.closed(40, 50));\n        \n        // Building the ImmutableRangeSet\n        ImmutableRangeSet<Integer> rangeSet = builder.build();\n\n        // Using ImmutableSet for unrelated operations\n        ImmutableSet<String> immutableSet = ImmutableSet.of(\"Alpha\", \"Beta\", \"Gamma\");\n        System.out.println(\"ImmutableSet contains 'Beta': \" + immutableSet.contains(\"Beta\"));\n\n        // Adding another range to the builder\n        /* write */ builder.add(Range.closed(1, 10));\n        \n        // Rebuilding the range set to include the new range\n        rangeSet = builder.build();\n\n        // Performing operations on the range set\n        System.out.println(\"RangeSet contains 25: \" + rangeSet.contains(25));\n        System.out.println(\"RangeSet contains 35: \" + rangeSet.contains(35));\n\n        // More unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Checking if a value is within any of the defined ranges\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(\"RangeSet contains 5: \" + containsValue);\n\n        // Additional operations on ImmutableSet\n        for (String element : immutableSet) {\n            System.out.println(\"Element in ImmutableSet: \" + element);\n        }\n    }\n}"
}