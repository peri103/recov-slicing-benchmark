{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Course {\n    private String courseName;\n    private ImmutableBiMap.Builder<String, Integer> studentScoresBuilder;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.studentScoresBuilder = ImmutableBiMap.builder();\n    }\n\n    public void addStudentScore(String studentName, int score) {\n        /* write */ studentScoresBuilder.put(studentName, score);\n    }\n\n    public ImmutableBiMap<String, Integer> getStudentScores() {\n        return studentScoresBuilder.build();\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create students\n        Student student1 = new Student(\"Alice\", 20);\n        Student student2 = new Student(\"Bob\", 22);\n\n        // Create a course and add student scores\n        Course mathCourse = new Course(\"Mathematics\");\n        mathCourse.addStudentScore(student1.getName(), 85);\n        mathCourse.addStudentScore(student2.getName(), 90);\n\n        // Build the student scores map\n        ImmutableBiMap<String, Integer> mathScores = mathCourse.getStudentScores();\n\n        // Display course information\n        System.out.println(\"Course: \" + mathCourse.getCourseName());\n\n        // Perform some unrelated operations\n        ImmutableList.Builder<String> fruitsBuilder = ImmutableList.builder();\n        fruitsBuilder.add(\"apple\");\n        fruitsBuilder.add(\"banana\");\n        fruitsBuilder.add(\"cherry\");\n        ImmutableList<String> fruits = fruitsBuilder.build();\n\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n\n        // Read a specific student's score\n        /* read */ Integer aliceScore = mathScores.get(student1.getName());\n        \n        // Output the read score\n        System.out.println(\"Alice's score in \" + mathCourse.getCourseName() + \": \" + aliceScore);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        // Write to the builder\n        /* write */ builder.put(\"one\", 1);\n        \n        // Build the ImmutableBiMap\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        // Read from the ImmutableBiMap\n        /* read */ Integer value = biMap.get(\"one\");\n        \n        // Output the read value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        // Write to the builder\n        /* write */ builder.put(\"one\", 1);\n        \n        // Create an ImmutableList to store some values\n        ImmutableList.Builder<String> listBuilder = ImmutableList.builder();\n        listBuilder.add(\"apple\");\n        listBuilder.add(\"banana\");\n        listBuilder.add(\"cherry\");\n        \n        // Build the ImmutableBiMap\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        // Perform some operations with the ImmutableList\n        ImmutableList<String> fruitList = listBuilder.build();\n        for (String fruit : fruitList) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        // Perform a calculation\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 4: \" + sum);\n        \n        // Read from the ImmutableBiMap\n        /* read */ Integer value = biMap.get(\"one\");\n        \n        // Output the read value\n        System.out.println(\"Value from biMap: \" + value);\n        \n        // More unrelated code\n        for (int i = 0; i < fruitList.size(); i++) {\n            System.out.println(\"Index \" + i + \": \" + fruitList.get(i));\n        }\n        \n        // Another calculation\n        int product = 1;\n        for (int i = 1; i <= 3; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 3: \" + product);\n    }\n}"
}