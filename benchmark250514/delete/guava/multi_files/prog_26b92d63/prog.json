{
    "files": {
        "Student.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.MutableClassToInstanceMap;\n\npublic class Student {\n    private String name;\n    private MutableClassToInstanceMap<Object> mutableMap = MutableClassToInstanceMap.create();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addInstance(Class<?> clazz, Object instance) {\n        /* write */ mutableMap.putInstance(clazz, instance);\n    }\n\n    public ImmutableClassToInstanceMap<Object> getImmutableMap() {\n        return ImmutableClassToInstanceMap.copyOf(mutableMap);\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import com.google.common.collect.ImmutableSet;\nimport java.util.HashSet;\n\npublic class Course {\n    private String courseName;\n    private HashSet<String> enrolledStudents = new HashSet<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(String studentName) {\n        enrolledStudents.add(studentName);\n    }\n\n    public ImmutableSet<String> getEnrolledStudents() {\n        return ImmutableSet.copyOf(enrolledStudents);\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a Student object\n        Student student = new Student(\"Alice\");\n        \n        // Add an instance to the student's map\n        student.addInstance(String.class, \"Hello, World!\");\n        \n        // Create a Course object\n        Course course = new Course(\"Mathematics\");\n        \n        // Enroll the student in the course\n        course.enrollStudent(student.getName());\n        \n        // Print enrolled students in the course\n        System.out.println(\"Enrolled students in \" + course.getCourseName() + \":\");\n        for (String studentName : course.getEnrolledStudents()) {\n            System.out.println(studentName);\n        }\n        \n        // Retrieve the immutable map from the student\n        ImmutableClassToInstanceMap<Object> immutableMap = student.getImmutableMap();\n        \n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 5; i++) {\n            sum += i * i;\n        }\n        System.out.println(\"Sum of squares from 1 to 5: \" + sum);\n        \n        // Use the read method to retrieve the instance\n        /* read */ String value = immutableMap.getInstance(String.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.MutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a mutable map to populate the ImmutableClassToInstanceMap\n        MutableClassToInstanceMap<Object> mutableMap = MutableClassToInstanceMap.create();\n        \n        // Use the write method to put an instance into the map\n        /* write */ mutableMap.putInstance(String.class, \"Hello, World!\");\n        \n        // Build the immutable map from the mutable map\n        ImmutableClassToInstanceMap<Object> immutableMap = ImmutableClassToInstanceMap.copyOf(mutableMap);\n        \n        // Use the read method to retrieve the instance\n        /* read */ String value = immutableMap.getInstance(String.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableMap;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\nimport java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a mutable map to populate the ImmutableClassToInstanceMap\n        MutableClassToInstanceMap<Object> mutableMap = MutableClassToInstanceMap.create();\n        \n        // Use the write method to put an instance into the map\n        /* write */ mutableMap.putInstance(String.class, \"Hello, World!\");\n        \n        // Create a HashMap and populate it\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"One\", 1);\n        hashMap.put(\"Two\", 2);\n        \n        // Build an immutable map from the HashMap\n        ImmutableMap<String, Integer> immutableMap = ImmutableMap.copyOf(hashMap);\n        \n        // Print all entries in the immutable map\n        for (String key : immutableMap.keySet()) {\n            System.out.println(key + \": \" + immutableMap.get(key));\n        }\n        \n        // Create a HashSet and populate it\n        HashSet<String> hashSet = new HashSet<>();\n        hashSet.add(\"Apple\");\n        hashSet.add(\"Banana\");\n        \n        // Build an immutable set from the HashSet\n        ImmutableSet<String> immutableSet = ImmutableSet.copyOf(hashSet);\n        \n        // Print all elements in the immutable set\n        for (String fruit : immutableSet) {\n            System.out.println(fruit);\n        }\n        \n        // Build the immutable map from the mutable map\n        ImmutableClassToInstanceMap<Object> immutableClassMap = ImmutableClassToInstanceMap.copyOf(mutableMap);\n        \n        // Additional operations with the immutable class map\n        if (immutableClassMap.getInstance(Integer.class) == null) {\n            System.out.println(\"Integer instance not found.\");\n        }\n        \n        // Use the read method to retrieve the instance\n        /* read */ String value = immutableClassMap.getInstance(String.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n        \n        // Perform some calculations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n    }\n}"
}