{
    "files": {
        "ImmutableMapBuilder.java": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class ImmutableMapBuilder {\n    private ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n\n    public void addEntry(String key, Integer value) {\n        /* write */ builder.put(key, value);\n    }\n\n    public ImmutableSortedMap<String, Integer> build() {\n        return builder.build();\n    }\n}\n",
        "DataProcessor.java": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class DataProcessor {\n    private ImmutableSortedMap<String, Integer> map;\n\n    public DataProcessor(ImmutableSortedMap<String, Integer> map) {\n        this.map = map;\n    }\n\n    public Integer getValue(String key) {\n        /* read */ return map.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Using ImmutableMapBuilder and DataProcessor\n        ImmutableMapBuilder mapBuilder = new ImmutableMapBuilder();\n        mapBuilder.addEntry(\"key\", 42);\n        ImmutableSortedMap<String, Integer> map = mapBuilder.build();\n        DataProcessor processor = new DataProcessor(map);\n        Integer value = processor.getValue(\"key\");\n        System.out.println(\"Value from map: \" + value);\n\n        // Creating students and course\n        Student student1 = new Student(\"Alice\", 1);\n        Student student2 = new Student(\"Bob\", 2);\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Display course and student information\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student Name: \" + student.getName() + \", ID: \" + student.getId());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableSortedMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n        /* write */ builder.put(\"key\", 42);\n        ImmutableSortedMap<String, Integer> map = builder.build();\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableSortedMap;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n        /* write */ builder.put(\"key\", 42);\n        ImmutableSortedMap<String, Integer> map = builder.build();\n\n        // Additional unrelated code to increase complexity\n        ImmutableMap.Builder<String, String> stringMapBuilder = ImmutableMap.builder();\n        stringMapBuilder.put(\"name\", \"Alice\");\n        stringMapBuilder.put(\"city\", \"Wonderland\");\n        ImmutableMap<String, String> stringMap = stringMapBuilder.build();\n\n        // Performing operations on the new map\n        for (String key : stringMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + stringMap.get(key));\n        }\n\n        // More operations to increase complexity\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Using the original map\n        for (String key : map.keySet()) {\n            System.out.println(\"Original Map Key: \" + key);\n        }\n\n        // Read from the original map\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n\n        // Further complexity with additional operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n    }\n}"
}