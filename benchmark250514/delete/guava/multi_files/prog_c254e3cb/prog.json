{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private CourseScores scores = new CourseScores();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addCourseScore(String course, int score) {\n        scores.addScore(course, score);\n    }\n\n    public int getCourseScore(String course) {\n        return scores.getScore(course);\n    }\n}\n",
        "CourseScores.java": "import com.google.common.collect.MutableClassToInstanceMap;\n\npublic class CourseScores {\n    private MutableClassToInstanceMap<Object> courseScoresMap = MutableClassToInstanceMap.create();\n\n    public void addScore(String course, int score) {\n        /* write */ courseScoresMap.putInstance(course.getClass(), score);\n    }\n\n    public int getScore(String course) {\n        /* read */ return (Integer) courseScoresMap.getInstance(course.getClass());\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n\n        // Adding scores for different courses\n        student.addCourseScore(\"Math\", 95);\n        student.addCourseScore(\"Science\", 90);\n\n        // Fetching and displaying scores\n        int mathScore = student.getCourseScore(\"Math\");\n        int scienceScore = student.getCourseScore(\"Science\");\n\n        System.out.println(\"Math Score: \" + mathScore);\n        System.out.println(\"Science Score: \" + scienceScore);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.MutableClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.MutableClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.MutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        \n        /* write */ map.putInstance(String.class, \"Hello World\");\n        \n        /* read */ String value = map.getInstance(String.class);\n        \n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.MutableClassToInstanceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        Map<String, Integer> simpleMap = new HashMap<>();\n        \n        // Unrelated operation to add complexity\n        simpleMap.put(\"One\", 1);\n        simpleMap.put(\"Two\", 2);\n        simpleMap.put(\"Three\", 3);\n        \n        System.out.println(\"Simple Map Values:\");\n        for (Map.Entry<String, Integer> entry : simpleMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Additional operation using similar API\n        MutableClassToInstanceMap<Object> anotherMap = MutableClassToInstanceMap.create();\n        anotherMap.putInstance(Integer.class, 42);\n\n        // Complex logic before the original write\n        int sum = 0;\n        for (int value : simpleMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of simpleMap values: \" + sum);\n\n        // Original write operation\n        /* write */ map.putInstance(String.class, \"Hello World\");\n\n        // More operations after the write\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Complex String Building: \");\n        for (String key : simpleMap.keySet()) {\n            sb.append(key).append(\" \");\n        }\n        System.out.println(sb.toString());\n\n        // Accessing anotherMap to add complexity\n        Integer anotherValue = anotherMap.getInstance(Integer.class);\n        System.out.println(\"Value from anotherMap: \" + anotherValue);\n\n        // Original read operation\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(\"Value from map: \" + value);\n        \n        // Further operations to increase complexity\n        int product = 1;\n        for (int value : simpleMap.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of simpleMap values: \" + product);\n    }\n}"
}