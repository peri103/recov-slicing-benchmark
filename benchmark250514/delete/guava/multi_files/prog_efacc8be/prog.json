{
    "files": {
        "Course.java": "import com.google.common.collect.ImmutableMultimap;\n\npublic class Course {\n    private ImmutableMultimap.Builder<String, Integer> gradesBuilder = ImmutableMultimap.builder();\n\n    public void addGrade(String studentName, int grade) {\n        /* write */ gradesBuilder.put(studentName, grade);\n    }\n\n    public ImmutableMultimap<String, Integer> buildGrades() {\n        return gradesBuilder.build();\n    }\n}\n",
        "Student.java": "import com.google.common.collect.ImmutableMultimap;\n\npublic class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public void addGrade(int grade) {\n        course.addGrade(name, grade);\n    }\n\n    public ImmutableMultimap<String, Integer> getGrades() {\n        return course.buildGrades();\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course();\n        Student student = new Student(\"John\", mathCourse);\n\n        student.addGrade(95);\n\n        ImmutableMultimap<String, Integer> grades = student.getGrades();\n        /* read */ Integer grade = grades.get(\"John\").iterator().next();\n        System.out.println(\"John's grade in math: \" + grade);\n\n        // Additional unrelated logic\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers 1 to 10: \" + sum);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableMultimap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableMultimap.Builder<String, Integer> builder = ImmutableMultimap.builder();\n        /* write */ builder.put(\"key\", 42);\n        ImmutableMultimap<String, Integer> multimap = builder.build();\n        /* read */ Integer value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableMultimap;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableMultimap\n        ImmutableMultimap.Builder<String, Integer> builder = ImmutableMultimap.builder();\n\n        // Create a HashMap to perform some unrelated operations\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n\n        // Perform some operations on the HashMap\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Use ImmutableSet for some other operations\n        ImmutableSet<String> immutableSet = ImmutableSet.of(\"One\", \"Two\", \"Three\");\n        for (String s : immutableSet) {\n            System.out.println(\"Set contains: \" + s);\n        }\n\n        // Add a value to the ImmutableMultimap\n        /* write */ builder.put(\"key\", 42);\n        \n        // Create another builder for a different ImmutableMultimap\n        ImmutableMultimap.Builder<String, String> anotherBuilder = ImmutableMultimap.builder();\n        anotherBuilder.put(\"fruit\", \"Apple\");\n        anotherBuilder.put(\"fruit\", \"Banana\");\n\n        // Build the original ImmutableMultimap\n        ImmutableMultimap<String, Integer> multimap = builder.build();\n        \n        // Build the second ImmutableMultimap\n        ImmutableMultimap<String, String> anotherMultimap = anotherBuilder.build();\n\n        // Perform some operations on the second multimap\n        for (String fruit : anotherMultimap.get(\"fruit\")) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n\n        // Retrieve and print the value from the original ImmutableMultimap\n        /* read */ Integer value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n    }\n}"
}