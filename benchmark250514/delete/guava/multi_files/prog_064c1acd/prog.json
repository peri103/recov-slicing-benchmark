{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public void enrollInCourse() {\n        course.addStudent(this);\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Course {\n    private String courseName;\n    private ImmutableSortedSet.Builder<Student> studentBuilder = ImmutableSortedSet.naturalOrder();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        /* write */ studentBuilder.add(student);\n    }\n\n    public ImmutableSortedSet<Student> getStudents() {\n        return studentBuilder.build();\n    }\n\n    public boolean isStudentEnrolled(Student student) {\n        ImmutableSortedSet<Student> students = getStudents();\n        /* read */ return students.contains(student);\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course(\"Mathematics\");\n        Student alice = new Student(\"Alice\", mathCourse);\n        alice.enrollInCourse();\n\n        boolean isEnrolled = mathCourse.isStudentEnrolled(alice);\n        System.out.println(\"Is Alice enrolled in \" + mathCourse.getCourseName() + \"? \" + isEnrolled);\n\n        Student bob = new Student(\"Bob\", mathCourse);\n        bob.enrollInCourse();\n\n        isEnrolled = mathCourse.isStudentEnrolled(bob);\n        System.out.println(\"Is Bob enrolled in \" + mathCourse.getCourseName() + \"? \" + isEnrolled);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n\n        // Add an element to the set using the builder\n        /* write */ builder.add(10);\n\n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> immutableSortedSet = builder.build();\n\n        // Check if the set contains the element\n        /* read */ boolean containsValue = immutableSortedSet.contains(10);\n        \n        // Print the result\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n\n        // Add an element to the set using the builder\n        /* write */ builder.add(10);\n\n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> immutableSortedSet = builder.build();\n\n        // Create a map to store some data\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"One\", 1);\n        dataMap.put(\"Two\", 2);\n        dataMap.put(\"Three\", 3);\n\n        // Iterate over the map and print its contents\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Create an ImmutableList and perform some operations\n        ImmutableList<String> immutableList = ImmutableList.of(\"A\", \"B\", \"C\");\n        for (String str : immutableList) {\n            System.out.println(\"Element in ImmutableList: \" + str);\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first five integers: \" + sum);\n\n        // Check if the set contains the element\n        /* read */ boolean containsValue = immutableSortedSet.contains(10);\n        \n        // Print the result\n        System.out.println(\"Does ImmutableSortedSet contain 10? \" + containsValue);\n\n        // More operations with ImmutableList\n        String firstElement = immutableList.get(0);\n        System.out.println(\"First element in ImmutableList: \" + firstElement);\n    }\n}"
}