{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        // Add elements using the builder\n        /* write */ builder.add(1);\n        \n        // Introduce a HashMap for additional complexity\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n        \n        // Iterate over the map and perform operations\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n\n        // Perform some operations on the set\n        Set<Integer> doubledSet = new HashSet<>();\n        for (Integer number : sortedSet) {\n            doubledSet.add(number * 2);\n        }\n        \n        // Output the doubled set\n        System.out.println(\"Doubled Set: \" + doubledSet);\n\n        // Check if the set contains the element\n        /* read */ boolean contains = sortedSet.contains(1);\n        \n        // Output the result\n        System.out.println(\"Contains 1: \" + contains);\n\n        // Additional logic for complexity\n        int sum = 0;\n        for (Integer number : sortedSet) {\n            sum += number;\n        }\n        System.out.println(\"Sum of elements in the set: \" + sum);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        // Add elements using the builder\n        /* write */ builder.add(1);\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        \n        // Check if the set contains the element\n        /* read */ boolean contains = sortedSet.contains(1);\n        \n        // Output the result\n        System.out.println(contains);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}