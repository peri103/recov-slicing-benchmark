{
    "java_code": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader.InvalidCacheLoadException;\nimport com.google.common.cache.CacheStats;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CacheLoader\n        CacheLoader<String, String> loader = new CacheLoader<String, String>() {\n            @Override\n            public String load(String key) {\n                return \"Value for \" + key;\n            }\n        };\n\n        // Build the cache\n        /* write */ LoadingCache<String, String> cache = CacheBuilder.newBuilder().build(loader);\n\n        // Write a value to the cache\n        String key = \"exampleKey\";\n        cache.put(key, \"exampleValue\");\n\n        // Additional unrelated code to make the program more complex\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n\n        System.out.println(\"HashMap contents:\");\n        for (String mapKey : map.keySet()) {\n            System.out.println(mapKey + \": \" + map.get(mapKey));\n        }\n\n        // More unrelated code\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in HashMap: \" + sum);\n\n        // Read the value from the cache\n        try {\n            /* read */ String value = cache.get(key);\n            System.out.println(\"Read value: \" + value);\n        } catch (InvalidCacheLoadException e) {\n            System.out.println(\"Error reading from cache: \" + e.getMessage());\n        }\n\n        // Further complex operations\n        map.put(\"four\", 4);\n        int product = 1;\n        for (Integer value : map.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of values in HashMap: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader.InvalidCacheLoadException;\nimport com.google.common.cache.CacheStats;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CacheLoader\n        CacheLoader<String, String> loader = new CacheLoader<String, String>() {\n            @Override\n            public String load(String key) {\n                return \"Value for \" + key;\n            }\n        };\n\n        // Build the cache\n        /* write */ LoadingCache<String, String> cache = CacheBuilder.newBuilder().build(loader);\n\n        // Write a value to the cache\n        String key = \"exampleKey\";\n        cache.put(key, \"exampleValue\");\n\n        // Read the value from the cache\n        try {\n            /* read */ String value = cache.get(key);\n            System.out.println(\"Read value: \" + value);\n        } catch (InvalidCacheLoadException e) {\n            System.out.println(\"Error reading from cache: \" + e.getMessage());\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.CacheBuilder",
        "write_method": "build",
        "read_class": "com.google.common.cache.Cache",
        "read_method": "get"
    }
}