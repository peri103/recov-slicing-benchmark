{
    "java_code": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        // Create an ImmutableSet and add some elements\n        ImmutableSet<String> set = ImmutableSet.of(\"A\", \"B\", \"C\");\n        \n        // Create an ImmutableList and add some elements\n        ImmutableList<Integer> list = ImmutableList.of(10, 20, 30);\n        \n        // Add elements to the biMap using the builder\n        builder.put(\"alpha\", 1);\n        builder.put(\"beta\", 2);\n        \n        // Perform some operations on the set and list\n        for (String s : set) {\n            System.out.println(\"Set element: \" + s);\n        }\n        \n        for (Integer i : list) {\n            System.out.println(\"List element: \" + i);\n        }\n        \n        // Add the original key-value pair to the biMap\n        /* write */ builder.put(\"key\", 42);\n        \n        // Build the ImmutableBiMap\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        // Perform some operations on the biMap\n        for (String key : biMap.keySet()) {\n            System.out.println(\"BiMap key: \" + key + \", value: \" + biMap.get(key));\n        }\n        \n        // Retrieve the value using the original key\n        /* read */ Integer value = biMap.get(\"key\");\n        System.out.println(\"Retrieved value: \" + value);\n        \n        // Additional operations\n        ImmutableBiMap<String, Integer> invertedBiMap = biMap.inverse();\n        System.out.println(\"Inverted BiMap: \" + invertedBiMap);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        /* write */ builder.put(\"key\", 42);\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        /* read */ Integer value = biMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    }
}