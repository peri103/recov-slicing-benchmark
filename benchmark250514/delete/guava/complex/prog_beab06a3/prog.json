{
    "java_code": "import com.google.common.collect.EnumHashBiMap;\nimport com.google.common.collect.HashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Assuming a simple enum for demonstration purposes\n        enum Color {\n            RED, GREEN, BLUE\n        }\n\n        EnumHashBiMap<Color, String> map = EnumHashBiMap.create(Color.class);\n        HashBiMap<Integer, String> numberMap = HashBiMap.create();\n\n        // Adding some unrelated code to make the program more complex\n        for (int i = 0; i < 5; i++) {\n            numberMap.put(i, \"Number \" + i);\n        }\n\n        // Performing operations on numberMap\n        for (Integer key : numberMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + numberMap.get(key));\n        }\n\n        // Write operation on EnumHashBiMap\n        /* write */ map.put(Color.RED, \"Red Color\");\n\n        // Further operations on numberMap\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Contains key \" + i + \": \" + numberMap.containsKey(i));\n        }\n\n        // Add more complexity with a loop and conditional logic\n        for (Color color : Color.values()) {\n            if (color == Color.GREEN) {\n                System.out.println(\"Found GREEN\");\n            }\n        }\n\n        // Read operation on EnumHashBiMap\n        /* read */ String value = map.get(Color.RED);\n        System.out.println(value);\n\n        // Additional operations to increase complexity\n        for (Color color : Color.values()) {\n            map.put(color, color.name() + \" Color\");\n        }\n\n        for (Color color : Color.values()) {\n            System.out.println(\"Color: \" + color + \", Value: \" + map.get(color));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.EnumHashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Assuming a simple enum for demonstration purposes\n        enum Color {\n            RED, GREEN, BLUE\n        }\n\n        EnumHashBiMap<Color, String> map = EnumHashBiMap.create(Color.class);\n        /* write */ map.put(Color.RED, \"Red Color\");\n        /* read */ String value = map.get(Color.RED);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.EnumHashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.EnumHashBiMap",
        "read_method": "get"
    }
}