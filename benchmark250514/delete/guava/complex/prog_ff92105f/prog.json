{
    "java_code": "import com.google.common.collect.LinkedHashBiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashBiMap<String, Integer> map = LinkedHashBiMap.create();\n        Map<String, Integer> extraMap = new HashMap<>();\n        \n        // Adding some entries to the extraMap\n        extraMap.put(\"extraKey1\", 200);\n        extraMap.put(\"extraKey2\", 300);\n\n        // Perform some operations with extraMap\n        for (Map.Entry<String, Integer> entry : extraMap.entrySet()) {\n            System.out.println(\"Extra map key: \" + entry.getKey() + \", value: \" + entry.getValue());\n        }\n\n        // Add an entry to the LinkedHashBiMap\n        /* write */ map.put(\"key\", 100);\n\n        // More complex operations with LinkedHashBiMap\n        map.put(\"anotherKey\", 400);\n        Integer anotherValue = map.get(\"anotherKey\");\n        System.out.println(\"Another value: \" + anotherValue);\n\n        // Iterate over LinkedHashBiMap\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Map key: \" + entry.getKey() + \", value: \" + entry.getValue());\n        }\n\n        // Final retrieval from the original map\n        /* read */ int value = map.get(\"key\");\n        System.out.println(\"Retrieved value: \" + value);\n\n        // Add more operations to increase complexity\n        LinkedHashBiMap<String, String> stringMap = LinkedHashBiMap.create();\n        stringMap.put(\"firstName\", \"John\");\n        stringMap.put(\"lastName\", \"Doe\");\n\n        for (String key : stringMap.keySet()) {\n            System.out.println(\"String map key: \" + key + \", value: \" + stringMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.LinkedHashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashBiMap<String, Integer> map = LinkedHashBiMap.create();\n        /* write */ map.put(\"key\", 100);\n        /* read */ int value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedHashBiMap",
        "read_method": "get"
    }
}