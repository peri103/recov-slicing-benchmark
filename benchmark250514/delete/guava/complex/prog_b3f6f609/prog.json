{
    "java_code": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\nimport com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a builder for ImmutableClassToInstanceMap\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n\n        // Create a HashMap and add some entries\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"One\", 1);\n        hashMap.put(\"Two\", 2);\n        hashMap.put(\"Three\", 3);\n\n        // Put an instance into the builder\n        /* write */ builder.putInstance(String.class, \"Hello, World!\");\n\n        // Build the ImmutableClassToInstanceMap from the builder\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n\n        // Use ImmutableMap to demonstrate other operations\n        ImmutableMap<String, Integer> immutableMap = ImmutableMap.copyOf(hashMap);\n        int sum = 0;\n        for (Integer value : immutableMap.values()) {\n            sum += value;\n        }\n\n        // Perform some operations with the HashMap\n        hashMap.put(\"Four\", 4);\n        hashMap.remove(\"Two\");\n\n        // Retrieve the instance from the ImmutableClassToInstanceMap\n        /* read */ String value = map.getInstance(String.class);\n\n        // Print the results\n        System.out.println(\"ImmutableClassToInstanceMap value: \" + value);\n        System.out.println(\"Sum of ImmutableMap values: \" + sum);\n        System.out.println(\"HashMap size: \" + hashMap.size());\n        System.out.println(\"HashMap contains 'Two': \" + hashMap.containsKey(\"Two\"));\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        /* write */ builder.putInstance(String.class, \"Hello, World!\");\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}