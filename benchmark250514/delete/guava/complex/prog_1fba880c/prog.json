{
    "java_code": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableSortedMultiset.Builder;\nimport com.google.common.collect.ImmutableListMultimap;\nimport com.google.common.collect.ImmutableListMultimap.Builder as MultimapBuilder;\nimport java.util.Comparator;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer> builder = ImmutableSortedMultiset.orderedBy(Comparator.naturalOrder());\n        MultimapBuilder<String, Integer> multimapBuilder = ImmutableListMultimap.builder();\n\n        multimapBuilder.put(\"key1\", 100);\n        multimapBuilder.put(\"key2\", 200);\n        multimapBuilder.put(\"key3\", 300);\n\n        ImmutableListMultimap<String, Integer> multimap = multimapBuilder.build();\n\n        for (String key : multimap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Values: \" + multimap.get(key));\n        }\n\n        /* write */ builder.add(1);\n\n        for (int i = 0; i < 5; i++) {\n            builder.add(i * 10);\n        }\n\n        ImmutableSortedMultiset<Integer> multiset = builder.build();\n\n        for (Integer value : multiset.elementSet()) {\n            System.out.println(\"Element: \" + value + \", Count: \" + multiset.count(value));\n        }\n\n        /* read */ int count = multiset.count(1);\n        System.out.println(\"Count of 1: \" + count);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableSortedMultiset.Builder;\nimport java.util.Comparator;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer> builder = ImmutableSortedMultiset.orderedBy(Comparator.naturalOrder());\n\n        /* write */ builder.add(1);\n\n        ImmutableSortedMultiset<Integer> multiset = builder.build();\n\n        /* read */ int count = multiset.count(1);\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableSortedMultiset",
        "read_method": "count"
    }
}