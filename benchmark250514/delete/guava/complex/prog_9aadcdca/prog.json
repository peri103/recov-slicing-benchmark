{
    "java_code": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.reflect.TypeToken;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        \n        // Create a type token for Integer class\n        TypeToken<Integer> integerTypeToken = TypeToken.of(Integer.class);\n        \n        // Create another MutableClassToInstanceMap for demonstration\n        MutableClassToInstanceMap<Object> anotherMap = MutableClassToInstanceMap.create();\n        \n        // Create a type token for String class\n        TypeToken<String> stringTypeToken = TypeToken.of(String.class);\n        \n        // Put an instance in another map\n        anotherMap.putInstance(String.class, \"Hello, World!\");\n\n        // Create a HashMap for additional complexity\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"One\", 1);\n        hashMap.put(\"Two\", 2);\n        \n        /* write */ map.putInstance(Integer.class, 42);\n        \n        // Perform operations on the HashMap\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        // Retrieve the instance from another map\n        String greeting = anotherMap.getInstance(stringTypeToken);\n        System.out.println(greeting);\n        \n        // Perform some calculations\n        int sum = 0;\n        for (Integer value : hashMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum: \" + sum);\n        \n        /* read */ Integer value = map.getInstance(integerTypeToken);\n        \n        System.out.println(value);\n        \n        // More operations for complexity\n        hashMap.put(\"Three\", 3);\n        hashMap.put(\"Four\", 4);\n        \n        for (String key : hashMap.keySet()) {\n            System.out.println(\"Key: \" + key);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.reflect.TypeToken;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        \n        // Create a type token for Integer class\n        TypeToken<Integer> integerTypeToken = TypeToken.of(Integer.class);\n        \n        /* write */ map.putInstance(Integer.class, 42);\n        \n        /* read */ Integer value = map.getInstance(integerTypeToken);\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.MutableClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.MutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}