{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableSortedSet.Builder;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableList.Builder as ListBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        ListBuilder<String> listBuilder = ImmutableList.builder();\n        \n        listBuilder.add(\"Alpha\");\n        listBuilder.add(\"Beta\");\n        listBuilder.add(\"Gamma\");\n        \n        ImmutableList<String> stringList = listBuilder.build();\n        for (String s : stringList) {\n            System.out.println(s);\n        }\n        \n        /* write */ builder.add(1);\n        builder.add(2);\n        builder.add(3);\n        \n        ImmutableSortedSet<Integer> set = builder.build();\n        \n        int sum = 0;\n        for (Integer num : set) {\n            sum += num;\n        }\n        \n        System.out.println(\"Sum of elements in set: \" + sum);\n        \n        // Unrelated operations to increase complexity\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n        \n        /* read */ boolean contains = set.contains(1);\n        System.out.println(\"Set contains 1: \" + contains);\n        \n        int max = Integer.MIN_VALUE;\n        for (Integer num : set) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        System.out.println(\"Maximum element in set: \" + max);\n        \n        // Further operations to increase complexity\n        int min = Integer.MAX_VALUE;\n        for (Integer num : set) {\n            if (num < min) {\n                min = num;\n            }\n        }\n        System.out.println(\"Minimum element in set: \" + min);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableSortedSet.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        /* write */ builder.add(1);\n        ImmutableSortedSet<Integer> set = builder.build();\n        /* read */ boolean contains = set.contains(1);\n        System.out.println(contains);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}