{
    "java_code": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap.Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Create an instance of the map\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n        \n        // Since ImmutableClassToInstanceMap is immutable, we need to use the builder to modify it\n        builder.putInstance(String.class, \"Hello, World!\");\n        \n        // Rebuild the map with the new entry\n        map = builder.build();\n        \n        /* write */ map = builder.build(); // Ensure the write operation is executed once\n        \n        // Insert unrelated code that uses ImmutableMap\n        ImmutableMap<String, Integer> scoreMap = ImmutableMap.of(\"Alice\", 90, \"Bob\", 85, \"Charlie\", 95);\n        for (String key : scoreMap.keySet()) {\n            System.out.println(key + \": \" + scoreMap.get(key));\n        }\n\n        // Additional operations to increase complexity\n        builder.putInstance(Integer.class, 42);\n        ImmutableClassToInstanceMap<Object> anotherMap = builder.build();\n        Integer number = anotherMap.getInstance(Integer.class);\n        System.out.println(\"Number: \" + number);\n\n        // More complex logic\n        int sum = 0;\n        for (Integer value : scoreMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Total Score: \" + sum);\n\n        /* read */ String value = map.getInstance(String.class); // Ensure the read operation is executed once\n        System.out.println(value);\n\n        // Further unrelated code\n        builder.putInstance(Double.class, 3.14);\n        ImmutableClassToInstanceMap<Object> yetAnotherMap = builder.build();\n        Double pi = yetAnotherMap.getInstance(Double.class);\n        System.out.println(\"Pi: \" + pi);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableClassToInstanceMap.Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Create an instance of the map\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n        \n        // Since ImmutableClassToInstanceMap is immutable, we need to use the builder to modify it\n        builder.putInstance(String.class, \"Hello, World!\");\n        \n        // Rebuild the map with the new entry\n        map = builder.build();\n        \n        /* write */ map = builder.build(); // Ensure the write operation is executed once\n        \n        /* read */ String value = map.getInstance(String.class); // Ensure the read operation is executed once\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}