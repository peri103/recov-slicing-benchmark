{
    "java_code": "import com.google.common.collect.LinkedHashBiMap;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashBiMap<String, Integer> map = LinkedHashBiMap.create();\n        HashMap<String, String> stringMap = new HashMap<>();\n        ArrayList<Integer> numberList = new ArrayList<>();\n\n        stringMap.put(\"greeting\", \"Hello\");\n        stringMap.put(\"farewell\", \"Goodbye\");\n\n        for (int i = 0; i < 10; i++) {\n            numberList.add(i * 2);\n        }\n\n        /* write */ map.put(\"key1\", 42);\n\n        // Perform operations on numberList\n        int sum = 0;\n        for (Integer num : numberList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Perform operations on stringMap\n        StringBuilder sb = new StringBuilder();\n        for (String key : stringMap.keySet()) {\n            sb.append(stringMap.get(key)).append(\" \");\n        }\n        System.out.println(\"Concatenated strings: \" + sb.toString());\n\n        // Retrieve value from map\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(\"Retrieved value: \" + value);\n\n        // Further operations on numberList\n        for (int i = 0; i < numberList.size(); i++) {\n            numberList.set(i, numberList.get(i) + 1);\n        }\n\n        // Print modified numberList\n        System.out.println(\"Modified numbers:\");\n        for (Integer num : numberList) {\n            System.out.print(num + \" \");\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.LinkedHashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashBiMap<String, Integer> map = LinkedHashBiMap.create();\n        /* write */ map.put(\"key1\", 42);\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedHashBiMap",
        "read_method": "get"
    }
}