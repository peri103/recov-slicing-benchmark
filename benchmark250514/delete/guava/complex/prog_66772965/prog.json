{
    "java_code": "import com.google.common.collect.HashBiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> map = HashBiMap.create();\n        HashMap<String, Integer> simpleMap = new HashMap<>();\n        simpleMap.put(\"anotherKey\", 100);\n        \n        /* write */ map.put(\"key\", 42);\n\n        // Perform some operations on the simpleMap\n        int anotherValue = simpleMap.get(\"anotherKey\");\n        System.out.println(\"Value from simpleMap: \" + anotherValue);\n\n        // Add more entries to the map\n        map.put(\"secondKey\", 84);\n        map.put(\"thirdKey\", 126);\n\n        // Iterate through the map and print all values\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of all values: \" + sum);\n\n        // Conditional logic\n        if (map.containsKey(\"secondKey\")) {\n            System.out.println(\"Map contains secondKey.\");\n        } else {\n            System.out.println(\"Map does not contain secondKey.\");\n        }\n\n        /* read */ int value = map.get(\"key\");\n        System.out.println(\"Value for 'key': \" + value);\n\n        // More unrelated logic\n        int product = 1;\n        for (Integer value : map.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of all values: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> map = HashBiMap.create();\n        /* write */ map.put(\"key\", 42);\n        /* read */ int value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.HashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.HashBiMap",
        "read_method": "get"
    }
}