{
    "java_code": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableMultiset.Builder;\nimport com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableSet.Builder as SetBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String> builder = new ImmutableMultiset.Builder<>();\n        SetBuilder<Integer> setBuilder = new ImmutableSet.Builder<>();\n        \n        // Add elements to the setBuilder\n        setBuilder.add(1);\n        setBuilder.add(2);\n        setBuilder.add(3);\n        \n        // Build the ImmutableSet\n        ImmutableSet<Integer> immutableSet = setBuilder.build();\n\n        // Perform some operations on ImmutableSet\n        for (Integer num : immutableSet) {\n            System.out.println(\"Set element: \" + num);\n        }\n\n        /* write */ builder.add(\"apple\");\n        \n        // Add more elements to the multiset builder\n        builder.add(\"banana\");\n        builder.add(\"orange\");\n\n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n\n        // Perform some operations on ImmutableMultiset\n        for (String fruit : multiset.elementSet()) {\n            System.out.println(\"Multiset element: \" + fruit + \" - Count: \" + multiset.count(fruit));\n        }\n\n        // Add more unrelated code\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(\"Count of 'apple': \" + count);\n\n        // More complex operations\n        int product = 1;\n        for (int i : immutableSet) {\n            product *= i;\n        }\n        System.out.println(\"Product of set elements: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableMultiset.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String> builder = new ImmutableMultiset.Builder<>();\n        /* write */ builder.add(\"apple\");\n        ImmutableMultiset<String> multiset = builder.build();\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableMultiset",
        "read_method": "count"
    }
}