{
    "java_code": "import com.google.common.collect.ImmutableMultimap;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // ImmutableMultimap does not have a direct put method since it's immutable.\n        // We need to use the builder to add entries and then build the multimap.\n        ImmutableMultimap.Builder<String, Integer> builder = ImmutableMultimap.builder();\n        \n        /* write */ builder.put(\"key\", 42);\n        \n        // Create another builder for a different multimap\n        ImmutableMultimap.Builder<String, String> builder2 = ImmutableMultimap.builder();\n        builder2.put(\"fruit\", \"apple\");\n        builder2.put(\"fruit\", \"banana\");\n        ImmutableMultimap<String, String> fruitMultimap = builder2.build();\n        \n        // Perform operations on the fruitMultimap\n        ImmutableSet<String> fruits = fruitMultimap.get(\"fruit\");\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        // Create an ImmutableList and perform operations\n        ImmutableList<Integer> numbers = ImmutableList.of(1, 2, 3, 4, 5);\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Build the original multimap\n        ImmutableMultimap<String, Integer> multimap = builder.build();\n        \n        // Perform operations on the multimap\n        ImmutableSet<Integer> values = multimap.get(\"key\");\n        int total = 0;\n        for (Integer val : values) {\n            total += val;\n        }\n        System.out.println(\"Total value: \" + total);\n        \n        // More operations\n        ImmutableSet<String> keys = multimap.keySet();\n        for (String key : keys) {\n            System.out.println(\"Key: \" + key);\n        }\n        \n        /* read */ int value = multimap.get(\"key\").iterator().next();\n        \n        System.out.println(\"Read value: \" + value);\n        \n        // Create an ImmutableSet and perform operations\n        ImmutableSet<String> colors = ImmutableSet.of(\"red\", \"green\", \"blue\");\n        for (String color : colors) {\n            System.out.println(\"Color: \" + color);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // ImmutableMultimap does not have a direct put method since it's immutable.\n        // We need to use the builder to add entries and then build the multimap.\n        ImmutableMultimap.Builder<String, Integer> builder = ImmutableMultimap.builder();\n        \n        /* write */ builder.put(\"key\", 42);\n        \n        ImmutableMultimap<String, Integer> multimap = builder.build();\n        \n        /* read */ int value = multimap.get(\"key\").iterator().next();\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableMultimap",
        "read_method": "get"
    }
}