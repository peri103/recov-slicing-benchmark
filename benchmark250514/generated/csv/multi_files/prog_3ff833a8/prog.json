{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat csvFormat;\n\n    public CSVHandler() {\n        this.csvFormat = CSVFormat.DEFAULT;\n    }\n\n    public void configureFormat() {\n        /* write */ csvFormat = csvFormat.withQuote('\"');\n    }\n\n    public List<CSVRecord> parseCSV(String csvData) throws IOException {\n        return CSVParser.parse(csvData, csvFormat).getRecords();\n    }\n}\n",
        "Student.java": "import java.util.List;\n\npublic class Student {\n    private String name;\n    private List<String> courses;\n\n    public Student(String name, List<String> courses) {\n        this.name = name;\n        this.courses = courses;\n    }\n\n    public void printCourses() {\n        System.out.println(\"Courses for \" + name + \":\");\n        for (String course : courses) {\n            System.out.println(course);\n        }\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVHandler and configure format\n        CSVHandler csvHandler = new CSVHandler();\n        csvHandler.configureFormat();\n\n        // Mock CSV data\n        String csvData = \"\\\"value1\\\",\\\"value2\\\",\\\"value3\\\"\\n\\\"value4\\\",\\\"value5\\\",\\\"value6\\\"\";\n\n        // Parse CSV data\n        List<CSVRecord> records = null;\n        try {\n            records = csvHandler.parseCSV(csvData);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Process and print CSVRecords\n        if (records != null && !records.isEmpty()) {\n            CSVRecord firstRecord = records.get(0);\n            CSVRecord secondRecord = records.get(1);\n\n            // Print details of the first record\n            System.out.println(\"First Record:\");\n            for (String value : firstRecord) {\n                System.out.println(\"Value: \" + value);\n            }\n\n            // Print details of the second record\n            System.out.println(\"Second Record:\");\n            for (String value : secondRecord) {\n                System.out.println(\"Value: \" + value);\n            }\n\n            // Create a student and print courses\n            Student student = new Student(\"John Doe\", Arrays.asList(\"Math\", \"Science\", \"History\"));\n            student.printCourses();\n\n            // Read and print the CSVRecord\n            /* read */ String recordString = firstRecord.toString();\n            System.out.println(\"First Record String: \" + recordString);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withQuote",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a quote character\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withQuote('\"');\n\n        // Create a mock CSVRecord for demonstration\n        String[] values = {\"value1\", \"value2\", \"value3\"};\n        CSVRecord csvRecord = CSVFormat.DEFAULT.parse(values).getRecords().get(0);\n\n        // Read and print the CSVRecord\n        /* read */ String recordString = csvRecord.toString();\n        System.out.println(recordString);\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a quote character\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withQuote('\"');\n\n        // Create a mock CSV data\n        String csvData = \"\\\"value1\\\",\\\"value2\\\",\\\"value3\\\"\\n\\\"value4\\\",\\\"value5\\\",\\\"value6\\\"\";\n\n        // Parse the CSV data\n        List<CSVRecord> records = null;\n        try {\n            records = CSVParser.parse(csvData, csvFormat).getRecords();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Perform operations on CSVRecords\n        if (records != null && !records.isEmpty()) {\n            CSVRecord firstRecord = records.get(0);\n            CSVRecord secondRecord = records.get(1);\n\n            // Process and print details of the first record\n            System.out.println(\"First Record:\");\n            for (String value : firstRecord) {\n                System.out.println(\"Value: \" + value);\n            }\n\n            // Process and print details of the second record\n            System.out.println(\"Second Record:\");\n            for (String value : secondRecord) {\n                System.out.println(\"Value: \" + value);\n            }\n\n            // Perform operations on a separate list\n            List<String> additionalValues = Arrays.asList(\"extra1\", \"extra2\", \"extra3\");\n            for (String value : additionalValues) {\n                System.out.println(\"Additional Value: \" + value);\n            }\n\n            // Read and print the CSVRecord\n            /* read */ String recordString = firstRecord.toString();\n            System.out.println(\"First Record String: \" + recordString);\n        }\n    }\n}"
}