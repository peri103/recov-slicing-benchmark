{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class CSVHandler {\n    private StringWriter writer = new StringWriter();\n    private CSVPrinter printer;\n    private List<CSVRecord> recordList = new ArrayList<>();\n\n    public CSVHandler() throws IOException {\n        this.printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n    }\n\n    public void addRecord(String firstName, String lastName, String email) throws IOException {\n        /* write */ printer.printRecord(firstName, lastName, email);\n        printer.flush();\n        CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n        recordList.clear();\n        recordList.addAll(parser.getRecords());\n    }\n\n    public List<CSVRecord> getRecords() {\n        return recordList;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            CSVHandler csvHandler = new CSVHandler();\n            csvHandler.addRecord(\"John\", \"Doe\", \"john.doe@example.com\");\n\n            List<CSVRecord> records = csvHandler.getRecords();\n            CSVRecord record = records.get(0);\n            /* read */ String email = record.get(2);\n\n            System.out.println(\"Email: \" + email);\n\n            for (CSVRecord rec : records) {\n                System.out.println(\"Full Record: \" + rec.toString());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n",
        "Student.java": "public class Student {\n    private String firstName;\n    private String lastName;\n    private String email;\n\n    public Student(String firstName, String lastName, String email) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.email = email;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to hold CSV data\n            StringWriter writer = new StringWriter();\n            \n            // Initialize CSVPrinter with the desired format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record using the CSVPrinter\n            /* write */ printer.printRecord(\"John\", \"Doe\", \"john.doe@example.com\");\n            printer.flush();\n            \n            // Parse the CSV data back into CSVRecords\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n            \n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Access a specific field from the record\n            /* read */ String email = record.get(2);\n            \n            // Print the value read from the record\n            System.out.println(email);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to hold CSV data\n            StringWriter writer = new StringWriter();\n            \n            // Initialize CSVPrinter with the desired format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record using the CSVPrinter\n            /* write */ printer.printRecord(\"John\", \"Doe\", \"john.doe@example.com\");\n            printer.flush();\n            \n            // Parse the CSV data back into CSVRecords\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n            \n            // Create a list to store CSV records\n            List<CSVRecord> recordList = new ArrayList<>();\n            recordList.addAll(parser.getRecords());\n            \n            // Create a map to store email addresses with names as keys\n            HashMap<String, String> emailMap = new HashMap<>();\n            for (CSVRecord rec : recordList) {\n                String name = rec.get(0) + \" \" + rec.get(1);\n                emailMap.put(name, rec.get(2));\n            }\n            \n            // Access a specific field from the record\n            CSVRecord record = recordList.get(0);\n            /* read */ String email = record.get(2);\n            \n            // Print the value read from the record\n            System.out.println(\"Email: \" + email);\n            \n            // Print all names and emails from the map\n            for (String name : emailMap.keySet()) {\n                System.out.println(\"Name: \" + name + \", Email: \" + emailMap.get(name));\n            }\n            \n            // Perform additional operations on the records\n            for (CSVRecord rec : recordList) {\n                System.out.println(\"Full Record: \" + rec.toString());\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}