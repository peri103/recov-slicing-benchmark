{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private List<CSVRecord> records;\n\n    public CSVHandler(String csvData) {\n        try {\n            /* write */ this.format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            this.records = parser.getRecords();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public List<CSVRecord> getRecords() {\n        return this.records;\n    }\n\n    public CSVFormat getFormat() {\n        return this.format;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', age=\" + age + \"}\";\n    }\n}\n",
        "StudentManager.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\npublic class StudentManager {\n    private HashMap<String, Student> students = new HashMap<>();\n\n    public void loadStudents(List<CSVRecord> records) {\n        for (CSVRecord record : records) {\n            String name = record.get(\"Name\");\n            int age = Integer.parseInt(record.get(\"Age\"));\n            students.put(name, new Student(name, age));\n        }\n    }\n\n    public List<Student> getAllStudents() {\n        return new ArrayList<>(students.values());\n    }\n\n    public String getHeaderComment(CSVHandler csvHandler) {\n        /* read */ return csvHandler.getRecords().get(0).getComment();\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"Name, Age\\nJohn, 30\\nJane, 25\";\n        CSVHandler csvHandler = new CSVHandler(csvData);\n        \n        StudentManager studentManager = new StudentManager();\n        studentManager.loadStudents(csvHandler.getRecords());\n\n        List<Student> students = studentManager.getAllStudents();\n        for (Student student : students) {\n            System.out.println(student);\n        }\n\n        String headerComment = studentManager.getHeaderComment(csvHandler);\n        System.out.println(\"Header Comment: \" + headerComment);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn, 30\\nJane, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the header comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn, 30\\nJane, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a HashMap to store records by name\n            HashMap<String, Integer> nameToAgeMap = new HashMap<>();\n\n            // Get the records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Process each record and store in HashMap\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                nameToAgeMap.put(name, age);\n            }\n\n            // Create an ArrayList to store names\n            ArrayList<String> namesList = new ArrayList<>(nameToAgeMap.keySet());\n\n            // Perform some operations on the names list\n            for (String name : namesList) {\n                System.out.println(\"Name: \" + name + \", Age: \" + nameToAgeMap.get(name));\n            }\n\n            // Read the header comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(\"Header Comment: \" + comment);\n\n            // Additional operations to make the program more complex\n            int totalAge = 0;\n            for (int age : nameToAgeMap.values()) {\n                totalAge += age;\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Sort names list and print sorted names\n            namesList.sort(String::compareTo);\n            System.out.println(\"Sorted Names: \" + namesList);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}