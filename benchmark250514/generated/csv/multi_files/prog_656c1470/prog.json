{
    "files": {
        "CSVUtils.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVUtils {\n    private CSVFormat format;\n    private List<CSVRecord> records;\n\n    public CSVUtils(String csvData) throws IOException {\n        format = CSVFormat.DEFAULT;\n        /* write */ format = format.withFirstRecordAsHeader();\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        records = parser.getRecords();\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "StudentManager.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class StudentManager {\n    private List<Student> students = new ArrayList<>();\n\n    public void loadStudents(List<CSVRecord> records) {\n        for (CSVRecord record : records) {\n            String name = record.get(\"name\");\n            int age = Integer.parseInt(record.get(\"age\"));\n            students.add(new Student(name, age));\n        }\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n            CSVUtils csvUtils = new CSVUtils(csvData);\n            StudentManager studentManager = new StudentManager();\n\n            List<CSVRecord> records = csvUtils.getRecords();\n            studentManager.loadStudents(records);\n\n            for (Student student : studentManager.getStudents()) {\n                System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n            }\n\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isMapped = firstRecord.isMapped(\"name\");\n            System.out.println(\"Is 'name' mapped? \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withFirstRecordAsHeader();\n\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            CSVRecord record = parser.getRecords().get(0); // Get the first record\n\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n            System.out.println(\"Is 'name' mapped? \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV data\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withFirstRecordAsHeader();\n\n            // Parse CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            CSVRecord record = parser.getRecords().get(0); // Get the first record\n\n            // Unrelated code to make the program more complex\n            ArrayList<String> names = new ArrayList<>();\n            HashMap<String, Integer> ageMap = new HashMap<>();\n            for (CSVRecord rec : parser.getRecords()) {\n                String name = rec.get(\"name\");\n                int age = Integer.parseInt(rec.get(\"age\"));\n                names.add(name);\n                ageMap.put(name, age);\n            }\n\n            // Additional logic using the names and ageMap\n            for (String name : names) {\n                System.out.println(\"Name: \" + name + \", Age: \" + ageMap.get(name));\n            }\n\n            // More unrelated code\n            int sumOfAges = 0;\n            for (int age : ageMap.values()) {\n                sumOfAges += age;\n            }\n            System.out.println(\"Total sum of ages: \" + sumOfAges);\n\n            // Read operation\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n            System.out.println(\"Is 'name' mapped? \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}