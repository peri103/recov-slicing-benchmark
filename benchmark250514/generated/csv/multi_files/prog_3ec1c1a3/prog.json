{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.Iterator;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private Iterable<CSVRecord> records;\n\n    public CSVHandler(String csvData) {\n        /* write */ format = CSVFormat.DEFAULT.withCommentMarker('#');\n        try {\n            records = format.parse(new StringReader(csvData));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String getComment() {\n        Iterator<CSVRecord> iterator = records.iterator();\n        CSVRecord record = null;\n        while (iterator.hasNext()) {\n            record = iterator.next();\n            if (record.getComment() != null) {\n                break;\n            }\n        }\n        /* read */ return record != null ? record.getComment() : null;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n\n    public ArrayList<Integer> getGrades() {\n        return grades;\n    }\n\n    public void printGrades() {\n        for (int grade : grades) {\n            System.out.println(name + \"'s grade: \" + grade);\n        }\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a Student instance and add grades\n        Student student = new Student(\"Alice\");\n        student.addGrade(85);\n        student.addGrade(90);\n        student.addGrade(78);\n        \n        // Print the student's grades\n        student.printGrades();\n\n        // Create CSV data with a comment\n        String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n        // Handle CSV operations\n        CSVHandler csvHandler = new CSVHandler(csvData);\n        String comment = csvHandler.getComment();\n\n        // Print the CSV comment\n        System.out.println(\"CSV Comment: \" + comment);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.Iterator;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat instance with a comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Create a sample CSV input with a comment\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data\n            Iterable<CSVRecord> records = format.parse(new StringReader(csvData));\n\n            // Iterate over the records to find the comment\n            Iterator<CSVRecord> iterator = records.iterator();\n            CSVRecord record = null;\n            while (iterator.hasNext()) {\n                record = iterator.next();\n                if (record.getComment() != null) {\n                    break;\n                }\n            }\n\n            // Read the comment from the record\n            /* read */ String comment = record != null ? record.getComment() : null;\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.Iterator;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat instance with a comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Create a sample CSV input with a comment\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data\n            Iterable<CSVRecord> records = format.parse(new StringReader(csvData));\n\n            // Additional complexity: working with ArrayList and HashMap\n            ArrayList<String> list = new ArrayList<>();\n            HashMap<String, Integer> map = new HashMap<>();\n            list.add(\"Sample\");\n            map.put(\"Key1\", 100);\n            map.put(\"Key2\", 200);\n\n            // Iterate over the records to find the comment\n            Iterator<CSVRecord> iterator = records.iterator();\n            CSVRecord record = null;\n            while (iterator.hasNext()) {\n                record = iterator.next();\n                if (record.getComment() != null) {\n                    break;\n                }\n            }\n\n            // Perform some operations on the list and map\n            for (String item : list) {\n                System.out.println(\"List item: \" + item);\n            }\n            for (String key : map.keySet()) {\n                System.out.println(\"Map value for \" + key + \": \" + map.get(key));\n            }\n\n            // Read the comment from the record\n            /* read */ String comment = record != null ? record.getComment() : null;\n\n            // Print the comment\n            System.out.println(\"CSV Comment: \" + comment);\n\n            // More operations to increase complexity\n            ArrayList<Integer> numberList = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numberList.add(i * 10);\n            }\n            for (int number : numberList) {\n                System.out.println(\"Number: \" + number);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}