{
    "files": {
        "CSVProcessor.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVProcessor {\n    private CSVFormat format;\n\n    public CSVProcessor() {\n        // Create CSVFormat with the first record as header\n        /* write */ this.format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n    }\n\n    public List<CSVRecord> parseCSV(String csvData) throws Exception {\n        CSVParser parser = this.format.parse(new StringReader(csvData));\n        return parser.getRecords();\n    }\n}\n",
        "RecordChecker.java": "import org.apache.commons.csv.CSVRecord;\n\npublic class RecordChecker {\n    public boolean isHeaderMapped(CSVRecord record, String header) {\n        /* read */ return record.isMapped(header);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private String location;\n\n    public Student(String name, int age, String location) {\n        this.name = name;\n        this.age = age;\n        this.location = location;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getLocation() {\n        return location;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', age=\" + age + \", location='\" + location + \"'}\";\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,30,USA\\nDoe,25,UK\";\n\n            // Process CSV data\n            CSVProcessor processor = new CSVProcessor();\n            List<CSVRecord> records = processor.parseCSV(csvData);\n\n            // Check if 'Name' header is mapped in the first record\n            RecordChecker checker = new RecordChecker();\n            boolean isMapped = checker.isHeaderMapped(records.get(0), \"Name\");\n            System.out.println(\"Is 'Name' mapped: \" + isMapped);\n\n            // Create Student objects from CSV records\n            List<Student> students = new ArrayList<>();\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                String location = record.get(\"Location\");\n                students.add(new Student(name, age, location));\n            }\n\n            // Print student information\n            for (Student student : students) {\n                System.out.println(student);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,30,USA\\nDoe,25,UK\";\n\n            // Create CSVFormat with the first record as header\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n            // Parse the CSV data\n            CSVParser parser = format.parse(new StringReader(csvData));\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the first record and check if a header is mapped\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isMapped = firstRecord.isMapped(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' mapped: \" + isMapped);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,30,USA\\nDoe,25,UK\";\n\n            // Create CSVFormat with the first record as header\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n            // Initialize a map to store the records\n            Map<String, String> recordsMap = new HashMap<>();\n\n            // Parse the CSV data\n            CSVParser parser = format.parse(new StringReader(csvData));\n            List<CSVRecord> records = parser.getRecords();\n\n            // Populate the map with the first record\n            CSVRecord firstRecord = records.get(0);\n            for (String header : parser.getHeaderMap().keySet()) {\n                recordsMap.put(header, firstRecord.get(header));\n            }\n\n            // Perform some operations on the map\n            for (Map.Entry<String, String> entry : recordsMap.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n\n            // Check if a specific header is mapped in the first record\n            /* read */ boolean isMapped = firstRecord.isMapped(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' mapped: \" + isMapped);\n\n            // Further manipulation of records\n            for (CSVRecord record : records) {\n                System.out.println(\"Record: \" + record);\n                for (String header : parser.getHeaderMap().keySet()) {\n                    System.out.println(header + \": \" + record.get(header));\n                }\n            }\n\n            // Additional logic to manipulate data\n            int totalAge = 0;\n            for (CSVRecord record : records) {\n                totalAge += Integer.parseInt(record.get(\"Age\"));\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}"
}