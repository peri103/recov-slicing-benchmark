{
    "files": {
        "CSVCommentHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVCommentHandler {\n    private CSVFormat format;\n\n    public CSVCommentHandler() {\n        /* write */ this.format = CSVFormat.DEFAULT.withCommentMarker('#');\n    }\n\n    public List<CSVRecord> parseCSV(String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        return parser.getRecords();\n    }\n}\n",
        "CSVDataProcessor.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\npublic class CSVDataProcessor {\n    private ArrayList<CSVRecord> recordList = new ArrayList<>();\n\n    public void addRecords(List<CSVRecord> records) {\n        recordList.addAll(records);\n    }\n\n    public HashMap<String, String> processRecords() {\n        HashMap<String, String> recordMap = new HashMap<>();\n        for (CSVRecord record : recordList) {\n            recordMap.put(record.get(0), record.get(1));\n        }\n        return recordMap;\n    }\n\n    public String getFirstRecordComment() {\n        /* read */ return recordList.get(0).getComment();\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            CSVCommentHandler commentHandler = new CSVCommentHandler();\n            String csvData = \"#This is a comment\\nheader1,header2\\nvalue1,value2\";\n            List<CSVRecord> records = commentHandler.parseCSV(csvData);\n\n            CSVDataProcessor dataProcessor = new CSVDataProcessor();\n            dataProcessor.addRecords(records);\n\n            HashMap<String, String> recordMap = dataProcessor.processRecords();\n            for (String key : recordMap.keySet()) {\n                System.out.println(\"Key: \" + key + \", Value: \" + recordMap.get(key));\n            }\n\n            String comment = dataProcessor.getFirstRecordComment();\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Sample CSV data with a comment\n            String csvData = \"#This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Sample CSV data with a comment\n            String csvData = \"#This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Initialize an ArrayList to store CSV records\n            ArrayList<CSVRecord> recordList = new ArrayList<>();\n\n            // Retrieve the records and add them to the ArrayList\n            List<CSVRecord> records = parser.getRecords();\n            for (CSVRecord record : records) {\n                recordList.add(record);\n            }\n\n            // Perform some operations on the records\n            HashMap<String, String> recordMap = new HashMap<>();\n            for (CSVRecord record : recordList) {\n                recordMap.put(record.get(0), record.get(1));\n            }\n\n            // Print the map contents\n            for (String key : recordMap.keySet()) {\n                System.out.println(\"Key: \" + key + \", Value: \" + recordMap.get(key));\n            }\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}