{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVHandler {\n    private StringWriter writer;\n    private CSVFormat format;\n    private CSVPrinter printer;\n\n    public CSVHandler() throws IOException {\n        writer = new StringWriter();\n        format = CSVFormat.DEFAULT.withCommentMarker('#');\n        printer = new CSVPrinter(writer, format);\n    }\n\n    public void writeComment(String comment) throws IOException {\n        /* write */ printer.printComment(comment);\n        printer.flush();\n    }\n\n    public String getCSVData() {\n        return writer.toString();\n    }\n}\n",
        "CSVReader.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class CSVReader {\n    public String readComment(String csvData) throws IOException {\n        StringReader reader = new StringReader(csvData);\n        List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n        String comment = null;\n        for (CSVRecord record : records) {\n            /* read */ comment = record.getComment();\n            break; // Ensure the read method is executed only once\n        }\n        return comment;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int credits;\n\n    public Course(String courseName, int credits) {\n        this.courseName = courseName;\n        this.credits = credits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "Main.java": "import java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVHandler and CSVReader\n            CSVHandler csvHandler = new CSVHandler();\n            csvHandler.writeComment(\"This is a comment\");\n            \n            // Create a student and enroll in courses\n            Student student = new Student(\"Alice\");\n            Course math = new Course(\"Mathematics\", 3);\n            Course science = new Course(\"Science\", 4);\n            student.enrollInCourse(math);\n            student.enrollInCourse(science);\n\n            // Read the comment using CSVReader\n            CSVReader csvReader = new CSVReader();\n            String comment = csvReader.readComment(csvHandler.getCSVData());\n            System.out.println(\"Comment from CSV: \" + comment);\n\n            // Display student information\n            System.out.println(\"Student: \" + student.getName());\n            for (Course course : student.getCourses()) {\n                System.out.println(\"Enrolled in: \" + course.getCourseName() + \" (\" + course.getCredits() + \" credits)\");\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        try {\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n            \n            String csvData = writer.toString();\n            StringReader reader = new StringReader(csvData);\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            String comment = null;\n            for (CSVRecord record : records) {\n                /* read */ comment = record.getComment();\n                break; // Ensure the read method is executed only once\n            }\n            \n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSV related components\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        try {\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            \n            // Initialize unrelated data structures\n            ArrayList<Integer> numberList = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numberList.add(i * 10);\n            }\n            \n            // Perform some operations on numberList\n            int sum = 0;\n            for (Integer number : numberList) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n            \n            // Write a comment using CSVPrinter\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n            \n            // Perform more operations on numberList\n            int maxNumber = Integer.MIN_VALUE;\n            for (Integer number : numberList) {\n                if (number > maxNumber) {\n                    maxNumber = number;\n                }\n            }\n            System.out.println(\"Max number: \" + maxNumber);\n            \n            // Read the comment using CSVRecord\n            String csvData = writer.toString();\n            StringReader reader = new StringReader(csvData);\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            String comment = null;\n            for (CSVRecord record : records) {\n                /* read */ comment = record.getComment();\n                break; // Ensure the read method is executed only once\n            }\n            \n            System.out.println(\"Comment from CSV: \" + comment);\n            \n            // Further operations on numberList\n            int minNumber = Integer.MAX_VALUE;\n            for (Integer number : numberList) {\n                if (number < minNumber) {\n                    minNumber = number;\n                }\n            }\n            System.out.println(\"Min number: \" + minNumber);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}