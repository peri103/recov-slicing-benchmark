{
    "files": {
        "CSVWriter.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVWriter {\n    private CSVFormat format;\n\n    public CSVWriter() {\n        format = CSVFormat.DEFAULT;\n    }\n\n    public void addHeaderComment(String comment) {\n        /* write */ format = format.withHeaderComments(comment);\n    }\n\n    public CSVFormat getFormat() {\n        return format;\n    }\n}\n",
        "CSVReader.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.List;\n\npublic class CSVReader {\n    private List<CSVRecord> records;\n\n    public CSVReader(List<CSVRecord> records) {\n        this.records = records;\n    }\n\n    public String readCommentFromFirstRecord() {\n        CSVRecord firstRecord = records.get(0);\n        /* read */ return firstRecord.getComment();\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVWriter and add header comment\n            CSVWriter writer = new CSVWriter();\n            writer.addHeaderComment(\"This is a comment\");\n\n            // Prepare a CSV input with header and a row\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, writer.getFormat());\n\n            // Create a list of CSV records\n            List<CSVRecord> records = new ArrayList<>(parser.getRecords());\n\n            // Initialize CSVReader with records\n            CSVReader csvReader = new CSVReader(records);\n\n            // Additional code: Process each CSV record\n            for (CSVRecord record : csvReader.getRecords()) {\n                System.out.println(\"Record: \" + record);\n            }\n\n            // Additional code: Calculate the sum of values in the first column\n            int sum = 0;\n            for (CSVRecord record : csvReader.getRecords()) {\n                try {\n                    sum += Integer.parseInt(record.get(0));\n                } catch (NumberFormatException e) {\n                    // Ignore non-integer values\n                }\n            }\n            System.out.println(\"Sum of first column: \" + sum);\n\n            // Read the comment using CSVReader\n            String comment = csvReader.readCommentFromFirstRecord();\n\n            // Output the comment\n            System.out.println(comment);\n\n            // Additional code: Output the number of records\n            System.out.println(\"Total records: \" + csvReader.getRecords().size());\n\n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV input with header and a row\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, format);\n\n            // Read the comment from the first record\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String comment = record.getComment();\n\n            // Output the comment\n            System.out.println(comment);\n\n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV input with header and a row\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, format);\n\n            // Additional code: Create a list of CSV records\n            List<CSVRecord> records = new ArrayList<>(parser.getRecords());\n\n            // Additional code: Process each CSV record\n            for (CSVRecord record : records) {\n                System.out.println(\"Record: \" + record);\n            }\n\n            // Additional code: Calculate the sum of values in the first column\n            int sum = 0;\n            for (CSVRecord record : records) {\n                try {\n                    sum += Integer.parseInt(record.get(0));\n                } catch (NumberFormatException e) {\n                    // Ignore non-integer values\n                }\n            }\n            System.out.println(\"Sum of first column: \" + sum);\n\n            // Read the comment from the first record\n            CSVRecord firstRecord = records.get(0);\n            /* read */ String comment = firstRecord.getComment();\n\n            // Output the comment\n            System.out.println(comment);\n\n            // Additional code: Output the number of records\n            System.out.println(\"Total records: \" + records.size());\n\n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}