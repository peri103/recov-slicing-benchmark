{
    "files": {
        "CSVCommentWriter.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringWriter;\n\npublic class CSVCommentWriter {\n    private StringWriter writer = new StringWriter();\n    private CSVPrinter csvPrinter;\n\n    public CSVCommentWriter() {\n        try {\n            csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT.withCommentMarker('#'));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void writeComment(String comment) {\n        try {\n            /* write */ csvPrinter.printComment(comment);\n            csvPrinter.flush();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String getCSVData() {\n        return writer.toString();\n    }\n\n    public void close() {\n        try {\n            if (csvPrinter != null) {\n                csvPrinter.close();\n            }\n            writer.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n",
        "CSVCommentReader.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVCommentReader {\n    public String readComment(String csvData) {\n        StringReader reader = new StringReader(csvData);\n        String comment = \"\";\n        try {\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            if (!records.isEmpty()) {\n                CSVRecord csvRecord = records.get(0);\n                /* read */ comment = csvRecord.getComment();\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return comment;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<String> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addCourse(String course) {\n        courses.add(course);\n    }\n\n    public List<String> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // CSV Comment Writer and Reader\n        CSVCommentWriter writer = new CSVCommentWriter();\n        writer.writeComment(\"This is a comment\");\n        \n        // Unrelated code: Student and Courses\n        Student student = new Student(\"Alice\");\n        student.addCourse(\"Mathematics\");\n        student.addCourse(\"Science\");\n        \n        for (String course : student.getCourses()) {\n            System.out.println(student.getName() + \" is enrolled in \" + course);\n        }\n        \n        // Read the comment\n        CSVCommentReader reader = new CSVCommentReader();\n        String comment = reader.readComment(writer.getCSVData());\n        System.out.println(\"Comment from CSV: \" + comment);\n        \n        // Close the writer\n        writer.close();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVPrinter csvPrinter = null;\n        CSVRecord csvRecord = null;\n        \n        try {\n            // Initialize CSVPrinter\n            csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT.withCommentMarker('#'));\n            \n            // Write a comment\n            /* write */ csvPrinter.printComment(\"This is a comment\");\n            csvPrinter.flush();\n            \n            // Read the comment\n            String csvData = writer.toString();\n            StringReader reader = new StringReader(csvData);\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            \n            // Assuming the comment is associated with the first record\n            csvRecord = records.get(0);\n            /* read */ String comment = csvRecord.getComment();\n            System.out.println(comment);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (csvPrinter != null) {\n                    csvPrinter.close();\n                }\n                writer.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVPrinter csvPrinter = null;\n        CSVRecord csvRecord = null;\n        \n        try {\n            // Initialize CSVPrinter\n            csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT.withCommentMarker('#'));\n            \n            // Write a comment\n            /* write */ csvPrinter.printComment(\"This is a comment\");\n            csvPrinter.flush();\n            \n            // Additional unrelated code to increase complexity\n            ArrayList<String> names = new ArrayList<>();\n            names.add(\"Alice\");\n            names.add(\"Bob\");\n            names.add(\"Charlie\");\n            \n            for (String name : names) {\n                System.out.println(\"Hello, \" + name + \"!\");\n            }\n            \n            // Process CSV data\n            String csvData = writer.toString();\n            StringReader reader = new StringReader(csvData);\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            \n            // More unrelated code\n            int sum = 0;\n            for (int i = 1; i <= 100; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of numbers from 1 to 100 is: \" + sum);\n            \n            // Assuming the comment is associated with the first record\n            csvRecord = records.get(0);\n            /* read */ String comment = csvRecord.getComment();\n            System.out.println(comment);\n            \n            // Further unrelated code\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n            \n            for (Integer number : numbers) {\n                System.out.println(\"Number: \" + number);\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (csvPrinter != null) {\n                    csvPrinter.close();\n                }\n                writer.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}"
}