{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private StudentScores scores = new StudentScores();\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public StudentScores getScores() {\n        return scores;\n    }\n}\n",
        "StudentScores.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class StudentScores {\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public void addScore(int score) {\n        /* write */ scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create students\n        Student student1 = new Student(\"Alice\", 20);\n        Student student2 = new Student(\"Bob\", 22);\n\n        // Add scores to students\n        student1.addScore(85);\n        student2.addScore(90);\n\n        // Create a course and add students\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Display course details\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n            List<Integer> scores = student.getScores().getScores();\n            for (int score : scores) {\n                System.out.println(\"Score: \" + score);\n            }\n        }\n\n        // Demonstrate reading a score\n        List<Integer> scores = student1.getScores().getScores();\n        /* read */ int score = scores.get(0);\n        System.out.println(\"First score of \" + student1.getName() + \": \" + score);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Create a sample CSV input\n            String csvData = \"Name,Age\\nJohn,30\\nDoe,25\";\n\n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Create a sample CSV input\n            String csvData = \"Name,Age\\nJohn,30\\nDoe,25\";\n\n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Additional processing of CSV records\n            ArrayList<String> names = new ArrayList<>();\n            ArrayList<Integer> ages = new ArrayList<>();\n            \n            for (CSVRecord record : records) {\n                names.add(record.get(\"Name\"));\n                ages.add(Integer.parseInt(record.get(\"Age\")));\n            }\n\n            // Perform some operations on names and ages\n            for (int i = 0; i < names.size(); i++) {\n                System.out.println(\"Name: \" + names.get(i) + \", Age: \" + ages.get(i));\n            }\n            \n            // Calculate average age\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) ages.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(\"CSV Comment: \" + comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}