{
    "files": {
        "CSVDataHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.Reader;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CSVDataHandler {\n    private CSVFormat format;\n    private Map<String, Integer> nameAgeMap = new HashMap<>();\n\n    public CSVDataHandler() {\n        format = CSVFormat.DEFAULT;\n    }\n\n    public void initializeFormat() {\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n    }\n\n    public void parseCSVData(String csvData) {\n        Reader input = new StringReader(csvData);\n        try {\n            CSVParser parser = new CSVParser(input, format);\n\n            for (CSVRecord record : parser) {\n                // Extract and store data in the map\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                nameAgeMap.put(name, age);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public Map<String, Integer> getNameAgeMap() {\n        return nameAgeMap;\n    }\n}\n",
        "CommentRetriever.java": "import org.apache.commons.csv.CSVRecord;\n\npublic class CommentRetriever {\n\n    public String retrieveComment(CSVRecord record) {\n        /* read */ return record.getComment();\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVDataHandler csvHandler = new CSVDataHandler();\n        csvHandler.initializeFormat();\n\n        String csvData = \"# This is a comment\\nName, Age\\nJohn Doe, 30\";\n        csvHandler.parseCSVData(csvData);\n\n        CommentRetriever commentRetriever = new CommentRetriever();\n\n        for (Map.Entry<String, Integer> entry : csvHandler.getNameAgeMap().entrySet()) {\n            System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n        }\n\n        // Assuming we have access to a CSVRecord object somehow\n        CSVRecord dummyRecord = null; // This would be replaced by a real CSVRecord object\n        if (dummyRecord != null) {\n            String comment = commentRetriever.retrieveComment(dummyRecord);\n            System.out.println(\"Comment: \" + comment);\n        }\n\n        // Additional logic: calculate average age\n        int totalAge = 0;\n        for (int age : csvHandler.getNameAgeMap().values()) {\n            totalAge += age;\n        }\n        double averageAge = totalAge / (double) csvHandler.getNameAgeMap().size();\n        System.out.println(\"Average Age: \" + averageAge);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.Reader;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with a header comment\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        // Create a CSV string with a header and a record\n        String csvData = \"# This is a comment\\nName, Age\\nJohn Doe, 30\";\n\n        // Use a StringReader to simulate reading from a file\n        Reader input = new StringReader(csvData);\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(input, format);\n            for (CSVRecord record : parser) {\n                // Read the comment from the record\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.Reader;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with a header comment\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        // Create a CSV string with a header and a record\n        String csvData = \"# This is a comment\\nName, Age\\nJohn Doe, 30\";\n\n        // Use a StringReader to simulate reading from a file\n        Reader input = new StringReader(csvData);\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(input, format);\n\n            // Initialize a map to store the records\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n\n            for (CSVRecord record : parser) {\n                // Read the comment from the record\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n\n                // Extract and store data in the map\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                nameAgeMap.put(name, age);\n            }\n\n            // Perform operations on the map\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n\n            // Additional logic: calculate average age\n            int totalAge = 0;\n            for (int age : nameAgeMap.values()) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) nameAgeMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}