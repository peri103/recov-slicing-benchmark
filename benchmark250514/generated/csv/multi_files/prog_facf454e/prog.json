{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format;\n\n    public CSVHandler() {\n        format = CSVFormat.DEFAULT;\n    }\n\n    public void configureFormat() {\n        /* write */ format = format.withCommentMarker('#');\n    }\n\n    public List<CSVRecord> parseCSV(String csvData) throws IOException {\n        return format.parse(new StringReader(csvData)).getRecords();\n    }\n}\n",
        "CommentExtractor.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.List;\n\npublic class CommentExtractor {\n    public String extractComment(List<CSVRecord> records) {\n        /* read */ return records.get(0).getComment();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<String> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void addCourse(String course) {\n        courses.add(course);\n    }\n\n    public ArrayList<String> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String title;\n    private int credits;\n\n    public Course(String title, int credits) {\n        this.title = title;\n        this.credits = credits;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Instantiate CSVHandler and configure the format\n            CSVHandler csvHandler = new CSVHandler();\n            csvHandler.configureFormat();\n\n            // Prepare a CSV string with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = csvHandler.parseCSV(csvData);\n\n            // Extract the comment using CommentExtractor\n            CommentExtractor commentExtractor = new CommentExtractor();\n            String comment = commentExtractor.extractComment(records);\n            System.out.println(\"Extracted Comment: \" + comment);\n\n            // Create and interact with Student and Course objects\n            Student student = new Student(\"Alice\");\n            student.addCourse(\"Mathematics\");\n            student.addCourse(\"Physics\");\n\n            Course course = new Course(\"Chemistry\", 4);\n            System.out.println(\"Course Title: \" + course.getTitle() + \", Credits: \" + course.getCredits());\n\n            System.out.println(\"Student Name: \" + student.getName());\n            System.out.println(\"Enrolled Courses: \" + student.getCourses());\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Step 1: Create a CSVFormat object and configure it\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withCommentMarker('#');\n\n            // Step 2: Prepare a CSV string with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\";\n\n            // Step 3: Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Step 4: Access the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Step 5: Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Step 1: Create a CSVFormat object and configure it\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withCommentMarker('#');\n\n            // Step 2: Prepare a CSV string with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\";\n\n            // Step 3: Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Additional unrelated code to increase complexity\n            String[] headers = {\"name\", \"age\"};\n            CSVFormat anotherFormat = CSVFormat.DEFAULT.withHeader(headers);\n            String anotherCsvData = \"name,age\\nAlice,25\\nBob,35\";\n            List<CSVRecord> anotherRecords = anotherFormat.parse(new StringReader(anotherCsvData)).getRecords();\n\n            for (CSVRecord record : anotherRecords) {\n                System.out.println(\"Name: \" + record.get(\"name\") + \", Age: \" + record.get(\"age\"));\n            }\n\n            StringBuilder builder = new StringBuilder();\n            builder.append(\"Processed \").append(anotherRecords.size()).append(\" records.\\n\");\n            System.out.println(builder.toString());\n\n            // Step 4: Access the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Step 5: Print the comment\n            System.out.println(\"Comment from the original CSV: \" + comment);\n\n            // Additional unrelated operations\n            for (int i = 0; i < 3; i++) {\n                System.out.println(\"Processing record \" + (i + 1));\n            }\n            System.out.println(\"All records processed.\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}