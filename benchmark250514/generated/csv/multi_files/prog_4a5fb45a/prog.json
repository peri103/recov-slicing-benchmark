{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format;\n\n    public CSVHandler() {\n        /* write */ format = CSVFormat.DEFAULT.withRecordSeparator(\";\");\n    }\n\n    public List<CSVRecord> parseCSV(String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(csvData, format);\n        return parser.getRecords();\n    }\n}\n",
        "Student.java": "import java.util.HashMap;\nimport java.util.List;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Student {\n    private String name;\n    private String age;\n    private String location;\n\n    public Student(String name, String age, String location) {\n        this.name = name;\n        this.age = age;\n        this.location = location;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getDetails() {\n        return age + \", \" + location;\n    }\n\n    public static HashMap<String, Student> createStudentMap(List<CSVRecord> records) {\n        HashMap<String, Student> studentMap = new HashMap<>();\n        for (CSVRecord rec : records) {\n            String name = rec.get(0);\n            String age = rec.get(1);\n            String location = rec.get(2);\n            studentMap.put(name, new Student(name, age, location));\n        }\n        return studentMap;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,30,USA\\nJane,25,UK\";\n\n            // Use CSVHandler to parse CSV data\n            CSVHandler csvHandler = new CSVHandler();\n            List<CSVRecord> records = csvHandler.parseCSV(csvData);\n\n            // Create a map of students from CSV records\n            HashMap<String, Student> studentMap = Student.createStudentMap(records);\n\n            // Perform some unrelated operations to make the program more complex\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i * i;\n            }\n            System.out.println(\"Sum of squares from 0 to 9: \" + sum);\n\n            // Retrieve and print the first record using the original read method\n            /* read */ CSVRecord record = records.get(0);\n            System.out.println(\"First record: \" + record.toString());\n\n            // Print the stored student details from the HashMap\n            for (String name : studentMap.keySet()) {\n                Student student = studentMap.get(name);\n                System.out.println(name + \": \" + student.getDetails());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withRecordSeparator",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom record separator\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withRecordSeparator(\";\");\n\n            // Sample CSV data to demonstrate reading\n            String csvData = \"Name,Age,Location\\nJohn,30,USA\\nJane,25,UK\";\n\n            // Parse the CSV data using the format with the custom record separator\n            CSVParser parser = CSVParser.parse(csvData, format);\n\n            // Retrieve the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the first record and print it\n            /* read */ CSVRecord record = records.get(0);\n            System.out.println(record.toString());\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom record separator\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withRecordSeparator(\";\");\n\n            // Sample CSV data to demonstrate reading\n            String csvData = \"Name,Age,Location\\nJohn,30,USA\\nJane,25,UK\";\n\n            // Parse the CSV data using the format with the custom record separator\n            CSVParser parser = CSVParser.parse(csvData, format);\n\n            // Create a HashMap to store the records with names as keys\n            HashMap<String, String> recordMap = new HashMap<>();\n\n            // Retrieve the records and populate the HashMap\n            List<CSVRecord> records = parser.getRecords();\n            for (CSVRecord rec : records) {\n                String name = rec.get(0);\n                String details = rec.get(1) + \", \" + rec.get(2);\n                recordMap.put(name, details);\n            }\n\n            // Perform some unrelated operations to make the program more complex\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i * i;\n            }\n            System.out.println(\"Sum of squares from 0 to 9: \" + sum);\n\n            // Retrieve and print the first record using the original read method\n            /* read */ CSVRecord record = records.get(0);\n            System.out.println(\"First record: \" + record.toString());\n\n            // Print the stored records from the HashMap\n            for (String name : recordMap.keySet()) {\n                System.out.println(name + \": \" + recordMap.get(name));\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}