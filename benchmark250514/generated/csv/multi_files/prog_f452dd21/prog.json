{
    "files": {
        "CSVConfig.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVConfig {\n    private CSVFormat format;\n\n    public CSVConfig() {\n        /* write */ format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces();\n    }\n\n    public CSVFormat getFormat() {\n        return format;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> ages;\n\n    public Student(String name) {\n        this.name = name;\n        this.ages = new ArrayList<>();\n    }\n\n    public void addAge(int age) {\n        ages.add(age);\n    }\n\n    public List<Integer> getAges() {\n        return ages;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "CSVProcessor.java": "import org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CSVProcessor {\n    private CSVConfig csvConfig;\n\n    public CSVProcessor(CSVConfig csvConfig) {\n        this.csvConfig = csvConfig;\n    }\n\n    public List<Student> parseCSV(String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), csvConfig.getFormat());\n        List<Student> students = new ArrayList<>();\n\n        for (CSVRecord record : parser) {\n            String name = record.get(0).trim();\n            int age = Integer.parseInt(record.get(1).trim());\n            Student student = new Student(name);\n            student.addAge(age);\n            students.add(student);\n\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Record is consistent: \" + isConsistent);\n        }\n\n        return students;\n    }\n}\n",
        "Main.java": "import java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVConfig csvConfig = new CSVConfig();\n        CSVProcessor processor = new CSVProcessor(csvConfig);\n\n        String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n        try {\n            List<Student> students = processor.parseCSV(csvData);\n\n            for (Student student : students) {\n                System.out.println(\"Name: \" + student.getName());\n                System.out.println(\"Ages: \" + student.getAges());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create CSVFormat with ignore surrounding spaces\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces();\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Read records\n            for (CSVRecord record : parser) {\n                /* read */ boolean isConsistent = record.isConsistent();\n                System.out.println(\"Record is consistent: \" + isConsistent);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create CSVFormat with ignore surrounding spaces\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces();\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a list to store the ages\n            List<Integer> ages = new ArrayList<>();\n\n            // Read records\n            for (CSVRecord record : parser) {\n                // Extract age and add to list\n                int age = Integer.parseInt(record.get(1).trim());\n                ages.add(age);\n\n                // Check if record is consistent\n                /* read */ boolean isConsistent = record.isConsistent();\n                System.out.println(\"Record is consistent: \" + isConsistent);\n            }\n\n            // Calculate the average age\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = (double) totalAge / ages.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Find the maximum age\n            int maxAge = ages.stream().max(Integer::compareTo).orElse(0);\n            System.out.println(\"Maximum Age: \" + maxAge);\n\n            // Find the minimum age\n            int minAge = ages.stream().min(Integer::compareTo).orElse(0);\n            System.out.println(\"Minimum Age: \" + minAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}