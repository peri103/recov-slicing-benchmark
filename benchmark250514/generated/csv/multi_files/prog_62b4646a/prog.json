{
    "files": {
        "CSVConfiguration.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVConfiguration {\n    private CSVFormat format;\n\n    public CSVConfiguration() {\n        format = CSVFormat.DEFAULT;\n    }\n\n    public void configureNullString(String nullString) {\n        /* write */ format = format.withNullString(nullString);\n    }\n\n    public CSVFormat getFormat() {\n        return format;\n    }\n}\n",
        "CSVDataProcessor.java": "import org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CSVDataProcessor {\n    private CSVConfiguration configuration;\n    private List<CSVRecord> records;\n\n    public CSVDataProcessor(CSVConfiguration configuration, String csvData) {\n        this.configuration = configuration;\n        parseCSVData(csvData);\n    }\n\n    private void parseCSVData(String csvData) {\n        try {\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), configuration.getFormat());\n            records = parser.getRecords();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public boolean isLocationSetInFirstRecord() {\n        CSVRecord record = records.get(0);\n        /* read */ return record.isSet(\"Location\");\n    }\n\n    public Map<String, Integer> countLocations() {\n        Map<String, Integer> locationCount = new HashMap<>();\n        for (CSVRecord record : records) {\n            String location = record.get(\"Location\");\n            locationCount.put(location, locationCount.getOrDefault(location, 0) + 1);\n        }\n        return locationCount;\n    }\n\n    public boolean doAllRecordsHaveAge() {\n        for (CSVRecord record : records) {\n            if (!record.isSet(\"Age\")) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n",
        "Main.java": "import java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Configure CSV with null string representation\n        CSVConfiguration csvConfig = new CSVConfiguration();\n        csvConfig.configureNullString(\"NULL\");\n\n        // Sample CSV data\n        String csvData = \"Name,Age,Location\\nJohn,NULL,USA\\nJane,25,NULL\";\n\n        // Process CSV data\n        CSVDataProcessor processor = new CSVDataProcessor(csvConfig, csvData);\n\n        // Check if 'Location' is set in the first record\n        boolean isLocationSet = processor.isLocationSetInFirstRecord();\n        System.out.println(\"Is 'Location' set in the first record? \" + isLocationSet);\n\n        // Count occurrences of each location\n        Map<String, Integer> locationCount = processor.countLocations();\n        for (Map.Entry<String, Integer> entry : locationCount.entrySet()) {\n            System.out.println(\"Location: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n\n        // Check if all records have 'Age' set\n        boolean allHaveAge = processor.doAllRecordsHaveAge();\n        System.out.println(\"Do all records have 'Age' set? \" + allHaveAge);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string representation\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a sample CSV input\n        String csvData = \"Name,Age,Location\\nJohn,NULL,USA\\nJane,25,NULL\";\n\n        // Parse the CSV data using the format\n        try {\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read from the first record\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"Location\");\n\n            System.out.println(\"Is 'Location' set in the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string representation\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Create a sample CSV input\n        String csvData = \"Name,Age,Location\\nJohn,NULL,USA\\nJane,25,NULL\";\n\n        // Parse the CSV data using the format\n        try {\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional logic: Count occurrences of each location\n            Map<String, Integer> locationCount = new HashMap<>();\n            for (CSVRecord record : records) {\n                String location = record.get(\"Location\");\n                locationCount.put(location, locationCount.getOrDefault(location, 0) + 1);\n            }\n\n            // Read from the first record\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"Location\");\n\n            // Print whether 'Location' is set in the first record\n            System.out.println(\"Is 'Location' set in the first record? \" + isSet);\n\n            // Print the occurrences of each location\n            for (Map.Entry<String, Integer> entry : locationCount.entrySet()) {\n                System.out.println(\"Location: \" + entry.getKey() + \", Count: \" + entry.getValue());\n            }\n\n            // Additional logic: Check if all records have 'Age' set\n            boolean allHaveAge = true;\n            for (CSVRecord rec : records) {\n                if (!rec.isSet(\"Age\")) {\n                    allHaveAge = false;\n                    break;\n                }\n            }\n            System.out.println(\"Do all records have 'Age' set? \" + allHaveAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}