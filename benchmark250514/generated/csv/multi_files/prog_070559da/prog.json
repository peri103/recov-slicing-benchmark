{
    "files": {
        "CSVConfiguration.java": "import org.apache.commons.csv.CSVFormat;\n\npublic class CSVConfiguration {\n    private CSVFormat format;\n\n    public CSVConfiguration() {\n        format = CSVFormat.DEFAULT;\n    }\n\n    public void configureHeaderComments(String comment) {\n        /* write */ format = format.withHeaderComments(comment);\n    }\n\n    public CSVFormat getFormat() {\n        return format;\n    }\n}\n",
        "CSVDataProcessor.java": "import org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVDataProcessor {\n    private CSVConfiguration csvConfiguration;\n    private List<CSVRecord> records;\n\n    public CSVDataProcessor(CSVConfiguration csvConfiguration) {\n        this.csvConfiguration = csvConfiguration;\n    }\n\n    public void parseData(String csvData) throws IOException {\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), csvConfiguration.getFormat());\n        records = parser.getRecords();\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV data with multiple lines and comments\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\\nvalue3,value4\";\n\n            // Configure CSV format with header comments\n            CSVConfiguration config = new CSVConfiguration();\n            config.configureHeaderComments(\"This is a comment\");\n\n            // Process the CSV data\n            CSVDataProcessor processor = new CSVDataProcessor(config);\n            processor.parseData(csvData);\n\n            // Retrieve and print records\n            List<CSVRecord> records = processor.getRecords();\n            for (CSVRecord record : records) {\n                System.out.println(\"Record: \" + record.get(0) + \", \" + record.get(1));\n            }\n\n            // Retrieve the comment from the first record\n            CSVRecord firstRecord = records.get(0);\n            /* read */ String comment = firstRecord.getComment();\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV data\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Create CSVFormat instance and add header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Read the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n\n            // Retrieve the comment from the record\n            /* read */ String comment = record.getComment();\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.QuoteMode;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV data with multiple lines and comments\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\\nvalue3,value4\";\n\n            // Create CSVFormat instance and add header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n            // Add additional configurations to CSVFormat\n            format = format.withQuoteMode(QuoteMode.ALL)\n                           .withIgnoreEmptyLines(true);\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Process all records\n            List<CSVRecord> records = parser.getRecords();\n            for (CSVRecord record : records) {\n                // Print each record's values\n                System.out.println(\"Record: \" + record.get(0) + \", \" + record.get(1));\n            }\n\n            // Perform some calculations based on records\n            int sum = 0;\n            for (CSVRecord record : records) {\n                int value1 = Integer.parseInt(record.get(0).replace(\"value\", \"\"));\n                int value2 = Integer.parseInt(record.get(1).replace(\"value\", \"\"));\n                sum += value1 + value2;\n            }\n            System.out.println(\"Sum of values: \" + sum);\n\n            // Retrieve the comment from the first record\n            CSVRecord firstRecord = records.get(0);\n            /* read */ String comment = firstRecord.getComment();\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}