{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat csvFormat;\n\n    public CSVHandler() {\n        this.csvFormat = CSVFormat.DEFAULT;\n    }\n\n    public void enableAutoFlush() {\n        /* write */ this.csvFormat = this.csvFormat.withAutoFlush(true);\n    }\n\n    public List<CSVRecord> parseCSV(String csvData, String[] headers) throws IOException {\n        CSVParser parser = csvFormat.withHeader(headers).parse(new StringReader(csvData));\n        return parser.getRecords();\n    }\n}\n",
        "CSVRecordProcessor.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.List;\n\npublic class CSVRecordProcessor {\n    private List<CSVRecord> records;\n\n    public CSVRecordProcessor(List<CSVRecord> records) {\n        this.records = records;\n    }\n\n    public void printRecords() {\n        for (CSVRecord record : records) {\n            String name = record.get(\"Name\");\n            String age = record.get(\"Age\");\n            String city = record.get(\"City\");\n            System.out.println(\"Name: \" + name + \", Age: \" + age + \", City: \" + city);\n        }\n    }\n\n    public boolean checkConsistency(int index) {\n        if (index < records.size()) {\n            /* read */ return records.get(index).isConsistent();\n        }\n        return false;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVHandler and enable auto flush\n        CSVHandler csvHandler = new CSVHandler();\n        csvHandler.enableAutoFlush();\n\n        // Define CSV data and headers\n        String csvData = \"John,25,New York\\nAlice,30,Los Angeles\\nBob,22,Chicago\";\n        String[] headers = {\"Name\", \"Age\", \"City\"};\n\n        try {\n            // Parse CSV data\n            List<CSVRecord> records = csvHandler.parseCSV(csvData, headers);\n\n            // Process and print CSV records\n            CSVRecordProcessor processor = new CSVRecordProcessor(records);\n            processor.printRecords();\n\n            // Check consistency of the first record\n            boolean isConsistent = processor.checkConsistency(0);\n            System.out.println(\"First CSVRecord is consistent: \" + isConsistent);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAutoFlush",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n\n        // Use write method\n        /* write */ csvFormat = csvFormat.withAutoFlush(true);\n\n        // Initialize CSVRecord object\n        CSVRecord csvRecord = null;\n\n        // Simulate reading by checking consistency\n        boolean isConsistent = false;\n        if (csvRecord != null) {\n            /* read */ isConsistent = csvRecord.isConsistent();\n        }\n\n        // Output the result\n        System.out.println(\"CSVRecord is consistent: \" + isConsistent);\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n\n        // Use write method\n        /* write */ csvFormat = csvFormat.withAutoFlush(true);\n\n        // Simulate additional complex operations\n        List<String> headers = new ArrayList<>();\n        headers.add(\"Name\");\n        headers.add(\"Age\");\n        headers.add(\"City\");\n\n        // Create a CSV string for parsing\n        String csvData = \"John,25,New York\\nAlice,30,Los Angeles\\nBob,22,Chicago\";\n\n        // Parse the CSV data\n        try {\n            CSVParser parser = csvFormat.withHeader(headers.toArray(new String[0])).parse(new StringReader(csvData));\n            List<CSVRecord> records = parser.getRecords();\n\n            // Simulate processing each record\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                String age = record.get(\"Age\");\n                String city = record.get(\"City\");\n\n                // Print out the details\n                System.out.println(\"Name: \" + name + \", Age: \" + age + \", City: \" + city);\n            }\n\n            // Initialize a specific CSVRecord object for demonstration\n            CSVRecord csvRecord = records.get(0);\n\n            // Simulate unrelated operations\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * i);\n            }\n\n            // Print numbers\n            for (int number : numbers) {\n                System.out.println(\"Number: \" + number);\n            }\n\n            // Use read method\n            /* read */ boolean isConsistent = csvRecord.isConsistent();\n\n            // Output the result\n            System.out.println(\"CSVRecord is consistent: \" + isConsistent);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}