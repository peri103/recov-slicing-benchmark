{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private String city;\n\n    public Student(String name, int age, String city) {\n        this.name = name;\n        this.age = age;\n        this.city = city;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getCity() {\n        return city;\n    }\n}\n",
        "StudentManager.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class StudentManager {\n    private List<Student> students = new ArrayList<>();\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format;\n\n    public CSVHandler() {\n        /* write */ format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n    }\n\n    public List<CSVRecord> parseCSV(String csvData) throws Exception {\n        CSVParser parser = new CSVParser(new StringReader(csvData), format);\n        return parser.getRecords();\n    }\n}\n",
        "Main.java": "import java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Sample CSV data\n        String csvData = \"Name,Age,City\\nJohn,30,New York\\nJane,25,Los Angeles\";\n\n        // Initialize CSVHandler and parse data\n        CSVHandler csvHandler = new CSVHandler();\n        List<CSVRecord> records = csvHandler.parseCSV(csvData);\n\n        // Initialize StudentManager\n        StudentManager studentManager = new StudentManager();\n\n        // Add students from CSV data\n        for (CSVRecord record : records) {\n            String name = record.get(\"Name\");\n            int age = Integer.parseInt(record.get(\"Age\"));\n            String city = record.get(\"City\");\n            Student student = new Student(name, age, city);\n            studentManager.addStudent(student);\n        }\n\n        // Process student data\n        Map<String, Integer> ageMap = new HashMap<>();\n        for (Student student : studentManager.getStudents()) {\n            ageMap.put(student.getName(), student.getAge());\n        }\n\n        // Calculate average age\n        int totalAge = 0;\n        for (int age : ageMap.values()) {\n            totalAge += age;\n        }\n        double averageAge = totalAge / (double) ageMap.size();\n        System.out.println(\"Average Age: \" + averageAge);\n\n        // Access the first record\n        CSVRecord firstRecord = records.get(0);\n\n        // Check if a specific header is mapped\n        /* read */ boolean isMapped = firstRecord.isMapped(\"Name\");\n        \n        // Output the result\n        System.out.println(\"Is 'Name' mapped: \" + isMapped);\n\n        // Output city information\n        for (Student student : studentManager.getStudents()) {\n            System.out.println(student.getName() + \" lives in \" + student.getCity());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Sample CSV data\n        String csvData = \"Name,Age,City\\nJohn,30,New York\\nJane,25,Los Angeles\";\n\n        // Create CSVFormat instance with the first record as header\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n        // Parse the CSV data\n        CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n        // Get the records\n        List<CSVRecord> records = parser.getRecords();\n\n        // Access the first record\n        CSVRecord record = records.get(0);\n\n        // Check if a specific header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"Name\");\n        \n        // Output the result\n        System.out.println(\"Is 'Name' mapped: \" + isMapped);\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Sample CSV data\n        String csvData = \"Name,Age,City\\nJohn,30,New York\\nJane,25,Los Angeles\";\n\n        // Create CSVFormat instance with the first record as header\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n        // Parse the CSV data\n        CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n        // Get the records\n        List<CSVRecord> records = parser.getRecords();\n\n        // Processing records\n        Map<String, Integer> ageMap = new HashMap<>();\n        for (CSVRecord rec : records) {\n            String name = rec.get(\"Name\");\n            int age = Integer.parseInt(rec.get(\"Age\"));\n            ageMap.put(name, age);\n        }\n\n        // Calculate average age\n        int totalAge = 0;\n        for (int age : ageMap.values()) {\n            totalAge += age;\n        }\n        double averageAge = totalAge / (double) ageMap.size();\n        System.out.println(\"Average Age: \" + averageAge);\n\n        // Access the first record\n        CSVRecord record = records.get(0);\n\n        // Some unrelated processing\n        Map<String, String> cityMap = new HashMap<>();\n        for (CSVRecord rec : records) {\n            String name = rec.get(\"Name\");\n            String city = rec.get(\"City\");\n            cityMap.put(name, city);\n        }\n\n        // Output city information\n        for (Map.Entry<String, String> entry : cityMap.entrySet()) {\n            System.out.println(entry.getKey() + \" lives in \" + entry.getValue());\n        }\n\n        // Check if a specific header is mapped\n        /* read */ boolean isMapped = record.isMapped(\"Name\");\n        \n        // Output the result\n        System.out.println(\"Is 'Name' mapped: \" + isMapped);\n    }\n}"
}