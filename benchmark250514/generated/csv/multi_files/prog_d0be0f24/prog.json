{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringWriter;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private StringWriter writer;\n\n    public CSVHandler() {\n        format = CSVFormat.DEFAULT;\n        writer = new StringWriter();\n    }\n\n    public void configureFormat() {\n        /* write */ format = format.withQuote('\"');\n    }\n\n    public void writeData(String... data) throws IOException {\n        CSVPrinter printer = new CSVPrinter(writer, format);\n        printer.printRecord(data);\n        printer.flush();\n    }\n\n    public String getWrittenData() {\n        return writer.toString();\n    }\n}",
        "CSVReader.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\n\npublic class CSVReader {\n    private String csvData;\n\n    public CSVReader(String csvData) {\n        this.csvData = csvData;\n    }\n\n    public String readData() throws IOException {\n        CSVRecord record = CSVFormat.DEFAULT.parse(new StringReader(csvData)).iterator().next();\n        /* read */ return record.toString();\n    }\n}",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<String> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void addCourse(String course) {\n        courses.add(course);\n    }\n\n    public List<String> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Main.java": "import java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVHandler and configure format\n            CSVHandler csvHandler = new CSVHandler();\n            csvHandler.configureFormat();\n\n            // Write data using CSVHandler\n            csvHandler.writeData(\"Alice\", \"Math\", \"90\");\n            csvHandler.writeData(\"Bob\", \"Science\", \"85\");\n\n            // Read data using CSVReader\n            CSVReader csvReader = new CSVReader(csvHandler.getWrittenData());\n            String firstRecord = csvReader.readData();\n            System.out.println(\"First Record: \" + firstRecord);\n\n            // Create Student and Course objects\n            Student alice = new Student(\"Alice\");\n            alice.addCourse(\"Math\");\n            alice.addCourse(\"Science\");\n\n            Student bob = new Student(\"Bob\");\n            bob.addCourse(\"Science\");\n\n            Course math = new Course(\"Math\");\n            math.enrollStudent(alice);\n\n            Course science = new Course(\"Science\");\n            science.enrollStudent(alice);\n            science.enrollStudent(bob);\n\n            // Print enrolled students for each course\n            for (Student student : math.getStudents()) {\n                System.out.println(\"Math Student: \" + student.getName());\n            }\n\n            for (Student student : science.getStudents()) {\n                System.out.println(\"Science Student: \" + student.getName());\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withQuote",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withQuote('\"');\n            \n            // Use the format to write data\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(\"Example\", \"Data\", \"123\");\n            printer.flush();\n            \n            // Parse the written data into a CSVRecord for reading\n            String csvData = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvData)).iterator().next();\n            \n            /* read */ String value = record.toString();\n            System.out.println(value);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            HashMap<String, List<String>> dataMap = new HashMap<>();\n            List<String> records = new ArrayList<>();\n            records.add(\"Value1\");\n            records.add(\"Value2\");\n            dataMap.put(\"Key1\", records);\n\n            /* write */ format = format.withQuote('\"');\n\n            // Use the format to write data\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(\"Example\", \"Data\", \"123\");\n            printer.printRecord(\"Another\", \"Row\", \"456\");\n            printer.flush();\n\n            // Unrelated code to add complexity\n            List<String> extraData = new ArrayList<>();\n            extraData.add(\"Extra1\");\n            extraData.add(\"Extra2\");\n            dataMap.put(\"Key2\", extraData);\n\n            for (String key : dataMap.keySet()) {\n                System.out.println(\"Key: \" + key + \", Values: \" + dataMap.get(key));\n            }\n\n            // Parse the written data into a CSVRecord for reading\n            String csvData = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvData)).iterator().next();\n\n            // Unrelated code to process the map data\n            for (String key : dataMap.keySet()) {\n                List<String> values = dataMap.get(key);\n                for (String value : values) {\n                    System.out.println(\"Processing value: \" + value);\n                }\n            }\n\n            /* read */ String value = record.toString();\n            System.out.println(value);\n\n            // Additional unrelated operations\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n            for (Integer number : numbers) {\n                System.out.println(\"Number: \" + number);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}