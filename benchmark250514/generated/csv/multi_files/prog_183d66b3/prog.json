{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat csvFormat;\n\n    public CSVHandler() {\n        this.csvFormat = CSVFormat.DEFAULT;\n    }\n\n    public void configureCSVFormat() {\n        /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n    }\n\n    public List<CSVRecord> parseCSV(String csvData) throws IOException {\n        return csvFormat.parse(new StringReader(csvData)).getRecords();\n    }\n}\n",
        "CSVAnalyzer.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class CSVAnalyzer {\n    private List<CSVRecord> records;\n    private ArrayList<String> names = new ArrayList<>();\n    private HashMap<String, Integer> ageMap = new HashMap<>();\n\n    public CSVAnalyzer(List<CSVRecord> records) {\n        this.records = records;\n        analyzeRecords();\n    }\n\n    private void analyzeRecords() {\n        for (CSVRecord rec : records) {\n            if (rec.isSet(\"Name\")) {\n                names.add(rec.get(\"Name\"));\n            }\n            if (rec.isSet(\"Age\")) {\n                ageMap.put(rec.get(\"Name\"), Integer.parseInt(rec.get(\"Age\")));\n            }\n        }\n    }\n\n    public ArrayList<String> getNames() {\n        return names;\n    }\n\n    public HashMap<String, Integer> getAgeMap() {\n        return ageMap;\n    }\n\n    public boolean isNameSetInFirstRecord() {\n        CSVRecord record = records.get(0);\n        /* read */ return record.isSet(\"Name\");\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Sample CSV data\n        String csvData = \"Name, Age, City\\nJohn, 30, New York\\n, , \\nJane, 25, Los Angeles\";\n\n        CSVHandler csvHandler = new CSVHandler();\n        csvHandler.configureCSVFormat();\n\n        try {\n            List<CSVRecord> records = csvHandler.parseCSV(csvData);\n            CSVAnalyzer csvAnalyzer = new CSVAnalyzer(records);\n\n            // Output the result of the original read\n            boolean isSet = csvAnalyzer.isNameSetInFirstRecord();\n            System.out.println(\"Is 'Name' set in the first record? \" + isSet);\n\n            // Additional processing and output\n            System.out.println(\"Names from CSV:\");\n            for (String name : csvAnalyzer.getNames()) {\n                System.out.println(name);\n            }\n\n            System.out.println(\"Age map:\");\n            for (String name : csvAnalyzer.getAgeMap().keySet()) {\n                System.out.println(name + \": \" + csvAnalyzer.getAgeMap().get(name));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat and use the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n\n        // Sample CSV data\n        String csvData = \"Name, Age, City\\nJohn, 30, New York\\n, , \\nJane, 25, Los Angeles\";\n\n        try {\n            // Parse the CSV data\n            List<CSVRecord> records = csvFormat.parse(new StringReader(csvData)).getRecords();\n\n            // Use the read method\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' set in the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat and use the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n\n        // Sample CSV data\n        String csvData = \"Name, Age, City\\nJohn, 30, New York\\n, , \\nJane, 25, Los Angeles\";\n\n        // Additional unrelated data structures\n        ArrayList<String> names = new ArrayList<>();\n        HashMap<String, Integer> ageMap = new HashMap<>();\n\n        try {\n            // Parse the CSV data\n            List<CSVRecord> records = csvFormat.parse(new StringReader(csvData)).getRecords();\n\n            // Populate additional data structures\n            for (CSVRecord rec : records) {\n                if (rec.isSet(\"Name\")) {\n                    names.add(rec.get(\"Name\"));\n                }\n                if (rec.isSet(\"Age\")) {\n                    ageMap.put(rec.get(\"Name\"), Integer.parseInt(rec.get(\"Age\")));\n                }\n            }\n\n            // Use the read method\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"Name\");\n\n            // Output the result of the original read\n            System.out.println(\"Is 'Name' set in the first record? \" + isSet);\n\n            // Additional processing and output\n            System.out.println(\"Names from CSV:\");\n            for (String name : names) {\n                System.out.println(name);\n            }\n\n            System.out.println(\"Age map:\");\n            for (String name : ageMap.keySet()) {\n                System.out.println(name + \": \" + ageMap.get(name));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}