{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private List<CSVRecord> records;\n\n    public CSVHandler(String csvData) throws IOException {\n        /* write */ this.format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n        CSVParser parser = new CSVParser(new StringReader(csvData), format);\n        this.records = parser.getRecords();\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n\n    public CSVFormat getFormat() {\n        return format;\n    }\n}\n",
        "CommentReader.java": "import org.apache.commons.csv.CSVRecord;\n\npublic class CommentReader {\n    private CSVRecord record;\n\n    public CommentReader(CSVRecord record) {\n        this.record = record;\n    }\n\n    public String readComment() {\n        /* read */ return record.getComment();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            String csvData = \"# This is a comment\\nName, Age\\nJohn, 30\\nDoe, 25\";\n            CSVHandler csvHandler = new CSVHandler(csvData);\n\n            // Process CSV records\n            List<CSVRecord> records = csvHandler.getRecords();\n            List<Student> students = new ArrayList<>();\n\n            for (CSVRecord rec : records) {\n                String name = rec.get(\"Name\");\n                int age = Integer.parseInt(rec.get(\"Age\"));\n                students.add(new Student(name, age));\n            }\n\n            // Display student information\n            for (Student student : students) {\n                System.out.println(\"Student Name: \" + student.getName() + \", Age: \" + student.getAge());\n            }\n\n            // Read and print the comment from the first record\n            CommentReader commentReader = new CommentReader(records.get(0));\n            String comment = commentReader.readComment();\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV data\n            String csvData = \"# This is a comment\\nName, Age\\nJohn, 30\\nDoe, 25\";\n\n            // Create CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Get the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n\n            // Read the comment from the CSVRecord\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV data\n            String csvData = \"# This is a comment\\nName, Age\\nJohn, 30\\nDoe, 25\";\n            \n            // Create CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Additional unrelated code to increase complexity\n            Map<String, Integer> ageMap = new HashMap<>();\n            ageMap.put(\"John\", 30);\n            ageMap.put(\"Doe\", 25);\n\n            ArrayList<String> names = new ArrayList<>();\n            names.add(\"John\");\n            names.add(\"Doe\");\n\n            int totalAge = 0;\n            for (String name : names) {\n                totalAge += ageMap.get(name);\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Get the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n\n            // Further processing of CSV records\n            for (CSVRecord rec : records) {\n                String name = rec.get(\"Name\");\n                String age = rec.get(\"Age\");\n                System.out.println(\"Name: \" + name + \", Age: \" + age);\n            }\n\n            // Read the comment from the CSVRecord\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}