{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private CSVParser parser;\n\n    public CSVHandler() {\n        format = CSVFormat.DEFAULT;\n    }\n\n    public void initializeParser(String csvContent) {\n        try {\n            parser = CSVParser.parse(new StringReader(csvContent), format);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void addHeaderComment(String comment) {\n        /* write */ format = format.withHeaderComments(comment);\n    }\n\n    public String getFirstComment() {\n        if (parser != null) {\n            for (CSVRecord record : parser) {\n                /* read */ return record.getComment();\n            }\n        }\n        return null;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Course> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public ArrayList<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int credits;\n\n    public Course(String courseName, int credits) {\n        this.courseName = courseName;\n        this.credits = credits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // CSVHandler operations\n        CSVHandler csvHandler = new CSVHandler();\n        csvHandler.addHeaderComment(\"This is a comment\");\n        String csvContent = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n        csvHandler.initializeParser(csvContent);\n        String comment = csvHandler.getFirstComment();\n        System.out.println(\"CSV Comment: \" + comment);\n\n        // Student and Course operations\n        Student student = new Student(\"John Doe\");\n        Course math = new Course(\"Mathematics\", 4);\n        Course science = new Course(\"Science\", 3);\n\n        student.enrollCourse(math);\n        student.enrollCourse(science);\n\n        System.out.println(\"Student: \" + student.getName());\n        ArrayList<Course> courses = student.getCourses();\n        for (Course course : courses) {\n            System.out.println(\"Enrolled in: \" + course.getCourseName() + \" with \" + course.getCredits() + \" credits.\");\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSV format with header comments\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        // Create a CSV parser with a sample CSV content\n        String csvContent = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n        CSVParser parser = null;\n        try {\n            parser = CSVParser.parse(new StringReader(csvContent), format);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Read the comment from the first record\n        if (parser != null) {\n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n                break; // Ensure the read method is executed only once\n            }\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSV format with header comments\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        // Create a CSV parser with a sample CSV content\n        String csvContent = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n        CSVParser parser = null;\n        try {\n            parser = CSVParser.parse(new StringReader(csvContent), format);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Additional unrelated code to make the program more complex\n        ArrayList<String> list = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        list.add(\"element1\");\n        list.add(\"element2\");\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        \n        for (String element : list) {\n            System.out.println(\"List element: \" + element);\n        }\n        \n        for (String key : map.keySet()) {\n            System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n        }\n\n        // Read the comment from the first record\n        if (parser != null) {\n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n                break; // Ensure the read method is executed only once\n            }\n        }\n\n        // More complex operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 5);\n        }\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}"
}