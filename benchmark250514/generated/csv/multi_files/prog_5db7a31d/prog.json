{
    "files": {
        "CSVOperations.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\n\npublic class CSVOperations {\n    private StringWriter writer;\n    private CSVPrinter csvPrinter;\n\n    public CSVOperations() throws IOException {\n        writer = new StringWriter();\n        csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n    }\n\n    public void writeRecord(String... values) throws IOException {\n        /* write */ csvPrinter.printRecord(values);\n        csvPrinter.flush();\n    }\n\n    public String getCSVContent() {\n        return writer.toString();\n    }\n}\n",
        "CSVReader.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.util.List;\n\npublic class CSVReader {\n    private List<CSVRecord> records;\n\n    public CSVReader(String csvContent) throws IOException {\n        CSVParser parser = CSVParser.parse(csvContent, CSVFormat.DEFAULT);\n        records = parser.getRecords();\n    }\n\n    public String readFirstName() {\n        CSVRecord record = records.get(0);\n        /* read */ return record.get(0);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public ArrayList<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // CSV Operations\n            CSVOperations csvOperations = new CSVOperations();\n            csvOperations.writeRecord(\"John\", \"Doe\", \"30\");\n\n            // Read CSV\n            CSVReader csvReader = new CSVReader(csvOperations.getCSVContent());\n            String firstName = csvReader.readFirstName();\n            System.out.println(\"First name from CSV: \" + firstName);\n\n            // Student Operations\n            Student student = new Student(\"Alice\");\n            student.addScore(85);\n            student.addScore(90);\n            student.addScore(95);\n\n            System.out.println(\"Student: \" + student.getName());\n            for (Integer score : student.getScores()) {\n                System.out.println(\"Score: \" + score);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\n\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVPrinter\n            StringWriter writer = new StringWriter();\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a record\n            /* write */ csvPrinter.printRecord(\"John\", \"Doe\", \"30\");\n            csvPrinter.flush();\n\n            // Parse the written CSV content\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n\n            // Read the record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n            /* read */ String firstName = record.get(0);\n\n            // Print the read value\n            System.out.println(firstName);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\n\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVPrinter\n            StringWriter writer = new StringWriter();\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a record\n            /* write */ csvPrinter.printRecord(\"John\", \"Doe\", \"30\");\n            csvPrinter.flush();\n\n            // Additional unrelated operations\n            ArrayList<String> names = new ArrayList<>();\n            names.add(\"Alice\");\n            names.add(\"Bob\");\n            names.add(\"Charlie\");\n\n            int sum = 0;\n            for (String name : names) {\n                sum += name.length();\n            }\n            System.out.println(\"Sum of name lengths: \" + sum);\n\n            // Parse the written CSV content\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n\n            // Process each record in the parser\n            List<CSVRecord> records = parser.getRecords();\n            for (CSVRecord rec : records) {\n                StringBuilder sb = new StringBuilder();\n                for (int i = 0; i < rec.size(); i++) {\n                    sb.append(rec.get(i)).append(\" \");\n                }\n                System.out.println(\"Record: \" + sb.toString().trim());\n            }\n\n            // Read the record\n            CSVRecord record = records.get(0);\n            /* read */ String firstName = record.get(0);\n\n            // Print the read value\n            System.out.println(\"First name from CSV: \" + firstName);\n\n            // Additional unrelated operations\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 1; i <= 5; i++) {\n                numbers.add(i * 10);\n            }\n\n            int product = 1;\n            for (int number : numbers) {\n                product *= number;\n            }\n            System.out.println(\"Product of numbers: \" + product);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}