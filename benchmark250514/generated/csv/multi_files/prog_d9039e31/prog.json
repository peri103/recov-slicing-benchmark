{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format;\n    private List<CSVRecord> records;\n\n    public CSVHandler() {\n        // Initialize CSVFormat with header comments\n        format = CSVFormat.DEFAULT\n            /* write */ .withHeaderComments(\"This is a header comment\");\n    }\n\n    public void parseCSV(String csvData) throws IOException {\n        // Parse the CSV data using the format\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        records = parser.getRecords();\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n}\n",
        "DataProcessor.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class DataProcessor {\n    private Map<String, Integer> nameAgeMap = new HashMap<>();\n\n    public void processRecords(List<CSVRecord> records) {\n        // Populate the map with data from records\n        for (CSVRecord record : records) {\n            String name = record.get(\"name\");\n            int age = Integer.parseInt(record.get(\"age\"));\n            nameAgeMap.put(name, age);\n        }\n    }\n\n    public void printNameAgeMap() {\n        // Perform some operations on the map\n        for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n            System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n        }\n    }\n\n    public double calculateAverageAge() {\n        int totalAge = 0;\n        for (int age : nameAgeMap.values()) {\n            totalAge += age;\n        }\n        return totalAge / (double) nameAgeMap.size();\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVHandler\n            CSVHandler csvHandler = new CSVHandler();\n\n            // Create a sample CSV string\n            String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n            // Parse the CSV data\n            csvHandler.parseCSV(csvData);\n\n            // Retrieve records from the CSVHandler\n            List<CSVRecord> records = csvHandler.getRecords();\n\n            // Initialize DataProcessor and process records\n            DataProcessor dataProcessor = new DataProcessor();\n            dataProcessor.processRecords(records);\n\n            // Print the name-age map\n            dataProcessor.printNameAgeMap();\n\n            // Calculate and print the average age\n            double averageAge = dataProcessor.calculateAverageAge();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the retrieved comment\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT\n                /* write */ .withHeaderComments(\"This is a header comment\");\n\n            // Create a sample CSV string\n            String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the retrieved comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT\n                /* write */ .withHeaderComments(\"This is a header comment\");\n\n            // Create a sample CSV string\n            String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Create a map to store names and ages\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n\n            // Populate the map with data from records\n            for (CSVRecord record : records) {\n                String name = record.get(\"name\");\n                int age = Integer.parseInt(record.get(\"age\"));\n                nameAgeMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the retrieved comment\n            System.out.println(comment);\n\n            // Additional operations to make the program more complex\n            int totalAge = 0;\n            for (int age : nameAgeMap.values()) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) nameAgeMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}