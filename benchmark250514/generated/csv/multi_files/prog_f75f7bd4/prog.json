{
    "files": {
        "CommentWriter.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringWriter;\n\npublic class CommentWriter {\n    private StringWriter writer = new StringWriter();\n    private CSVPrinter printer;\n\n    public CommentWriter() {\n        try {\n            this.printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void writeComment(String comment) {\n        try {\n            /* write */ printer.printComment(comment);\n            printer.flush();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String getCsvOutput() {\n        return writer.toString();\n    }\n}\n",
        "CommentReader.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class CommentReader {\n    private String csvOutput;\n\n    public CommentReader(String csvOutput) {\n        this.csvOutput = csvOutput;\n    }\n\n    public String readComment() {\n        try {\n            CSVRecord record = CSVFormat.DEFAULT.parse(new StringReader(csvOutput)).iterator().next();\n            /* read */ return record.getComment();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a CommentWriter and write a comment\n        CommentWriter commentWriter = new CommentWriter();\n        commentWriter.writeComment(\"This is a comment\");\n\n        // Create a CommentReader and read the comment\n        CommentReader commentReader = new CommentReader(commentWriter.getCsvOutput());\n        String comment = commentReader.readComment();\n        System.out.println(comment);\n\n        // Additional operations with Course and Student\n        Course course = new Course(\"Java Programming\");\n        Student student1 = new Student(\"Alice\", 20);\n        Student student2 = new Student(\"Bob\", 22);\n        \n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student Name: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture the output of CSVPrinter\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter with a specified format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a comment using the CSVPrinter\n            /* write */ printer.printComment(\"This is a comment\");\n            \n            // Flush the printer to ensure all data is written to the writer\n            printer.flush();\n            \n            // Retrieve the output as a string\n            String csvOutput = writer.toString();\n            \n            // Parse the CSV output to retrieve the comment\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvOutput)).iterator().next();\n            \n            // Read the comment from the CSVRecord\n            /* read */ String comment = record.getComment();\n            \n            // Print the comment to verify the result\n            System.out.println(comment);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture the output of CSVPrinter\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter with a specified format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a comment using the CSVPrinter\n            /* write */ printer.printComment(\"This is a comment\");\n            \n            // Perform some unrelated operations to increase complexity\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n            int sum = 0;\n            for (int num : numbers) {\n                sum += num;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n            \n            // Flush the printer to ensure all data is written to the writer\n            printer.flush();\n            \n            // Retrieve the output as a string\n            String csvOutput = writer.toString();\n            \n            // Parse the CSV output to retrieve the comment\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvOutput)).iterator().next();\n            \n            // Read the comment from the CSVRecord\n            /* read */ String comment = record.getComment();\n            \n            // Print the comment to verify the result\n            System.out.println(comment);\n            \n            // Additional unrelated operations\n            List<String> words = new ArrayList<>();\n            words.add(\"Hello\");\n            words.add(\"World\");\n            for (String word : words) {\n                System.out.println(word);\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}