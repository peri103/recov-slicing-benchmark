{
    "files": {
        "CSVWriter.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\n\npublic class CSVWriter {\n    private CSVFormat format;\n    private StringWriter writer;\n\n    public CSVWriter() {\n        this.format = CSVFormat.DEFAULT.withEscape('\\\\'); /* write */\n        this.writer = new StringWriter();\n    }\n\n    public void writeRecord(List<String> data) throws IOException {\n        CSVPrinter printer = new CSVPrinter(writer, format);\n        printer.printRecord(data);\n        printer.flush();\n        printer.close();\n    }\n\n    public String getWrittenData() {\n        return writer.toString();\n    }\n}\n",
        "CSVReader.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVReader {\n    public String readFirstRecord(String data) throws IOException {\n        CSVRecord record = CSVFormat.DEFAULT.parse(new StringReader(data)).getRecords().get(0);\n        return record.toString(); /* read */\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<String> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollCourse(String course) {\n        courses.add(course);\n    }\n\n    public List<String> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.enrolledStudents = new ArrayList<>();\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.io.IOException;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV writer and reader\n            CSVWriter csvWriter = new CSVWriter();\n            CSVReader csvReader = new CSVReader();\n\n            // Write a record\n            csvWriter.writeRecord(Arrays.asList(\"one\", \"two\", \"three\"));\n\n            // Read the first record\n            String result = csvReader.readFirstRecord(csvWriter.getWrittenData());\n            System.out.println(\"CSV Record: \" + result);\n\n            // Additional functionality with Student and Course\n            Student student = new Student(\"John Doe\");\n            Course course = new Course(\"Mathematics\");\n\n            student.enrollCourse(course.getCourseName());\n            course.enrollStudent(student);\n\n            System.out.println(\"Student: \" + student.getName());\n            System.out.println(\"Enrolled Courses: \" + student.getCourses());\n            System.out.println(\"Course: \" + course.getCourseName());\n            System.out.println(\"Enrolled Students: \" + course.getEnrolledStudents().get(0).getName());\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withEscape",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with escape character\n            CSVFormat format = CSVFormat.DEFAULT.withEscape('\\\\'); /* write */\n\n            // Prepare a writer to capture the output\n            StringWriter writer = new StringWriter();\n\n            // Create a CSVPrinter to write data using the format\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write some data\n            printer.printRecord(Arrays.asList(\"one\", \"two\", \"three\"));\n\n            // Flush and close the printer\n            printer.flush();\n            printer.close();\n\n            // Read the written CSV record\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords().get(0);\n            String result = record.toString(); /* read */\n\n            // Print the result\n            System.out.println(result);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with escape character\n            CSVFormat format = CSVFormat.DEFAULT.withEscape('\\\\'); /* write */\n\n            // Prepare a writer to capture the output\n            StringWriter writer = new StringWriter();\n\n            // Create a CSVPrinter to write data using the format\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write some data\n            printer.printRecord(Arrays.asList(\"one\", \"two\", \"three\"));\n\n            // Flush and close the printer\n            printer.flush();\n            printer.close();\n\n            // Additional unrelated code to increase complexity\n            List<String> additionalData = new ArrayList<>();\n            additionalData.add(\"extra1\");\n            additionalData.add(\"extra2\");\n            additionalData.add(\"extra3\");\n\n            for (String data : additionalData) {\n                System.out.println(\"Processing additional data: \" + data);\n            }\n\n            // More complex operations\n            int sum = 0;\n            for (int i = 0; i < 5; i++) {\n                sum += i;\n                System.out.println(\"Current sum: \" + sum);\n            }\n\n            // Read the written CSV record\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords().get(0);\n            String result = record.toString(); /* read */\n\n            // Print the result\n            System.out.println(result);\n\n            // Additional logic to manipulate the result\n            String[] splitResult = result.split(\",\");\n            for (String part : splitResult) {\n                System.out.println(\"Part of result: \" + part.trim());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}