{
    "files": {
        "CommentWriter.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringWriter;\n\npublic class CommentWriter {\n    private StringWriter writer = new StringWriter();\n    private CSVPrinter printer;\n\n    public CommentWriter() {\n        try {\n            printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void writeComment(String comment) {\n        try {\n            /* write */ printer.printComment(comment);\n            printer.flush();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String getOutput() {\n        return writer.toString();\n    }\n\n    public void close() {\n        try {\n            printer.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n",
        "CommentReader.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CommentReader {\n\n    public String readComment(String data) {\n        try {\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new StringReader(data)).getRecords();\n            for (CSVRecord record : records) {\n                if (record.getComment() != null) {\n                    /* read */ return record.getComment();\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Using the CommentWriter and CommentReader classes\n        CommentWriter writer = new CommentWriter();\n        writer.writeComment(\"This is a comment\");\n\n        // Adding unrelated complex code\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(new Student(\"Alice\", 20));\n        course.addStudent(new Student(\"Bob\", 22));\n\n        ArrayList<Student> students = course.getStudents();\n        for (Student student : students) {\n            System.out.println(\"Student Name: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n\n        // Using the CommentReader to read the comment\n        CommentReader reader = new CommentReader();\n        String comment = reader.readComment(writer.getOutput());\n        System.out.println(\"Comment: \" + comment);\n\n        // Closing the writer\n        writer.close();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to capture the output\n            StringWriter writer = new StringWriter();\n\n            // Initialize the CSVPrinter with the writer and a CSV format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a comment using the printComment method\n            /* write */ printer.printComment(\"This is a comment\");\n\n            // Flush and close the printer\n            printer.flush();\n            printer.close();\n\n            // Read the comment using the CSVRecord getComment method\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords();\n            for (CSVRecord record : records) {\n                if (record.getComment() != null) {\n                    /* read */ String comment = record.getComment();\n                    System.out.println(comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to capture the output\n            StringWriter writer = new StringWriter();\n\n            // Initialize the CSVPrinter with the writer and a CSV format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a comment using the printComment method\n            /* write */ printer.printComment(\"This is a comment\");\n\n            // Adding unrelated complex code\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numbers.add(i * 2);\n            }\n\n            int sum = 0;\n            for (Integer number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // Flush and close the printer\n            printer.flush();\n            printer.close();\n\n            // More unrelated complex code\n            ArrayList<String> words = new ArrayList<>();\n            words.add(\"apple\");\n            words.add(\"banana\");\n            words.add(\"cherry\");\n\n            for (String word : words) {\n                System.out.println(\"Word: \" + word);\n            }\n\n            // Read the comment using the CSVRecord getComment method\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords();\n            for (CSVRecord record : records) {\n                if (record.getComment() != null) {\n                    /* read */ String comment = record.getComment();\n                    System.out.println(comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}