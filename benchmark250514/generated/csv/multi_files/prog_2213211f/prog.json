{
    "files": {
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int credits;\n\n    public Course(String courseName, int credits) {\n        this.courseName = courseName;\n        this.credits = credits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format;\n\n    public CSVHandler() {\n        format = CSVFormat.DEFAULT;\n    }\n\n    public void addHeaderComment(String comment) {\n        /* write */ format = format.withHeaderComments(comment);\n    }\n\n    public List<CSVRecord> parseCSV(String csvData) throws IOException {\n        CSVParser parser = new CSVParser(new StringReader(csvData), format);\n        List<CSVRecord> records = parser.getRecords();\n        parser.close();\n        return records;\n    }\n}\n",
        "Main.java": "import java.io.IOException;\nimport java.util.List;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVHandler and add a header comment\n            CSVHandler csvHandler = new CSVHandler();\n            csvHandler.addHeaderComment(\"This is a header comment\");\n\n            // Prepare a sample CSV data\n            String csvData = \"# This is a header comment\\n\" +\n                             \"Name, Age\\n\" +\n                             \"Alice, 30\\n\" +\n                             \"Bob, 25\\n\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = csvHandler.parseCSV(csvData);\n\n            // Create students and enroll them in courses\n            Student alice = new Student(\"Alice\");\n            Student bob = new Student(\"Bob\");\n\n            Course math = new Course(\"Mathematics\", 3);\n            Course science = new Course(\"Science\", 4);\n\n            alice.enrollInCourse(math);\n            bob.enrollInCourse(science);\n\n            // Print student details\n            for (Student student : List.of(alice, bob)) {\n                System.out.println(\"Student: \" + student.getName());\n                for (Course course : student.getCourses()) {\n                    System.out.println(\"Enrolled in: \" + course.getCourseName() + \" (\" + course.getCredits() + \" credits)\");\n                }\n            }\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Prepare a sample CSV data\n            String csvData = \"# This is a header comment\\n\" +\n                             \"Name, Age\\n\" +\n                             \"Alice, 30\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(comment);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Prepare a sample CSV data\n            String csvData = \"# This is a header comment\\n\" +\n                             \"Name, Age\\n\" +\n                             \"Alice, 30\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional code to manipulate CSV records\n            ArrayList<String> names = new ArrayList<>();\n            ArrayList<Integer> ages = new ArrayList<>();\n            for (CSVRecord record : records) {\n                if (record.getRecordNumber() > 1) { // Skip header\n                    names.add(record.get(\"Name\"));\n                    ages.add(Integer.parseInt(record.get(\"Age\")));\n                }\n            }\n\n            // Perform some calculations on ages\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) ages.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(comment);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}