{
    "files": {
        "CSVHandler.java": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CSVHandler {\n    private CSVFormat format = CSVFormat.DEFAULT;\n    private List<CSVRecord> records = new ArrayList<>();\n\n    public void configureFormat() {\n        /* write */ format = format.withDelimiter(';');\n    }\n\n    public void parseCSV(String csvData) {\n        try {\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                records.add(record);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public List<CSVRecord> getRecords() {\n        return records;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private String city;\n\n    public Student(String name, int age, String city) {\n        this.name = name;\n        this.age = age;\n        this.city = city;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getCity() {\n        return city;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', age=\" + age + \", city='\" + city + \"'}\";\n    }\n}\n",
        "Main.java": "import org.apache.commons.csv.CSVRecord;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVHandler csvHandler = new CSVHandler();\n        csvHandler.configureFormat();\n\n        String csvData = \"name;age;city\\nJohn Doe;30;New York\\nJane Smith;25;Los Angeles\";\n        csvHandler.parseCSV(csvData);\n\n        List<CSVRecord> records = csvHandler.getRecords();\n        for (CSVRecord record : records) {\n            String name = record.get(0);\n            int age = Integer.parseInt(record.get(1));\n            String city = record.get(2);\n\n            Student student = new Student(name, age, city);\n            System.out.println(\"Created Student: \" + student);\n\n            if (name.equals(\"John Doe\")) {\n                /* read */ String recordString = record.toString();\n                System.out.println(\"CSV Record String: \" + recordString);\n            }\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a custom delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withDelimiter(';');\n\n        // Sample CSV data to parse\n        String csvData = \"name;age;city\\nJohn Doe;30;New York\";\n\n        // Parse the CSV data using the format with the custom delimiter\n        try {\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                // Read the first record and convert it to a string\n                /* read */ String recordString = record.toString();\n                System.out.println(recordString);\n                break; // Ensure the read operation is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a custom delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withDelimiter(';');\n\n        // Sample CSV data to parse\n        String csvData = \"name;age;city\\nJohn Doe;30;New York\\nJane Smith;25;Los Angeles\";\n\n        // Parse the CSV data using the format with the custom delimiter\n        try {\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Additional unrelated operations\n            Map<String, Integer> ageMap = new HashMap<>();\n            ageMap.put(\"John Doe\", 30);\n            ageMap.put(\"Jane Smith\", 25);\n\n            int totalAge = 0;\n            for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n                totalAge += entry.getValue();\n            }\n            System.out.println(\"Total age: \" + totalAge);\n\n            for (CSVRecord record : parser) {\n                // Perform some unrelated operations\n                String name = record.get(0);\n                int age = Integer.parseInt(record.get(1));\n                String city = record.get(2);\n\n                System.out.println(\"Processing record: \" + name + \", \" + age + \", \" + city);\n\n                // Read the first record and convert it to a string\n                if (name.equals(\"John Doe\")) {\n                    /* read */ String recordString = record.toString();\n                    System.out.println(recordString);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}