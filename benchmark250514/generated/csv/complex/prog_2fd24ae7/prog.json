{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines(true); /* write */\n\n            // Example CSV data\n            String csvData = \"name,age\\nJohn,30\\n\\nJane,25\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Initialize an ArrayList to store ages\n            ArrayList<Integer> ages = new ArrayList<>();\n\n            // Process each CSVRecord to extract and store ages\n            for (CSVRecord record : records) {\n                if (record.isConsistent()) {\n                    String ageString = record.get(\"age\");\n                    try {\n                        int age = Integer.parseInt(ageString);\n                        ages.add(age);\n                    } catch (NumberFormatException e) {\n                        System.err.println(\"Invalid age format: \" + ageString);\n                    }\n                }\n            }\n\n            // Calculate the average age\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = ages.isEmpty() ? 0 : (double) totalAge / ages.size();\n            System.out.println(\"Average age: \" + averageAge);\n\n            // Read using the read method\n            boolean isConsistent = records.get(0).isConsistent(); /* read */\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n\n            // Additional complexity: Print ages in reverse order\n            System.out.println(\"Ages in reverse order:\");\n            for (int i = ages.size() - 1; i >= 0; i--) {\n                System.out.println(ages.get(i));\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines(true); /* write */\n\n            // Example CSV data\n            String csvData = \"name,age\\nJohn,30\\n\\nJane,25\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Read using the read method\n            boolean isConsistent = records.get(0).isConsistent(); /* read */\n\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}