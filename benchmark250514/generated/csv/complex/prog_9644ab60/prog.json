{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a null string\n            CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n            /* write */ format = format.withNullString(\"NULL\");\n\n            // Sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,NULL,USA\\nJane,30,UK\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Perform some unrelated calculations\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n            nameToAgeMap.put(\"John\", 25);\n            nameToAgeMap.put(\"Jane\", 30);\n            int totalAge = 0;\n            for (Integer age : nameToAgeMap.values()) {\n                totalAge += age;\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Perform operations on the CSV data\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"Name\");\n                String age = rec.get(\"Age\");\n                String location = rec.get(\"Location\");\n                System.out.println(\"Name: \" + name + \", Age: \" + age + \", Location: \" + location);\n            }\n\n            // Check if the 'Location' field is set\n            /* read */ boolean isLocationSet = record.isSet(\"Location\");\n\n            System.out.println(\"Is 'Location' set for the first record? \" + isLocationSet);\n\n            // Additional logic to manipulate the records\n            for (CSVRecord rec : parser) {\n                if (\"NULL\".equals(rec.get(\"Age\"))) {\n                    System.out.println(rec.get(\"Name\") + \" has no age specified.\");\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a null string\n            CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n            /* write */ format = format.withNullString(\"NULL\");\n\n            // Sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,NULL,USA\\nJane,30,UK\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if the 'Location' field is set\n            /* read */ boolean isLocationSet = record.isSet(\"Location\");\n\n            System.out.println(\"Is 'Location' set for the first record? \" + isLocationSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}