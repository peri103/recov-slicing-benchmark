{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.List;\nimport java.util.ArrayList;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVPrinter csvPrinter = null;\n        CSVParser csvParser = null;\n        \n        try {\n            // Initialize CSVPrinter\n            csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write data\n            /* write */ csvPrinter.printRecord(\"value1\", \"value2\", \"value3\");\n            csvPrinter.flush();\n            \n            // Additional operations to increase complexity\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numbers.add(i * 2);\n            }\n            \n            int sum = 0;\n            for (Integer num : numbers) {\n                sum += num;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n            \n            List<String> data = new ArrayList<>();\n            data.add(\"extra1\");\n            data.add(\"extra2\");\n            csvPrinter.printRecord(data);\n            csvPrinter.flush();\n            \n            // Read the written data\n            StringReader reader = new StringReader(writer.toString());\n            csvParser = new CSVParser(reader, CSVFormat.DEFAULT);\n            List<CSVRecord> records = csvParser.getRecords();\n            \n            // Assuming we want to read the first value of the first record\n            /* read */ String value = records.get(0).get(0);\n            System.out.println(\"Read value: \" + value);\n            \n            // Additional operations after reading\n            for (CSVRecord record : records) {\n                for (String field : record) {\n                    System.out.println(\"Field: \" + field);\n                }\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (csvPrinter != null) {\n                    csvPrinter.close();\n                }\n                if (csvParser != null) {\n                    csvParser.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.List;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVPrinter csvPrinter = null;\n        CSVParser csvParser = null;\n        \n        try {\n            // Initialize CSVPrinter\n            csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write data\n            /* write */ csvPrinter.printRecord(\"value1\", \"value2\", \"value3\");\n            csvPrinter.flush();\n            \n            // Read the written data\n            StringReader reader = new StringReader(writer.toString());\n            csvParser = new CSVParser(reader, CSVFormat.DEFAULT);\n            List<CSVRecord> records = csvParser.getRecords();\n            \n            // Assuming we want to read the first value of the first record\n            /* read */ String value = records.get(0).get(0);\n            System.out.println(value);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (csvPrinter != null) {\n                    csvPrinter.close();\n                }\n                if (csvParser != null) {\n                    csvParser.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}