{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\n\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"name,age,city\\nJohn,25,New York\\nJane,30,Los Angeles\";\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Initialize a map to store extracted data\n        Map<String, String> personData = new HashMap<>();\n        \n        try {\n            /* write */ format = format.withFirstRecordAsHeader();\n            CSVParser parser = format.parse(new StringReader(csvData));\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Process each record and store data in the map\n            for (CSVRecord record : records) {\n                String name = record.get(\"name\");\n                String age = record.get(\"age\");\n                String city = record.get(\"city\");\n                personData.put(name, \"Age: \" + age + \", City: \" + city);\n            }\n            \n            // Perform some unrelated operations\n            int sumAges = 0;\n            for (CSVRecord record : records) {\n                sumAges += Integer.parseInt(record.get(\"age\"));\n            }\n            System.out.println(\"Total age sum: \" + sumAges);\n            \n            // Extract a specific record\n            CSVRecord specificRecord = records.get(0);\n            String specificName = specificRecord.get(\"name\");\n            System.out.println(\"Specific person's data: \" + personData.get(specificName));\n            \n            // Check if a specific field is mapped\n            /* read */ boolean isMapped = specificRecord.isMapped(\"name\");\n            System.out.println(\"Is 'name' field mapped? \" + isMapped);\n            \n            // Further unrelated operations\n            Map<String, Integer> ageMap = new HashMap<>();\n            for (CSVRecord record : records) {\n                ageMap.put(record.get(\"name\"), Integer.parseInt(record.get(\"age\")));\n            }\n            \n            for (String key : ageMap.keySet()) {\n                System.out.println(key + \" is \" + ageMap.get(key) + \" years old.\");\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"name,age,city\\nJohn,25,New York\\nJane,30,Los Angeles\";\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        try {\n            /* write */ format = format.withFirstRecordAsHeader();\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            CSVRecord record = records.get(0);\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n            System.out.println(isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}