{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withAllowMissingColumnNames(true);\n\n            // Create a sample CSV content\n            String csvContent = \"Header1,Header2\\nValue1,Value2\\nValue3,Value4\";\n\n            // Parse the CSV content\n            CSVParser parser = CSVParser.parse(new StringReader(csvContent), format);\n\n            // Initialize other data structures\n            ArrayList<String> list = new ArrayList<>();\n            HashMap<String, Integer> map = new HashMap<>();\n\n            // Populate the list and map with some data\n            list.add(\"Data1\");\n            list.add(\"Data2\");\n            map.put(\"Key1\", 100);\n            map.put(\"Key2\", 200);\n\n            // Perform operations on the list\n            for (String item : list) {\n                System.out.println(\"List item: \" + item);\n            }\n\n            // Perform operations on the map\n            for (String key : map.keySet()) {\n                System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n            }\n\n            // Read the first record using the read method\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ boolean isConsistent = record.isConsistent();\n\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n\n            // Additional operations to increase complexity\n            int sum = 0;\n            for (int value : map.values()) {\n                sum += value;\n            }\n            System.out.println(\"Sum of map values: \" + sum);\n\n            String concatenatedList = String.join(\", \", list);\n            System.out.println(\"Concatenated list: \" + concatenatedList);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withAllowMissingColumnNames(true);\n\n            // Create a sample CSV content\n            String csvContent = \"Header1,Header2\\nValue1,Value2\\nValue3,Value4\";\n\n            // Parse the CSV content\n            CSVParser parser = CSVParser.parse(new StringReader(csvContent), format);\n\n            // Read the first record using the read method\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ boolean isConsistent = record.isConsistent();\n\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}