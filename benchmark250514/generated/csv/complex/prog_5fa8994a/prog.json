{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String csvData = \"# This is a comment\\nname,age\\nJohn,30\\n# Another comment\\nDoe,25\";\n\n        // Create a CSVFormat with a comment marker\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withCommentMarker('#');\n\n        // Parse the CSV data\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n        // Additional unrelated code to add complexity\n        Map<String, Integer> nameAgeMap = new HashMap<>();\n        nameAgeMap.put(\"Alice\", 28);\n        nameAgeMap.put(\"Bob\", 34);\n\n        // Iterate through the records and process data\n        for (CSVRecord record : parser) {\n            // Check for comments and read them\n            if (record.hasComment()) {\n                /* read */ String comment = record.getComment();\n                System.out.println(\"Comment: \" + comment);\n            }\n            \n            // Process non-comment records\n            if (!record.hasComment()) {\n                String name = record.get(0);\n                int age = Integer.parseInt(record.get(1));\n                System.out.println(\"Name: \" + name + \", Age: \" + age);\n                nameAgeMap.put(name, age);\n            }\n        }\n\n        // Use the map in some way\n        System.out.println(\"Name-Age Map:\");\n        for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // More unrelated code for complexity\n        int sumOfAges = 0;\n        for (int age : nameAgeMap.values()) {\n            sumOfAges += age;\n        }\n        System.out.println(\"Sum of Ages: \" + sumOfAges);\n\n        // Demonstrating another unrelated operation\n        int maxAge = nameAgeMap.values().stream().max(Integer::compare).orElse(0);\n        System.out.println(\"Max Age: \" + maxAge);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String csvData = \"# This is a comment\\nname,age\\nJohn,30\\n# Another comment\\nDoe,25\";\n        \n        // Create a CSVFormat with a comment marker\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withCommentMarker('#');\n\n        // Parse the CSV data\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n        // Iterate through the records\n        for (CSVRecord record : parser) {\n            // Check for comments and read them\n            if (record.hasComment()) {\n                /* read */ String comment = record.getComment();\n                System.out.println(\"Comment: \" + comment);\n            }\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}