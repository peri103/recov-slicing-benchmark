{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSVFormat object and configure it\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Sample CSV data as a String\n        String csvData = \"Name, Age\\nJohn Doe, 25\\nJane Smith, 30\";\n\n        try {\n            // Parse the CSV data using the configured format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Initialize a list and a map to store records and their properties\n            ArrayList<CSVRecord> recordsList = new ArrayList<>();\n            HashMap<String, Boolean> recordProperties = new HashMap<>();\n\n            // Iterate over the records and perform operations\n            for (CSVRecord record : parser) {\n                recordsList.add(record);\n                recordProperties.put(record.get(\"Name\"), record.isSet(\"Age\"));\n            }\n\n            // Perform additional operations on the records\n            for (CSVRecord record : recordsList) {\n                System.out.println(\"Name: \" + record.get(\"Name\") + \", Age: \" + record.get(\"Age\"));\n            }\n\n            // Use the read method to check if a value is set in the first record\n            CSVRecord firstRecord = recordsList.get(0);\n            /* read */ boolean isSet = firstRecord.isSet(\"Name\");\n\n            // Print the result\n            System.out.println(\"Is 'Name' set in the first record? \" + isSet);\n\n            // Print properties of all records\n            for (String name : recordProperties.keySet()) {\n                System.out.println(\"Record for \" + name + \" has 'Age' set: \" + recordProperties.get(name));\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to configure the CSVFormat\n        /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n        // Sample CSV data as a String\n        String csvData = \"Name, Age\\nJohn Doe, 25\";\n\n        try {\n            // Parse the CSV data using the configured format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Get the first record\n            CSVRecord record = parser.iterator().next();\n\n            // Use the read method to check if a value is set in the record\n            /* read */ boolean isSet = record.isSet(\"Name\");\n\n            // Print the result\n            System.out.println(\"Is 'Name' set in the record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}