{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Prepare a sample CSV content\n            String csvContent = \"# This is a header comment\\n\" +\n                                \"name,age\\n\" +\n                                \"Alice,30\\n\" +\n                                \"Bob,25\";\n\n            // Parse the CSV content\n            CSVParser parser = CSVParser.parse(new StringReader(csvContent), format);\n\n            // Additional logic: Create a map to store names and ages\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n\n            // Get records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Process each record and populate the map\n            for (CSVRecord record : records) {\n                String name = record.get(\"name\");\n                int age = Integer.parseInt(record.get(\"age\"));\n                nameAgeMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            int totalAge = 0;\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                totalAge += entry.getValue();\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            \n            // Print the comment\n            System.out.println(comment);\n\n            // Additional logic: Check if a specific name exists in the map\n            if (nameAgeMap.containsKey(\"Alice\")) {\n                System.out.println(\"Alice is found in the records.\");\n            } else {\n                System.out.println(\"Alice is not found in the records.\");\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Prepare a sample CSV content\n            String csvContent = \"# This is a header comment\\n\" +\n                                \"name,age\\n\" +\n                                \"Alice,30\\n\" +\n                                \"Bob,25\";\n\n            // Parse the CSV content\n            CSVParser parser = CSVParser.parse(new StringReader(csvContent), format);\n\n            // Get records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            \n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}