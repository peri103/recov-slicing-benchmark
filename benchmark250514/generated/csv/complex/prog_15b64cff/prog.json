{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter for CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter instance\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record using CSVPrinter\n            /* write */ csvPrinter.printRecord(\"John\", \"Doe\", 30);\n            \n            // Add complexity: create another CSVPrinter and write additional records\n            StringWriter writer2 = new StringWriter();\n            CSVPrinter csvPrinter2 = new CSVPrinter(writer2, CSVFormat.DEFAULT);\n            csvPrinter2.printRecord(\"Alice\", \"Smith\", 25);\n            csvPrinter2.printRecord(\"Bob\", \"Johnson\", 40);\n            csvPrinter2.close();\n            \n            // Close the original CSVPrinter\n            csvPrinter.close();\n            \n            // Read the CSV content from both StringWriters\n            String csvData = writer.toString();\n            String csvData2 = writer2.toString();\n            \n            // Parse the CSV content\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new StringReader(csvData)).getRecords();\n            List<CSVRecord> records2 = CSVFormat.DEFAULT.parse(new StringReader(csvData2)).getRecords();\n            \n            // Add complexity: process the second set of records\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord record : records2) {\n                names.add(record.get(0) + \" \" + record.get(1));\n            }\n            \n            // Perform additional operations with the names list\n            for (String name : names) {\n                System.out.println(\"Processed name: \" + name);\n            }\n            \n            // Read the value using CSVRecord from the original record\n            /* read */ String firstName = records.get(0).get(0);\n            \n            // Print the read value\n            System.out.println(\"Original first name: \" + firstName);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter for CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter instance\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record using CSVPrinter\n            /* write */ csvPrinter.printRecord(\"John\", \"Doe\", 30);\n            \n            // Close the CSVPrinter\n            csvPrinter.close();\n            \n            // Read the CSV content from the StringWriter\n            String csvData = writer.toString();\n            \n            // Parse the CSV content\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new StringReader(csvData)).getRecords();\n            \n            // Read the value using CSVRecord\n            /* read */ String firstName = records.get(0).get(0);\n            \n            // Print the read value\n            System.out.println(firstName);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}