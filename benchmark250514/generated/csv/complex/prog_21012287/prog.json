{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nDoe,25\";\n        \n        // Initialize CSVFormat with a comment marker\n        /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        // Parse the CSV data\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n        \n        // Create a list to store the records\n        List<String> names = new ArrayList<>();\n        \n        // Iterate through the records\n        for (CSVRecord record : parser) {\n            // Check if the record is a comment\n            if (record.getComment() != null) {\n                /* read */ String comment = record.getComment();\n                System.out.println(\"Comment: \" + comment);\n            } else {\n                // Add names to the list\n                names.add(record.get(0));\n            }\n        }\n        \n        // Print all names\n        System.out.println(\"Names in CSV:\");\n        for (String name : names) {\n            System.out.println(name);\n        }\n        \n        // Additional logic to manipulate the list\n        List<Integer> ages = new ArrayList<>();\n        ages.add(30);\n        ages.add(25);\n        \n        // Calculate and print average age\n        int sum = 0;\n        for (int age : ages) {\n            sum += age;\n        }\n        double averageAge = sum / (double) ages.size();\n        System.out.println(\"Average Age: \" + averageAge);\n        \n        // Add more complexity by reversing the list of names\n        List<String> reversedNames = new ArrayList<>();\n        for (int i = names.size() - 1; i >= 0; i--) {\n            reversedNames.add(names.get(i));\n        }\n        \n        // Print reversed names\n        System.out.println(\"Reversed Names:\");\n        for (String name : reversedNames) {\n            System.out.println(name);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nDoe,25\";\n        \n        // Initialize CSVFormat with a comment marker\n        /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        // Parse the CSV data\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n        \n        // Iterate through the records\n        for (CSVRecord record : parser) {\n            // Check if the record is a comment\n            if (record.getComment() != null) {\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n            }\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}