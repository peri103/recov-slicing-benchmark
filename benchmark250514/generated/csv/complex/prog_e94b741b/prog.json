{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n            // Create a sample CSV string\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Additional complexity: Create a list of names from the CSV records\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord record : records) {\n                names.add(record.get(\"name\"));\n            }\n\n            // Print all names\n            for (String name : names) {\n                System.out.println(\"Name: \" + name);\n            }\n\n            // Perform some calculations\n            int totalAge = 0;\n            for (CSVRecord record : records) {\n                totalAge += Integer.parseInt(record.get(\"age\"));\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Access the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the retrieved comment\n            System.out.println(\"Comment: \" + comment);\n\n            // Additional complexity: Reverse the names list and print\n            ArrayList<String> reversedNames = new ArrayList<>();\n            for (int i = names.size() - 1; i >= 0; i--) {\n                reversedNames.add(names.get(i));\n            }\n\n            // Print reversed names\n            for (String name : reversedNames) {\n                System.out.println(\"Reversed Name: \" + name);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n            // Create a sample CSV string\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Access the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the retrieved comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}