{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n            // Sample CSV data\n            String csvData = \"name, age\\nJohn Doe, 30\\nJane Smith, 25\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data using the format\n            Iterable<CSVRecord> records = format.parse(reader);\n\n            // Create a list to store names and ages\n            List<String> names = new ArrayList<>();\n            List<Integer> ages = new ArrayList<>();\n\n            // Create a map to associate names with ages\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n\n            // Process each CSV record\n            for (CSVRecord record : records) {\n                String name = record.get(\"name\").trim();\n                int age = Integer.parseInt(record.get(\"age\").trim());\n                names.add(name);\n                ages.add(age);\n                nameAgeMap.put(name, age);\n            }\n\n            // Perform some calculations on ages\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) ages.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Read the first record for consistency check\n            CSVRecord firstRecord = records.iterator().next();\n            \n            // Use read method\n            /* read */ boolean isConsistent = firstRecord.isConsistent();\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n\n            // Print the name-age map\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n            // Sample CSV data\n            String csvData = \"name, age\\nJohn Doe, 30\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data using the format\n            Iterable<CSVRecord> records = format.parse(reader);\n\n            // Read the first record\n            CSVRecord record = records.iterator().next();\n\n            // Use read method\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}