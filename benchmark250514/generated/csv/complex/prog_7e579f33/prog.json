{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a sample CSV input with comments\n        String csvData = \"# This is a comment\\n\" +\n                         \"name,age\\n\" +\n                         \"John,30\\n\" +\n                         \"# Another comment\\n\" +\n                         \"Jane,25\";\n\n        // Initialize CSVFormat with a comment marker\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withCommentMarker('#');\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Create a list to store names\n            List<String> names = new ArrayList<>();\n            for (CSVRecord record : records) {\n                // Skip comment records\n                if (record.getComment() != null) continue;\n                names.add(record.get(\"name\"));\n            }\n\n            // Perform some operations on names\n            for (String name : names) {\n                System.out.println(\"Name: \" + name);\n            }\n\n            // Calculate the average age\n            int totalAge = 0;\n            int count = 0;\n            for (CSVRecord record : records) {\n                if (record.getComment() != null) continue;\n                totalAge += Integer.parseInt(record.get(\"age\"));\n                count++;\n            }\n            double averageAge = (double) totalAge / count;\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(\"Comment: \" + comment);\n\n            // Perform additional operations\n            int maxAge = Integer.MIN_VALUE;\n            for (CSVRecord record : records) {\n                if (record.getComment() != null) continue;\n                int age = Integer.parseInt(record.get(\"age\"));\n                if (age > maxAge) {\n                    maxAge = age;\n                }\n            }\n            System.out.println(\"Max Age: \" + maxAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a sample CSV input\n        String csvData = \"# This is a comment\\n\" +\n                         \"name,age\\n\" +\n                         \"John,30\";\n\n        // Initialize CSVFormat with a comment marker\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withCommentMarker('#');\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}