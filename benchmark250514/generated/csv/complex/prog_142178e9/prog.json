{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withRecordSeparator(\"\\n\");\n\n            // Prepare StringWriter and CSVPrinter\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Print multiple records\n            printer.printRecord(Arrays.asList(\"value1\", \"value2\", \"value3\"));\n            printer.printRecord(Arrays.asList(\"value4\", \"value5\", \"value6\"));\n            printer.flush();\n\n            // Create a list to store CSV strings\n            List<String> csvStrings = new ArrayList<>();\n            csvStrings.add(writer.toString());\n\n            // Parse CSV and retrieve records\n            CSVRecord record1 = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvStrings.get(0))).getRecords().get(0);\n            CSVRecord record2 = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvStrings.get(0))).getRecords().get(1);\n\n            // Unrelated complex operations\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numbers.add(i * 10);\n            }\n\n            for (int num : numbers) {\n                System.out.println(\"Number: \" + num);\n            }\n\n            // More operations on CSV records\n            String recordString1 = record1.toString();\n            String recordString2 = record2.toString();\n\n            // Use the read method\n            /* read */ String recordString = record1.toString();\n            System.out.println(recordString);\n\n            // Print additional CSV records\n            System.out.println(recordString2);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withRecordSeparator(\"\\n\");\n\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(Arrays.asList(\"value1\", \"value2\", \"value3\"));\n            printer.flush();\n\n            String csvString = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvString)).getRecords().get(0);\n            /* read */ String recordString = record.toString();\n\n            System.out.println(recordString);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withRecordSeparator",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}