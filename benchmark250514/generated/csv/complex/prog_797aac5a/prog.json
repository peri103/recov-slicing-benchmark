{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSV format and apply the 'withTrim' method\n            CSVFormat format = CSVFormat.DEFAULT.withTrim(); /* write */\n\n            // Prepare a sample CSV input\n            String csvData = \"header1,header2\\nvalue1,value2\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(reader).getRecords();\n\n            // Create a complex data structure\n            ArrayList<HashMap<String, String>> dataList = new ArrayList<>();\n            HashMap<String, String> dataMap = new HashMap<>();\n            dataMap.put(\"key1\", \"value1\");\n            dataMap.put(\"key2\", \"value2\");\n            dataList.add(dataMap);\n\n            // Perform operations on the complex data structure\n            for (HashMap<String, String> map : dataList) {\n                for (String key : map.keySet()) {\n                    System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n                }\n            }\n\n            // Read the first record and check if a header is mapped\n            CSVRecord record = records.get(0);\n            boolean isMapped = record.isMapped(\"header1\"); /* read */\n\n            // Output the result\n            System.out.println(\"Is 'header1' mapped: \" + isMapped);\n\n            // Additional operations on CSV records\n            for (CSVRecord rec : records) {\n                for (String header : rec.toMap().keySet()) {\n                    System.out.println(\"Header: \" + header + \", Value: \" + rec.get(header));\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSV format and apply the 'withTrim' method\n            CSVFormat format = CSVFormat.DEFAULT.withTrim(); /* write */\n\n            // Prepare a sample CSV input\n            String csvData = \"header1,header2\\nvalue1,value2\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(reader).getRecords();\n\n            // Read the first record and check if a header is mapped\n            CSVRecord record = records.get(0);\n            boolean isMapped = record.isMapped(\"header1\"); /* read */\n\n            // Output the result\n            System.out.println(\"Is 'header1' mapped: \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}