{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        try (CSVPrinter printer = new CSVPrinter(writer, format)) {\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.printRecord(\"ID\", \"Name\", \"Age\");\n            printer.printRecord(1, \"Alice\", 30);\n            printer.printRecord(2, \"Bob\", 25);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        String csvData = writer.toString();\n        System.out.println(\"CSV Data:\");\n        System.out.println(csvData);\n\n        // Additional complex logic: parsing the CSV data into a map\n        Map<Integer, String> idToNameMap = new HashMap<>();\n        try (CSVParser parser = CSVParser.parse(new StringReader(csvData), format)) {\n            for (CSVRecord record : parser) {\n                if (record.getRecordNumber() > 1) { // Skip the header\n                    int id = Integer.parseInt(record.get(0));\n                    String name = record.get(1);\n                    idToNameMap.put(id, name);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Display the map\n        System.out.println(\"ID to Name Map:\");\n        for (Map.Entry<Integer, String> entry : idToNameMap.entrySet()) {\n            System.out.println(\"ID: \" + entry.getKey() + \", Name: \" + entry.getValue());\n        }\n\n        // More complex logic: working with a list of ages\n        List<Integer> ages = new ArrayList<>();\n        ages.add(30);\n        ages.add(25);\n        ages.add(40);\n        ages.add(35);\n\n        // Calculate the average age\n        int sum = 0;\n        for (int age : ages) {\n            sum += age;\n        }\n        double averageAge = sum / (double) ages.size();\n        System.out.println(\"Average Age: \" + averageAge);\n\n        // Original read operation\n        try (CSVParser parser = CSVParser.parse(new StringReader(csvData), format)) {\n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Read Comment: \" + comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        try (CSVPrinter printer = new CSVPrinter(writer, format)) {\n            /* write */ printer.printComment(\"This is a comment\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        String csvData = writer.toString();\n        System.out.println(\"CSV Data:\");\n        System.out.println(csvData);\n\n        try (CSVParser parser = CSVParser.parse(new StringReader(csvData), format)) {\n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Read Comment: \" + comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}