{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with quote character\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withQuote('\"');\n\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n\n            // Create CSVPrinter using the format with quote\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a record to the CSVPrinter\n            printer.printRecord(\"value1\", \"value2\");\n\n            // Flush and close the printer\n            printer.flush();\n            printer.close();\n\n            // Some complex operations using ArrayList\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n            int sum = 0;\n            for (int num : numbers) {\n                sum += num;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // Another complex operation using HashMap\n            HashMap<String, Integer> map = new HashMap<>();\n            map.put(\"one\", 1);\n            map.put(\"two\", 2);\n            map.put(\"three\", 3);\n            int product = 1;\n            for (Integer value : map.values()) {\n                product *= value;\n            }\n            System.out.println(\"Product of map values: \" + product);\n\n            // Read the CSV output as a CSVRecord\n            String csvOutput = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvOutput)).getRecords().get(0);\n\n            // Read the record's string representation\n            /* read */ String recordString = record.toString();\n\n            // Print the read value\n            System.out.println(recordString);\n\n            // More complex operations to increase complexity\n            ArrayList<String> strings = new ArrayList<>();\n            strings.add(\"Hello\");\n            strings.add(\"World\");\n            StringBuilder sb = new StringBuilder();\n            for (String str : strings) {\n                sb.append(str).append(\" \");\n            }\n            System.out.println(\"Concatenated String: \" + sb.toString().trim());\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with quote character\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withQuote('\"');\n\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n\n            // Create CSVPrinter using the format with quote\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a record to the CSVPrinter\n            printer.printRecord(\"value1\", \"value2\");\n\n            // Flush and close the printer\n            printer.flush();\n            printer.close();\n\n            // Read the CSV output as a CSVRecord\n            String csvOutput = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvOutput)).getRecords().get(0);\n\n            // Read the record's string representation\n            /* read */ String recordString = record.toString();\n\n            // Print the read value\n            System.out.println(recordString);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withQuote",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}