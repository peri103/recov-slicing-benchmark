{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with ignoreEmptyLines set to true\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreEmptyLines(true);\n\n            // Sample CSV input\n            String csvData = \"name,age\\nJohn,30\\n\\nDoe,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a list to store parsed records\n            ArrayList<CSVRecord> recordList = new ArrayList<>();\n            recordList.addAll(parser.getRecords());\n\n            // Create a map to store record consistency status\n            HashMap<String, Boolean> consistencyMap = new HashMap<>();\n\n            // Process each record and store its consistency status\n            for (CSVRecord record : recordList) {\n                boolean consistent = record.isConsistent();\n                consistencyMap.put(record.get(0), consistent);\n            }\n\n            // Perform some unrelated operations\n            int sum = 0;\n            for (int i = 0; i < 5; i++) {\n                sum += i * i;\n            }\n            System.out.println(\"Sum of squares: \" + sum);\n\n            // Read the first record\n            CSVRecord firstRecord = recordList.get(0);\n\n            // Check if the first record is consistent\n            /* read */ boolean isConsistent = firstRecord.isConsistent();\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n\n            // Print the consistency status of each record\n            for (String key : consistencyMap.keySet()) {\n                System.out.println(\"Record: \" + key + \", Consistent: \" + consistencyMap.get(key));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with ignoreEmptyLines set to true\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreEmptyLines(true);\n\n            // Sample CSV input\n            String csvData = \"name,age\\nJohn,30\\n\\nDoe,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if the record is consistent\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}