{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSV data\n        String csvData = \"Name,Age,Location\\nJohn,30,New York\\nJane,25,Los Angeles\";\n\n        // Use CSVFormat to parse the CSV data\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeader(\"Name\", \"Age\", \"Location\");\n\n        // Additional unrelated data structures and operations\n        ArrayList<String> names = new ArrayList<>();\n        names.add(\"Alice\");\n        names.add(\"Bob\");\n        \n        Map<String, Integer> nameToAge = new HashMap<>();\n        nameToAge.put(\"Alice\", 28);\n        nameToAge.put(\"Bob\", 34);\n\n        // Perform some operations on the data structures\n        for (String name : names) {\n            System.out.println(\"Name: \" + name + \", Age: \" + nameToAge.get(name));\n        }\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                // Additional operations on CSVRecord\n                String name = record.get(\"Name\");\n                String location = record.get(\"Location\");\n                System.out.println(\"Record Name: \" + name + \", Location: \" + location);\n                \n                /* read */ boolean isSet = record.isSet(\"Age\");\n                System.out.println(\"Is 'Age' column set in record: \" + isSet);\n                break; // Ensure the read method is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // More complex operations\n        int totalAge = 0;\n        for (Integer age : nameToAge.values()) {\n            totalAge += age;\n        }\n        System.out.println(\"Total Age: \" + totalAge);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSV data\n        String csvData = \"Name,Age,Location\\nJohn,30,New York\\nJane,25,Los Angeles\";\n\n        // Use CSVFormat to parse the CSV data\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeader(\"Name\", \"Age\", \"Location\");\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                /* read */ boolean isSet = record.isSet(\"Age\");\n                System.out.println(\"Is 'Age' column set in record: \" + isSet);\n                break; // Ensure the read method is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}