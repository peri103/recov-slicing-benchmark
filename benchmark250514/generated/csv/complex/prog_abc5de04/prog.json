{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a custom delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withDelimiter(';');\n        \n        // Sample CSV data\n        String csvData = \"name;age;location\\nJohn;30;New York\\nJane;25;Los Angeles\";\n        \n        // Additional data structures for complexity\n        List<String> names = new ArrayList<>();\n        List<Integer> ages = new ArrayList<>();\n        List<String> locations = new ArrayList<>();\n        \n        try {\n            // Parse the CSV data using the format with the custom delimiter\n            Iterable<CSVRecord> records = format.parse(new StringReader(csvData));\n            \n            // Iterate over each record\n            for (CSVRecord record : records) {\n                // Split data into separate lists\n                names.add(record.get(0));\n                ages.add(Integer.parseInt(record.get(1)));\n                locations.add(record.get(2));\n            }\n            \n            // Perform some operations on the lists\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            \n            // Output the total age\n            System.out.println(\"Total age: \" + totalAge);\n            \n            // Read the first record and convert it to a string\n            CSVRecord firstRecord = records.iterator().next();\n            /* read */ String value = firstRecord.toString();\n            \n            // Output the first record\n            System.out.println(\"First record: \" + value);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        // Additional operations for complexity\n        for (String name : names) {\n            System.out.println(\"Name: \" + name);\n        }\n        \n        for (String location : locations) {\n            System.out.println(\"Location: \" + location);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a custom delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withDelimiter(';');\n        \n        // Sample CSV data\n        String csvData = \"name;age;location\\nJohn;30;New York\";\n        \n        try {\n            // Parse the CSV data using the format with the custom delimiter\n            Iterable<CSVRecord> records = format.parse(new StringReader(csvData));\n            \n            // Read the first record and convert it to a string\n            CSVRecord record = records.iterator().next();\n            /* read */ String value = record.toString();\n            \n            // Output the result\n            System.out.println(value);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}