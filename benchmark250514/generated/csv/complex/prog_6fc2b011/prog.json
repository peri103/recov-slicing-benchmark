{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\nimport java.io.StringReader;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSV format with ignoring empty lines\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines(true);\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\n\\nJane,25\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Additional unrelated code for complexity\n            ArrayList<String> names = new ArrayList<>();\n            ArrayList<Integer> ages = new ArrayList<>();\n            \n            for (CSVRecord record : records) {\n                if (record.isConsistent()) {\n                    names.add(record.get(0));\n                    ages.add(Integer.parseInt(record.get(1)));\n                }\n            }\n            \n            // Processing names and ages\n            for (String name : names) {\n                System.out.println(\"Name: \" + name);\n            }\n            \n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            System.out.println(\"Average Age: \" + (totalAge / ages.size()));\n\n            // Read the first record to check consistency\n            /* read */ boolean isConsistent = records.get(0).isConsistent();\n            \n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSV format with ignoring empty lines\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines(true);\n            \n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\n\\nJane,25\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Read the first record to check consistency\n            /* read */ boolean isConsistent = records.get(0).isConsistent();\n            \n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}