{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSV format with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Simulate CSV data\n            String csvData = \"# This is a header comment\\n\" +\n                             \"name,age\\n\" +\n                             \"Alice,30\\n\" +\n                             \"Bob,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional unrelated code for complexity\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord record : records) {\n                names.add(record.get(\"name\"));\n            }\n\n            // Process names\n            for (String name : names) {\n                System.out.println(\"Processing name: \" + name);\n            }\n\n            // More complexity with additional CSV data processing\n            int totalAge = 0;\n            for (CSVRecord record : records) {\n                totalAge += Integer.parseInt(record.get(\"age\"));\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(\"Header Comment: \" + comment);\n\n            // Further processing of CSV data\n            for (CSVRecord record : records) {\n                System.out.println(\"Record: \" + record);\n            }\n\n            // Another unrelated code block\n            List<String> processedNames = new ArrayList<>();\n            for (String name : names) {\n                processedNames.add(name.toUpperCase());\n            }\n\n            // Display processed names\n            for (String processedName : processedNames) {\n                System.out.println(\"Processed Name: \" + processedName);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSV format with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Simulate CSV data\n            String csvData = \"# This is a header comment\\n\" +\n                             \"name,age\\n\" +\n                             \"Alice,30\\n\" +\n                             \"Bob,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(comment);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}