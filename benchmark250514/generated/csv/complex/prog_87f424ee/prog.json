{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat object with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV content\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(Arrays.asList(\"column1\", \"column2\"));\n            printer.printRecord(Arrays.asList(\"value1\", \"value2\"));\n            printer.flush();\n\n            // Create a map to store parsed records\n            Map<Integer, CSVRecord> recordMap = new HashMap<>();\n\n            // Read the CSV content\n            StringReader reader = new StringReader(writer.toString());\n            CSVParser parser = new CSVParser(reader, format);\n\n            // Iterate over the records and store them in the map\n            int index = 0;\n            for (CSVRecord record : parser) {\n                recordMap.put(index++, record);\n            }\n\n            // Process records from the map\n            for (Map.Entry<Integer, CSVRecord> entry : recordMap.entrySet()) {\n                CSVRecord record = entry.getValue();\n                System.out.println(\"Processing record at index: \" + entry.getKey());\n                System.out.println(\"Column 1: \" + record.get(0));\n                System.out.println(\"Column 2: \" + record.get(1));\n            }\n\n            // Retrieve and print the comment from the first record\n            CSVRecord firstRecord = recordMap.get(0);\n            /* read */ String comment = firstRecord.getComment();\n            if (comment != null) {\n                System.out.println(\"Header Comment: \" + comment);\n            }\n\n            // Close resources\n            parser.close();\n            printer.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat object with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV content\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(Arrays.asList(\"column1\", \"column2\"));\n            printer.printRecord(Arrays.asList(\"value1\", \"value2\"));\n            printer.flush();\n\n            // Read the CSV content\n            StringReader reader = new StringReader(writer.toString());\n            CSVParser parser = new CSVParser(reader, format);\n\n            // Iterate over the records\n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(comment);\n                }\n            }\n\n            // Close resources\n            parser.close();\n            printer.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}