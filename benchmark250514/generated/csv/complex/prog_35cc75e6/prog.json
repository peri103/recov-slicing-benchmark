{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string representation\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Prepare a sample CSV input\n        String csvData = \"name,age,city\\nJohn,NULL,New York\\nDoe,30,San Francisco\";\n\n        try {\n            // Parse the CSV data using the format with null string\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Process each record and store information in a map\n            Map<String, String> userInfo = new HashMap<>();\n            for (CSVRecord record : parser) {\n                String name = record.get(\"name\");\n                String age = record.get(\"age\");\n                String city = record.get(\"city\");\n\n                // Store the user's information in the map\n                userInfo.put(name, \"Age: \" + age + \", City: \" + city);\n            }\n\n            // Additional processing: Calculate average age ignoring NULL values\n            int totalAge = 0;\n            int count = 0;\n            for (CSVRecord record : parser) {\n                if (record.isSet(\"age\")) {\n                    try {\n                        int age = Integer.parseInt(record.get(\"age\"));\n                        totalAge += age;\n                        count++;\n                    } catch (NumberFormatException e) {\n                        // Ignore non-integer age values\n                    }\n                }\n            }\n\n            // Calculate average age\n            double averageAge = count > 0 ? (double) totalAge / count : 0;\n\n            // Print user information and average age\n            for (Map.Entry<String, String> entry : userInfo.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n            System.out.println(\"Average Age (excluding NULL): \" + averageAge);\n\n            // Read the first record and check if the 'age' field is set\n            List<CSVRecord> records = parser.getRecords();\n            if (!records.isEmpty()) {\n                CSVRecord firstRecord = records.get(0);\n                /* read */ boolean isAgeSet = firstRecord.isSet(\"age\");\n                // Print the result\n                System.out.println(\"Is 'age' set in the first record? \" + isAgeSet);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a null string representation\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Prepare a sample CSV input\n        String csvData = \"name,age\\nJohn,NULL\\nDoe,30\";\n        \n        try {\n            // Parse the CSV data using the format with null string\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            // Read the first record and check if the 'age' field is set\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ boolean isAgeSet = record.isSet(\"age\");\n            \n            // Print the result\n            System.out.println(\"Is 'age' set in the first record? \" + isAgeSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}