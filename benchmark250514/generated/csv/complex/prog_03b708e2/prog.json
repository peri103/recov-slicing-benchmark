{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record to the CSV\n            /* write */ csvPrinter.printRecord(\"John\", \"Doe\", \"30\");\n            \n            // Additional unrelated code to increase complexity\n            ArrayList<String> names = new ArrayList<>();\n            names.add(\"Alice\");\n            names.add(\"Bob\");\n            names.add(\"Charlie\");\n            \n            for (String name : names) {\n                System.out.println(\"Processing name: \" + name);\n            }\n            \n            // Flush the printer to ensure all data is written to the StringWriter\n            csvPrinter.flush();\n            \n            // Use the content of the StringWriter for reading\n            StringReader reader = new StringReader(writer.toString());\n            \n            // Parse the CSV content\n            CSVParser csvParser = CSVFormat.DEFAULT.parse(reader);\n            \n            // More unrelated code to increase complexity\n            int sum = 0;\n            int[] numbers = {1, 2, 3, 4, 5};\n            for (int num : numbers) {\n                sum += num;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n            \n            // Get the first record\n            List<CSVRecord> records = csvParser.getRecords();\n            CSVRecord record = records.get(0);\n            \n            // Read a value from the record\n            /* read */ String firstName = record.get(0);\n            \n            // Print the read value\n            System.out.println(firstName);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record to the CSV\n            /* write */ csvPrinter.printRecord(\"John\", \"Doe\", \"30\");\n            \n            // Flush the printer to ensure all data is written to the StringWriter\n            csvPrinter.flush();\n            \n            // Use the content of the StringWriter for reading\n            StringReader reader = new StringReader(writer.toString());\n            \n            // Parse the CSV content\n            CSVParser csvParser = CSVFormat.DEFAULT.parse(reader);\n            \n            // Get the first record\n            List<CSVRecord> records = csvParser.getRecords();\n            CSVRecord record = records.get(0);\n            \n            // Read a value from the record\n            /* read */ String firstName = record.get(0);\n            \n            // Print the read value\n            System.out.println(firstName);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}