{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withIgnoreEmptyLines(true);\n\n        // Create an ArrayList to demonstrate additional complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        \n        // Populate the ArrayList with some numbers\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        // Perform some operations on the ArrayList\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Create a dummy CSVRecord instance for demonstration\n        CSVRecord record = null; // Assuming a record is obtained from a CSV parser\n        \n        // Perform operations on the numbers list\n        int max = Integer.MIN_VALUE;\n        for (int number : numbers) {\n            if (number > max) {\n                max = number;\n            }\n        }\n        System.out.println(\"Max number: \" + max);\n        \n        // Use the read method on the CSVRecord instance\n        if (record != null) {\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"CSVRecord is consistent: \" + isConsistent);\n        } else {\n            System.out.println(\"CSVRecord is null.\");\n        }\n        \n        // Further operations on the numbers list\n        int min = Integer.MAX_VALUE;\n        for (int number : numbers) {\n            if (number < min) {\n                min = number;\n            }\n        }\n        System.out.println(\"Min number: \" + min);\n        \n        // Demonstrate sorting the list\n        numbers.sort(Integer::compareTo);\n        System.out.println(\"Sorted numbers: \" + numbers);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the format\n        /* write */ format = format.withIgnoreEmptyLines(true);\n        \n        // Create a dummy CSVRecord instance for demonstration\n        CSVRecord record = null; // Assuming a record is obtained from a CSV parser\n\n        // Use the read method on the CSVRecord instance\n        if (record != null) {\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(isConsistent);\n        } else {\n            System.out.println(\"CSVRecord is null.\");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}