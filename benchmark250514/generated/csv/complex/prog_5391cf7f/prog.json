{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the specified configuration\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n\n        // Sample CSV data\n        String csvData = \"name,age,city\\nJohn,30,New York\\n\\nAlice,25,Los Angeles\";\n\n        // Additional data processing\n        ArrayList<String> processedData = new ArrayList<>();\n        processedData.add(\"Processed Data Start\");\n\n        try {\n            // Parse the CSV data using the configured CSVFormat\n            List<CSVRecord> records = csvFormat.parse(new StringReader(csvData)).getRecords();\n\n            // Process each record and extract information\n            for (CSVRecord record : records) {\n                if (record.isSet(\"name\")) {\n                    processedData.add(\"Name: \" + record.get(\"name\"));\n                }\n                if (record.isSet(\"age\")) {\n                    processedData.add(\"Age: \" + record.get(\"age\"));\n                }\n                if (record.isSet(\"city\")) {\n                    processedData.add(\"City: \" + record.get(\"city\"));\n                }\n            }\n\n            // Access a specific record and column\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isSet = firstRecord.isSet(\"name\");\n\n            // Output the result\n            System.out.println(\"Is 'name' set in the first record? \" + isSet);\n\n            // More complex operations on processed data\n            for (String data : processedData) {\n                System.out.println(data);\n            }\n\n            // Final processing step\n            processedData.add(\"Processed Data End\");\n            for (String data : processedData) {\n                if (data.contains(\"Processed\")) {\n                    System.out.println(\"Log: \" + data);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the specified configuration\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n\n        // Sample CSV data\n        String csvData = \"name,age,city\\nJohn,30,New York\\n\\nAlice,25,Los Angeles\";\n\n        try {\n            // Parse the CSV data using the configured CSVFormat\n            List<CSVRecord> records = csvFormat.parse(new StringReader(csvData)).getRecords();\n\n            // Access a specific record and column\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"name\");\n\n            // Output the result\n            System.out.println(\"Is 'name' set in the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}