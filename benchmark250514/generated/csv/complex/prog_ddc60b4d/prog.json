{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter instance with default CSV format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a comment using the CSVPrinter\n            /* write */ printer.printComment(\"This is a comment\");\n            \n            // Flush the printer to ensure all data is written to the writer\n            printer.flush();\n            \n            // Add unrelated complex code\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n            \n            int sum = 0;\n            for (int number : numbers) {\n                sum += number;\n            }\n            \n            System.out.println(\"Sum of numbers: \" + sum);\n            \n            // Read the comment using CSVRecord\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords();\n            /* read */ String comment = records.get(0).getComment();\n            \n            // Print the comment to verify the operation\n            System.out.println(comment);\n            \n            // Additional complex operations\n            ArrayList<String> words = new ArrayList<>();\n            words.add(\"Hello\");\n            words.add(\"World\");\n            words.add(\"CSV\");\n            words.add(\"Printer\");\n            \n            StringBuilder sentence = new StringBuilder();\n            for (String word : words) {\n                sentence.append(word).append(\" \");\n            }\n            \n            System.out.println(\"Constructed sentence: \" + sentence.toString().trim());\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter instance with default CSV format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a comment using the CSVPrinter\n            /* write */ printer.printComment(\"This is a comment\");\n            \n            // Flush the printer to ensure all data is written to the writer\n            printer.flush();\n            \n            // Read the comment using CSVRecord\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords();\n            /* read */ String comment = records.get(0).getComment();\n            \n            // Print the comment to verify the operation\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}