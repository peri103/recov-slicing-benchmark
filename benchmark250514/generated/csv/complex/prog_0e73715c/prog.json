{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withAllowMissingColumnNames(true);\n\n            // Prepare a CSV input for parsing\n            String csvData = \"name,age\\nJohn Doe,30\\nJane Doe,29\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, format);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Additional code to make the program more complex\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"name\");\n                int age = Integer.parseInt(rec.get(\"age\"));\n                nameAgeMap.put(name, age);\n            }\n\n            // Print the map\n            System.out.println(\"Name-Age Map: \" + nameAgeMap);\n\n            // Use the read method to check consistency\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n\n            // Additional operations on the map\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withAllowMissingColumnNames(true);\n\n            // Prepare a CSV input for parsing\n            String csvData = \"name,age\\nJohn Doe,30\\nJane Doe,29\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, format);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method to check consistency\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}