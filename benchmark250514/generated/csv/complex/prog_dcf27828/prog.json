{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Define a CSV format with a comment marker\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withCommentMarker('#');\n\n            // Create a CSV string with a comment\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Initialize a map to store headers and values\n            Map<String, String> dataMap = new HashMap<>();\n\n            // Iterate over the records\n            for (CSVRecord record : parser) {\n                // Store header-value pairs in the map\n                for (String header : parser.getHeaderNames()) {\n                    dataMap.put(header, record.get(header));\n                }\n            }\n\n            // Perform some operations on the map\n            for (Map.Entry<String, String> entry : dataMap.entrySet()) {\n                System.out.println(\"Header: \" + entry.getKey() + \", Value: \" + entry.getValue());\n            }\n\n            // Close the parser\n            parser.close();\n\n            // Re-parse the CSV data to demonstrate reading the comment\n            parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Comment: \" + comment);\n                }\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Define a CSV format with a comment marker\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withCommentMarker('#');\n\n            // Create a CSV string with a comment\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Iterate over the records and read the comment\n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(comment);\n                }\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}