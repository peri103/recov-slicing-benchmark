{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Use the write method\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Create a dummy CSV data string\n        String csvData = \"header1,header2\\nvalue1,value2\\nvalue3,value4\";\n\n        // Parse the CSV data using CSVParser\n        List<CSVRecord> records = null;\n        try {\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            records = parser.getRecords();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Additional operations to make the program more complex\n        int totalRecords = records.size();\n        System.out.println(\"Total records: \" + totalRecords);\n\n        // Perform some operations on the records\n        for (CSVRecord record : records) {\n            int recordSize = record.size();\n            System.out.println(\"Record size: \" + recordSize);\n            for (int i = 0; i < recordSize; i++) {\n                String value = record.get(i);\n                System.out.println(\"Value at index \" + i + \": \" + value);\n            }\n        }\n\n        // Use the read method\n        /* read */ boolean isSet = records.get(0).isSet(0);\n\n        // Print the result\n        System.out.println(\"Is field set: \" + isSet);\n\n        // More complex operations\n        CSVFormat newFormat = CSVFormat.EXCEL.withHeader(\"A\", \"B\", \"C\");\n        try {\n            CSVParser newParser = new CSVParser(new StringReader(csvData), newFormat);\n            List<CSVRecord> newRecords = newParser.getRecords();\n            for (CSVRecord newRecord : newRecords) {\n                System.out.println(\"New record: \" + newRecord.toString());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method\n        /* write */ format = format.withTrailingDelimiter();\n        \n        // Create a dummy CSVRecord object for demonstration purposes\n        String[] recordData = {\"data1\", \"data2\"};\n        CSVRecord record = CSVRecord.parse(recordData, format);\n        \n        // Use the read method\n        /* read */ boolean isSet = record.isSet(0);\n        \n        // Print the result\n        System.out.println(isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}