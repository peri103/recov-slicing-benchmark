{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a specific quote character\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withQuote('\"');\n            \n            // Prepare a sample CSV data\n            String csvData = \"\\\"value1\\\",\\\"value2\\\",\\\"value3\\\"\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Initialize a list and a map for demonstration purposes\n            ArrayList<String> list = new ArrayList<>();\n            HashMap<String, Integer> map = new HashMap<>();\n            \n            // Add elements to the list and map\n            list.add(\"apple\");\n            list.add(\"banana\");\n            map.put(\"apple\", 1);\n            map.put(\"banana\", 2);\n            \n            // Perform some operations on the list and map\n            for (String item : list) {\n                System.out.println(\"List item: \" + item);\n                if (map.containsKey(item)) {\n                    System.out.println(\"Map value for \" + item + \": \" + map.get(item));\n                }\n            }\n            \n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String value = record.toString();\n            \n            // Print the record\n            System.out.println(value);\n            \n            // Additional complex operations with the list and map\n            list.add(\"cherry\");\n            map.put(\"cherry\", 3);\n            for (String item : list) {\n                System.out.println(\"Updated list item: \" + item);\n                if (map.containsKey(item)) {\n                    System.out.println(\"Updated map value for \" + item + \": \" + map.get(item));\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a specific quote character\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withQuote('\"');\n            \n            // Prepare a sample CSV data\n            String csvData = \"\\\"value1\\\",\\\"value2\\\",\\\"value3\\\"\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String value = record.toString();\n            \n            // Print the record\n            System.out.println(value);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withQuote",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}