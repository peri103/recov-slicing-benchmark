{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n            \n            // Create a sample CSV input\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n            \n            // Parse the CSV data using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Retrieve all records\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Initialize a map to store names and ages\n            HashMap<String, Integer> nameAgeMap = new HashMap<>();\n            \n            // Iterate over the records to populate the map\n            for (CSVRecord record : records) {\n                String name = record.get(\"name\");\n                int age = Integer.parseInt(record.get(\"age\"));\n                nameAgeMap.put(name, age);\n            }\n            \n            // Perform a complex operation: calculate the average age\n            int totalAge = 0;\n            for (int age : nameAgeMap.values()) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) nameAgeMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n            \n            // Retrieve the first record\n            CSVRecord firstRecord = records.get(0);\n            \n            // Perform some unrelated operations\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 10 numbers: \" + sum);\n            \n            // Read the comment from the first record\n            /* read */ String comment = firstRecord.getComment();\n            \n            // Output the comment\n            System.out.println(comment);\n            \n            // Perform another unrelated operation\n            int factorial = 1;\n            for (int i = 1; i <= 5; i++) {\n                factorial *= i;\n            }\n            System.out.println(\"Factorial of 5: \" + factorial);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n            \n            // Create a sample CSV input\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n            \n            // Parse the CSV data using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Retrieve the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord firstRecord = records.get(0);\n            \n            // Read the comment from the first record\n            /* read */ String comment = firstRecord.getComment();\n            \n            // Output the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}