{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a quote character\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withQuote('\"');\n\n            // Prepare data to write\n            List<String> data = Arrays.asList(\"John\", \"Doe\", \"john.doe@example.com\");\n\n            // Use StringWriter to capture the CSV output\n            StringWriter out = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(out, format);\n            printer.printRecord(data);\n            printer.flush();\n\n            // Additional unrelated operations\n            Map<String, Integer> map = new HashMap<>();\n            map.put(\"Alice\", 25);\n            map.put(\"Bob\", 30);\n            map.put(\"Charlie\", 35);\n\n            for (Map.Entry<String, Integer> entry : map.entrySet()) {\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n\n            // More complex operations\n            List<String> additionalData = Arrays.asList(\"Jane\", \"Smith\", \"jane.smith@example.com\");\n            CSVPrinter printer2 = new CSVPrinter(out, format);\n            printer2.printRecord(additionalData);\n            printer2.flush();\n\n            String csvContent = out.toString();\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvContent)).getRecords();\n\n            // Process all records\n            for (CSVRecord record : records) {\n                System.out.println(\"Record: \" + record);\n            }\n\n            // Read the first CSVRecord\n            CSVRecord firstRecord = records.get(0);\n            /* read */ String recordString = firstRecord.toString();\n            System.out.println(\"First Record: \" + recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a quote character\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withQuote('\"');\n\n            // Prepare data to write\n            List<String> data = Arrays.asList(\"John\", \"Doe\", \"john.doe@example.com\");\n\n            // Use StringWriter to capture the CSV output\n            StringWriter out = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(out, format);\n            printer.printRecord(data);\n            printer.flush();\n\n            // Read the CSV output as a CSVRecord\n            String csvContent = out.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvContent)).getRecords().get(0);\n\n            // Read the CSVRecord\n            /* read */ String recordString = record.toString();\n            System.out.println(recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withQuote",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}