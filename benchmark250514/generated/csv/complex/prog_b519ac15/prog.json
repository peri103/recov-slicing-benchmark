{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSV format\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreEmptyLines(true);\n\n            // Prepare a CSV input for parsing\n            String csvData = \"Name, Age, City\\nJohn Doe, 29, New York\\n\\nJane Doe, 25, Los Angeles\";\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Process each record\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n            for (CSVRecord record : parser) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                nameToAgeMap.put(name, age);\n            }\n\n            // Additional processing: Calculate average age\n            int totalAge = 0;\n            for (int age : nameToAgeMap.values()) {\n                totalAge += age;\n            }\n            double averageAge = (double) totalAge / nameToAgeMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Check if a specific field is set\n            for (CSVRecord record : parser) {\n                /* read */ boolean isSet = record.isSet(\"Name\");\n                System.out.println(\"Is 'Name' set: \" + isSet);\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSV format\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreEmptyLines(true);\n\n            // Prepare a CSV input for parsing\n            String csvData = \"Name, Age\\nJohn Doe, 29\\n\\nJane Doe, 25\";\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Read the records from the parser\n            for (CSVRecord record : parser) {\n                /* read */ boolean isSet = record.isSet(\"Name\");\n                System.out.println(\"Is 'Name' set: \" + isSet);\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}