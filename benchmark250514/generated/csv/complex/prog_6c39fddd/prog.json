{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a null string representation\n            CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n\n            // Prepare a CSV input with a null value\n            String csvData = \"name,age\\nJohn,NULL\\nDoe,25\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(reader).getRecords();\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Initialize an ArrayList to store ages\n            ArrayList<Integer> ages = new ArrayList<>();\n\n            // Iterate over records and process each\n            for (CSVRecord rec : records) {\n                String ageStr = rec.get(\"age\");\n                if (ageStr == null || ageStr.equals(\"NULL\")) {\n                    ages.add(null);\n                } else {\n                    ages.add(Integer.parseInt(ageStr));\n                }\n            }\n\n            // Perform some operations on the ages list\n            int sum = 0;\n            for (Integer age : ages) {\n                if (age != null) {\n                    sum += age;\n                }\n            }\n            System.out.println(\"Sum of ages: \" + sum);\n\n            // Check if the 'age' field is set\n            /* read */ boolean isSet = record.isSet(\"age\");\n\n            // Print the result\n            System.out.println(\"Is 'age' field set in the first record? \" + isSet);\n\n            // Sort the ages list\n            ages.sort((a, b) -> {\n                if (a == null) return 1;\n                if (b == null) return -1;\n                return a.compareTo(b);\n            });\n\n            // Print sorted ages\n            System.out.println(\"Sorted ages:\");\n            for (Integer age : ages) {\n                System.out.println(age);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a null string representation\n            CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n\n            // Prepare a CSV input with a null value\n            String csvData = \"name,age\\nJohn,NULL\\nDoe,25\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(reader).getRecords();\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Check if the 'age' field is set\n            /* read */ boolean isSet = record.isSet(\"age\");\n\n            // Print the result\n            System.out.println(\"Is 'age' field set in the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}