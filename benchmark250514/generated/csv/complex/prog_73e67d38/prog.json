{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withHeaderComments(\"This is a comment\");\n\n            // Sample CSV data\n            String csvData = \"# This is a comment\\n\" +\n                             \"header1,header2\\n\" +\n                             \"value1,value2\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Unrelated code for complexity\n            ArrayList<String> list = new ArrayList<>();\n            HashMap<String, Integer> map = new HashMap<>();\n\n            list.add(\"Hello\");\n            list.add(\"World\");\n            map.put(\"One\", 1);\n            map.put(\"Two\", 2);\n\n            for (String str : list) {\n                System.out.println(str + \" - Length: \" + str.length());\n            }\n\n            int sum = 0;\n            for (Integer value : map.values()) {\n                sum += value;\n            }\n            System.out.println(\"Sum of values in map: \" + sum);\n\n            // Unrelated CSV parsing for additional complexity\n            String csvData2 = \"headerA,headerB\\n\" +\n                              \"dataA1,dataB1\\n\" +\n                              \"dataA2,dataB2\";\n            CSVParser parser2 = new CSVParser(new StringReader(csvData2), CSVFormat.DEFAULT);\n            for (CSVRecord rec : parser2) {\n                System.out.println(\"Record: \" + rec.get(0) + \", \" + rec.get(1));\n            }\n            parser2.close();\n\n            // Read the comment from the first record\n            CSVRecord record = records.get(0);\n            /* read */ String comment = record.getComment();\n            System.out.println(\"Original Comment: \" + comment);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withHeaderComments(\"This is a comment\");\n\n            // Sample CSV data\n            String csvData = \"# This is a comment\\n\" +\n                             \"header1,header2\\n\" +\n                             \"value1,value2\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            CSVRecord record = records.get(0);\n            /* read */ String comment = record.getComment();\n            System.out.println(comment);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}