{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a trailing delimiter\n        CSVFormat csvFormat = CSVFormat.DEFAULT.withTrailingDelimiter();\n        \n        // Simulate CSV input data\n        String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\";\n        \n        try {\n            // Parse the CSV data using the CSVFormat\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            \n            // Process all records and store data in a map\n            Map<String, List<String>> dataMap = new HashMap<>();\n            for (CSVRecord record : parser) {\n                String name = record.get(\"name\");\n                List<String> details = new ArrayList<>();\n                details.add(record.get(\"age\"));\n                details.add(record.get(\"city\"));\n                dataMap.put(name, details);\n            }\n            \n            // Perform some unrelated operations\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n            \n            int sum = 0;\n            for (int num : numbers) {\n                sum += num;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n            \n            // Assume we want to check the first record\n            CSVRecord firstRecord = parser.getRecords().get(0);\n            \n            // Additional unrelated operations\n            StringBuilder sb = new StringBuilder();\n            for (Map.Entry<String, List<String>> entry : dataMap.entrySet()) {\n                sb.append(entry.getKey()).append(\": \").append(entry.getValue()).append(\"\\n\");\n            }\n            System.out.println(\"Data Map Contents:\\n\" + sb.toString());\n            \n            // Check if a certain column is set\n            /* read */ boolean isSet = firstRecord.isSet(\"age\");\n            System.out.println(\"Is 'age' column set in the first record? \" + isSet);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a trailing delimiter\n        CSVFormat csvFormat = CSVFormat.DEFAULT.withTrailingDelimiter();\n        // Simulate CSV input data\n        String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\";\n        \n        try {\n            // Parse the CSV data using the CSVFormat\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            // Assume we want to check the first record\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Check if a certain column is set\n            /* read */ boolean isSet = record.isSet(\"age\");\n            System.out.println(\"Is 'age' column set in the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}