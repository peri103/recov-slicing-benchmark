{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.Iterator;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Sample CSV data with empty lines\n        String csvData = \"name,age,city\\nJohn,25,New York\\n\\nJane,30,Los Angeles\";\n\n        try {\n            // Create a CSVFormat object with ignoring empty lines\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines();\n\n            // Parse the CSV data\n            Iterable<CSVRecord> records = format.parse(new StringReader(csvData));\n\n            // Initialize a map to store names and ages\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n\n            // Process the records and fill the map\n            for (CSVRecord record : records) {\n                String name = record.get(\"name\");\n                int age = Integer.parseInt(record.get(\"age\"));\n                nameAgeMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n\n            // Get the iterator for the records again\n            Iterator<CSVRecord> iterator = records.iterator();\n\n            // Read the first record\n            if (iterator.hasNext()) {\n                CSVRecord record = iterator.next();\n                // Check if the 'name' column is set\n                /* read */ boolean isNameSet = record.isSet(\"name\");\n                System.out.println(\"Is 'name' set in the first record? \" + isNameSet);\n            }\n\n            // Additional complex logic: Calculate average age\n            int totalAge = 0;\n            for (int age : nameAgeMap.values()) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) nameAgeMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.Iterator;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Sample CSV data\n        String csvData = \"name,age,city\\nJohn,25,New York\\n\\nJane,30,Los Angeles\";\n\n        try {\n            // Create a CSVFormat object with ignoring empty lines\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines();\n\n            // Parse the CSV data\n            Iterable<CSVRecord> records = format.parse(new StringReader(csvData));\n\n            // Get the iterator for the records\n            Iterator<CSVRecord> iterator = records.iterator();\n\n            // Read the first record\n            if (iterator.hasNext()) {\n                CSVRecord record = iterator.next();\n                // Check if the 'name' column is set\n                /* read */ boolean isNameSet = record.isSet(\"name\");\n                System.out.println(\"Is 'name' set in the first record? \" + isNameSet);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}