{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"name,age\\nJohn,30\\n\\nJane,25\";\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Additional complex operations\n        ArrayList<String> names = new ArrayList<>();\n        names.add(\"John\");\n        names.add(\"Jane\");\n\n        Map<String, Integer> ageMap = new HashMap<>();\n        ageMap.put(\"John\", 30);\n        ageMap.put(\"Jane\", 25);\n\n        // Some transformations\n        for (String name : names) {\n            if (ageMap.containsKey(name)) {\n                System.out.println(name + \" is \" + ageMap.get(name) + \" years old.\");\n            }\n        }\n\n        /* write */ format = format.withIgnoreEmptyLines(true);\n\n        try {\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                if (record.isSet(\"name\")) {\n                    String name = record.get(\"name\");\n                    System.out.println(\"Name in record: \" + name);\n                }\n                // More complex logic\n                if (record.isSet(\"age\")) {\n                    int age = Integer.parseInt(record.get(\"age\"));\n                    System.out.println(\"Age in record: \" + age);\n                }\n                // Further processing\n                for (String field : record) {\n                    System.out.println(\"Field: \" + field);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // More complex logic after the read\n        try {\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                /* read */ boolean isSet = record.isSet(\"name\");\n                System.out.println(\"Record isSet for 'name': \" + isSet);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"name,age\\nJohn,30\\n\\nJane,25\";\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreEmptyLines(true);\n\n        try {\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                /* read */ boolean isSet = record.isSet(\"name\");\n                System.out.println(\"Record isSet for 'name': \" + isSet);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}