{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the desired configuration\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n\n        // Use the write method to configure CSVFormat\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Sample CSV data\n        String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Smith, 25\";\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n\n            // Map to store the CSV records\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n\n            for (CSVRecord record : parser) {\n                // Use the read method to check if a header is mapped\n                /* read */ boolean isMapped = record.isMapped(\"Name\");\n                System.out.println(\"Is 'Name' mapped: \" + isMapped);\n\n                // Additional logic: populate the map with names and ages\n                if (isMapped) {\n                    String name = record.get(\"Name\");\n                    int age = Integer.parseInt(record.get(\"Age\"));\n                    nameToAgeMap.put(name, age);\n                }\n            }\n\n            // Additional logic: print the map\n            System.out.println(\"Name to Age Map: \" + nameToAgeMap);\n\n            // Additional logic: calculate average age\n            int totalAge = 0;\n            for (int age : nameToAgeMap.values()) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) nameToAgeMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the desired configuration\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n\n        // Use the write method to configure CSVFormat\n        /* write */ csvFormat = csvFormat.withIgnoreHeaderCase();\n\n        // Sample CSV data\n        String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Smith, 25\";\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            for (CSVRecord record : parser) {\n                // Use the read method to check if a header is mapped\n                /* read */ boolean isMapped = record.isMapped(\"Name\");\n                System.out.println(\"Is 'Name' mapped: \" + isMapped);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}