{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trim option\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age, City\\nJohn Doe, 29, New York\\nJane Smith, 34, Los Angeles\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Store CSV records in a HashMap\n            HashMap<String, CSVRecord> recordMap = new HashMap<>();\n            for (CSVRecord record : parser) {\n                String name = record.get(\"Name\");\n                recordMap.put(name, record);\n            }\n\n            // Perform some operations on the records\n            CSVRecord johnRecord = recordMap.get(\"John Doe\");\n            if (johnRecord != null) {\n                System.out.println(\"John's age: \" + johnRecord.get(\"Age\"));\n            }\n\n            // More complex operations\n            for (String key : recordMap.keySet()) {\n                CSVRecord record = recordMap.get(key);\n                System.out.println(\"Processing record for: \" + key);\n            }\n\n            // Check if a column is mapped\n            CSVRecord janeRecord = recordMap.get(\"Jane Smith\");\n            if (janeRecord != null) {\n                /* read */ boolean isMapped = janeRecord.isMapped(\"Name\");\n                System.out.println(\"Is 'Name' column mapped for Jane? \" + isMapped);\n            }\n\n            // Additional logic to demonstrate complexity\n            int totalAge = 0;\n            for (CSVRecord record : recordMap.values()) {\n                totalAge += Integer.parseInt(record.get(\"Age\"));\n            }\n            System.out.println(\"Total age of all records: \" + totalAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trim option\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age, City\\nJohn Doe, 29, New York\";\n            \n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if a column is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' column mapped? \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}