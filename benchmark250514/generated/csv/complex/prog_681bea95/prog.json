{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a quote character\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withQuote('\"');\n\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n\n            // Create a CSVPrinter to write to the StringWriter using the format\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a record to the CSVPrinter\n            printer.printRecord(\"value1\", \"value2\");\n\n            // Flush the printer to ensure all data is written to the writer\n            printer.flush();\n\n            // Convert the written CSV data to a CSVRecord\n            String csvOutput = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvOutput)).iterator().next();\n\n            // Additional unrelated code to increase complexity\n            List<String> dataList = new ArrayList<>();\n            dataList.add(\"extra1\");\n            dataList.add(\"extra2\");\n\n            for (String data : dataList) {\n                System.out.println(\"Processing: \" + data);\n            }\n\n            // Perform some operations on the CSVRecord\n            List<String> recordData = new ArrayList<>();\n            for (String value : record) {\n                recordData.add(value);\n            }\n\n            // More unrelated code\n            int sum = 0;\n            for (int i = 0; i < 5; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum: \" + sum);\n\n            // Read the CSVRecord to string\n            /* read */ String recordString = record.toString();\n\n            // Print the CSVRecord string representation\n            System.out.println(recordString);\n\n            // Final unrelated operations\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n            for (Integer number : numbers) {\n                System.out.println(\"Number: \" + number);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a quote character\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withQuote('\"');\n\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n\n            // Create a CSVPrinter to write to the StringWriter using the format\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a record to the CSVPrinter\n            printer.printRecord(\"value1\", \"value2\");\n\n            // Flush the printer to ensure all data is written to the writer\n            printer.flush();\n\n            // Convert the written CSV data to a CSVRecord\n            String csvOutput = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvOutput)).iterator().next();\n\n            // Read the CSVRecord to string\n            /* read */ String recordString = record.toString();\n\n            // Print the CSVRecord string representation\n            System.out.println(recordString);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withQuote",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}