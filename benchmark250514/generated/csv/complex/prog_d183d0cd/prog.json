{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method to modify the CSVFormat\n        /* write */ format = format.withTrim();\n        \n        // Assume we have a CSVRecord instance for demonstration purposes\n        CSVRecord record = null;  // Normally, you would obtain this from parsing a CSV file\n\n        // Additional code to make the program more complex\n        ArrayList<String> sampleList = new ArrayList<>();\n        sampleList.add(\"apple\");\n        sampleList.add(\"banana\");\n        sampleList.add(\"cherry\");\n        \n        // Perform operations on the list\n        for (String fruit : sampleList) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        // Use a HashMap for additional complexity\n        Map<String, Integer> fruitMap = new HashMap<>();\n        fruitMap.put(\"apple\", 1);\n        fruitMap.put(\"banana\", 2);\n        fruitMap.put(\"cherry\", 3);\n        \n        // Iterate over the map\n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // More operations\n        int sum = 0;\n        for (int value : fruitMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n        \n        // Use the read method to check if a column is mapped\n        if (record != null) {\n            /* read */ boolean isMapped = record.isMapped(\"exampleColumn\");\n            System.out.println(isMapped);\n        } else {\n            System.out.println(\"CSVRecord is not initialized.\");\n        }\n        \n        // Final operations to add complexity\n        for (int i = 0; i < sampleList.size(); i++) {\n            System.out.println(\"Index \" + i + \": \" + sampleList.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method\n        /* write */ format = format.withTrim();\n        \n        // Assume we have a CSVRecord instance for demonstration purposes\n        CSVRecord record = null;  // Normally, you would obtain this from parsing a CSV file\n        \n        // Use the read method\n        if (record != null) {\n            /* read */ boolean isMapped = record.isMapped(\"exampleColumn\");\n            System.out.println(isMapped);\n        } else {\n            System.out.println(\"CSVRecord is not initialized.\");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}