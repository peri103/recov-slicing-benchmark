{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a trailing delimiter\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrailingDelimiter();\n\n            // Sample CSV data\n            String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Unrelated code to make the program more complex\n            ArrayList<String> cities = new ArrayList<>();\n            for (CSVRecord record : records) {\n                cities.add(record.get(\"city\"));\n            }\n            System.out.println(\"Cities: \" + cities);\n\n            // More complex operations\n            int sumOfAges = 0;\n            for (CSVRecord record : records) {\n                sumOfAges += Integer.parseInt(record.get(\"age\"));\n            }\n            System.out.println(\"Sum of ages: \" + sumOfAges);\n\n            // Read a specific record and check if a field is set\n            CSVRecord record = records.get(0); // Get the first record\n            /* read */ boolean isSet = record.isSet(\"name\");\n            \n            System.out.println(\"Is 'name' field set? \" + isSet);\n\n            // Additional operations\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord rec : records) {\n                names.add(rec.get(\"name\"));\n            }\n            System.out.println(\"Names: \" + names);\n\n            // Calculate average age\n            double averageAge = sumOfAges / (double) records.size();\n            System.out.println(\"Average age: \" + averageAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a trailing delimiter\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrailingDelimiter();\n\n            // Sample CSV data\n            String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read a specific record and check if a field is set\n            CSVRecord record = records.get(0); // Get the first record\n            /* read */ boolean isSet = record.isSet(\"name\");\n            \n            System.out.println(\"Is 'name' field set? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}