{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Sample CSV data\n        String csvData = \"Name,Age,Location\\nJohn,25,USA\\nDoe,30,UK\";\n\n        try {\n            // Initialize CSVFormat with header\n            /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), csvFormat);\n\n            // Additional unrelated code to increase complexity\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"Name\");\n                int age = Integer.parseInt(rec.get(\"Age\"));\n                nameToAgeMap.put(name, age);\n            }\n\n            // Print the map\n            System.out.println(\"Name to Age Map: \" + nameToAgeMap);\n\n            // Further operations using the map\n            int totalAge = 0;\n            for (int age : nameToAgeMap.values()) {\n                totalAge += age;\n            }\n            System.out.println(\"Total age: \" + totalAge);\n\n            // Reset the parser to read records again\n            parser = new CSVParser(new StringReader(csvData), csvFormat);\n\n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if a column is mapped\n            /* read */ boolean isNameMapped = record.isMapped(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' column mapped? \" + isNameMapped);\n\n            // Another unrelated operation\n            Map<String, String> locationMap = new HashMap<>();\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"Name\");\n                String location = rec.get(\"Location\");\n                locationMap.put(name, location);\n            }\n            \n            // Print the location map\n            System.out.println(\"Name to Location Map: \" + locationMap);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Sample CSV data\n        String csvData = \"Name,Age,Location\\nJohn,25,USA\\nDoe,30,UK\";\n\n        try {\n            // Initialize CSVFormat with header\n            /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), csvFormat);\n\n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if a column is mapped\n            /* read */ boolean isNameMapped = record.isMapped(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' column mapped? \" + isNameMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}