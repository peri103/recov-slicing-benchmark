{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat instance with header comments\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV input with the header comment\n            String csvData = \"# This is a comment\\nHeader1,Header2\\nValue1,Value2\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a map to store processed records\n            Map<String, String> recordMap = new HashMap<>();\n\n            // Process each record\n            for (CSVRecord record : parser) {\n                String key = record.get(\"Header1\");\n                String value = record.get(\"Header2\");\n                recordMap.put(key, value);\n            }\n\n            // Perform some operations on the map\n            for (Map.Entry<String, String> entry : recordMap.entrySet()) {\n                System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n            }\n\n            // Get the records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional processing logic\n            for (CSVRecord record : records) {\n                String header1Value = record.get(\"Header1\");\n                if (\"Value1\".equals(header1Value)) {\n                    System.out.println(\"Record with Header1=Value1 found.\");\n                }\n            }\n\n            // Read the comment from the first record\n            String comment = records.get(0) /* read */.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n            // Additional complex logic\n            int sum = 0;\n            for (CSVRecord record : records) {\n                sum += record.get(\"Header2\").length();\n            }\n            System.out.println(\"Sum of lengths of Header2 values: \" + sum);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat instance with header comments\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV input with the header comment\n            String csvData = \"# This is a comment\\nHeader1,Header2\\nValue1,Value2\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            String comment = records.get(0) /* read */.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}