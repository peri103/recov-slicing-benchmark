{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter to write CSV records\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record to the CSVPrinter\n            /* write */ csvPrinter.printRecord(\"value1\", \"value2\", \"value3\");\n            \n            // Flush and close the printer to complete writing\n            csvPrinter.flush();\n            csvPrinter.close();\n            \n            // Create an ArrayList and add elements\n            ArrayList<String> list = new ArrayList<>();\n            list.add(\"element1\");\n            list.add(\"element2\");\n            list.add(\"element3\");\n            \n            // Create a HashMap and populate it\n            HashMap<String, Integer> map = new HashMap<>();\n            map.put(\"key1\", 100);\n            map.put(\"key2\", 200);\n            map.put(\"key3\", 300);\n            \n            // Perform operations on the HashMap\n            int sum = 0;\n            for (String key : map.keySet()) {\n                sum += map.get(key);\n            }\n            System.out.println(\"Sum of values in map: \" + sum);\n            \n            // Parse the written CSV data\n            StringReader reader = new StringReader(writer.toString());\n            CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT);\n            \n            // Read the first record from the CSVParser\n            CSVRecord record = csvParser.getRecords().get(0);\n            \n            // Read a specific value from the record\n            /* read */ String value = record.get(0);\n            \n            // Print the read value\n            System.out.println(\"CSV Value: \" + value);\n            \n            // Close the parser\n            csvParser.close();\n            \n            // Perform additional operations on the ArrayList\n            for (String element : list) {\n                System.out.println(\"List element: \" + element);\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter to write CSV records\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record to the CSVPrinter\n            /* write */ csvPrinter.printRecord(\"value1\", \"value2\", \"value3\");\n            \n            // Flush and close the printer to complete writing\n            csvPrinter.flush();\n            csvPrinter.close();\n            \n            // Parse the written CSV data\n            StringReader reader = new StringReader(writer.toString());\n            CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT);\n            \n            // Read the first record from the CSVParser\n            CSVRecord record = csvParser.getRecords().get(0);\n            \n            // Read a specific value from the record\n            /* read */ String value = record.get(0);\n            \n            // Print the read value\n            System.out.println(value);\n            \n            // Close the parser\n            csvParser.close();\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}