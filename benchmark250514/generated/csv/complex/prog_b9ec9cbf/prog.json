{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT\n                /* write */ .withHeaderComments(\"This is a comment\");\n\n            // Additional CSV format with different configurations\n            CSVFormat anotherFormat = CSVFormat.DEFAULT.withDelimiter(';').withQuote('\"');\n\n            // Simulate reading a CSV record\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            CSVRecord record = records.get(0);\n\n            // Unrelated complex logic\n            String csvData2 = \"headerA;headerB\\nvalueA1;valueB1\\nvalueA2;valueB2\";\n            CSVParser parser = anotherFormat.parse(new StringReader(csvData2));\n            for (CSVRecord rec : parser) {\n                System.out.println(\"Record: \" + rec.get(0) + \", \" + rec.get(1));\n            }\n\n            // Additional CSV parsing logic\n            CSVFormat yetAnotherFormat = CSVFormat.DEFAULT.withIgnoreEmptyLines();\n            String csvData3 = \"\\nheaderX,headerY\\nvalueX1,valueY1\\n\\nvalueX2,valueY2\";\n            List<CSVRecord> records3 = yetAnotherFormat.parse(new StringReader(csvData3)).getRecords();\n            for (CSVRecord rec : records3) {\n                System.out.println(\"Record: \" + rec.get(0) + \", \" + rec.get(1));\n            }\n\n            // Read the comment from the CSV record\n            /* read */ String comment = record.getComment();\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT\n                /* write */ .withHeaderComments(\"This is a comment\");\n\n            // Simulate reading a CSV record\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            CSVRecord record = records.get(0);\n\n            // Read the comment from the CSV record\n            /* read */ String comment = record.getComment();\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}