{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter instance with default CSVFormat\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Create a list to store records\n            List<String> additionalData = new ArrayList<>();\n            additionalData.add(\"extra1\");\n            additionalData.add(\"extra2\");\n            additionalData.add(\"extra3\");\n            \n            // Write a record to the CSVPrinter\n            /* write */ printer.printRecord(\"value1\", \"value2\", \"value3\");\n            \n            // Write additional records\n            printer.printRecord(additionalData);\n            printer.printRecord(\"another1\", \"another2\", \"another3\");\n            \n            // Flush the CSVPrinter to ensure all data is written to the StringWriter\n            printer.flush();\n            \n            // Prepare a StringReader to read the CSV data\n            StringReader reader = new StringReader(writer.toString());\n            \n            // Parse the CSV data using CSVParser\n            CSVParser parser = new CSVParser(reader, CSVFormat.DEFAULT);\n            \n            // Process all CSV records\n            List<CSVRecord> records = parser.getRecords();\n            for (int i = 0; i < records.size(); i++) {\n                CSVRecord record = records.get(i);\n                for (int j = 0; j < record.size(); j++) {\n                    System.out.print(record.get(j) + \" \");\n                }\n                System.out.println();\n            }\n            \n            // Read the first CSVRecord from the parser\n            CSVRecord firstRecord = records.get(0);\n            \n            // Retrieve a value from the first CSVRecord\n            /* read */ String value = firstRecord.get(0);\n            \n            // Print the retrieved value\n            System.out.println(\"Retrieved value: \" + value);\n            \n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter instance with default CSVFormat\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record to the CSVPrinter\n            /* write */ printer.printRecord(\"value1\", \"value2\", \"value3\");\n            \n            // Flush the CSVPrinter to ensure all data is written to the StringWriter\n            printer.flush();\n            \n            // Prepare a StringReader to read the CSV data\n            StringReader reader = new StringReader(writer.toString());\n            \n            // Parse the CSV data using CSVParser\n            CSVParser parser = new CSVParser(reader, CSVFormat.DEFAULT);\n            \n            // Read the first CSVRecord from the parser\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Retrieve a value from the CSVRecord\n            /* read */ String value = record.get(0);\n            \n            // Print the retrieved value\n            System.out.println(value);\n            \n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}