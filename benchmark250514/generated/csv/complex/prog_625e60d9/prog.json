{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a comment to the CSV\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n\n            // Create a list and perform some operations\n            List<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numbers.add(i * 10);\n            }\n\n            // Process the list\n            int sum = 0;\n            for (int num : numbers) {\n                sum += num;\n                System.out.println(\"Processing number: \" + num);\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // More operations on the list\n            numbers.remove(0);\n            numbers.add(50);\n            numbers.add(60);\n\n            // Read the comment back from CSV\n            String csvContent = writer.toString();\n            StringReader reader = new StringReader(csvContent);\n            Iterable<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader);\n\n            for (CSVRecord record : records) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(comment);\n                }\n            }\n\n            // Further manipulate the list\n            for (int i = 0; i < numbers.size(); i++) {\n                System.out.println(\"Number at index \" + i + \": \" + numbers.get(i));\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a comment to the CSV\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n\n            // Read the comment back\n            String csvContent = writer.toString();\n            StringReader reader = new StringReader(csvContent);\n            Iterable<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader);\n\n            for (CSVRecord record : records) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}