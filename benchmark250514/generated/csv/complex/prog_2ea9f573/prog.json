{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSV format with the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Sample CSV data\n        String csvData = \"name,age,city\\nJohn,30,New York\\nDoe,25,Los Angeles\";\n\n        try {\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Create a map to store the data\n            Map<String, Integer> ageMap = new HashMap<>();\n\n            for (CSVRecord record : records) {\n                String name = record.get(\"name\");\n                int age = Integer.parseInt(record.get(\"age\"));\n                ageMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            for (String name : ageMap.keySet()) {\n                System.out.println(name + \" is \" + ageMap.get(name) + \" years old.\");\n            }\n\n            // Use the read method on the first record\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isSet = firstRecord.isSet(\"name\");\n\n            // Output the result\n            System.out.println(\"Is 'name' set in the first record? \" + isSet);\n\n            // Additional operations\n            int totalAge = ageMap.values().stream().mapToInt(Integer::intValue).sum();\n            System.out.println(\"Total age of all individuals: \" + totalAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSV format with the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Sample CSV data\n        String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n        try {\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Use the read method on the first record\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"name\");\n\n            // Output the result\n            System.out.println(\"Is 'name' set in the first record? \" + isSet);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}