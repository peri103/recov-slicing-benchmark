{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to hold CSV data\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter to write data\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Additional complexity: Using an ArrayList to store some data\n            ArrayList<String> dataList = new ArrayList<>();\n            dataList.add(\"Data1\");\n            dataList.add(\"Data2\");\n            dataList.add(\"Data3\");\n            \n            // Write data using CSVPrinter\n            /* write */ csvPrinter.print(\"Hello, World!\");\n            csvPrinter.flush();\n            \n            // Additional complexity: Process and print data from the ArrayList\n            for (String data : dataList) {\n                System.out.println(\"Processing: \" + data);\n            }\n            \n            // Parse the written CSV data\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Additional complexity: Perform some operations on the parsed data\n            ArrayList<String> parsedDataList = new ArrayList<>();\n            for (CSVRecord rec : parser) {\n                parsedDataList.add(rec.get(0));\n            }\n            System.out.println(\"Parsed Data List: \" + parsedDataList);\n            \n            // Read the data using CSVRecord\n            /* read */ String value = record.get(0);\n            System.out.println(\"Read Value: \" + value);\n            \n            // Close resources\n            csvPrinter.close();\n            parser.close();\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to hold CSV data\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter to write data\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write data using CSVPrinter\n            /* write */ csvPrinter.print(\"Hello, World!\");\n            csvPrinter.flush();\n            \n            // Parse the written CSV data\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Read the data using CSVRecord\n            /* read */ String value = record.get(0);\n            System.out.println(value);\n            \n            // Close resources\n            csvPrinter.close();\n            parser.close();\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "print",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}