{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with the write method\n        CSVFormat format = CSVFormat.DEFAULT /* write */ .withIgnoreSurroundingSpaces();\n\n        // Prepare a sample CSV data\n        String csvData = \"Name, Age\\nJohn, 30\\nJane, 25\";\n\n        try {\n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Create an unrelated list of names\n            ArrayList<String> namesList = new ArrayList<>();\n            namesList.add(\"Alice\");\n            namesList.add(\"Bob\");\n            namesList.add(\"Charlie\");\n\n            // Perform operations on the list\n            for (String name : namesList) {\n                System.out.println(\"Name: \" + name);\n            }\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Perform some unrelated calculations\n            int sum = 0;\n            for (int i = 1; i <= 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n            // Use the read method to check consistency\n            /* read */ boolean isConsistent = record.isConsistent();\n\n            // Print the result\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with the write method\n        CSVFormat format = CSVFormat.DEFAULT /* write */ .withIgnoreSurroundingSpaces();\n\n        // Prepare a sample CSV data\n        String csvData = \"Name, Age\\nJohn, 30\\nJane, 25\";\n\n        try {\n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Use the read method to check consistency\n            /* read */ boolean isConsistent = record.isConsistent();\n\n            // Print the result\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}