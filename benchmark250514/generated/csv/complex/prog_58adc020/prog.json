{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat and use the write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n            // Prepare a sample CSV data\n            String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Additional complex logic: Process CSV records into a list of names\n            List<String> names = new ArrayList<>();\n            for (CSVRecord rec : parser) {\n                if (rec.isSet(\"name\")) {\n                    names.add(rec.get(\"name\"));\n                }\n            }\n\n            // More complex logic: Perform some operations on the names list\n            for (String name : names) {\n                System.out.println(\"Processing name: \" + name);\n                // Simulate some complex processing\n                if (name.contains(\"Doe\")) {\n                    System.out.println(name + \" is a Doe family member.\");\n                }\n            }\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method\n            /* read */ boolean isSet = record.isSet(\"name\");\n\n            // Print the result\n            System.out.println(\"Is 'name' set in the first record? \" + isSet);\n\n            // Additional logic: Use the names list after the read operation\n            System.out.println(\"Total names processed: \" + names.size());\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat and use the write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n            // Prepare a sample CSV data\n            String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method\n            /* read */ boolean isSet = record.isSet(\"name\");\n\n            // Print the result\n            System.out.println(\"Is 'name' set in the first record? \" + isSet);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}