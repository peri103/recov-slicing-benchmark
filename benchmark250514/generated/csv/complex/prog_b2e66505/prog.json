{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse the CSV data using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n\n            // Additional complexity: Create a CSV printer and write some data\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT.withHeader(\"ID\", \"Name\", \"Age\"));\n            printer.printRecord(1, \"Alice\", 28);\n            printer.printRecord(2, \"Bob\", 32);\n            printer.flush();\n\n            // Parse the newly created CSV data\n            CSVParser newParser = CSVParser.parse(new StringReader(writer.toString()), CSVFormat.DEFAULT.withHeader());\n            List<CSVRecord> newRecords = newParser.getRecords();\n\n            // Process the new records\n            for (CSVRecord newRecord : newRecords) {\n                System.out.println(\"ID: \" + newRecord.get(\"ID\") + \", Name: \" + newRecord.get(\"Name\") + \", Age: \" + newRecord.get(\"Age\"));\n            }\n\n            // Read the comment from the original record\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n            // Parse the CSV data using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}