{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to hold the CSV data\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter with default CSV format\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record using the printRecord method\n            /* write */ csvPrinter.printRecord(\"1\", \"John Doe\", \"john.doe@example.com\");\n            \n            // Add more records\n            csvPrinter.printRecord(\"2\", \"Jane Smith\", \"jane.smith@example.com\");\n            csvPrinter.printRecord(\"3\", \"Alice Brown\", \"alice.brown@example.com\");\n            \n            // Flush and close the printer\n            csvPrinter.flush();\n            csvPrinter.close();\n            \n            // Parse the CSV data from the StringWriter\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n            \n            // Unrelated computation with a list\n            List<String> namesList = new ArrayList<>();\n            namesList.add(\"John Doe\");\n            namesList.add(\"Jane Smith\");\n            namesList.add(\"Alice Brown\");\n            \n            // Perform some operations on the list\n            for (String name : namesList) {\n                System.out.println(\"Processing name: \" + name);\n            }\n            \n            // Read the first record using the get method\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String name = record.get(1);\n            \n            // Output the name to the console\n            System.out.println(name);\n            \n            // Further operations with the CSV records\n            for (CSVRecord rec : parser.getRecords()) {\n                System.out.println(\"Email: \" + rec.get(2));\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to hold the CSV data\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter with default CSV format\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record using the printRecord method\n            /* write */ csvPrinter.printRecord(\"1\", \"John Doe\", \"john.doe@example.com\");\n            \n            // Flush and close the printer\n            csvPrinter.flush();\n            csvPrinter.close();\n            \n            // Parse the CSV data from the StringWriter\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n            \n            // Read the first record using the get method\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String name = record.get(1);\n            \n            // Output the name to the console\n            System.out.println(name);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}