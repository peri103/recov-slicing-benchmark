{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.QuoteMode;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat csvFormat = CSVFormat.DEFAULT;\n            /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,25\\n\\nDoe,30\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), csvFormat);\n\n            // Additional complex operations\n            CSVFormat quoteCsvFormat = CSVFormat.DEFAULT.withQuoteMode(QuoteMode.ALL);\n            String quotedCsvData = \"\\\"name\\\",\\\"age\\\"\\n\\\"Alice\\\",\\\"23\\\"\\n\\\"Bob\\\",\\\"29\\\"\";\n            CSVParser quotedParser = new CSVParser(new StringReader(quotedCsvData), quoteCsvFormat);\n\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord csvRecord : quotedParser) {\n                names.add(csvRecord.get(0));\n            }\n\n            // Read a CSVRecord and check consistency\n            for (CSVRecord csvRecord : parser) {\n                /* read */ boolean isConsistent = csvRecord.isConsistent();\n                System.out.println(\"Is record consistent: \" + isConsistent);\n            }\n\n            // Process names\n            for (String name : names) {\n                System.out.println(\"Quoted name: \" + name);\n            }\n\n            // Close the parsers\n            parser.close();\n            quotedParser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat csvFormat = CSVFormat.DEFAULT;\n            /* write */ csvFormat = csvFormat.withIgnoreEmptyLines(true);\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,25\\n\\nDoe,30\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), csvFormat);\n\n            // Read a CSVRecord and check consistency\n            for (CSVRecord csvRecord : parser) {\n                /* read */ boolean isConsistent = csvRecord.isConsistent();\n                System.out.println(\"Is record consistent: \" + isConsistent);\n            }\n\n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}