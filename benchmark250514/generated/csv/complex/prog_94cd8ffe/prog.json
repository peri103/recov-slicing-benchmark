{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom record separator\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withRecordSeparator(';');\n\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n\n            // Create a CSVPrinter to write data using the specified format\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write multiple records to the CSVPrinter\n            List<List<String>> records = Arrays.asList(\n                Arrays.asList(\"John\", \"Doe\", \"30\"),\n                Arrays.asList(\"Jane\", \"Smith\", \"25\"),\n                Arrays.asList(\"Mike\", \"Johnson\", \"40\")\n            );\n            for (List<String> record : records) {\n                printer.printRecord(record);\n            }\n            printer.flush();\n\n            // Unrelated computation to add complexity\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i * i;\n            }\n            System.out.println(\"Sum of squares from 0 to 9: \" + sum);\n\n            // Read the CSV output\n            String csvOutput = writer.toString();\n\n            // Convert the CSV output to CSVRecords\n            List<CSVRecord> csvRecords = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvOutput)).getRecords();\n\n            // Process the records in a complex manner\n            for (CSVRecord record : csvRecords) {\n                // Perform some operations on each record\n                int age = Integer.parseInt(record.get(2));\n                if (age > 30) {\n                    System.out.println(\"Age is greater than 30: \" + age);\n                }\n            }\n\n            // Read the first record using toString method\n            CSVRecord firstRecord = csvRecords.get(0);\n            /* read */ String recordString = firstRecord.toString();\n\n            // Print the read value\n            System.out.println(\"First record: \" + recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom record separator\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withRecordSeparator(';');\n\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n\n            // Create a CSVPrinter to write data using the specified format\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a record to the CSVPrinter\n            printer.printRecord(Arrays.asList(\"John\", \"Doe\", \"30\"));\n            printer.flush();\n\n            // Read the CSV output\n            String csvOutput = writer.toString();\n\n            // Convert the CSV output to a CSVRecord\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvOutput)).getRecords().get(0);\n\n            // Read the record using toString method\n            /* read */ String recordString = record.toString();\n\n            // Print the read value\n            System.out.println(recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withRecordSeparator",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}