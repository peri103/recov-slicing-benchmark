{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a CSV input as a string\n            String csvData = \"header1,header2\\nvalue1,value2\\n,value4\\nvalue5,value6\";\n\n            // Initialize CSVFormat and configure it to ignore empty lines\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines();\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Additional unrelated code to make the program more complex\n            Map<String, Integer> headerMap = new HashMap<>();\n            headerMap.put(\"header1\", 0);\n            headerMap.put(\"header2\", 1);\n\n            int sum = 0;\n            for (CSVRecord record : records) {\n                for (String header : headerMap.keySet()) {\n                    String value = record.get(headerMap.get(header));\n                    try {\n                        sum += Integer.parseInt(value);\n                    } catch (NumberFormatException e) {\n                        // Ignore non-integer values\n                    }\n                }\n            }\n            System.out.println(\"Sum of integer values: \" + sum);\n\n            // Read and check consistency of the first CSVRecord\n            /* read */ boolean isConsistent = records.get(0).isConsistent();\n            System.out.println(\"Is first record consistent: \" + isConsistent);\n\n            // Additional processing on records\n            for (CSVRecord record : records) {\n                System.out.println(\"Record: \" + record);\n                for (int i = 0; i < record.size(); i++) {\n                    System.out.println(\"Value at index \" + i + \": \" + record.get(i));\n                }\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a CSV input as a string\n            String csvData = \"header1,header2\\nvalue1,value2\\n,value4\\nvalue5,value6\";\n\n            // Initialize CSVFormat and configure it to ignore empty lines\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines();\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Read and check consistency of the first CSVRecord\n            /* read */ boolean isConsistent = records.get(0).isConsistent();\n            System.out.println(isConsistent);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}