{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat and configure it to ignore empty lines\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines(true);\n\n            // Create a sample CSV data\n            String csvData = \"name,age,city\\nJohn,30,New York\\n\\nJane,25,Los Angeles\";\n\n            // Parse the CSV data using the configured format\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Create a list to hold names and a map for age and city\n            List<String> names = new ArrayList<>();\n            Map<String, String> ageCityMap = new HashMap<>();\n\n            // Iterate over the records and process each record\n            for (CSVRecord record : parser) {\n                if (record.isSet(\"name\")) {\n                    names.add(record.get(\"name\"));\n                }\n                if (record.isSet(\"age\") && record.isSet(\"city\")) {\n                    ageCityMap.put(record.get(\"age\"), record.get(\"city\"));\n                }\n            }\n\n            // Close the parser\n            parser.close();\n\n            // Process the names list\n            for (String name : names) {\n                System.out.println(\"Name: \" + name);\n            }\n\n            // Process the age-city map\n            for (Map.Entry<String, String> entry : ageCityMap.entrySet()) {\n                System.out.println(\"Age: \" + entry.getKey() + \", City: \" + entry.getValue());\n            }\n\n            // Dummy unrelated operations to increase complexity\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n            // A nested loop to add complexity\n            for (int i = 0; i < 3; i++) {\n                for (int j = 0; j < 3; j++) {\n                    System.out.println(\"Nested Loop [\" + i + \",\" + j + \"]\");\n                }\n            }\n\n            // Check if the first CSV record has the 'name' field set\n            /* read */ boolean isNameSet = parser.getRecords().get(0).isSet(\"name\");\n            System.out.println(\"Is 'name' set in the first record: \" + isNameSet);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat and configure it\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreEmptyLines(true);\n\n            // Create a sample CSV data\n            String csvData = \"name,age\\nJohn,30\\n\\nJane,25\";\n\n            // Parse the CSV data using the configured format\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Iterate over the records and check if a specific field is set\n            for (CSVRecord record : parser) {\n                /* read */ boolean isNameSet = record.isSet(\"name\");\n                System.out.println(\"Is 'name' set in record: \" + isNameSet);\n            }\n\n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}