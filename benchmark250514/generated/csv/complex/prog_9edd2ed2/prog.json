{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with allowing duplicate header names\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowDuplicateHeaderNames(true);\n\n        // Prepare a CSV string to parse\n        String csvData = \"header1,header1\\nvalue1,value2\";\n\n        try {\n            // Parse the CSV data using the csvFormat\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Create a list to store CSV values\n            ArrayList<String> csvValues = new ArrayList<>();\n\n            // Add values from the CSVRecord to the list\n            for (String value : record) {\n                csvValues.add(value);\n            }\n\n            // Print the CSV values\n            for (String value : csvValues) {\n                System.out.println(\"CSV Value: \" + value);\n            }\n\n            // Perform a complex operation on the list\n            int sum = 0;\n            for (String value : csvValues) {\n                sum += value.length();\n            }\n            System.out.println(\"Sum of lengths: \" + sum);\n\n            // Check if the first column header is mapped\n            /* read */ boolean isMapped = record.isMapped(\"header1\");\n            System.out.println(\"Is header1 mapped: \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with allowing duplicate header names\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowDuplicateHeaderNames(true);\n\n        // Prepare a CSV string to parse\n        String csvData = \"header1,header1\\nvalue1,value2\";\n\n        try {\n            // Parse the CSV data using the csvFormat\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if the first column header is mapped\n            /* read */ boolean isMapped = record.isMapped(\"header1\");\n            System.out.println(isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowDuplicateHeaderNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}