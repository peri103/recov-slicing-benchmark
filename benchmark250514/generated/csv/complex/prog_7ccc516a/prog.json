{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n\n            // Adding complexity with ArrayList operations\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i);\n            }\n\n            int sum = 0;\n            for (Integer number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            String csvContent = writer.toString();\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvContent)).getRecords();\n\n            // More complex operations on CSVRecord\n            if (!records.isEmpty()) {\n                CSVRecord record = records.get(0);\n\n                // Additional operations on CSVRecord\n                for (int i = 0; i < record.size(); i++) {\n                    System.out.println(\"Record value at \" + i + \": \" + record.get(i));\n                }\n\n                /* read */ String comment = record.getComment();\n                System.out.println(\"Comment: \" + comment);\n            }\n\n            // Further complexity with string manipulation\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < numbers.size(); i++) {\n                builder.append(numbers.get(i)).append(\" \");\n            }\n            System.out.println(\"Numbers in string format: \" + builder.toString());\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n\n            String csvContent = writer.toString();\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvContent)).getRecords();\n\n            if (!records.isEmpty()) {\n                CSVRecord record = records.get(0);\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}