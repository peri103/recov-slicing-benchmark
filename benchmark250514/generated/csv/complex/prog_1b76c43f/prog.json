{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a specific delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withDelimiter(';');\n        \n        // Sample CSV data\n        String csvData = \"name;age;city\\nJohn;30;New York\\nJane;25;Los Angeles\";\n        \n        // Parse CSV data using the format with the specified delimiter\n        List<CSVRecord> records = null;\n        try {\n            records = format.parse(new StringReader(csvData)).getRecords();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        \n        // Additional unrelated code to increase complexity\n        ArrayList<String> names = new ArrayList<>();\n        ArrayList<Integer> ages = new ArrayList<>();\n        ArrayList<String> cities = new ArrayList<>();\n\n        // Process each record and populate the lists\n        if (records != null) {\n            for (CSVRecord record : records) {\n                names.add(record.get(0));\n                ages.add(Integer.parseInt(record.get(1)));\n                cities.add(record.get(2));\n            }\n        }\n        \n        // Perform some operations on the lists\n        int totalAge = 0;\n        for (int age : ages) {\n            totalAge += age;\n        }\n        double averageAge = totalAge / (double) ages.size();\n        System.out.println(\"Average Age: \" + averageAge);\n\n        // Read the first record and convert it to String\n        if (records != null && !records.isEmpty()) {\n            /* read */ String recordString = records.get(0).toString();\n            System.out.println(recordString);\n        }\n\n        // More operations\n        for (String city : cities) {\n            System.out.println(\"City: \" + city);\n        }\n        \n        // Additional logic to demonstrate complexity\n        for (int i = 0; i < names.size(); i++) {\n            System.out.println(\"Name: \" + names.get(i) + \", Age: \" + ages.get(i) + \", City: \" + cities.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with a specific delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withDelimiter(';');\n        \n        // Sample CSV data\n        String csvData = \"name;age;city\\nJohn;30;New York\\nJane;25;Los Angeles\";\n        \n        // Parse CSV data using the format with the specified delimiter\n        try {\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            \n            // Read the first record and convert it to String\n            /* read */ String recordString = records.get(0).toString();\n            System.out.println(recordString);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}