{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat with a comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Sample CSV data with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Unrelated code: Create a list of names from the CSV data\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord record : records) {\n                if (!record.hasComment()) {\n                    names.add(record.get(0)); // Add name to the list\n                }\n            }\n\n            // Process names\n            for (String name : names) {\n                System.out.println(\"Processing name: \" + name);\n            }\n\n            // Unrelated code: Calculate the average age from the CSV data\n            int totalAge = 0;\n            int count = 0;\n            for (CSVRecord record : records) {\n                if (!record.hasComment()) {\n                    totalAge += Integer.parseInt(record.get(1)); // Add age to total\n                    count++;\n                }\n            }\n            double averageAge = (double) totalAge / count;\n            System.out.println(\"Average age: \" + averageAge);\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Output the comment\n            System.out.println(\"Comment from CSV: \" + comment);\n\n            // Unrelated code: Check if a specific name exists in the list\n            String searchName = \"Jane\";\n            if (names.contains(searchName)) {\n                System.out.println(searchName + \" is in the list.\");\n            } else {\n                System.out.println(searchName + \" is not in the list.\");\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat with a comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Sample CSV data with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Output the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}