{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.Reader;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVPrinter with StringWriter\n            StringWriter writer = new StringWriter();\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a comment using CSVPrinter\n            /* write */ csvPrinter.printComment(\"This is a comment\");\n\n            // Flush and close the printer\n            csvPrinter.flush();\n            csvPrinter.close();\n\n            // Additional complexity: Working with ArrayList\n            ArrayList<String> dataList = new ArrayList<>();\n            dataList.add(\"Data1\");\n            dataList.add(\"Data2\");\n            dataList.add(\"Data3\");\n\n            // Process data in ArrayList\n            for (String data : dataList) {\n                System.out.println(\"Processing: \" + data);\n            }\n\n            // Use StringReader to simulate reading the CSV data\n            Reader reader = new StringReader(writer.toString());\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(reader).getRecords();\n\n            // More complexity: Manipulating CSV records\n            for (CSVRecord record : records) {\n                System.out.println(\"Record: \" + record.toString());\n            }\n\n            // Read the comment from the first record\n            if (!records.isEmpty()) {\n                CSVRecord record = records.get(0);\n                /* read */ String comment = record.getComment();\n                System.out.println(\"Comment: \" + comment);\n            }\n\n            // Additional complexity: Calculating sum of integers\n            int[] numbers = {1, 2, 3, 4, 5};\n            int sum = 0;\n            for (int number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum: \" + sum);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.Reader;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVPrinter with StringWriter\n            StringWriter writer = new StringWriter();\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a comment using CSVPrinter\n            /* write */ csvPrinter.printComment(\"This is a comment\");\n\n            // Flush and close the printer\n            csvPrinter.flush();\n            csvPrinter.close();\n\n            // Use StringReader to simulate reading the CSV data\n            Reader reader = new StringReader(writer.toString());\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(reader).getRecords();\n\n            // Read the comment from the first record\n            if (!records.isEmpty()) {\n                CSVRecord record = records.get(0);\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}