{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare the CSV data\n            String csvData = \"name, age, city\\nJohn Doe, 30, New York\";\n\n            // Create a CSVFormat instance and configure it\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Additional CSV parsing logic\n            CSVRecord secondRecord = parser.getRecords().get(0);\n            boolean isAgeSet = secondRecord.isSet(\"age\");\n            System.out.println(\"Is 'age' set? \" + isAgeSet);\n\n            // Simulate some unrelated complex logic\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n            nameToAgeMap.put(\"John Doe\", 30);\n\n            for (Map.Entry<String, Integer> entry : nameToAgeMap.entrySet()) {\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n\n            // Check if a specific column is set\n            /* read */ boolean isNameSet = record.isSet(\"name\");\n\n            // More complex operations with maps\n            Map<String, String> cityToCountryMap = new HashMap<>();\n            cityToCountryMap.put(\"New York\", \"USA\");\n            cityToCountryMap.put(\"London\", \"UK\");\n\n            for (String city : cityToCountryMap.keySet()) {\n                System.out.println(\"City: \" + city + \", Country: \" + cityToCountryMap.get(city));\n            }\n\n            // Print the result\n            System.out.println(\"Is 'name' set? \" + isNameSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare the CSV data\n            String csvData = \"name, age\\nJohn Doe, 30\";\n\n            // Create a CSVFormat instance and configure it\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withIgnoreSurroundingSpaces(true);\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if a specific column is set\n            /* read */ boolean isNameSet = record.isSet(\"name\");\n            \n            // Print the result\n            System.out.println(\"Is 'name' set? \" + isNameSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}