{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowDuplicateHeaderNames(true);\n\n        // Prepare a sample CSV input\n        String csvData = \"header1,header1\\nvalue1,value2\";\n\n        // Additional unrelated code to increase complexity\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Sample\");\n        list.add(\"Data\");\n\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"Key1\", 100);\n        map.put(\"Key2\", 200);\n\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Further unrelated operations\n            int counter = 0;\n            for (String item : list) {\n                System.out.println(\"List item: \" + item);\n                counter++;\n            }\n\n            // Read using the read method\n            CSVRecord record = records.get(0);\n            /* read */ boolean isMapped = record.isMapped(\"header1\");\n\n            // Output the result\n            System.out.println(\"Is 'header1' mapped: \" + isMapped);\n\n            // Additional unrelated operations after the read\n            for (CSVRecord rec : records) {\n                for (String field : rec) {\n                    System.out.println(\"Field: \" + field);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with the write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withAllowDuplicateHeaderNames(true);\n\n        // Prepare a sample CSV input\n        String csvData = \"header1,header1\\nvalue1,value2\";\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read using the read method\n            CSVRecord record = records.get(0);\n            /* read */ boolean isMapped = record.isMapped(\"header1\");\n\n            // Output the result\n            System.out.println(\"Is 'header1' mapped: \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowDuplicateHeaderNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}