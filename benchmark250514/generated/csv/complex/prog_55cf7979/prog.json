{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize StringWriter and CSVPrinter\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT.withHeader(\"Column1\", \"Column2\");\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Unrelated complex code: Using HashMap to store data\n            HashMap<String, Integer> map = new HashMap<>();\n            map.put(\"Key1\", 100);\n            map.put(\"Key2\", 200);\n\n            // Write multiple values using CSVPrinter\n            printer.printRecord(\"Hello, World!\", \"Another Value\");\n            printer.printRecord(\"Second Record\", \"Value2\");\n            /* write */ printer.print(\"Single Value\");\n            printer.flush();\n\n            // Unrelated complex code: Perform operations on the HashMap\n            int sum = 0;\n            for (String key : map.keySet()) {\n                sum += map.get(key);\n            }\n            System.out.println(\"Sum of values in map: \" + sum);\n\n            // Read the written values using CSVParser and CSVRecord\n            StringReader reader = new StringReader(writer.toString());\n            CSVParser parser = CSVFormat.DEFAULT.withHeader(\"Column1\", \"Column2\").parse(reader);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Assuming we're interested in the first record and the first column\n            if (!records.isEmpty()) {\n                for (CSVRecord record : records) {\n                    String column1Value = record.get(\"Column1\");\n                    String column2Value = record.get(\"Column2\");\n                    System.out.println(\"Record: \" + column1Value + \", \" + column2Value);\n                }\n                /* read */ String value = records.get(2).get(\"Column1\");\n                System.out.println(\"Read specific value: \" + value);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT.withHeader(\"Column1\");\n            \n            // Create a CSVPrinter instance\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            \n            // Write a value using CSVPrinter\n            /* write */ printer.print(\"Hello, World!\");\n            printer.flush();\n            \n            // Read the written value using CSVParser and CSVRecord\n            StringReader reader = new StringReader(writer.toString());\n            CSVParser parser = CSVFormat.DEFAULT.withHeader(\"Column1\").parse(reader);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Assuming we're interested in the first record and the first column\n            if (!records.isEmpty()) {\n                CSVRecord record = records.get(0);\n                /* read */ String value = record.get(\"Column1\");\n                System.out.println(value);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "print",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}