{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withIgnoreSurroundingSpaces();\n\n            // Create a sample CSV content\n            String csvContent = \"Name, Age, Country\\nJohn Doe, 30, USA\";\n\n            // Parse the CSV content using the format\n            CSVParser parser = new CSVParser(new StringReader(csvContent), format);\n\n            // Get records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional operations to increase complexity\n            ArrayList<String> names = new ArrayList<>();\n            ArrayList<Integer> ages = new ArrayList<>();\n            ArrayList<String> countries = new ArrayList<>();\n\n            for (CSVRecord record : records) {\n                if (record.isSet(\"Name\")) {\n                    names.add(record.get(\"Name\"));\n                }\n                if (record.isSet(\"Age\")) {\n                    ages.add(Integer.parseInt(record.get(\"Age\")));\n                }\n                if (record.isSet(\"Country\")) {\n                    countries.add(record.get(\"Country\"));\n                }\n            }\n\n            // Manipulate data\n            for (int i = 0; i < names.size(); i++) {\n                System.out.println(\"Name: \" + names.get(i));\n                System.out.println(\"Age: \" + ages.get(i));\n                System.out.println(\"Country: \" + countries.get(i));\n            }\n\n            // Read from the first record\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' set: \" + isSet);\n\n            // Close the parser\n            parser.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withIgnoreSurroundingSpaces();\n\n            // Create a sample CSV content\n            String csvContent = \"Name, Age, Country\\nJohn Doe, 30, USA\";\n\n            // Parse the CSV content using the format\n            CSVParser parser = new CSVParser(new StringReader(csvContent), format);\n\n            // Get records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read from the first record\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' set: \" + isSet);\n\n            // Close the parser\n            parser.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}