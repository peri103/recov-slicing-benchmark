{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter with default format\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a value using CSVPrinter\n            /* write */ csvPrinter.print(\"Hello, World!\");\n\n            // Flush and close the printer\n            csvPrinter.flush();\n            csvPrinter.close();\n\n            // Prepare some unrelated data structures\n            ArrayList<Integer> numberList = new ArrayList<>();\n            HashMap<String, Integer> nameMap = new HashMap<>();\n\n            // Populate the ArrayList\n            for (int i = 0; i < 5; i++) {\n                numberList.add(i * 2);\n            }\n\n            // Populate the HashMap\n            nameMap.put(\"Alice\", 30);\n            nameMap.put(\"Bob\", 25);\n\n            // Perform operations on the ArrayList\n            for (int num : numberList) {\n                System.out.println(\"Number: \" + num);\n            }\n\n            // Perform operations on the HashMap\n            for (String name : nameMap.keySet()) {\n                System.out.println(name + \" is \" + nameMap.get(name) + \" years old.\");\n            }\n\n            // Read the written CSV data\n            String csvData = writer.toString();\n            StringReader reader = new StringReader(csvData);\n\n            // Create a CSVParser to parse the CSV data\n            CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT);\n\n            // Get the first record\n            CSVRecord record = csvParser.getRecords().get(0);\n\n            // Read the value using CSVRecord\n            /* read */ String value = record.get(0);\n\n            // Print the read value\n            System.out.println(value);\n\n            // Close the parser\n            csvParser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter with default format\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a value using CSVPrinter\n            /* write */ csvPrinter.print(\"Hello, World!\");\n\n            // Flush and close the printer\n            csvPrinter.flush();\n            csvPrinter.close();\n\n            // Read the written CSV data\n            String csvData = writer.toString();\n            StringReader reader = new StringReader(csvData);\n\n            // Create a CSVParser to parse the CSV data\n            CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT);\n\n            // Get the first record\n            CSVRecord record = csvParser.getRecords().get(0);\n\n            // Read the value using CSVRecord\n            /* read */ String value = record.get(0);\n\n            // Print the read value\n            System.out.println(value);\n\n            // Close the parser\n            csvParser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "print",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}