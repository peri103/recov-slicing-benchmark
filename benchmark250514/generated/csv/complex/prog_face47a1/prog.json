{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method\n        /* write */ format = format.withTrim();\n        \n        // Create a HashMap to simulate a CSV record mapping\n        HashMap<String, String> csvData = new HashMap<>();\n        csvData.put(\"Name\", \"John Doe\");\n        csvData.put(\"Age\", \"30\");\n        csvData.put(\"Country\", \"USA\");\n\n        // Perform some operations on the HashMap\n        System.out.println(\"CSV Data:\");\n        for (String key : csvData.keySet()) {\n            System.out.println(key + \": \" + csvData.get(key));\n        }\n\n        // Assume we have a CSVRecord object for demonstration\n        CSVRecord record = null; // Normally, this would be obtained by parsing a CSV file\n\n        // Perform unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Use the read method\n        // Note: This is just a demonstration as we don't have an actual CSVRecord\n        if (record != null) {\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' column mapped: \" + isMapped);\n        } else {\n            System.out.println(\"CSVRecord is null, cannot perform read operation.\");\n        }\n\n        // More unrelated code\n        String[] names = {\"Alice\", \"Bob\", \"Charlie\"};\n        for (String name : names) {\n            System.out.println(\"Hello, \" + name + \"!\");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat object\n        CSVFormat format = CSVFormat.DEFAULT;\n        \n        // Use the write method\n        /* write */ format = format.withTrim();\n        \n        // Assume we have a CSVRecord object for demonstration\n        CSVRecord record = null; // Normally, this would be obtained by parsing a CSV file\n        \n        // Use the read method\n        // Note: This is just a demonstration as we don't have an actual CSVRecord\n        if (record != null) {\n            /* read */ boolean isMapped = record.isMapped(\"someColumn\");\n            System.out.println(isMapped);\n        } else {\n            System.out.println(\"CSVRecord is null, cannot perform read operation.\");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}