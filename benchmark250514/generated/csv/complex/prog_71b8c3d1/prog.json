{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV string to parse\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV string using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve all records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Perform operations on the records\n            List<String> values = new ArrayList<>();\n            for (CSVRecord record : records) {\n                values.add(record.get(0) + \", \" + record.get(1));\n            }\n\n            // Output all values\n            for (String value : values) {\n                System.out.println(\"Record: \" + value);\n            }\n\n            // Retrieve the first record\n            CSVRecord firstRecord = records.get(0);\n\n            // Additional complex processing\n            int sum = 0;\n            for (int i = 0; i < values.size(); i++) {\n                sum += values.get(i).length();\n            }\n            System.out.println(\"Total length of values: \" + sum);\n\n            // Read the comment from the record\n            /* read */ String comment = firstRecord.getComment();\n\n            // Output the comment\n            System.out.println(\"Comment: \" + comment);\n\n            // More processing\n            List<String> transformedValues = new ArrayList<>();\n            for (String value : values) {\n                transformedValues.add(value.toUpperCase());\n            }\n\n            // Output transformed values\n            for (String transformedValue : transformedValues) {\n                System.out.println(\"Transformed Record: \" + transformedValue);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV string to parse\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV string using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n\n            // Output the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}