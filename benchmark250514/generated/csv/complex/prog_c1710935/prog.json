{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Step 1: Initialize CSVFormat with the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowDuplicateHeaderNames(true);\n\n        // Step 2: Prepare a sample CSV data\n        String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\";\n\n        try {\n            // Step 3: Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Step 4: Process each record and store in a list\n            ArrayList<HashMap<String, String>> recordsList = new ArrayList<>();\n            for (CSVRecord record : parser) {\n                HashMap<String, String> recordMap = new HashMap<>();\n                for (String header : parser.getHeaderMap().keySet()) {\n                    recordMap.put(header, record.get(header));\n                }\n                recordsList.add(recordMap);\n            }\n\n            // Step 5: Perform additional operations on recordsList\n            int totalAge = 0;\n            for (HashMap<String, String> recordMap : recordsList) {\n                totalAge += Integer.parseInt(recordMap.get(\"age\"));\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Step 6: Get the first record\n            CSVRecord firstRecord = parser.getRecords().get(0);\n\n            // Step 7: Use the read method to check if the header \"name\" is set\n            /* read */ boolean isNameSet = firstRecord.isSet(\"name\");\n\n            // Step 8: Output the result\n            System.out.println(\"Is 'name' header set in the first record: \" + isNameSet);\n\n            // Step 9: Additional unrelated operations\n            ArrayList<Integer> numberList = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numberList.add(i * 10);\n            }\n            for (int number : numberList) {\n                System.out.println(\"Number: \" + number);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowDuplicateHeaderNames(true);\n\n        // Prepare a sample CSV data\n        String csvData = \"name,age\\nJohn,30\\nJane,25\";\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method to check if the header \"name\" is set\n            /* read */ boolean isNameSet = record.isSet(\"name\");\n\n            // Output the result\n            System.out.println(\"Is 'name' header set: \" + isNameSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowDuplicateHeaderNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}