{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Prepare a CSV string to parse\n            String csvData = \"header1,header2\\nvalue1,value2\";\n\n            // Simulate a complex operation with another list\n            ArrayList<String> extraData = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                extraData.add(\"Extra Data \" + i);\n            }\n\n            // Parse the CSV data using the format with header comments\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Perform some operations on the extra data\n            for (String data : extraData) {\n                System.out.println(\"Processing: \" + data);\n            }\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Perform some unrelated complex operations\n            int sum = 0;\n            for (int i = 0; i < 100; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 100 numbers: \" + sum);\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(\"Comment from CSVRecord: \" + comment);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Prepare a CSV string to parse\n            String csvData = \"header1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data using the format with header comments\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Access the first record and read the comment\n            CSVRecord record = records.get(0);\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}