{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a trailing delimiter\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrailingDelimiter();\n\n            // Sample CSV data\n            String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Prepare a list to store CSV records\n            List<CSVRecord> records = new ArrayList<>();\n\n            // Process each CSV record\n            for (CSVRecord record : parser) {\n                records.add(record);\n            }\n\n            // Perform some unrelated operations on the records\n            for (CSVRecord record : records) {\n                String name = record.get(\"name\");\n                System.out.println(\"Name: \" + name);\n            }\n\n            // Check if a specific column is set for the first record\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isSet = firstRecord.isSet(\"age\");\n            System.out.println(\"Is 'age' column set? \" + isSet);\n\n            // Additional operations on CSV records\n            for (CSVRecord record : records) {\n                String city = record.get(\"city\");\n                System.out.println(\"City: \" + city);\n            }\n\n            // Perform calculations based on the age column\n            int totalAge = 0;\n            for (CSVRecord record : records) {\n                int age = Integer.parseInt(record.get(\"age\"));\n                totalAge += age;\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a trailing delimiter\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrailingDelimiter();\n\n            // Sample CSV data\n            String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            for (CSVRecord record : parser) {\n                // Check if a specific column is set\n                /* read */ boolean isSet = record.isSet(\"age\");\n                System.out.println(\"Is 'age' column set? \" + isSet);\n                break; // Ensure the read method is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}