{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Sample CSV content\n            String csvContent = \"Name,Age,Location\\nJohn,30,USA\\nDoe,25,Canada\";\n\n            // Parse the CSV content with the header\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withFirstRecordAsHeader();\n            \n            CSVParser parser = new CSVParser(new StringReader(csvContent), format);\n            CSVRecord record = parser.getRecords().get(0); // Get the first record\n\n            // Add complexity: Map to store CSV data\n            Map<String, String> dataMap = new HashMap<>();\n            for (String header : parser.getHeaderMap().keySet()) {\n                dataMap.put(header, record.get(header));\n            }\n\n            // Perform some operations on the map\n            for (Map.Entry<String, String> entry : dataMap.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n\n            // More complex operations: Calculate average age\n            int totalAge = 0;\n            int count = 0;\n            for (CSVRecord rec : parser) {\n                totalAge += Integer.parseInt(rec.get(\"Age\"));\n                count++;\n            }\n            double averageAge = (double) totalAge / count;\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Check if a specific header is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' column mapped? \" + isMapped);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Sample CSV content\n            String csvContent = \"Name,Age,Location\\nJohn,30,USA\\nDoe,25,Canada\";\n\n            // Parse the CSV content with the header\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withFirstRecordAsHeader();\n            \n            CSVParser parser = new CSVParser(new StringReader(csvContent), format);\n            CSVRecord record = parser.getRecords().get(0); // Get the first record\n\n            // Check if a specific header is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' column mapped? \" + isMapped);\n            \n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}