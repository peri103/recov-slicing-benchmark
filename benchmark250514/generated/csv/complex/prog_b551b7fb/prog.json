{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom record separator\n            CSVFormat format = CSVFormat.DEFAULT\n                /* write */ .withRecordSeparator(\";\");\n\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n\n            // Create a CSVPrinter to write data using the format\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write multiple records to the CSV\n            printer.printRecord(\"John\", \"Doe\", \"john.doe@example.com\");\n            printer.printRecord(\"Jane\", \"Smith\", \"jane.smith@example.com\");\n\n            // Add more complexity by manipulating data\n            List<String> names = Arrays.asList(\"Alice\", \"Bob\", \"Charlie\");\n            for (String name : names) {\n                printer.printRecord(name, \"Unknown\", name.toLowerCase() + \"@example.com\");\n            }\n\n            // Close the printer to flush data to the writer\n            printer.close();\n\n            // Intermediate processing of CSV data\n            String csvData = writer.toString();\n            String[] recordsArray = csvData.split(\";\");\n\n            for (String recordStr : recordsArray) {\n                System.out.println(\"Processing record: \" + recordStr);\n            }\n\n            // Parse the CSV data to get a CSVRecord\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvData)).getRecords().get(0);\n\n            // Additional unrelated processing\n            int sum = 0;\n            for (int i = 0; i < 5; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 5 integers: \" + sum);\n\n            // Use the read method to get the string representation of the CSVRecord\n            /* read */ String recordString = record.toString();\n\n            // Output the record string\n            System.out.println(recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a custom record separator\n            CSVFormat format = CSVFormat.DEFAULT\n                /* write */ .withRecordSeparator(\";\");\n\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n\n            // Create a CSVPrinter to write data using the format\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Write a record to the CSV\n            printer.printRecord(\"John\", \"Doe\", \"john.doe@example.com\");\n\n            // Close the printer to flush data to the writer\n            printer.close();\n\n            // Read the written CSV data\n            String csvData = writer.toString();\n\n            // Parse the CSV data to get a CSVRecord\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(csvData)).getRecords().get(0);\n\n            // Use the read method to get the string representation of the CSVRecord\n            /* read */ String recordString = record.toString();\n\n            // Output the record string\n            System.out.println(recordString);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withRecordSeparator",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}