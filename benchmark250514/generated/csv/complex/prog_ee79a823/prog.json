{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a sample CSV string\n        String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\";\n        \n        // Create a list to store CSV records\n        List<CSVRecord> allRecords = new ArrayList<>();\n        \n        try {\n            // Create a CSVFormat instance with the write method\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Add all records to the list\n            allRecords.addAll(parser.getRecords());\n\n            // Perform some operations on the records\n            for (CSVRecord rec : allRecords) {\n                System.out.println(\"Name: \" + rec.get(\"name\"));\n            }\n            \n            // Get the first record\n            CSVRecord record = allRecords.get(0);\n\n            // Perform some unrelated operations\n            int sumOfAges = 0;\n            for (CSVRecord rec : allRecords) {\n                sumOfAges += Integer.parseInt(rec.get(\"age\"));\n            }\n            System.out.println(\"Sum of ages: \" + sumOfAges);\n\n            // Use the read method to check if a field is mapped\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n\n            // Print the result of the read operation\n            System.out.println(\"Is 'name' mapped: \" + isMapped);\n\n            // Perform more complex operations\n            double averageAge = sumOfAges / (double) allRecords.size();\n            System.out.println(\"Average age: \" + averageAge);\n\n            // Check if other fields are mapped\n            boolean isAgeMapped = record.isMapped(\"age\");\n            boolean isCityMapped = record.isMapped(\"city\");\n            System.out.println(\"Is 'age' mapped: \" + isAgeMapped);\n            System.out.println(\"Is 'city' mapped: \" + isCityMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a sample CSV string\n        String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\";\n\n        try {\n            // Create a CSVFormat instance with the write method\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n\n            // Use the read method to check if a field is mapped\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n\n            // Print the result\n            System.out.println(\"Is 'name' mapped: \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}