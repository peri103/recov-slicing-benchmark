{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Smith, 25\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a map to store records\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n\n            // Process each record\n            for (CSVRecord record : parser) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                nameToAgeMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            for (Map.Entry<String, Integer> entry : nameToAgeMap.entrySet()) {\n                System.out.println(entry.getKey() + \" is \" + entry.getValue() + \" years old.\");\n            }\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Perform additional operations\n            int totalAge = nameToAgeMap.values().stream().mapToInt(Integer::intValue).sum();\n            System.out.println(\"Total age: \" + totalAge);\n\n            // Use the read method to check if a header is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' mapped? \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Smith, 25\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method to check if a header is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n\n            // Output the result\n            System.out.println(\"Is 'Name' mapped? \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}