{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with escape character\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withEscape('\\\\');\n            \n            // Create a sample CSV data\n            String csvData = \"name,age\\nJohn Doe,30\\nJane Doe,25\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = format.parse(new StringReader(csvData));\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Additional logic: Store parsed records in a list\n            List<String> recordStrings = new ArrayList<>();\n            for (CSVRecord record : records) {\n                recordStrings.add(record.toString());\n            }\n            \n            // Perform some operations on the list\n            for (int i = 0; i < recordStrings.size(); i++) {\n                String transformedRecord = recordStrings.get(i).replace(\"Doe\", \"Smith\");\n                recordStrings.set(i, transformedRecord);\n            }\n            \n            // Initialize another CSVFormat for different operations\n            CSVFormat anotherFormat = CSVFormat.DEFAULT.withQuote('\"');\n            String anotherCsvData = \"city,country\\nNew York,USA\\nLondon,UK\";\n            CSVParser anotherParser = anotherFormat.parse(new StringReader(anotherCsvData));\n            List<CSVRecord> anotherRecords = anotherParser.getRecords();\n            \n            // Process the second set of records\n            for (CSVRecord anotherRecord : anotherRecords) {\n                System.out.println(\"Processing: \" + anotherRecord.toString());\n            }\n            \n            // Read the first record and convert it to string\n            /* read */ String recordString = records.get(0).toString();\n            \n            // Print the first record string\n            System.out.println(recordString);\n            \n            // Print transformed records\n            for (String transformedRecord : recordStrings) {\n                System.out.println(\"Transformed: \" + transformedRecord);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with escape character\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withEscape('\\\\');\n            \n            // Create a sample CSV data\n            String csvData = \"name,age\\nJohn Doe,30\\nJane Doe,25\";\n            \n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            \n            // Read the first record and convert it to string\n            /* read */ String recordString = records.get(0).toString();\n            \n            // Print the record string\n            System.out.println(recordString);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withEscape",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}