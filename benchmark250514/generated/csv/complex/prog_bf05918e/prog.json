{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        // Initialize CSVFormat with the write method\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces();\n\n        // Create a sample CSV string\n        String csvData = \"name, age\\nJohn Doe, 30\";\n\n        // Parse the CSV string using the format\n        List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n        // Additional code to increase complexity\n        ArrayList<String> names = new ArrayList<>();\n        ArrayList<Integer> ages = new ArrayList<>();\n\n        // Populate names and ages lists from CSV records\n        for (CSVRecord record : records) {\n            if (record.isSet(\"name\")) {\n                names.add(record.get(\"name\"));\n            }\n            if (record.isSet(\"age\")) {\n                ages.add(Integer.parseInt(record.get(\"age\")));\n            }\n        }\n\n        // Perform some operations on names and ages\n        for (int i = 0; i < names.size(); i++) {\n            System.out.println(\"Name: \" + names.get(i) + \", Age: \" + ages.get(i));\n        }\n\n        // Use another CSVFormat operation for demonstration\n        CSVFormat customFormat = CSVFormat.EXCEL.withDelimiter(';');\n        String customCsvData = \"product;price\\nLaptop;999\";\n        List<CSVRecord> customRecords = customFormat.parse(new StringReader(customCsvData)).getRecords();\n\n        for (CSVRecord customRecord : customRecords) {\n            System.out.println(\"Product: \" + customRecord.get(\"product\") + \", Price: \" + customRecord.get(\"price\"));\n        }\n\n        // Read from the first record using the read method\n        /* read */ boolean isSet = records.get(0).isSet(\"name\");\n\n        // Output the result\n        System.out.println(\"Is 'name' set in the first record? \" + isSet);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        // Initialize CSVFormat with the write method\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces();\n\n        // Create a sample CSV string\n        String csvData = \"name, age\\nJohn Doe, 30\";\n\n        // Parse the CSV string using the format\n        List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n        // Read from the first record using the read method\n        /* read */ boolean isSet = records.get(0).isSet(\"name\");\n\n        // Output the result\n        System.out.println(\"Is 'name' set in the first record? \" + isSet);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}