{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Create a sample CSV data\n            String csvData = \"Column1,Column2\\nValue1,Value2\";\n\n            // Parse the CSV data using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Initialize a HashMap to store parsed data\n            HashMap<String, String> dataMap = new HashMap<>();\n\n            // Process each CSVRecord and store it in the HashMap\n            for (CSVRecord record : parser) {\n                String column1Value = record.get(\"Column1\");\n                String column2Value = record.get(\"Column2\");\n                dataMap.put(column1Value, column2Value);\n            }\n\n            // Perform some operations on the HashMap\n            for (String key : dataMap.keySet()) {\n                System.out.println(\"Key: \" + key + \", Value: \" + dataMap.get(key));\n            }\n\n            // Get the first record\n            CSVRecord firstRecord = parser.getRecords().get(0);\n\n            // Read the comment from the first record\n            /* read */ String comment = firstRecord.getComment();\n\n            // Output the comment\n            System.out.println(\"Comment from the first record: \" + comment);\n\n            // Additional complex operations\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n            // Further manipulation of the dataMap\n            if (dataMap.containsKey(\"Value1\")) {\n                dataMap.put(\"Value1\", \"UpdatedValue\");\n            }\n\n            // Print updated dataMap\n            for (String key : dataMap.keySet()) {\n                System.out.println(\"Updated Key: \" + key + \", Updated Value: \" + dataMap.get(key));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Create a sample CSV data\n            String csvData = \"Column1,Column2\\nValue1,Value2\";\n\n            // Parse the CSV data using the format with header comments\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n\n            // Output the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}