{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV content\n            String csvContent = \"# This is a comment\\n\" +\n                                \"header1,header2\\n\" +\n                                \"value1,value2\\n\";\n            \n            // Create CSVFormat with header comments\n            CSVFormat csvFormat = CSVFormat.DEFAULT\n                                    /* write */ .withHeaderComments(\"This is a comment\");\n            \n            // Parse the CSV content\n            CSVParser parser = CSVParser.parse(new StringReader(csvContent), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Complex operations with unrelated logic\n            ArrayList<String> dataList = new ArrayList<>();\n            for (CSVRecord record : records) {\n                StringBuilder sb = new StringBuilder();\n                for (String value : record) {\n                    sb.append(value).append(\" \");\n                }\n                dataList.add(sb.toString().trim());\n            }\n\n            // Further processing of dataList\n            for (int i = 0; i < dataList.size(); i++) {\n                String data = dataList.get(i);\n                System.out.println(\"Processed data: \" + data);\n            }\n\n            // Additional logic to simulate complexity\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 10 integers: \" + sum);\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            \n            // Output the comment\n            System.out.println(\"Comment from CSV: \" + comment);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV content\n            String csvContent = \"# This is a comment\\n\" +\n                                \"header1,header2\\n\" +\n                                \"value1,value2\\n\";\n            \n            // Create CSVFormat with header comments\n            CSVFormat csvFormat = CSVFormat.DEFAULT\n                                    /* write */ .withHeaderComments(\"This is a comment\");\n            \n            // Parse the CSV content\n            CSVParser parser = CSVParser.parse(new StringReader(csvContent), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            \n            // Output the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}