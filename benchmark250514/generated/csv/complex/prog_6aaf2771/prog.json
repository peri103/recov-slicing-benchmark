{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with a header comment\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withHeaderComments(\"This is a header comment\");\n\n        // Simulate CSV data\n        String csvData = \"# This is a header comment\\nName,Age\\nJohn,30\\nJane,25\";\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Create a new list to store ages\n            List<Integer> ages = new ArrayList<>();\n\n            // Process CSV records\n            for (CSVRecord record : records) {\n                if (record.getRecordNumber() > 1) { // Skip header\n                    String name = record.get(\"Name\");\n                    int age = Integer.parseInt(record.get(\"Age\"));\n                    ages.add(age);\n                    System.out.println(\"Name: \" + name + \", Age: \" + age);\n                }\n            }\n\n            // Calculate average age\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = (double) totalAge / ages.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Prepare new CSV data for output\n            StringWriter out = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(out, CSVFormat.DEFAULT.withHeader(\"Name\", \"Age\"));\n            printer.printRecord(\"Alice\", 28);\n            printer.printRecord(\"Bob\", 34);\n\n            // Parse the new CSV data\n            CSVParser newParser = CSVParser.parse(new StringReader(out.toString()), CSVFormat.DEFAULT.withHeader(\"Name\", \"Age\"));\n            List<CSVRecord> newRecords = newParser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(\"Header Comment: \" + comment);\n\n            // Output new CSV records\n            for (CSVRecord newRecord : newRecords) {\n                String newName = newRecord.get(\"Name\");\n                String newAge = newRecord.get(\"Age\");\n                System.out.println(\"New Record - Name: \" + newName + \", Age: \" + newAge);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with a header comment\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withHeaderComments(\"This is a header comment\");\n\n        // Simulate CSV data\n        String csvData = \"# This is a header comment\\nName,Age\\nJohn,30\\nJane,25\";\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}