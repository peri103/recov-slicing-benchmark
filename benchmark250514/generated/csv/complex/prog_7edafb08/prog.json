{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Initialize CSVFormat with trimming\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n        // Sample CSV data\n        String csvData = \"name, age, location\\nJohn Doe, 30, New York\";\n\n        // Parse the CSV data using the format\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        List<CSVRecord> records = parser.getRecords();\n\n        // Create an ArrayList to store names\n        ArrayList<String> names = new ArrayList<>();\n\n        // Iterate over records to populate names\n        for (CSVRecord record : records) {\n            if (record.isMapped(\"name\")) {\n                names.add(record.get(\"name\"));\n            }\n        }\n\n        // Perform operations on names\n        for (String name : names) {\n            System.out.println(\"Name: \" + name);\n        }\n\n        // Read the first record and check if a field is mapped\n        CSVRecord firstRecord = records.get(0);\n        /* read */ boolean isMapped = firstRecord.isMapped(\"name\");\n\n        // Output the result\n        System.out.println(\"Is 'name' mapped: \" + isMapped);\n\n        // More complex operations\n        ArrayList<Integer> ages = new ArrayList<>();\n        ages.add(30);\n        ages.add(25);\n        ages.add(40);\n\n        int sum = 0;\n        for (int age : ages) {\n            sum += age;\n        }\n        System.out.println(\"Total age: \" + sum);\n\n        // Additional CSV parsing operation\n        String csvData2 = \"product, price\\nLaptop, 1000\\nPhone, 500\";\n        CSVParser parser2 = CSVParser.parse(new StringReader(csvData2), format);\n        List<CSVRecord> productRecords = parser2.getRecords();\n\n        for (CSVRecord productRecord : productRecords) {\n            if (productRecord.isMapped(\"product\")) {\n                System.out.println(\"Product: \" + productRecord.get(\"product\"));\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Initialize CSVFormat with trimming\n        /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n        // Sample CSV data\n        String csvData = \"name, age, location\\nJohn Doe, 30, New York\";\n\n        // Parse the CSV data using the format\n        CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n        List<CSVRecord> records = parser.getRecords();\n\n        // Read the first record and check if a field is mapped\n        CSVRecord record = records.get(0);\n        /* read */ boolean isMapped = record.isMapped(\"name\");\n\n        // Output the result\n        System.out.println(\"Is 'name' mapped: \" + isMapped);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}