{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV data\n            String csvData = \"# This is a comment\\nHeader1,Header2\\nValue1,Value2\";\n\n            // Configure CSVFormat with a header comment\n            CSVFormat format = CSVFormat.DEFAULT\n                    /* write */ .withHeaderComments(\"This is a comment\");\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional unrelated code\n            Map<String, Integer> map = new HashMap<>();\n            map.put(\"Key1\", 100);\n            map.put(\"Key2\", 200);\n            map.put(\"Key3\", 300);\n\n            int total = 0;\n            for (String key : map.keySet()) {\n                total += map.get(key);\n            }\n            System.out.println(\"Total: \" + total);\n\n            // Iterate over records and print them\n            for (CSVRecord record : records) {\n                System.out.println(\"Record: \" + record.toString());\n            }\n\n            // Read the comment from the first record\n            CSVRecord record = records.get(0);\n            /* read */ String comment = record.getComment();\n\n            // Output the comment\n            System.out.println(comment);\n\n            // More complex operations\n            Map<String, String> complexMap = new HashMap<>();\n            complexMap.put(\"A\", \"Alpha\");\n            complexMap.put(\"B\", \"Bravo\");\n            complexMap.put(\"C\", \"Charlie\");\n\n            for (Map.Entry<String, String> entry : complexMap.entrySet()) {\n                System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare CSV data\n            String csvData = \"# This is a comment\\nHeader1,Header2\\nValue1,Value2\";\n\n            // Configure CSVFormat with a header comment\n            CSVFormat format = CSVFormat.DEFAULT\n                    /* write */ .withHeaderComments(\"This is a comment\");\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            CSVRecord record = records.get(0);\n            /* read */ String comment = record.getComment();\n\n            // Output the comment\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}