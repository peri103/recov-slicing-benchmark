{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSV related components\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        try {\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            \n            // Initialize unrelated data structures\n            ArrayList<Integer> numberList = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numberList.add(i * 10);\n            }\n            \n            // Perform some operations on numberList\n            int sum = 0;\n            for (Integer number : numberList) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n            \n            // Write a comment using CSVPrinter\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n            \n            // Perform more operations on numberList\n            int maxNumber = Integer.MIN_VALUE;\n            for (Integer number : numberList) {\n                if (number > maxNumber) {\n                    maxNumber = number;\n                }\n            }\n            System.out.println(\"Max number: \" + maxNumber);\n            \n            // Read the comment using CSVRecord\n            String csvData = writer.toString();\n            StringReader reader = new StringReader(csvData);\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            String comment = null;\n            for (CSVRecord record : records) {\n                /* read */ comment = record.getComment();\n                break; // Ensure the read method is executed only once\n            }\n            \n            System.out.println(\"Comment from CSV: \" + comment);\n            \n            // Further operations on numberList\n            int minNumber = Integer.MAX_VALUE;\n            for (Integer number : numberList) {\n                if (number < minNumber) {\n                    minNumber = number;\n                }\n            }\n            System.out.println(\"Min number: \" + minNumber);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        try {\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n            \n            String csvData = writer.toString();\n            StringReader reader = new StringReader(csvData);\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            String comment = null;\n            for (CSVRecord record : records) {\n                /* read */ comment = record.getComment();\n                break; // Ensure the read method is executed only once\n            }\n            \n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}