{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"Name,Age,Location\\nJohn,30,USA\\nJane,25,UK\";\n        \n        try {\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            Map<String, Integer> ageMap = new HashMap<>();\n            ageMap.put(\"John\", 30);\n            ageMap.put(\"Jane\", 25);\n\n            for (CSVRecord record : parser) {\n                String name = record.get(\"Name\");\n                Integer age = ageMap.get(name);\n                System.out.println(\"Name: \" + name + \", Age: \" + age);\n\n                // Perform some unrelated computation\n                int sum = 0;\n                for (int i = 0; i < 10; i++) {\n                    sum += i;\n                }\n                System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n                /* read */ boolean isMapped = record.isMapped(\"Name\");\n                System.out.println(\"Is 'Name' mapped: \" + isMapped);\n                break; // Ensure the read method is executed only once\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        // Additional unrelated code to increase complexity\n        Map<String, String> locationMap = new HashMap<>();\n        locationMap.put(\"John\", \"USA\");\n        locationMap.put(\"Jane\", \"UK\");\n\n        for (Map.Entry<String, String> entry : locationMap.entrySet()) {\n            System.out.println(\"Person: \" + entry.getKey() + \", Location: \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"Name,Age,Location\\nJohn,30,USA\\nJane,25,UK\";\n        \n        try {\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            \n            for (CSVRecord record : parser) {\n                /* read */ boolean isMapped = record.isMapped(\"Name\");\n                System.out.println(\"Is 'Name' mapped: \" + isMapped);\n                break; // Ensure the read method is executed only once\n            }\n            \n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}