{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withIgnoreSurroundingSpaces(true);\n\n            // Prepare a sample CSV data\n            String csvData = \"Name, Age, City\\nJohn Doe, 30, New York\\nJane Doe, 25, Los Angeles\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(reader).getRecords();\n\n            // Additional data processing\n            Map<String, Integer> ageMap = new HashMap<>();\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                ageMap.put(name, age);\n            }\n\n            // Perform some operations with the map\n            for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n                System.out.println(entry.getKey() + \" is \" + entry.getValue() + \" years old.\");\n            }\n\n            // Additional logic to find the oldest person\n            String oldestPerson = null;\n            int maxAge = -1;\n            for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n                if (entry.getValue() > maxAge) {\n                    maxAge = entry.getValue();\n                    oldestPerson = entry.getKey();\n                }\n            }\n            System.out.println(\"The oldest person is \" + oldestPerson + \" with age \" + maxAge);\n\n            // Use the read method on the first record\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isSet = firstRecord.isSet(\"Name\");\n\n            // Print the result\n            System.out.println(\"Is 'Name' set in the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withIgnoreSurroundingSpaces(true);\n\n            // Prepare a sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Doe, 25\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data using the format\n            List<CSVRecord> records = format.parse(reader).getRecords();\n\n            // Use the read method on the first record\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isSet = firstRecord.isSet(\"Name\");\n\n            // Print the result\n            System.out.println(\"Is 'Name' set in the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}