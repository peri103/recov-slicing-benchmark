{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with a null string\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,25\\nDoe,NULL\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Create a hashmap to store records\n            HashMap<String, ArrayList<String>> recordsMap = new HashMap<>();\n\n            for (CSVRecord record : parser) {\n                String name = record.get(\"name\");\n                String age = record.get(\"age\");\n\n                // Add records to the hashmap\n                recordsMap.putIfAbsent(name, new ArrayList<>());\n                recordsMap.get(name).add(age);\n            }\n\n            // Process records from hashmap\n            for (String name : recordsMap.keySet()) {\n                ArrayList<String> ages = recordsMap.get(name);\n                System.out.println(\"Name: \" + name + \", Ages: \" + ages);\n            }\n\n            // Close parser\n            parser.close();\n\n            // Re-parse the CSV data to demonstrate the read method far apart from write\n            parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                // Check if the 'age' field is set for the record\n                /* read */ boolean isAgeSet = record.isSet(\"age\");\n                System.out.println(\"Is 'age' set for the record? \" + isAgeSet);\n            }\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with a null string\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,25\\nDoe,NULL\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                // Check if the 'age' field is set for the record\n                /* read */ boolean isAgeSet = record.isSet(\"age\");\n                System.out.println(\"Is 'age' set for the record? \" + isAgeSet);\n            }\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}