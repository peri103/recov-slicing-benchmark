{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Additional CSVFormat with different configuration\n            CSVFormat format2 = CSVFormat.DEFAULT.withDelimiter(';').withIgnoreEmptyLines();\n\n            // Create a sample CSV content\n            String csvContent = \"Name, Age\\nAlice, 30\\nBob, 25\";\n            String csvContent2 = \"Product; Price\\nLaptop; 1000\\nPhone; 500\";\n\n            // Parse the CSV content\n            CSVParser parser = CSVParser.parse(csvContent, format);\n            CSVParser parser2 = CSVParser.parse(csvContent2, format2);\n\n            // Get the records from the parser\n            List<CSVRecord> records = parser.getRecords();\n            List<CSVRecord> records2 = parser2.getRecords();\n\n            // Perform some operations on the second set of records\n            for (CSVRecord record : records2) {\n                String product = record.get(0);\n                String price = record.get(1);\n                System.out.println(\"Product: \" + product + \", Price: \" + price);\n            }\n\n            // Additional logic using ArrayList\n            ArrayList<String> commentsList = new ArrayList<>();\n            commentsList.add(\"First comment\");\n            commentsList.add(\"Second comment\");\n\n            for (String comment : commentsList) {\n                System.out.println(\"Comment: \" + comment);\n            }\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Create a sample CSV content\n            String csvContent = \"Name, Age\\nAlice, 30\\nBob, 25\";\n\n            // Parse the CSV content\n            CSVParser parser = CSVParser.parse(csvContent, format);\n\n            // Get the records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}