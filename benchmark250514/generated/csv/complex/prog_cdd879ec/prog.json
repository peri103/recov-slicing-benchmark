{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter out = new StringWriter();\n        HashMap<String, Integer> map = new HashMap<>();\n        ArrayList<String> list = new ArrayList<>();\n        \n        try {\n            // Initialize CSVPrinter with a format that supports comments\n            CSVPrinter printer = new CSVPrinter(out, CSVFormat.DEFAULT.withCommentMarker('#'));\n            \n            /* write */ printer.printComment(\"This is a comment\");\n            printer.printRecord(\"header1\", \"header2\");\n            printer.printRecord(\"value1\", \"value2\");\n            printer.flush();\n            \n            // Simulate some unrelated operations\n            map.put(\"one\", 1);\n            map.put(\"two\", 2);\n            list.add(\"alpha\");\n            list.add(\"beta\");\n            \n            for (String key : map.keySet()) {\n                System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n            }\n            \n            for (String str : list) {\n                System.out.println(\"List item: \" + str);\n            }\n            \n            // Read the CSV content\n            String csvData = out.toString();\n            StringReader reader = new StringReader(csvData);\n            CSVParser parser = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader);\n            \n            for (CSVRecord record : parser) {\n                // Perform some unrelated operations\n                int sum = 0;\n                for (int i = 0; i < map.size(); i++) {\n                    sum += i;\n                }\n                System.out.println(\"Sum: \" + sum);\n                \n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Comment: \" + comment);\n                }\n            }\n            \n            // More unrelated operations\n            if (!list.isEmpty()) {\n                list.remove(0);\n                System.out.println(\"First item removed, remaining: \" + list);\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter out = new StringWriter();\n        \n        try {\n            // Initialize CSVPrinter with a format that supports comments\n            CSVPrinter printer = new CSVPrinter(out, CSVFormat.DEFAULT.withCommentMarker('#'));\n            \n            /* write */ printer.printComment(\"This is a comment\");\n            printer.printRecord(\"header1\", \"header2\");\n            printer.printRecord(\"value1\", \"value2\");\n            printer.flush();\n            \n            // Read the CSV content\n            String csvData = out.toString();\n            StringReader reader = new StringReader(csvData);\n            CSVParser parser = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader);\n            \n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Comment: \" + comment);\n                }\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}