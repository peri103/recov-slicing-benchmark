{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat object and set a null string representation\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n\n            // Prepare a CSV input string with a null value\n            String csvData = \"name,age\\nJohn,NULL\\nDoe,25\";\n\n            // Parse the CSV data using the format with null string\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Additional code to demonstrate complexity\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"name\");\n                Integer age = rec.isSet(\"age\") ? Integer.valueOf(rec.get(\"age\")) : null;\n                nameToAgeMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            int totalAge = 0;\n            int count = 0;\n            for (Map.Entry<String, Integer> entry : nameToAgeMap.entrySet()) {\n                if (entry.getValue() != null) {\n                    totalAge += entry.getValue();\n                    count++;\n                }\n            }\n            double averageAge = count > 0 ? (double) totalAge / count : 0;\n            System.out.println(\"Average age: \" + averageAge);\n\n            // Retrieve the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if the 'age' field is set (it should be null)\n            /* read */ boolean isAgeSet = record.isSet(\"age\");\n\n            // Output the result\n            System.out.println(\"Is 'age' field set? \" + isAgeSet);\n\n            // Further operations to increase complexity\n            if (isAgeSet) {\n                System.out.println(\"Age is set for the first record.\");\n            } else {\n                System.out.println(\"Age is not set for the first record.\");\n            }\n\n            // Print all name-age pairs\n            for (String name : nameToAgeMap.keySet()) {\n                System.out.println(\"Name: \" + name + \", Age: \" + nameToAgeMap.get(name));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat object and set a null string representation\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withNullString(\"NULL\");\n\n            // Prepare a CSV input string with a null value\n            String csvData = \"name,age\\nJohn,NULL\\nDoe,25\";\n            \n            // Parse the CSV data using the format with null string\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Retrieve the first record\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Check if the 'age' field is set (it should be null)\n            /* read */ boolean isAgeSet = record.isSet(\"age\");\n            \n            // Output the result\n            System.out.println(\"Is 'age' field set? \" + isAgeSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}