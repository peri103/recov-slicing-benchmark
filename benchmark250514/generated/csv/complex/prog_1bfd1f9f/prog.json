{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter to write records\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record\n            /* write */ csvPrinter.printRecord(\"Alice\", \"24\", \"Engineer\");\n            \n            // Close the printer to flush the data to the writer\n            csvPrinter.flush();\n\n            // Some unrelated complex operations with ArrayList\n            ArrayList<String> names = new ArrayList<>();\n            names.add(\"Bob\");\n            names.add(\"Charlie\");\n            names.add(\"David\");\n            \n            for (String name : names) {\n                System.out.println(\"Processing name: \" + name);\n            }\n\n            // Retrieve the written CSV data\n            String csvData = writer.toString();\n\n            // Initialize a CSVParser to read records\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), CSVFormat.DEFAULT);\n            \n            // Some more complex operations\n            List<Integer> ages = new ArrayList<>();\n            for (int i = 20; i <= 30; i += 2) {\n                ages.add(i);\n            }\n            \n            for (Integer age : ages) {\n                System.out.println(\"Age: \" + age);\n            }\n\n            // Read the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n            \n            // Read a value from the record\n            /* read */ String name = record.get(0);\n            \n            // Print the value\n            System.out.println(name);\n            \n            // Additional complex operations\n            ArrayList<String> professions = new ArrayList<>();\n            professions.add(\"Doctor\");\n            professions.add(\"Lawyer\");\n            professions.add(\"Artist\");\n            \n            for (String profession : professions) {\n                System.out.println(\"Profession: \" + profession);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter to write records\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a record\n            /* write */ csvPrinter.printRecord(\"Alice\", \"24\", \"Engineer\");\n            \n            // Close the printer to flush the data to the writer\n            csvPrinter.flush();\n\n            // Retrieve the written CSV data\n            String csvData = writer.toString();\n\n            // Initialize a CSVParser to read records\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), CSVFormat.DEFAULT);\n            \n            // Read the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n            \n            // Read a value from the record\n            /* read */ String name = record.get(0);\n            \n            // Print the value\n            System.out.println(name);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}