{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT\n                /* write */ .withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV input to parse\n            String csvData = \"# This is a comment\\nHeader1,Header2\\nValue1,Value2\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Create a HashMap to store parsed values\n            HashMap<String, String> dataMap = new HashMap<>();\n\n            // Populate the HashMap with CSV data\n            for (CSVRecord record : records) {\n                dataMap.put(record.get(0), record.get(1));\n            }\n\n            // Perform some operations on the HashMap\n            for (String key : dataMap.keySet()) {\n                System.out.println(\"Key: \" + key + \", Value: \" + dataMap.get(key));\n            }\n\n            // Retrieve the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Output the comment\n            System.out.println(\"Comment: \" + comment);\n\n            // Additional complex operations\n            int sum = 0;\n            for (int i = 0; i < 5; i++) {\n                sum += i * 10;\n            }\n            System.out.println(\"Sum of multiples of 10 from 0 to 4: \" + sum);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT\n                /* write */ .withHeaderComments(\"This is a comment\");\n\n            // Prepare a sample CSV input to parse\n            String csvData = \"# This is a comment\\nHeader1,Header2\\nValue1,Value2\";\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Retrieve the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Output the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}