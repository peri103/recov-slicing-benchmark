{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVPrinter;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with ignoring surrounding spaces\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true);\n\n            // Sample CSV data\n            String csvData = \"id, name, age\\n1, John Doe, 30\\n2, Jane Smith, 25\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Unrelated logic: Create a list of names from the records\n            List<String> names = new ArrayList<>();\n            for (CSVRecord record : parser) {\n                names.add(record.get(\"name\"));\n            }\n            \n            // Print the names\n            System.out.println(\"Names extracted from CSV:\");\n            for (String name : names) {\n                System.out.println(name);\n            }\n            \n            // More unrelated logic: Create a new CSV with modified data\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT.withHeader(\"id\", \"name\", \"age\"));\n            for (int i = 0; i < names.size(); i++) {\n                printer.printRecord(i + 1, names.get(i), 20 + i * 5); // Modify ages\n            }\n            printer.flush();\n            \n            // Print the newly created CSV data\n            System.out.println(\"Modified CSV data:\");\n            System.out.println(writer.toString());\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Check if a specific column is set in the record\n            /* read */ boolean isNameSet = record.isSet(\"name\");\n            \n            // Print the result\n            System.out.println(\"Is 'name' column set in the first record? \" + isNameSet);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with ignoring surrounding spaces\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true);\n            \n            // Sample CSV data\n            String csvData = \"id, name, age\\n1, John Doe, 30\\n2, Jane Smith, 25\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Check if a specific column is set in the record\n            /* read */ boolean isNameSet = record.isSet(\"name\");\n            \n            // Print the result\n            System.out.println(\"Is 'name' column set in the first record? \" + isNameSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}