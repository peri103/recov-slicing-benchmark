{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age, Location\\nJohn Doe, 29, New York\\nJane Smith, 34, Los Angeles\";\n\n            // Parse the sample CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a list to store CSV records\n            ArrayList<CSVRecord> recordsList = new ArrayList<>();\n\n            // Iterate over the parsed records and add them to the list\n            for (CSVRecord record : parser) {\n                recordsList.add(record);\n            }\n\n            // Create a map to store names and their mapped status\n            HashMap<String, Boolean> nameMappedStatus = new HashMap<>();\n\n            // Iterate over the records list and check mapping status\n            for (CSVRecord record : recordsList) {\n                // Use the read method to check if the field 'Name' is mapped\n                /* read */ boolean isMapped = record.isMapped(\"Name\");\n                nameMappedStatus.put(record.get(\"Name\"), isMapped);\n            }\n\n            // Print the mapping status of each name\n            for (String name : nameMappedStatus.keySet()) {\n                System.out.println(\"Is '\" + name + \"' mapped: \" + nameMappedStatus.get(name));\n            }\n\n            // Additional complexity: Calculate average age\n            int totalAge = 0;\n            for (CSVRecord record : recordsList) {\n                totalAge += Integer.parseInt(record.get(\"Age\"));\n            }\n            double averageAge = totalAge / (double) recordsList.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Additional complexity: Count locations\n            HashMap<String, Integer> locationCount = new HashMap<>();\n            for (CSVRecord record : recordsList) {\n                String location = record.get(\"Location\");\n                locationCount.put(location, locationCount.getOrDefault(location, 0) + 1);\n            }\n            System.out.println(\"Location Count: \" + locationCount);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with the write method\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age, Location\\nJohn Doe, 29, New York\";\n\n            // Parse the sample CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record from the parsed CSV data\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method to check if the field 'Name' is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n\n            // Print the result\n            System.out.println(\"Is 'Name' mapped: \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}