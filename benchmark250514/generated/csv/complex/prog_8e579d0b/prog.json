{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSV format with the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreSurroundingSpaces();\n\n        // Sample CSV data\n        String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n        // Additional complexity: using another CSV format and parsing\n        CSVFormat anotherFormat = CSVFormat.RFC4180.withHeader(\"name\", \"age\");\n        String anotherCsvData = \"Alice, 28\\nBob, 22\";\n        List<CSVRecord> anotherRecords = null;\n\n        try {\n            anotherRecords = anotherFormat.parse(new StringReader(anotherCsvData)).getRecords();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Process the additional CSV records\n        if (anotherRecords != null) {\n            for (CSVRecord record : anotherRecords) {\n                System.out.println(\"Name: \" + record.get(\"name\") + \", Age: \" + record.get(\"age\"));\n            }\n        }\n\n        try {\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Unrelated complex code: Perform operations on a list\n            ArrayList<Integer> numberList = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numberList.add(i * 2);\n            }\n\n            for (int number : numberList) {\n                System.out.println(\"Number: \" + number);\n            }\n\n            // Read using the read method\n            if (!records.isEmpty()) {\n                CSVRecord record = records.get(0);\n                /* read */ boolean isConsistent = record.isConsistent();\n                System.out.println(\"Is the record consistent? \" + isConsistent);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSV format with the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreSurroundingSpaces();\n\n        // Sample CSV data\n        String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n        try {\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Read using the read method\n            if (!records.isEmpty()) {\n                CSVRecord record = records.get(0);\n                /* read */ boolean isConsistent = record.isConsistent();\n                System.out.println(\"Is the record consistent? \" + isConsistent);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}