{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat csvFormat = CSVFormat.DEFAULT.withNullString(\"NULL\");\n            /* write */ csvFormat = csvFormat.withNullString(\"NULL\");\n\n            // Prepare a sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,NULL,New York\\nDoe,25,NULL\";\n\n            // Parse CSV data using the format\n            List<CSVRecord> records = csvFormat.parse(new StringReader(csvData)).getRecords();\n\n            // Initialize a map to store the parsed data\n            Map<String, String> dataMap = new HashMap<>();\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                String age = record.get(\"Age\");\n                String location = record.get(\"Location\");\n                dataMap.put(name, age + \" years old, located in \" + location);\n            }\n\n            // Process data in map\n            for (Map.Entry<String, String> entry : dataMap.entrySet()) {\n                System.out.println(entry.getKey() + \" is \" + entry.getValue());\n            }\n\n            // Additional processing\n            int totalAge = 0;\n            for (CSVRecord record : records) {\n                String ageStr = record.get(\"Age\");\n                if (!ageStr.equals(\"NULL\")) {\n                    totalAge += Integer.parseInt(ageStr);\n                }\n            }\n            System.out.println(\"Total age of all individuals: \" + totalAge);\n\n            // Read the value using the read method\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"Location\");\n            System.out.println(\"Is 'Location' set for the first record? \" + isSet);\n\n            // Further processing\n            for (CSVRecord rec : records) {\n                if (rec.isSet(\"Location\")) {\n                    System.out.println(rec.get(\"Name\") + \" has a location set.\");\n                } else {\n                    System.out.println(rec.get(\"Name\") + \" has no location set.\");\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            CSVFormat csvFormat = CSVFormat.DEFAULT.withNullString(\"NULL\");\n            /* write */ csvFormat = csvFormat.withNullString(\"NULL\");\n\n            // Prepare a sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,NULL,New York\\nDoe,25,NULL\";\n\n            // Parse CSV data using the format\n            List<CSVRecord> records = csvFormat.parse(new StringReader(csvData)).getRecords();\n\n            // Read the value using the read method\n            CSVRecord record = records.get(0);\n            /* read */ boolean isSet = record.isSet(\"Location\");\n            System.out.println(\"Is 'Location' set for the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}