{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\n\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the writer for CSV output\n            StringWriter writer = new StringWriter();\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Use the write method to print a comment\n            /* write */ csvPrinter.printComment(\"This is a comment\");\n            csvPrinter.flush();\n\n            // Additional complex operations\n            ArrayList<String> list = new ArrayList<>();\n            list.add(\"First\");\n            list.add(\"Second\");\n            list.add(\"Third\");\n\n            for (String item : list) {\n                if (item.equals(\"Second\")) {\n                    System.out.println(\"Found: \" + item);\n                }\n            }\n\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n            // Parse the written CSV content\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT.withCommentMarker('#'));\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional logic before reading the comment\n            int maxLength = 0;\n            for (CSVRecord record : records) {\n                maxLength = Math.max(maxLength, record.size());\n            }\n            System.out.println(\"Max record length: \" + maxLength);\n\n            // Use the read method to get the comment\n            /* read */ String comment = records.get(0).getComment();\n\n            // Output the comment\n            System.out.println(\"Comment: \" + comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\n\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the writer for CSV output\n            StringWriter writer = new StringWriter();\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Use the write method to print a comment\n            /* write */ csvPrinter.printComment(\"This is a comment\");\n            csvPrinter.flush();\n\n            // Parse the written CSV content\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT.withCommentMarker('#'));\n            List<CSVRecord> records = parser.getRecords();\n\n            // Use the read method to get the comment\n            /* read */ String comment = records.get(0).getComment();\n\n            // Output the comment\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}