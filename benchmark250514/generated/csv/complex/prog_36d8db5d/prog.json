{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.List;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n            /* write */\n\n            // Prepare a sample CSV data\n            String csvData = \"# This is a comment\\nName,Age\\nJohn Doe,30\\nJane Doe,25\";\n            StringReader csvReader = new StringReader(csvData);\n            \n            // Parse the CSV data\n            CSVParser parser = new CSVParser(csvReader, format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Create a map to store names and ages\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                nameAgeMap.put(name, age);\n            }\n            \n            // Perform some operations on the map\n            nameAgeMap.put(\"Alice\", 28);\n            nameAgeMap.put(\"Bob\", 32);\n            int totalAge = 0;\n            for (Integer age : nameAgeMap.values()) {\n                totalAge += age;\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n            \n            // Read the comment from the first record\n            /* read */\n            String comment = records.get(0).getComment();\n            System.out.println(comment);\n            \n            // Additional operations\n            String longestName = \"\";\n            for (String name : nameAgeMap.keySet()) {\n                if (name.length() > longestName.length()) {\n                    longestName = name;\n                }\n            }\n            System.out.println(\"Longest Name: \" + longestName);\n            \n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.List;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n            /* write */\n            \n            // Prepare a sample CSV data\n            String csvData = \"# This is a comment\\nName,Age\\nJohn Doe,30\\nJane Doe,25\";\n            StringReader csvReader = new StringReader(csvData);\n            \n            // Parse the CSV data\n            CSVParser parser = new CSVParser(csvReader, format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Read the comment from the first record\n            /* read */\n            String comment = records.get(0).getComment();\n            System.out.println(comment);\n            \n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}