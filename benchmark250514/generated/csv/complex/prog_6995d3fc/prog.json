{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the specified configuration\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withAllowMissingColumnNames(true);\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nJane,25\\nDoe,40\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records\n            ArrayList<CSVRecord> records = new ArrayList<>(parser.getRecords());\n\n            // Additional complex logic: Create a map to store names and ages\n            HashMap<String, Integer> nameAgeMap = new HashMap<>();\n            for (CSVRecord record : records) {\n                if (record.isSet(\"name\") && record.isSet(\"age\")) {\n                    nameAgeMap.put(record.get(\"name\"), Integer.parseInt(record.get(\"age\")));\n                }\n            }\n\n            // Print the map\n            System.out.println(\"Name-Age map: \" + nameAgeMap);\n\n            // Process each record to find a specific condition\n            for (CSVRecord record : records) {\n                if (record.isSet(\"name\") && record.get(\"name\").equals(\"Doe\")) {\n                    System.out.println(\"Found Doe's record with age: \" + record.get(\"age\"));\n                }\n            }\n\n            // Check if a column is set in the first record\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isSet = firstRecord.isSet(\"name\");\n            System.out.println(\"Is 'name' column set in the first record? \" + isSet);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the specified configuration\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withAllowMissingColumnNames(true);\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if a column is set\n            /* read */ boolean isSet = record.isSet(\"name\");\n            System.out.println(\"Is 'name' column set in the first record? \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}