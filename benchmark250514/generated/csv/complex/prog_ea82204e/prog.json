{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat using the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n\n        // Create a CSVParser to parse a sample CSV input\n        String csvData = \"Name,Age\\nJohn,30\\nDoe,25\";\n        List<CSVRecord> records = null;\n        try {\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            records = parser.getRecords();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Additional code to make the program more complex\n        ArrayList<String> names = new ArrayList<>();\n        ArrayList<Integer> ages = new ArrayList<>();\n        \n        if (records != null) {\n            for (CSVRecord record : records) {\n                names.add(record.get(\"Name\"));\n                ages.add(Integer.parseInt(record.get(\"Age\")));\n            }\n        }\n\n        // Manipulate data in names and ages lists\n        for (int i = 0; i < names.size(); i++) {\n            System.out.println(\"Name: \" + names.get(i) + \", Age: \" + ages.get(i));\n        }\n\n        // Use the read method on the first CSVRecord\n        if (records != null && !records.isEmpty()) {\n            CSVRecord record = records.get(0);\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n        }\n\n        // Further manipulation to make the program more complex\n        int totalAge = 0;\n        for (int age : ages) {\n            totalAge += age;\n        }\n        double averageAge = (double) totalAge / ages.size();\n        System.out.println(\"Average Age: \" + averageAge);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat using the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withAllowMissingColumnNames(true);\n        \n        // Create a CSVParser to parse a sample CSV input\n        String csvData = \"Name,Age\\nJohn,30\\nDoe,25\";\n        List<CSVRecord> records = null;\n        try {\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            records = parser.getRecords();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        // Use the read method on the first CSVRecord\n        if (records != null && !records.isEmpty()) {\n            CSVRecord record = records.get(0);\n            /* read */ boolean isConsistent = record.isConsistent();\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}