{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withAllowMissingColumnNames();\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Additional logic: Create a map to store CSV records\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n\n            // Iterate over records and populate the map\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"name\");\n                int age = Integer.parseInt(rec.get(\"age\"));\n                nameToAgeMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            if (nameToAgeMap.containsKey(\"John\")) {\n                int johnAge = nameToAgeMap.get(\"John\");\n                System.out.println(\"John's age: \" + johnAge);\n            }\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method\n            /* read */ boolean isSet = record.isSet(\"name\");\n\n            // Output the result\n            System.out.println(\"Is 'name' set in the first record: \" + isSet);\n\n            // Additional logic: Print all names and ages\n            for (Map.Entry<String, Integer> entry : nameToAgeMap.entrySet()) {\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withAllowMissingColumnNames();\n            \n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Use the read method\n            /* read */ boolean isSet = record.isSet(\"name\");\n            \n            // Output the result\n            System.out.println(\"Is 'name' set in the first record: \" + isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}