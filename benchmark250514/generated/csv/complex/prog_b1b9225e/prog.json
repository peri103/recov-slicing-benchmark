{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.List;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVFormat instance with header comments\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withHeaderComments(\"This is a comment\");\n\n            // Use CSVPrinter to write data\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(\"header1\", \"header2\");\n            printer.printRecord(\"value1\", \"value2\");\n            printer.flush();\n            \n            // Parse the written CSV data\n            String csvData = writer.toString();\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Retrieve records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional complex operations\n            HashMap<String, Integer> map = new HashMap<>();\n            map.put(\"key1\", 100);\n            map.put(\"key2\", 200);\n            map.put(\"key3\", 300);\n\n            for (String key : map.keySet()) {\n                System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n            }\n\n            int sum = 0;\n            for (Integer value : map.values()) {\n                sum += value;\n            }\n            System.out.println(\"Sum of values: \" + sum);\n\n            // Read the comment from the first record\n            String comment = /* read */ records.get(0).getComment();\n            System.out.println(comment);\n\n            // Close resources\n            parser.close();\n            writer.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVFormat instance with header comments\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withHeaderComments(\"This is a comment\");\n\n            // Use CSVPrinter to write data\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(\"header1\", \"header2\");\n            printer.printRecord(\"value1\", \"value2\");\n            printer.flush();\n            \n            // Parse the written CSV data\n            String csvData = writer.toString();\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Retrieve records\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Read the comment from the first record\n            String comment = /* read */ records.get(0).getComment();\n            System.out.println(comment);\n\n            // Close resources\n            parser.close();\n            writer.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}