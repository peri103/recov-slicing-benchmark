{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a specific null string\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withNullString(\"NULL\");\n\n            // Create a sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nJane,NULL\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Create a list to store names\n            List<String> names = new ArrayList<>();\n\n            // Retrieve the records and store names\n            for (CSVRecord record : parser) {\n                names.add(record.get(\"name\"));\n            }\n\n            // Perform some operations on names\n            for (String name : names) {\n                System.out.println(\"Name: \" + name);\n            }\n\n            // Check if a specific field is set for each record\n            for (CSVRecord record : parser) {\n                boolean isSet = /* read */ record.isSet(\"age\");\n                System.out.println(\"Is 'age' set: \" + isSet);\n            }\n\n            // Perform additional operations on CSV data\n            for (CSVRecord record : parser) {\n                String age = record.get(\"age\");\n                if (\"NULL\".equals(age)) {\n                    System.out.println(record.get(\"name\") + \" has no age specified.\");\n                } else {\n                    System.out.println(record.get(\"name\") + \" is \" + age + \" years old.\");\n                }\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a specific null string\n            CSVFormat format = CSVFormat.DEFAULT /* write */.withNullString(\"NULL\");\n\n            // Create a sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nJane,NULL\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Retrieve the records\n            for (CSVRecord record : parser) {\n                // Check if a specific field is set\n                boolean isSet = /* read */ record.isSet(\"age\");\n                System.out.println(\"Is 'age' set: \" + isSet);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}