{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withAllowMissingColumnNames(true);\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn, 30\\nJane, 25\";\n\n            // Parse CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Additional logic to manipulate CSV data\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"Name\");\n                int age = Integer.parseInt(rec.get(\"Age\"));\n                nameAgeMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            int totalAge = 0;\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                totalAge += entry.getValue();\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Read CSVRecord and use the read method\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ boolean isConsistent = record.isConsistent();\n            \n            // Print the result\n            System.out.println(\"Is the first record consistent? \" + isConsistent);\n\n            // Additional logic to output the map content\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with write method\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withAllowMissingColumnNames(true);\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn, 30\\nJane, 25\";\n\n            // Parse CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Read CSVRecord and use the read method\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ boolean isConsistent = record.isConsistent();\n            \n            // Print the result\n            System.out.println(\"Is the record consistent? \" + isConsistent);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}