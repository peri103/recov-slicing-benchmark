{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trailing delimiter\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrailingDelimiter();\n\n            // Sample CSV data\n            String csvData = \"name,age,city\\nJohn,30,New York\\nDoe,25,Los Angeles\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Create a list to store names\n            List<String> names = new ArrayList<>();\n\n            // Process each record\n            for (CSVRecord record : records) {\n                // Add names to the list\n                names.add(record.get(\"name\"));\n\n                // Just a dummy operation to make the program more complex\n                int age = Integer.parseInt(record.get(\"age\"));\n                if (age > 20) {\n                    System.out.println(record.get(\"name\") + \" is older than 20.\");\n                }\n            }\n\n            // Additional complex operations\n            List<String> cities = new ArrayList<>();\n            for (CSVRecord record : records) {\n                String city = record.get(\"city\");\n                if (!cities.contains(city)) {\n                    cities.add(city);\n                }\n            }\n\n            // Print all unique cities\n            System.out.println(\"Unique cities:\");\n            for (String city : cities) {\n                System.out.println(city);\n            }\n\n            // Get the first record and check if a column is set\n            CSVRecord firstRecord = records.get(0);\n\n            // Check if the 'age' column is set in the first record\n            /* read */ boolean isAgeSet = firstRecord.isSet(\"age\");\n\n            System.out.println(\"Is 'age' column set in the first record? \" + isAgeSet);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trailing delimiter\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrailingDelimiter();\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nDoe,25\\n\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Get the first record and check if a column is set\n            CSVRecord record = records.get(0);\n\n            // Check if the 'age' column is set in the first record\n            /* read */ boolean isAgeSet = record.isSet(\"age\");\n\n            System.out.println(\"Is 'age' column set in the first record? \" + isAgeSet);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}