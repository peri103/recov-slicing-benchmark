{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trimming\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Sample CSV data\n            String csvData = \"name, age, city\\nJohn Doe, 30, New York\\nJane Smith, 25, Los Angeles\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(csvData, format);\n\n            // Initialize a map to store CSV records\n            Map<String, CSVRecord> recordMap = new HashMap<>();\n\n            // Process each record and store it in the map\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"name\");\n                recordMap.put(name, rec);\n            }\n\n            // Perform some operations on the map\n            for (String key : recordMap.keySet()) {\n                CSVRecord rec = recordMap.get(key);\n                System.out.println(\"Processing record for: \" + key);\n                System.out.println(\"Age: \" + rec.get(\"age\"));\n                System.out.println(\"City: \" + rec.get(\"city\"));\n            }\n\n            // Get the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n\n            // Check if a mapping exists for a specific column\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n            System.out.println(\"Is 'name' mapped: \" + isMapped);\n\n            // Further processing using the map\n            for (String key : recordMap.keySet()) {\n                CSVRecord rec = recordMap.get(key);\n                System.out.println(\"Re-checking record for: \" + key);\n                System.out.println(\"Mapped: \" + rec.isMapped(\"city\"));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trimming\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Sample CSV data\n            String csvData = \"name, age, city\\nJohn Doe, 30, New York\\nJane Smith, 25, Los Angeles\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(csvData, format);\n\n            // Get the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n\n            // Check if a mapping exists for a specific column\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n            System.out.println(\"Is 'name' mapped: \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}