{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withIgnoreEmptyLines();\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\n\\nAlice,25\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), csvFormat);\n\n            // Create a list to store consistent records\n            List<CSVRecord> consistentRecords = new ArrayList<>();\n\n            // Iterate over CSV records\n            for (CSVRecord record : parser) {\n                // Check if the record is consistent using the read method\n                boolean isConsistent = record.isConsistent();\n                if (isConsistent) {\n                    consistentRecords.add(record);\n                }\n            }\n\n            // Additional processing on consistent records\n            for (CSVRecord record : consistentRecords) {\n                System.out.println(\"Consistent Record: \" + record);\n            }\n\n            // Further unrelated complex logic\n            List<String> names = new ArrayList<>();\n            names.add(\"John\");\n            names.add(\"Alice\");\n            names.add(\"Bob\");\n\n            for (String name : names) {\n                if (name.startsWith(\"A\")) {\n                    System.out.println(\"Name starting with A: \" + name);\n                }\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withIgnoreEmptyLines();\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\n\\nAlice,25\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), csvFormat);\n\n            // Iterate over CSV records\n            for (CSVRecord record : parser) {\n                // Use the read method\n                /* read */ boolean isConsistent = record.isConsistent();\n                System.out.println(\"Record is consistent: \" + isConsistent);\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}