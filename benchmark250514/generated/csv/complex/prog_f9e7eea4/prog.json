{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n\n        try {\n            /* write */\n            CSVFormat format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces();\n\n            // Additional complexity: Using HashMap to store data\n            HashMap<String, Integer> dataMap = new HashMap<>();\n            dataMap.put(\"John Doe\", 30);\n            dataMap.put(\"Jane Doe\", 25);\n\n            ArrayList<String> namesList = new ArrayList<>();\n            namesList.add(\"John Doe\");\n            namesList.add(\"Jane Doe\");\n\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                // Additional operations with CSVRecord\n                String name = record.get(\"name\");\n                int age = Integer.parseInt(record.get(\"age\"));\n                System.out.println(\"Name: \" + name + \", Age: \" + age);\n\n                // Use data from HashMap\n                if (dataMap.containsKey(name)) {\n                    System.out.println(\"DataMap Age: \" + dataMap.get(name));\n                }\n\n                // Use data from ArrayList\n                if (namesList.contains(name)) {\n                    System.out.println(\"NamesList contains: \" + name);\n                }\n\n                // Break to ensure original read is executed only once\n                break;\n            }\n\n            // More complex operations\n            for (String name : namesList) {\n                System.out.println(\"Processing: \" + name);\n            }\n\n            /* read */\n            boolean isSet = parser.iterator().next().isSet(\"name\");\n            System.out.println(\"Is 'name' set: \" + isSet);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"name, age\\nJohn Doe, 30\\nJane Doe, 25\";\n        \n        try {\n            /* write */\n            CSVFormat format = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces();\n            \n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            for (CSVRecord record : parser) {\n                /* read */\n                boolean isSet = record.isSet(\"name\");\n                System.out.println(\"Is 'name' set: \" + isSet);\n                break; // Ensure read is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}