{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Create a sample CSV data with a header comment\n            String csvData = \"# This is a header comment\\n\" +\n                             \"Name, Age\\n\" +\n                             \"John, 30\\n\" +\n                             \"Jane, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional complexity: Process the CSV data\n            List<String> names = new ArrayList<>();\n            List<Integer> ages = new ArrayList<>();\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                names.add(name);\n                ages.add(age);\n            }\n\n            // Print names and ages\n            for (int i = 0; i < names.size(); i++) {\n                System.out.println(\"Name: \" + names.get(i) + \", Age: \" + ages.get(i));\n            }\n\n            // Perform some calculations with ages\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) ages.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Access the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(\"Header Comment: \" + comment);\n\n            // Additional unrelated complexity: Manipulate an ArrayList\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * 2);\n            }\n\n            // Print the numbers\n            for (int number : numbers) {\n                System.out.println(\"Number: \" + number);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withHeaderComments(\"This is a header comment\");\n\n            // Create a sample CSV data with a header comment\n            String csvData = \"# This is a header comment\\n\" +\n                             \"Name, Age\\n\" +\n                             \"John, 30\\n\" +\n                             \"Jane, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Access the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}