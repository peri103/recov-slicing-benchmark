{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with a trailing delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Prepare a CSV input to parse\n        String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n        \n        try {\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            \n            // Create another CSVFormat instance for a different task\n            CSVFormat anotherFormat = CSVFormat.EXCEL.withHeader();\n            String anotherCsvData = \"id,name,score\\n1,Alice,85\\n2,Bob,90\\n\";\n            \n            // Parse the second CSV data\n            List<CSVRecord> anotherRecords = anotherFormat.parse(new StringReader(anotherCsvData)).getRecords();\n            \n            // Process the second CSV records\n            for (CSVRecord rec : anotherRecords) {\n                System.out.println(\"ID: \" + rec.get(\"id\") + \", Name: \" + rec.get(\"name\") + \", Score: \" + rec.get(\"score\"));\n            }\n            \n            // Access a specific record from the first CSV and check if a column is set\n            CSVRecord record = records.get(0);\n            /* read */ boolean isNameSet = record.isSet(\"name\");\n            \n            // Output the result\n            System.out.println(\"Is 'name' set in the first record? \" + isNameSet);\n\n            // Additional processing to increase complexity\n            ArrayList<String> cities = new ArrayList<>();\n            for (CSVRecord rec : records) {\n                cities.add(rec.get(\"city\"));\n            }\n            \n            // Print all cities\n            for (String city : cities) {\n                System.out.println(\"City: \" + city);\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSVFormat with a trailing delimiter\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withTrailingDelimiter();\n\n        // Prepare a CSV input to parse\n        String csvData = \"name,age,city\\nJohn,30,New York\\nJane,25,Los Angeles\\n\";\n        \n        try {\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            \n            // Access a specific record and check if a column is set\n            CSVRecord record = records.get(0);\n            /* read */ boolean isNameSet = record.isSet(\"name\");\n            \n            // Output the result\n            System.out.println(\"Is 'name' set in the first record? \" + isNameSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrailingDelimiter",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}