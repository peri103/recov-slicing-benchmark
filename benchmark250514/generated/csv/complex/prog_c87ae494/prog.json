{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVPrinter csvPrinter = null;\n        Map<String, Integer> wordCount = new HashMap<>();\n\n        // Initialize word count map\n        wordCount.put(\"Hello\", 0);\n        wordCount.put(\"world\", 0);\n\n        try {\n            csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            /* write */ csvPrinter.print(\"Hello, world!\");\n            csvPrinter.flush(); // Ensure data is written to the writer\n\n            // Perform some unrelated operations\n            for (String word : wordCount.keySet()) {\n                wordCount.put(word, wordCount.get(word) + 1);\n            }\n            \n            // Print word counts\n            for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n\n            // Parse CSV data\n            String csvData = writer.toString();\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), CSVFormat.DEFAULT);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // More unrelated operations\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum: \" + sum);\n\n            /* read */ String value = record.get(0);\n            System.out.println(value);\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (csvPrinter != null) {\n                    csvPrinter.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVPrinter csvPrinter = null;\n        try {\n            csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            /* write */ csvPrinter.print(\"Hello, world!\");\n            csvPrinter.flush(); // Ensure data is written to the writer\n\n            String csvData = writer.toString();\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), CSVFormat.DEFAULT);\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String value = record.get(0);\n            System.out.println(value);\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (csvPrinter != null) {\n                    csvPrinter.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "print",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}