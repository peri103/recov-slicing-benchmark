{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a record into the CSV\n            /* write */ printer.printRecord(\"value1\", \"value2\", \"value3\");\n\n            // Flush the printer to ensure all data is written\n            printer.flush();\n\n            // Initialize a map to store some unrelated data\n            Map<String, Integer> dataMap = new HashMap<>();\n            dataMap.put(\"key1\", 100);\n            dataMap.put(\"key2\", 200);\n\n            // Perform some operations with the map\n            int sum = 0;\n            for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n                sum += entry.getValue();\n            }\n            System.out.println(\"Sum of values in map: \" + sum);\n\n            // Parse the written CSV data using CSVParser\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n\n            // Perform additional operations on the parsed CSV data\n            int recordCount = 0;\n            for (CSVRecord rec : parser) {\n                recordCount++;\n                System.out.println(\"Record \" + recordCount + \": \" + rec);\n            }\n\n            // Read the first record from the parser\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Retrieve the first value from the record\n            /* read */ String value = record.get(0);\n\n            // Print the retrieved value\n            System.out.println(\"First value from CSV: \" + value);\n\n            // Close resources\n            printer.close();\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringWriter;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture CSV output\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a record into the CSV\n            /* write */ printer.printRecord(\"value1\", \"value2\", \"value3\");\n\n            // Flush the printer to ensure all data is written\n            printer.flush();\n\n            // Parse the written CSV data using CSVParser\n            CSVParser parser = CSVParser.parse(writer.toString(), CSVFormat.DEFAULT);\n\n            // Read the first record from the parser\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Retrieve the first value from the record\n            /* read */ String value = record.get(0);\n\n            // Print the retrieved value\n            System.out.println(value);\n\n            // Close resources\n            printer.close();\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}