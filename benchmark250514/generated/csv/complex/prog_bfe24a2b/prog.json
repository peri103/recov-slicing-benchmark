{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"Name,Age,Location\\nJohn,30,USA\\nDoe,25,UK\";\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Initialize a map to simulate storing additional information\n        Map<String, Integer> ageMap = new HashMap<>();\n        ageMap.put(\"John\", 30);\n        ageMap.put(\"Doe\", 25);\n\n        // Perform some operations on the map\n        for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n            System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n        }\n\n        // Initialize CSVParser\n        CSVParser parser = null;\n        try {\n            format = /* write */ format.withFirstRecordAsHeader();\n            parser = new CSVParser(new StringReader(csvData), format);\n\n            // Process each record and check if a particular column is mapped\n            for (CSVRecord record : parser) {\n                String name = record.get(\"Name\");\n                System.out.println(\"Processing record for: \" + name);\n\n                // Perform additional calculations or logic\n                int age = ageMap.get(name);\n                int yearsUntilRetirement = 65 - age;\n                System.out.println(name + \" has \" + yearsUntilRetirement + \" years until retirement.\");\n\n                // Determine if the 'Name' column is mapped\n                if (name.equals(\"John\")) {\n                    /* read */ boolean isMapped = record.isMapped(\"Name\");\n                    System.out.println(\"Is 'Name' column mapped: \" + isMapped);\n                }\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (parser != null) {\n                try {\n                    parser.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        // Simulate additional unrelated operations\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        String csvData = \"Name,Age,Location\\nJohn,30,USA\\nDoe,25,UK\";\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Initialize CSVParser\n        CSVParser parser = null;\n        try {\n            format = /* write */ format.withFirstRecordAsHeader();\n            parser = new CSVParser(new StringReader(csvData), format);\n\n            // Read the first record to check if a particular column is mapped\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' column mapped: \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (parser != null) {\n                try {\n                    parser.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}