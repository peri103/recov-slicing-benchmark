{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trim option\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Prepare a sample CSV input\n            String csvData = \"Name, Age\\nJohn Doe, 29\\nJane Smith, 34\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, format);\n\n            // Add complexity: Calculate average age from CSV records\n            int totalAge = 0;\n            int count = 0;\n            for (CSVRecord record : parser) {\n                String ageStr = record.get(\"Age\");\n                totalAge += Integer.parseInt(ageStr.trim());\n                count++;\n            }\n            double averageAge = (double) totalAge / count;\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Add complexity: Store names in a map\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n            for (CSVRecord record : parser.getRecords()) {\n                String name = record.get(\"Name\").trim();\n                int age = Integer.parseInt(record.get(\"Age\").trim());\n                nameAgeMap.put(name, age);\n            }\n\n            // Check if a column is mapped\n            CSVRecord firstRecord = parser.getRecords().get(0);\n            /* read */ boolean isMapped = firstRecord.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' mapped: \" + isMapped);\n\n            // Print names and ages from map\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trim option\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Prepare a sample CSV input\n            String csvData = \"Name, Age\\nJohn Doe, 29\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, format);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if a column is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(isMapped);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}