{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with the write method\n            /* write */\n            CSVFormat csvFormat = CSVFormat.DEFAULT.withIgnoreEmptyLines(true);\n\n            // Create a sample CSV data\n            String csvData = \"Name, Age, Location\\nJohn, 30, USA\\n\\nEmily, 25, UK\";\n\n            // Parse the CSV data using CSVParser\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n\n            // Additional processing: Collecting records in a list\n            List<CSVRecord> records = new ArrayList<>();\n            for (CSVRecord record : parser) {\n                records.add(record);\n            }\n\n            // Unrelated complex logic\n            List<String> names = new ArrayList<>();\n            for (CSVRecord record : records) {\n                names.add(record.get(0)); // Assuming the first column is \"Name\"\n            }\n\n            // Process names to uppercase\n            List<String> upperCaseNames = new ArrayList<>();\n            for (String name : names) {\n                upperCaseNames.add(name.toUpperCase());\n            }\n\n            // Print uppercase names\n            for (String name : upperCaseNames) {\n                System.out.println(\"Uppercase Name: \" + name);\n            }\n\n            // Read the records and use the read method\n            for (CSVRecord record : records) {\n                /* read */\n                boolean isConsistent = record.isConsistent();\n                System.out.println(\"Record is consistent: \" + isConsistent);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with the write method\n            /* write */\n            CSVFormat csvFormat = CSVFormat.DEFAULT.withIgnoreEmptyLines(true);\n\n            // Create a sample CSV data\n            String csvData = \"Name, Age, Location\\nJohn, 30, USA\\n\\nEmily, 25, UK\";\n\n            // Parse the CSV data using CSVParser\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n\n            // Read the records and use the read method\n            for (CSVRecord record : parser) {\n                /* read */\n                boolean isConsistent = record.isConsistent();\n                System.out.println(\"Record is consistent: \" + isConsistent);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreEmptyLines",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isConsistent"
    }
}