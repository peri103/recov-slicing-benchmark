{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withAllowMissingColumnNames(true);\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n            // Parse CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Additional unrelated code for complexity\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n            for (CSVRecord rec : parser) {\n                String name = rec.get(\"name\");\n                int age = Integer.parseInt(rec.get(\"age\"));\n                nameToAgeMap.put(name, age);\n            }\n\n            // More unrelated logic\n            int totalAge = 0;\n            for (int age : nameToAgeMap.values()) {\n                totalAge += age;\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Use the read method\n            /* read */ boolean isSet = record.isSet(\"name\");\n            System.out.println(\"Is 'name' column set: \" + isSet);\n\n            // Further unrelated operations\n            int averageAge = totalAge / nameToAgeMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with the write method\n            /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withAllowMissingColumnNames(true);\n\n            // Sample CSV data\n            String csvData = \"name,age\\nJohn,30\\nDoe,25\";\n\n            // Parse CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Use the read method\n            /* read */ boolean isSet = record.isSet(\"name\");\n            System.out.println(isSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withAllowMissingColumnNames",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}