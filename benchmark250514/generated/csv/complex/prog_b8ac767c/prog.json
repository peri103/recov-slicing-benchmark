{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a header comment\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n            \n            // Create a sample CSV input to parse\n            String csvData = \"header1,header2\\nvalue1,value2\\nvalue3,value4\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Retrieve all records\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Initialize a map to store values from the CSV\n            Map<String, String> csvMap = new HashMap<>();\n            \n            // Process each record and store data in the map\n            for (CSVRecord record : records) {\n                String key = record.get(0);\n                String value = record.get(1);\n                csvMap.put(key, value);\n            }\n            \n            // Perform some operations on the map\n            for (Map.Entry<String, String> entry : csvMap.entrySet()) {\n                System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n            }\n            \n            // Add some unrelated operations to increase complexity\n            int sum = 0;\n            for (int i = 0; i < 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n            // Retrieve the first record again\n            CSVRecord firstRecord = records.get(0);\n            \n            // Read the comment from the first record\n            /* read */ String comment = firstRecord.getComment();\n            \n            // Output the comment\n            System.out.println(\"Header Comment: \" + comment);\n            \n            // Additional operations\n            Map<String, Integer> countMap = new HashMap<>();\n            for (String key : csvMap.keySet()) {\n                countMap.put(key, key.length());\n            }\n            \n            for (Map.Entry<String, Integer> entry : countMap.entrySet()) {\n                System.out.println(\"Key: \" + entry.getKey() + \", Length: \" + entry.getValue());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the CSVFormat with a header comment\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n            \n            // Create a sample CSV input to parse\n            String csvData = \"header1,header2\\nvalue1,value2\";\n            \n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Retrieve the first record\n            List<CSVRecord> records = parser.getRecords();\n            CSVRecord record = records.get(0);\n            \n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n            \n            // Output the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}