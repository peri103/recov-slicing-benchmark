{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter instance\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a comment using CSVPrinter\n            /* write */ csvPrinter.printComment(\"This is a comment\");\n            \n            // Flush and close the printer\n            csvPrinter.flush();\n            csvPrinter.close();\n            \n            // Create a complex data structure\n            Map<String, List<Integer>> complexData = new HashMap<>();\n            List<Integer> numberList = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numberList.add(i * 10);\n            }\n            complexData.put(\"numbers\", numberList);\n            \n            // Manipulate the complex data structure\n            for (Map.Entry<String, List<Integer>> entry : complexData.entrySet()) {\n                System.out.println(\"Key: \" + entry.getKey());\n                for (Integer num : entry.getValue()) {\n                    System.out.println(\"Value: \" + num);\n                }\n            }\n            \n            // Read the comment using CSVRecord\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords().get(0);\n            /* read */ String comment = record.getComment();\n            \n            // Print the comment\n            System.out.println(comment);\n            \n            // Further manipulation of complex data\n            if (complexData.containsKey(\"numbers\")) {\n                List<Integer> retrievedNumbers = complexData.get(\"numbers\");\n                int sum = 0;\n                for (Integer num : retrievedNumbers) {\n                    sum += num;\n                }\n                System.out.println(\"Sum of numbers: \" + sum);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a StringWriter to capture the CSV output\n            StringWriter writer = new StringWriter();\n            \n            // Create a CSVPrinter instance\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n            \n            // Write a comment using CSVPrinter\n            /* write */ csvPrinter.printComment(\"This is a comment\");\n            \n            // Flush and close the printer\n            csvPrinter.flush();\n            csvPrinter.close();\n            \n            // Read the comment using CSVRecord\n            CSVRecord record = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords().get(0);\n            /* read */ String comment = record.getComment();\n            \n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}