{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to capture the output\n            StringWriter writer = new StringWriter();\n\n            // Initialize the CSVPrinter with the writer and a CSV format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a comment using the printComment method\n            /* write */ printer.printComment(\"This is a comment\");\n\n            // Adding unrelated complex code\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numbers.add(i * 2);\n            }\n\n            int sum = 0;\n            for (Integer number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // Flush and close the printer\n            printer.flush();\n            printer.close();\n\n            // More unrelated complex code\n            ArrayList<String> words = new ArrayList<>();\n            words.add(\"apple\");\n            words.add(\"banana\");\n            words.add(\"cherry\");\n\n            for (String word : words) {\n                System.out.println(\"Word: \" + word);\n            }\n\n            // Read the comment using the CSVRecord getComment method\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords();\n            for (CSVRecord record : records) {\n                if (record.getComment() != null) {\n                    /* read */ String comment = record.getComment();\n                    System.out.println(comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a StringWriter to capture the output\n            StringWriter writer = new StringWriter();\n\n            // Initialize the CSVPrinter with the writer and a CSV format\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a comment using the printComment method\n            /* write */ printer.printComment(\"This is a comment\");\n\n            // Flush and close the printer\n            printer.flush();\n            printer.close();\n\n            // Read the comment using the CSVRecord getComment method\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords();\n            for (CSVRecord record : records) {\n                if (record.getComment() != null) {\n                    /* read */ String comment = record.getComment();\n                    System.out.println(comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}