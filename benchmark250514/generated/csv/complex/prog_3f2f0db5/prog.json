{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter out = new StringWriter();\n        CSVPrinter printer = null;\n        CSVParser parser = null;\n        List<String> dataList = new ArrayList<>();\n        Map<String, Integer> dataMap = new HashMap<>();\n        \n        try {\n            printer = new CSVPrinter(out, CSVFormat.DEFAULT.withCommentMarker('#'));\n            dataList.add(\"Data1\");\n            dataList.add(\"Data2\");\n            dataMap.put(\"Key1\", 100);\n            dataMap.put(\"Key2\", 200);\n            \n            for (String data : dataList) {\n                printer.printRecord(data);\n            }\n            \n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n            \n            parser = new CSVParser(new StringReader(out.toString()), CSVFormat.DEFAULT.withCommentMarker('#'));\n            for (CSVRecord record : parser) {\n                if (record.getRecordNumber() == 1) {\n                    String firstRecord = record.get(0);\n                    System.out.println(\"First record: \" + firstRecord);\n                }\n                \n                // Perform some operations with dataMap\n                for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n                    System.out.println(entry.getKey() + \" : \" + entry.getValue());\n                }\n                \n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (printer != null) printer.close();\n                if (parser != null) parser.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        \n        // Additional complex operations\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        for (int num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n        \n        int sum = numbers.stream().mapToInt(Integer::intValue).sum();\n        System.out.println(\"Sum of numbers: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter out = new StringWriter();\n        CSVPrinter printer = null;\n        CSVParser parser = null;\n        try {\n            printer = new CSVPrinter(out, CSVFormat.DEFAULT.withCommentMarker('#'));\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n\n            parser = new CSVParser(new StringReader(out.toString()), CSVFormat.DEFAULT.withCommentMarker('#'));\n            for (CSVRecord record : parser) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (printer != null) printer.close();\n                if (parser != null) parser.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}