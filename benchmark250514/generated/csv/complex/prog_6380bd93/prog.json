{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a comment marker\n            CSVFormat format = CSVFormat.DEFAULT /* write */ .withCommentMarker('#');\n            \n            // Sample CSV data with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nDoe,25\";\n            \n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            \n            // Additional complexity: process CSV data\n            ArrayList<String> names = new ArrayList<>();\n            ArrayList<Integer> ages = new ArrayList<>();\n            \n            for (CSVRecord record : records) {\n                if (record.getRecordNumber() > 1) { // Skip the comment and header\n                    names.add(record.get(0));\n                    ages.add(Integer.parseInt(record.get(1)));\n                }\n            }\n            \n            // Process the names and ages\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            \n            double averageAge = totalAge / (double) ages.size();\n            System.out.println(\"Average Age: \" + averageAge);\n            \n            // Read the comment from the first record (which is the comment line)\n            String comment = records.get(0) /* read */ .getComment();\n            \n            // Output the comment\n            System.out.println(\"Comment: \" + comment);\n            \n            // Additional complexity: print names in reverse order\n            for (int i = names.size() - 1; i >= 0; i--) {\n                System.out.println(\"Name: \" + names.get(i));\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.util.List;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a comment marker\n            CSVFormat format = CSVFormat.DEFAULT /* write */ .withCommentMarker('#');\n            \n            // Sample CSV data with a comment\n            String csvData = \"# This is a comment\\nname,age\\nJohn,30\\nDoe,25\";\n            \n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n            \n            // Read the comment from the first record (which is the comment line)\n            String comment = records.get(0) /* read */ .getComment();\n            \n            // Output the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}