{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n            // Simulate reading CSV data\n            String csvData = \"column1,column2\\nvalue1,value2\";\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Initialize some more data structures\n            ArrayList<Integer> numbers = new ArrayList<>();\n            HashMap<String, String> map = new HashMap<>();\n\n            // Populate the list and map with some data\n            for (int i = 0; i < 5; i++) {\n                numbers.add(i * 10);\n                map.put(\"key\" + i, \"value\" + i);\n            }\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Perform some operations on the list\n            for (Integer num : numbers) {\n                System.out.println(\"Number: \" + num);\n            }\n\n            // Perform some operations on the map\n            for (String key : map.keySet()) {\n                System.out.println(\"Map Entry: \" + key + \" = \" + map.get(key));\n            }\n\n            // Read the header comment\n            /* read */ String comment = record.getComment();\n            System.out.println(comment);\n\n            // More complex logic\n            int sum = 0;\n            for (Integer num : numbers) {\n                sum += num;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // Check if a specific key exists in the map\n            if (map.containsKey(\"key3\")) {\n                System.out.println(\"Map contains key3 with value: \" + map.get(\"key3\"));\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */ CSVFormat csvFormat = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n            // Simulate reading CSV data\n            String csvData = \"column1,column2\\nvalue1,value2\";\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Read the header comment\n            /* read */ String comment = record.getComment();\n            System.out.println(comment);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}