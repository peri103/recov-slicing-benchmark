{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSV format with a header\n        CSVFormat format = CSVFormat.DEFAULT.withHeader(\"Name\", \"Age\", \"Country\");\n        String csvData = \"Name,Age,Country\\nJohn,30,USA\\nJane,25,UK\";\n\n        // Create a map to store the records\n        Map<String, Integer> ageMap = new HashMap<>();\n\n        try {\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Iterate over the records and populate the map\n            for (CSVRecord record : parser) {\n                // Extract the name and age from the record\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                ageMap.put(name, age);\n            }\n\n            // Perform some operations on the map\n            for (Map.Entry<String, Integer> entry : ageMap.entrySet()) {\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n\n            // Parse the CSV data again to demonstrate the original read operation\n            parser = CSVParser.parse(new StringReader(csvData), format);\n\n            for (CSVRecord record : parser) {\n                // Check if a specific header is set\n                /* read */ boolean isNameSet = record.isSet(\"Name\");\n                System.out.println(\"Is 'Name' header set? \" + isNameSet);\n                break; // Ensure the read method is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Additional unrelated operations\n        int sumOfAges = 0;\n        for (Integer age : ageMap.values()) {\n            sumOfAges += age;\n        }\n        System.out.println(\"Sum of ages: \" + sumOfAges);\n\n        // Demonstrate some basic arithmetic operations\n        int a = 5;\n        int b = 10;\n        int c = a + b;\n        System.out.println(\"Sum of a and b: \" + c);\n\n        c = b - a;\n        System.out.println(\"Difference of b and a: \" + c);\n\n        c = a * b;\n        System.out.println(\"Product of a and b: \" + c);\n\n        if (b != 0) {\n            c = b / a;\n            System.out.println(\"Division of b by a: \" + c);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the CSV format with a header\n        CSVFormat format = CSVFormat.DEFAULT.withHeader(\"Name\", \"Age\", \"Country\");\n        String csvData = \"Name,Age,Country\\nJohn,30,USA\\nJane,25,UK\";\n\n        try {\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Iterate over the records\n            for (CSVRecord record : parser) {\n                // Check if a specific header is set\n                /* read */ boolean isNameSet = record.isSet(\"Name\");\n                System.out.println(\"Is 'Name' header set? \" + isNameSet);\n                break; // Ensure the read method is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}