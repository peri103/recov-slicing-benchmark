{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n            \n            // Prepare a CSV string with comments\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            \n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Create a new CSV data\n            StringWriter writer = new StringWriter();\n            CSVPrinter printer = new CSVPrinter(writer, CSVFormat.DEFAULT.withHeader(\"name\", \"age\"));\n            \n            // Add some records to the new CSV data\n            printer.printRecord(\"Alice\", 30);\n            printer.printRecord(\"Bob\", 25);\n            printer.printRecord(\"Charlie\", 35);\n            \n            // Convert the written CSV data to a string\n            String newCsvData = writer.toString();\n            \n            // Parse the new CSV data\n            CSVParser newParser = new CSVParser(new StringReader(newCsvData), CSVFormat.DEFAULT.withHeader());\n            List<CSVRecord> newRecords = newParser.getRecords();\n            \n            // Process each record and print the name and age\n            for (CSVRecord record : newRecords) {\n                String name = record.get(\"name\");\n                String age = record.get(\"age\");\n                System.out.println(\"Name: \" + name + \", Age: \" + age);\n            }\n            \n            // Retrieve the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            \n            // Print the comment\n            System.out.println(\"Comment: \" + comment);\n            \n            // Close resources\n            parser.close();\n            newParser.close();\n            printer.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n            \n            // Prepare a CSV string with comments\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            \n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Retrieve the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n            \n            // Print the comment\n            System.out.println(comment);\n            \n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}