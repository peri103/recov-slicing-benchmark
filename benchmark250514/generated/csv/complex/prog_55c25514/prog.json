{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        try {\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            ArrayList<String> dataList = new ArrayList<>();\n            dataList.add(\"Data1\");\n            dataList.add(\"Data2\");\n            \n            for (String data : dataList) {\n                printer.printRecord(data);\n            }\n            \n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n            \n            String csvContent = writer.toString();\n            System.out.println(\"CSV Content:\\n\" + csvContent);\n            \n            StringReader reader = new StringReader(csvContent);\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            \n            List<String> extractedData = new ArrayList<>();\n            for (CSVRecord record : records) {\n                if (!record.hasComment()) {\n                    extractedData.add(record.get(0));\n                }\n            }\n            \n            System.out.println(\"Extracted Data: \" + extractedData);\n            \n            for (CSVRecord record : records) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Read Comment: \" + comment);\n                }\n            }\n            \n            // Additional complex operations\n            int sum = 0;\n            for (String data : extractedData) {\n                sum += data.length();\n            }\n            System.out.println(\"Sum of lengths: \" + sum);\n            \n            ArrayList<Integer> numberList = new ArrayList<>();\n            for (int i = 1; i <= 5; i++) {\n                numberList.add(i * 10);\n            }\n            \n            int total = 0;\n            for (int number : numberList) {\n                total += number;\n            }\n            System.out.println(\"Total of numberList: \" + total);\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n        \n        try {\n            CSVPrinter printer = new CSVPrinter(writer, format);\n            /* write */ printer.printComment(\"This is a comment\");\n            printer.flush();\n            \n            String csvContent = writer.toString();\n            System.out.println(\"CSV Content:\\n\" + csvContent);\n            \n            StringReader reader = new StringReader(csvContent);\n            List<CSVRecord> records = CSVFormat.DEFAULT.withCommentMarker('#').parse(reader).getRecords();\n            \n            for (CSVRecord record : records) {\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Read Comment: \" + comment);\n                }\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}