{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            \n            // Configure CSVFormat with a comment marker\n            CSVFormat csvFormat = CSVFormat.DEFAULT;\n            /* write */ csvFormat = csvFormat.withCommentMarker('#');\n            \n            // Create another CSVFormat for demonstration\n            CSVFormat csvFormat2 = CSVFormat.DEFAULT.withDelimiter(';');\n            \n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Process each record\n            for (CSVRecord record : records) {\n                // Perform some unrelated processing\n                for (String value : record) {\n                    System.out.println(\"Value: \" + value);\n                }\n                \n                // Read the comment from the record\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Comment: \" + comment);\n                }\n                \n                // Additional processing to make the program more complex\n                int sum = 0;\n                for (int i = 0; i < record.size(); i++) {\n                    sum += record.get(i).length();\n                }\n                System.out.println(\"Sum of lengths: \" + sum);\n            }\n            \n            // Demonstrate CSVFormat2 usage\n            String csvData2 = \"value1;value2\";\n            CSVParser parser2 = CSVParser.parse(new StringReader(csvData2), csvFormat2);\n            List<CSVRecord> records2 = parser2.getRecords();\n            for (CSVRecord record2 : records2) {\n                for (String value : record2) {\n                    System.out.println(\"CSV2 Value: \" + value);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n            \n            // Configure CSVFormat with a comment marker\n            CSVFormat csvFormat = CSVFormat.DEFAULT;\n            /* write */ csvFormat = csvFormat.withCommentMarker('#');\n            \n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            List<CSVRecord> records = parser.getRecords();\n            \n            for (CSVRecord record : records) {\n                // Read the comment from the record\n                /* read */ String comment = record.getComment();\n                if (comment != null) {\n                    System.out.println(\"Comment: \" + comment);\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}