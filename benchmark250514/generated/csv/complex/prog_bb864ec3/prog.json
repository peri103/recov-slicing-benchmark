{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trim enabled\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Smith, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Complex operations with HashMap\n            Map<String, Integer> nameToAgeMap = new HashMap<>();\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                nameToAgeMap.put(name, age);\n            }\n\n            // Perform calculations\n            int totalAge = 0;\n            for (Integer age : nameToAgeMap.values()) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) nameToAgeMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Check if a mapping for a column exists\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' mapped: \" + isMapped);\n\n            // Additional operations\n            if (isMapped) {\n                System.out.println(\"Mapped names:\");\n                for (String name : nameToAgeMap.keySet()) {\n                    System.out.println(name);\n                }\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trim enabled\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Smith, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Access the first record\n            CSVRecord record = records.get(0);\n\n            // Check if a mapping for a column exists\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' mapped: \" + isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}