{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSV format with the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreHeaderCase();\n\n        // Sample CSV data\n        String csvData = \"Name, Age, Country\\nJohn Doe, 29, USA\\nJane Doe, 27, UK\";\n\n        try {\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get all records\n            ArrayList<CSVRecord> records = new ArrayList<>(parser.getRecords());\n\n            // Unrelated complex logic\n            HashMap<String, Integer> ageMap = new HashMap<>();\n            for (CSVRecord rec : records) {\n                String name = rec.get(\"Name\");\n                int age = Integer.parseInt(rec.get(\"Age\"));\n                ageMap.put(name, age);\n            }\n\n            // Perform some calculations\n            int totalAge = 0;\n            for (int age : ageMap.values()) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) ageMap.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // More unrelated operations\n            ArrayList<String> countries = new ArrayList<>();\n            for (CSVRecord rec : records) {\n                String country = rec.get(\"Country\");\n                if (!countries.contains(country)) {\n                    countries.add(country);\n                }\n            }\n            System.out.println(\"Countries: \" + countries);\n\n            // Get the first record\n            CSVRecord record = records.get(0);\n\n            // Check if a specific header is mapped\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n            System.out.println(\"Is 'name' mapped: \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSV format with the write method\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withIgnoreHeaderCase();\n\n        // Sample CSV data\n        String csvData = \"Name, Age\\nJohn Doe, 29\\nJane Doe, 27\";\n\n        try {\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Check if a specific header is mapped\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n            System.out.println(isMapped);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreHeaderCase",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}