{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n            \n            // Sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,30,USA\\nJane,25,UK\";\n            \n            // Parse CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Complex operation: Build a map of names and their corresponding ages\n            Map<String, Integer> nameAgeMap = new HashMap<>();\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                nameAgeMap.put(name, age);\n            }\n            \n            // Perform some operations on the map\n            int totalAge = 0;\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                totalAge += entry.getValue();\n                System.out.println(\"Name: \" + entry.getKey() + \", Age: \" + entry.getValue());\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n            \n            // Read from the first record\n            CSVRecord record = records.get(0);\n            String location = record.get(\"Location\");\n            System.out.println(\"Location of first record: \" + location);\n            \n            // More complex operations\n            int maxAge = Integer.MIN_VALUE;\n            String oldestPerson = \"\";\n            for (Map.Entry<String, Integer> entry : nameAgeMap.entrySet()) {\n                if (entry.getValue() > maxAge) {\n                    maxAge = entry.getValue();\n                    oldestPerson = entry.getKey();\n                }\n            }\n            System.out.println(\"Oldest person: \" + oldestPerson + \" with age \" + maxAge);\n            \n            // Final read operation\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' mapped in the first record? \" + isMapped);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader();\n            \n            // Sample CSV data\n            String csvData = \"Name,Age,Location\\nJohn,30,USA\\nJane,25,UK\";\n            \n            // Parse CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n            \n            // Read from the first record\n            CSVRecord record = records.get(0);\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            \n            // Output the result\n            System.out.println(\"Is 'Name' mapped in the first record? \" + isMapped);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withFirstRecordAsHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}