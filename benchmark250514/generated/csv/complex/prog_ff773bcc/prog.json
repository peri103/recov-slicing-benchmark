{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.Reader;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a map to simulate some complex data processing\n        Map<String, Integer> nameToAge = new HashMap<>();\n        nameToAge.put(\"John\", 30);\n        nameToAge.put(\"Jane\", null);\n\n        // Initialize a CSVFormat with a specific null string\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Prepare a CSV input string\n        String csvData = \"Name,Age\\nJohn,30\\nJane,NULL\\n\";\n\n        // Additional processing before reading CSV data\n        int sumOfAges = 0;\n        for (Map.Entry<String, Integer> entry : nameToAge.entrySet()) {\n            if (entry.getValue() != null) {\n                sumOfAges += entry.getValue();\n            }\n        }\n        System.out.println(\"Sum of ages before parsing CSV: \" + sumOfAges);\n\n        // Parse the CSV data\n        try (Reader in = new StringReader(csvData);\n             CSVParser parser = new CSVParser(in, format)) {\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(1);\n\n            // Simulate some unrelated complex logic\n            int processedAge = 0;\n            for (CSVRecord rec : parser) {\n                String ageStr = rec.get(\"Age\");\n                if (!\"NULL\".equals(ageStr)) {\n                    processedAge += Integer.parseInt(ageStr);\n                }\n            }\n            System.out.println(\"Processed age sum: \" + processedAge);\n\n            // Check if the \"Age\" column is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Age\");\n\n            // Print the result\n            System.out.println(\"Is 'Age' column mapped: \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // More complex processing after CSV parsing\n        nameToAge.put(\"Doe\", 40);\n        int newSumOfAges = 0;\n        for (Integer age : nameToAge.values()) {\n            if (age != null) {\n                newSumOfAges += age;\n            }\n        }\n        System.out.println(\"Sum of ages after parsing CSV: \" + newSumOfAges);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.Reader;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a CSVFormat with a specific null string\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withNullString(\"NULL\");\n\n        // Prepare a CSV input string\n        String csvData = \"Name,Age\\nJohn,30\\nJane,NULL\\n\";\n\n        // Parse the CSV data\n        try (Reader in = new StringReader(csvData);\n             CSVParser parser = new CSVParser(in, format)) {\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(1);\n\n            // Check if the \"Age\" column is mapped\n            /* read */ boolean isMapped = record.isMapped(\"Age\");\n\n            // Print the result\n            System.out.println(isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withNullString",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}