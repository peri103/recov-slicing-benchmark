{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat instance and set the header using the write method\n            CSVFormat format = CSVFormat.DEFAULT.withHeader(\"Name\", \"Age\", \"Country\");\n            \n            // Sample CSV data\n            String csvData = \"Name,Age,Country\\nJohn,25,USA\\nAlice,30,UK\";\n            \n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Create a map to store the records\n            Map<String, CSVRecord> recordMap = new HashMap<>();\n            \n            // Iterate over records and store them in the map\n            for (CSVRecord record : parser) {\n                recordMap.put(record.get(\"Name\"), record);\n            }\n            \n            // Perform some unrelated operations\n            int sum = 0;\n            for (int i = 1; i <= 10; i++) {\n                sum += i;\n            }\n            System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n            \n            // Perform operations on the map\n            if (recordMap.containsKey(\"John\")) {\n                CSVRecord johnRecord = recordMap.get(\"John\");\n                System.out.println(\"John's Age: \" + johnRecord.get(\"Age\"));\n            }\n            \n            // Get the first record\n            CSVRecord firstRecord = parser.getRecords().get(0);\n            \n            // Check if a specific header is set using the read method\n            /* read */ boolean isNameSet = firstRecord.isSet(\"Name\");\n            \n            // Output the result\n            System.out.println(\"Is 'Name' header set? \" + isNameSet);\n            \n            // Additional logic to manipulate data\n            for (CSVRecord record : parser) {\n                System.out.println(record.get(\"Country\"));\n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSVFormat instance and set the header using the write method\n            CSVFormat format = CSVFormat.DEFAULT.withHeader(\"Name\", \"Age\", \"Country\");\n            \n            // Sample CSV data\n            String csvData = \"Name,Age,Country\\nJohn,25,USA\\nAlice,30,UK\";\n            \n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            \n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n            \n            // Check if a specific header is set using the read method\n            /* read */ boolean isNameSet = record.isSet(\"Name\");\n            \n            // Output the result\n            System.out.println(\"Is 'Name' header set? \" + isNameSet);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}