{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVPrinter\n        StringWriter stringWriter = new StringWriter();\n        CSVPrinter csvPrinter = null;\n        \n        try {\n            csvPrinter = new CSVPrinter(stringWriter, CSVFormat.DEFAULT);\n            /* write */ csvPrinter.printRecord(\"value1\", \"value2\", \"value3\");\n            csvPrinter.flush();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Initialize CSVParser\n        String csvData = stringWriter.toString();\n        CSVParser parser;\n        \n        // Create and manipulate some collections\n        ArrayList<String> arrayList = new ArrayList<>();\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        for (int i = 0; i < 5; i++) {\n            arrayList.add(\"Item\" + i);\n            hashMap.put(\"Key\" + i, i);\n        }\n        \n        // Perform operations on collections\n        for (String item : arrayList) {\n            System.out.println(\"ArrayList item: \" + item);\n        }\n        \n        int sum = 0;\n        for (Integer value : hashMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of HashMap values: \" + sum);\n        \n        // Parse CSV data\n        try {\n            parser = CSVParser.parse(new StringReader(csvData), CSVFormat.DEFAULT);\n            for (CSVRecord csvRecord : parser) {\n                /* read */ String value = csvRecord.get(0);\n                System.out.println(\"CSVRecord value: \" + value);\n                break; // Ensure the read line is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        // Further operations unrelated to CSV\n        StringBuilder stringBuilder = new StringBuilder();\n        for (int i = 0; i < 3; i++) {\n            stringBuilder.append(\"Appending \").append(i).append(\" \");\n        }\n        System.out.println(\"StringBuilder content: \" + stringBuilder.toString());\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter stringWriter = new StringWriter();\n        CSVPrinter csvPrinter = null;\n        try {\n            csvPrinter = new CSVPrinter(stringWriter, CSVFormat.DEFAULT);\n            /* write */ csvPrinter.printRecord(\"value1\", \"value2\", \"value3\");\n            csvPrinter.flush();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        String csvData = stringWriter.toString();\n        CSVParser parser;\n        try {\n            parser = CSVParser.parse(new StringReader(csvData), CSVFormat.DEFAULT);\n            for (CSVRecord csvRecord : parser) {\n                /* read */ String value = csvRecord.get(0);\n                System.out.println(value);\n                break; // Ensure the read line is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printRecord",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}