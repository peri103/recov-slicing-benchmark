{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture CSV output\n            StringWriter out = new StringWriter();\n            // Create a CSVPrinter using CSVFormat.DEFAULT\n            CSVPrinter printer = new CSVPrinter(out, CSVFormat.DEFAULT);\n\n            // Write a comment using printComment\n            /* write */ printer.printComment(\"This is a comment\");\n\n            // Add some additional data to CSV\n            printer.printRecord(\"Name\", \"Age\", \"Country\");\n            printer.printRecord(\"Alice\", 30, \"USA\");\n            printer.printRecord(\"Bob\", 25, \"UK\");\n\n            // Close the printer to flush the content\n            printer.close();\n\n            // Parse the CSV output using CSVParser\n            StringReader reader = new StringReader(out.toString());\n            CSVParser parser = CSVParser.parse(reader, CSVFormat.DEFAULT.withCommentMarker('#'));\n\n            // Create a map to store data\n            HashMap<String, Integer> ageMap = new HashMap<>();\n\n            // Process each record\n            for (CSVRecord csvRecord : parser) {\n                if (!csvRecord.get(0).equals(\"Name\")) { // Skip header\n                    String name = csvRecord.get(0);\n                    int age = Integer.parseInt(csvRecord.get(1));\n                    ageMap.put(name, age);\n                }\n            }\n\n            // Perform some operations on the map\n            int totalAge = 0;\n            for (int age : ageMap.values()) {\n                totalAge += age;\n            }\n            System.out.println(\"Total Age: \" + totalAge);\n\n            // Read the first record and get the comment\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n            // Close the parser\n            parser.close();\n\n            // Additional unrelated operations\n            ArrayList<Integer> numbers = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                numbers.add(i * i);\n            }\n            System.out.println(\"Squared Numbers: \" + numbers);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize a StringWriter to capture CSV output\n            StringWriter out = new StringWriter();\n            // Create a CSVPrinter using CSVFormat.DEFAULT\n            CSVPrinter printer = new CSVPrinter(out, CSVFormat.DEFAULT);\n\n            // Write a comment using printComment\n            /* write */ printer.printComment(\"This is a comment\");\n\n            // Close the printer to flush the content\n            printer.close();\n\n            // Parse the CSV output using CSVParser\n            StringReader reader = new StringReader(out.toString());\n            CSVParser parser = CSVParser.parse(reader, CSVFormat.DEFAULT.withCommentMarker('#'));\n\n            // Read the first record and get the comment\n            CSVRecord record = parser.getRecords().get(0);\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n            // Close the parser\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}