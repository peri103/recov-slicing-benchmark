{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        // Additional unrelated initialization\n        Map<String, Integer> cityPopulation = new HashMap<>();\n        cityPopulation.put(\"New York\", 8419000);\n        cityPopulation.put(\"Los Angeles\", 3980000);\n        cityPopulation.put(\"Chicago\", 2716000);\n\n        try {\n            /* write */ format = format.withHeader(\"Name\", \"Age\", \"City\");\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            List<String> record1 = Arrays.asList(\"Alice\", \"30\", \"New York\");\n            List<String> record2 = Arrays.asList(\"Bob\", \"25\", \"Los Angeles\");\n            printer.printRecord(record1);\n            printer.printRecord(record2);\n\n            printer.flush();\n            printer.close();\n\n            // Unrelated complex operations\n            int totalPopulation = 0;\n            for (String city : cityPopulation.keySet()) {\n                totalPopulation += cityPopulation.get(city);\n            }\n            System.out.println(\"Total Population: \" + totalPopulation);\n\n            String csvContent = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.withHeader(\"Name\", \"Age\", \"City\").parse(new StringReader(csvContent)).getRecords().get(0);\n\n            // More unrelated operations\n            Map<String, String> personInfo = new HashMap<>();\n            personInfo.put(\"Name\", record.get(\"Name\"));\n            personInfo.put(\"Age\", record.get(\"Age\"));\n            personInfo.put(\"City\", record.get(\"City\"));\n\n            for (Map.Entry<String, String> entry : personInfo.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n\n            /* read */ boolean isSet = record.isSet(\"Name\");\n            System.out.println(\"Is 'Name' set? \" + isSet); // Should print true as \"Name\" header was set and used\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        StringWriter writer = new StringWriter();\n        CSVFormat format = CSVFormat.DEFAULT;\n\n        try {\n            /* write */ format = format.withHeader(\"Name\", \"Age\", \"City\");\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            List<String> record1 = Arrays.asList(\"Alice\", \"30\", \"New York\");\n            printer.printRecord(record1);\n\n            printer.flush();\n            printer.close();\n\n            String csvContent = writer.toString();\n            CSVRecord record = CSVFormat.DEFAULT.withHeader(\"Name\", \"Age\", \"City\").parse(new java.io.StringReader(csvContent)).getRecords().get(0);\n\n            /* read */ boolean isSet = record.isSet(\"Name\");\n            System.out.println(isSet); // Should print true as \"Name\" header was set and used\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeader",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}