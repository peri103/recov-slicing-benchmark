{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSV format instance with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV string to parse\n            String csvData = \"id,name\\n1,John Doe\\n2,Jane Smith\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get all records\n            List<CSVRecord> records = parser.getRecords();\n\n            // Create a map to store id-name pairs\n            HashMap<Integer, String> idNameMap = new HashMap<>();\n\n            // Process each record and add to map\n            for (CSVRecord record : records) {\n                int id = Integer.parseInt(record.get(\"id\"));\n                String name = record.get(\"name\");\n                idNameMap.put(id, name);\n            }\n\n            // Print the map\n            System.out.println(\"ID-Name Map: \" + idNameMap);\n\n            // Additional logic to manipulate data\n            ArrayList<String> namesList = new ArrayList<>(idNameMap.values());\n            namesList.add(\"Alice Johnson\");\n            namesList.remove(\"John Doe\");\n\n            // Print the updated list of names\n            System.out.println(\"Updated Names List: \" + namesList);\n\n            // Get the first record\n            CSVRecord firstRecord = records.get(0);\n\n            // Read the comment from the first record\n            /* read */ String comment = firstRecord.getComment();\n\n            // Print the comment\n            System.out.println(\"Comment from first record: \" + comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Create a CSV format instance with header comments\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Prepare a CSV string to parse\n            String csvData = \"id,name\\n1,John Doe\";\n\n            // Parse the CSV data using the format\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Get the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}