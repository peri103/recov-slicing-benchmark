{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Sample CSV data\n        String csvData = \"Name, Age, City\\nJohn Doe, 30, New York\\nJane Smith, 25, Los Angeles\";\n\n        // Create a CSVFormat object with the specified configuration\n        CSVFormat csvFormat = CSVFormat.DEFAULT;\n        /* write */ csvFormat = csvFormat.withIgnoreSurroundingSpaces();\n\n        // Parse the CSV data using the configured CSVFormat\n        try {\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            HashMap<String, ArrayList<String>> dataMap = new HashMap<>();\n\n            // Process each CSV record\n            for (CSVRecord record : parser) {\n                // Extract data from each record\n                String name = record.get(\"Name\");\n                String age = record.get(\"Age\");\n                String city = record.get(\"City\");\n\n                // Add data to a map for further processing\n                if (!dataMap.containsKey(city)) {\n                    dataMap.put(city, new ArrayList<>());\n                }\n                dataMap.get(city).add(name + \" (\" + age + \")\");\n\n                // Check if a specific column is set in the current record\n                /* read */ boolean isSet = record.isSet(\"Name\");\n                System.out.println(\"Is 'Name' column set? \" + isSet);\n            }\n\n            // Print out the collected data grouped by city\n            for (String city : dataMap.keySet()) {\n                System.out.println(\"People in \" + city + \": \" + dataMap.get(city));\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Additional complex operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * i);\n        }\n\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of squares: \" + sum);\n\n        // Simulate some complex logic\n        HashMap<String, Integer> nameToAge = new HashMap<>();\n        nameToAge.put(\"John Doe\", 30);\n        nameToAge.put(\"Jane Smith\", 25);\n\n        for (String name : nameToAge.keySet()) {\n            System.out.println(name + \" is \" + nameToAge.get(name) + \" years old.\");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Sample CSV data\n        String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Smith, 25\";\n\n        try {\n            // Create a CSVFormat object with the specified configuration\n            CSVFormat csvFormat = CSVFormat.DEFAULT;\n            /* write */ csvFormat = csvFormat.withIgnoreSurroundingSpaces();\n\n            // Parse the CSV data using the configured CSVFormat\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), csvFormat);\n            for (CSVRecord record : parser) {\n                // Check if a specific column is set in the current record\n                /* read */ boolean isSet = record.isSet(\"Name\");\n                System.out.println(\"Is 'Name' column set? \" + isSet);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}