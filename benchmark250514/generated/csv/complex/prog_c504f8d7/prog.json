{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true);\n\n        // Create a CSV string to parse\n        String csvData = \"name, age\\nJohn Doe, 30\";\n\n        // Parse the CSV string using the format\n        List<CSVRecord> records = null;\n        try {\n            records = csvFormat.parse(new StringReader(csvData)).getRecords();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        // Additional unrelated code to increase complexity\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // More complex logic with a different API\n        List<String> names = Arrays.asList(\"Alice\", \"Bob\", \"Charlie\");\n        for (String name : names) {\n            System.out.println(\"Processing name: \" + name);\n            if (name.startsWith(\"A\")) {\n                System.out.println(name + \" starts with A\");\n            }\n        }\n\n        // Ensure the records are parsed\n        if (records != null && !records.isEmpty()) {\n            CSVRecord record = records.get(0);\n\n            // More unrelated operations\n            String[] fruits = {\"Apple\", \"Banana\", \"Cherry\"};\n            for (String fruit : fruits) {\n                System.out.println(\"Fruit: \" + fruit);\n            }\n\n            // Use the read method\n            /* read */ boolean isSet = record.isSet(\"name\");\n            System.out.println(\"Is 'name' set: \" + isSet);\n\n            // Further logic using the records\n            for (CSVRecord rec : records) {\n                String name = rec.get(\"name\");\n                String age = rec.get(\"age\");\n                System.out.println(\"Name: \" + name + \", Age: \" + age);\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with write method\n        CSVFormat csvFormat = CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true);\n\n        // Create a CSV string to parse\n        String csvData = \"name, age\\nJohn Doe, 30\";\n\n        // Parse the CSV string using the format\n        List<CSVRecord> records = null;\n        try {\n            records = csvFormat.parse(new StringReader(csvData)).getRecords();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        // Ensure the records are parsed\n        if (records != null && !records.isEmpty()) {\n            CSVRecord record = records.get(0);\n            // Use the read method\n            /* read */ boolean isSet = record.isSet(\"name\");\n            System.out.println(\"Is 'name' set: \" + isSet);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withIgnoreSurroundingSpaces",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isSet"
    }
}