{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVPrinter\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT.withHeader(\"Header1\").withCommentMarker('#');\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            // Add some complex data structure\n            ArrayList<Map<String, String>> dataList = new ArrayList<>();\n            for (int i = 0; i < 3; i++) {\n                Map<String, String> data = new HashMap<>();\n                data.put(\"Key\" + i, \"Value\" + i);\n                dataList.add(data);\n            }\n\n            // Write a comment into CSV\n            /* write */ printer.printComment(\"This is a comment\");\n\n            // Process the dataList\n            for (Map<String, String> data : dataList) {\n                for (Map.Entry<String, String> entry : data.entrySet()) {\n                    System.out.println(entry.getKey() + \": \" + entry.getValue());\n                }\n            }\n\n            // Flush the printer\n            printer.flush();\n            String csvData = writer.toString();\n\n            // Initialize CSVReader\n            StringReader reader = new StringReader(csvData);\n            Iterable<CSVRecord> records = format.parse(reader);\n\n            // Iterate over records and read the comment\n            for (CSVRecord record : records) {\n                // Perform some unrelated operations\n                int sum = 0;\n                for (int i = 0; i < 10; i++) {\n                    sum += i;\n                }\n                System.out.println(\"Sum: \" + sum);\n\n                // Read the comment\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n                break; // Ensure read is executed only once\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT.withHeader(\"Header1\").withCommentMarker('#');\n            CSVPrinter printer = new CSVPrinter(writer, format);\n\n            /* write */ printer.printComment(\"This is a comment\");\n\n            printer.flush();\n            String csvData = writer.toString();\n\n            StringReader reader = new StringReader(csvData);\n            Iterable<CSVRecord> records = format.parse(reader);\n            for (CSVRecord record : records) {\n                /* read */ String comment = record.getComment();\n                System.out.println(comment);\n                break; // ensure read is executed only once\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "printComment",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}