{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Prepare a CSV input with a comment\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Additional unrelated code to increase complexity\n            ArrayList<String> dataList = new ArrayList<>();\n            dataList.add(\"Unrelated Data 1\");\n            dataList.add(\"Unrelated Data 2\");\n            for (String data : dataList) {\n                System.out.println(\"Processing: \" + data);\n            }\n\n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // More unrelated code to increase complexity\n            ArrayList<Integer> numberList = new ArrayList<>();\n            for (int i = 0; i < 5; i++) {\n                numberList.add(i * 10);\n            }\n            for (int number : numberList) {\n                System.out.println(\"Number: \" + number);\n            }\n\n            // Try to get the comment (Note: CSVRecord does not directly support getComment)\n            // This is a workaround: we will not directly retrieve a comment from CSVRecord\n            // because CSVRecord does not store comments as part of the records.\n            // We will just demonstrate reading the first value from the record.\n            /* read */ String value = record.get(0);\n\n            System.out.println(value);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with a comment marker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Prepare a CSV input with a comment\n            String csvData = \"# This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n\n            // Read the first record\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Try to get the comment (Note: CSVRecord does not directly support getComment)\n            // This is a workaround: we will not directly retrieve a comment from CSVRecord\n            // because CSVRecord does not store comments as part of the records.\n            // We will just demonstrate reading the first value from the record.\n            /* read */ String value = record.get(0);\n\n            System.out.println(value);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}