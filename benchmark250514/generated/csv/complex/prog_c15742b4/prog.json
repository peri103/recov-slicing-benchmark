{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance with a quote character\n        CSVFormat format = CSVFormat.DEFAULT.withQuote('\"');\n\n        // Prepare a CSV input string\n        String csvData = \"\\\"Name\\\",\\\"Age\\\"\\n\\\"John Doe\\\",\\\"30\\\"\";\n\n        // Parse the CSV data using the format\n        List<CSVRecord> records = null;\n        try {\n            records = format.parse(new StringReader(csvData)).getRecords();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        // Additional unrelated operations to increase complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i);\n        }\n        Collections.shuffle(numbers);\n        System.out.println(\"Shuffled numbers: \" + numbers);\n\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Assuming records is not null and has at least one record\n        if (records != null && !records.isEmpty()) {\n            CSVRecord record = records.get(0);\n            /* read */ String recordString = record.toString();\n            System.out.println(recordString);\n        }\n\n        // Additional operations on numbers list\n        Collections.sort(numbers);\n        System.out.println(\"Sorted numbers: \" + numbers);\n\n        int max = Collections.max(numbers);\n        int min = Collections.min(numbers);\n        System.out.println(\"Max: \" + max + \", Min: \" + min);\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CSVFormat instance with a quote character\n        CSVFormat format = CSVFormat.DEFAULT.withQuote('\"');\n        \n        // Prepare a CSV input string\n        String csvData = \"\\\"Name\\\",\\\"Age\\\"\\n\\\"John Doe\\\",\\\"30\\\"\";\n        \n        // Parse the CSV data using the format\n        List<CSVRecord> records = null;\n        try {\n            records = format.parse(new StringReader(csvData)).getRecords();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        \n        // Assuming records is not null and has at least one record\n        if (records != null && !records.isEmpty()) {\n            CSVRecord record = records.get(0);\n            /* read */ String recordString = record.toString();\n            System.out.println(recordString);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withQuote",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "toString"
    }
}