{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a sample CSV input\n            String csvData = \"#This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Create a CSVFormat instance with a comment marker using withCommentMarker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Create an unrelated list of integers\n            List<Integer> numbers = new ArrayList<>(Arrays.asList(10, 20, 30, 40, 50));\n\n            // Perform some operations on the list\n            int sum = 0;\n            for (int number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // Add more complexity with string manipulations\n            StringBuilder sb = new StringBuilder();\n            for (int i = 0; i < numbers.size(); i++) {\n                sb.append(\"Number \").append(i + 1).append(\": \").append(numbers.get(i)).append(\"\\n\");\n            }\n            System.out.println(sb.toString());\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n            // More complex operations: simulate processing of CSV records\n            for (CSVRecord record : records) {\n                StringBuilder recordOutput = new StringBuilder(\"Record: \");\n                for (String value : record) {\n                    recordOutput.append(value).append(\" \");\n                }\n                System.out.println(recordOutput.toString().trim());\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.util.List;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare a sample CSV input\n            String csvData = \"#This is a comment\\nheader1,header2\\nvalue1,value2\";\n\n            // Create a CSVFormat instance with a comment marker using withCommentMarker\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withCommentMarker('#');\n\n            // Parse the CSV data\n            List<CSVRecord> records = format.parse(new StringReader(csvData)).getRecords();\n\n            // Read the comment from the first record\n            /* read */ String comment = records.get(0).getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withCommentMarker",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}