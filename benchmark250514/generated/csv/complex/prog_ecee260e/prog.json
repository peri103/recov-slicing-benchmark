{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trim\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age, Location\\nJohn Doe, 29, New York\\nJane Smith, 34, Los Angeles\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional processing: Collect all names into a list\n            List<String> names = new ArrayList<>();\n            for (CSVRecord record : records) {\n                names.add(record.get(\"Name\"));\n            }\n\n            // Perform some unrelated complex operations\n            int totalAge = 0;\n            for (CSVRecord record : records) {\n                totalAge += Integer.parseInt(record.get(\"Age\"));\n            }\n            double averageAge = totalAge / (double) records.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Additional processing: Check if 'Location' is mapped for each record\n            for (CSVRecord record : records) {\n                boolean isLocationMapped = record.isMapped(\"Location\");\n                System.out.println(\"Is 'Location' mapped for record: \" + isLocationMapped);\n            }\n\n            // Read the first CSVRecord and check if a column is mapped\n            CSVRecord firstRecord = records.get(0);\n            /* read */ boolean isMapped = firstRecord.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' mapped in the first record: \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with trim\n            CSVFormat format = CSVFormat.DEFAULT;\n            /* write */ format = format.withTrim();\n\n            // Sample CSV data\n            String csvData = \"Name, Age, Location\\nJohn Doe, 29, New York\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the first CSVRecord and check if a column is mapped\n            CSVRecord record = records.get(0);\n            /* read */ boolean isMapped = record.isMapped(\"Name\");\n            System.out.println(\"Is 'Name' mapped: \" + isMapped);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}