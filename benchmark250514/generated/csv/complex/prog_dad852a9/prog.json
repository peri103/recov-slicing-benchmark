{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with trimming\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Sample CSV data\n            String csvData = \"name, age\\nJohn Doe, 25\\nJane Smith, 30\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Create a list to store names from the CSV\n            List<String> names = new ArrayList<>();\n\n            // Iterate over each record and extract names\n            for (CSVRecord record : parser) {\n                if (record.isMapped(\"name\")) {\n                    names.add(record.get(\"name\"));\n                }\n            }\n\n            // Process the names list\n            for (String name : names) {\n                System.out.println(\"Processing name: \" + name);\n            }\n\n            // Read the first record\n            CSVRecord firstRecord = parser.iterator().next();\n\n            // Check if a specific column is mapped\n            /* read */ boolean isMapped = firstRecord.isMapped(\"name\");\n            System.out.println(\"Is 'name' column mapped? \" + isMapped);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.IOException;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSV format with trimming\n            /* write */ CSVFormat format = CSVFormat.DEFAULT.withTrim();\n\n            // Sample CSV data\n            String csvData = \"name, age\\nJohn Doe, 25\";\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(new StringReader(csvData), format);\n\n            // Read the first record\n            CSVRecord record = parser.iterator().next();\n\n            // Check if a specific column is mapped\n            /* read */ boolean isMapped = record.isMapped(\"name\");\n            System.out.println(\"Is 'name' column mapped? \" + isMapped);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withTrim",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "isMapped"
    }
}