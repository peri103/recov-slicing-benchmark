{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.QuoteMode;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n            \n            // Additional CSVFormat example with different settings\n            CSVFormat format2 = CSVFormat.DEFAULT.withQuoteMode(QuoteMode.MINIMAL);\n\n            // Sample CSV data\n            String csvData = \"Name,Age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(csvData, format);\n\n            // Get the records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Unrelated operation on records to increase complexity\n            ArrayList<String> names = new ArrayList<>();\n            for (CSVRecord rec : records) {\n                names.add(rec.get(\"Name\"));\n            }\n            \n            // Perform some operations with names\n            for (String name : names) {\n                System.out.println(\"Processing name: \" + name);\n            }\n\n            // Separate unrelated logic\n            int sumOfAges = 0;\n            for (CSVRecord rec : records) {\n                sumOfAges += Integer.parseInt(rec.get(\"Age\"));\n            }\n            System.out.println(\"Sum of ages: \" + sumOfAges);\n\n            // Since we added a header comment, it is associated with the first record\n            CSVRecord record = records.get(0);\n\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(\"Header Comment: \" + comment);\n\n            // Additional unrelated logic to increase complexity\n            int maxAge = 0;\n            for (CSVRecord rec : records) {\n                int age = Integer.parseInt(rec.get(\"Age\"));\n                if (age > maxAge) {\n                    maxAge = age;\n                }\n            }\n            System.out.println(\"Max age: \" + maxAge);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n\n            // Sample CSV data\n            String csvData = \"Name,Age\\nJohn,30\\nJane,25\";\n\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(csvData, format);\n\n            // Get the records from the parser\n            List<CSVRecord> records = parser.getRecords();\n\n            // Since we added a header comment, it is associated with the first record\n            CSVRecord record = records.get(0);\n\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}