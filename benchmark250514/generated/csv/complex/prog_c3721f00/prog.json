{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.Reader;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with header comments\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        // Prepare a CSV string with header and data\n        String csvData = \"Column1,Column2\\nData1,Data2\";\n\n        // Create a map to store CSV data\n        HashMap<String, String> csvMap = new HashMap<>();\n\n        try {\n            // Parse the CSV data\n            Reader input = new StringReader(csvData);\n            CSVParser parser = new CSVParser(input, format);\n\n            // Assume the first record is available for reading\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Store data from CSV into the map\n            csvMap.put(\"Column1\", record.get(\"Column1\"));\n            csvMap.put(\"Column2\", record.get(\"Column2\"));\n\n            // Create a list of keys from the map\n            ArrayList<String> keys = new ArrayList<>(csvMap.keySet());\n\n            // Process map and print each key-value pair\n            for (String key : keys) {\n                System.out.println(\"Key: \" + key + \", Value: \" + csvMap.get(key));\n            }\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(\"Comment: \" + comment);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Additional processing of CSV data\n        for (String key : csvMap.keySet()) {\n            System.out.println(\"Processing key: \" + key);\n        }\n\n        // More complex operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.Reader;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSVFormat with header comments\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        // Prepare a CSV string with header and data\n        String csvData = \"Column1,Column2\\nData1,Data2\";\n\n        try {\n            // Parse the CSV data\n            Reader input = new StringReader(csvData);\n            CSVParser parser = new CSVParser(input, format);\n\n            // Assume the first record is available for reading\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Read the comment from the record\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}