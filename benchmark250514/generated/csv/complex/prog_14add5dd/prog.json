{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare to write to a CSV format in memory\n            StringWriter writer = new StringWriter();\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a value to the CSV\n            /* write */ csvPrinter.print(\"Hello, World!\");\n            csvPrinter.flush();\n\n            // Additional complex operations\n            Map<String, Integer> wordCount = new HashMap<>();\n            String[] words = {\"Hello\", \"World\", \"Hello\", \"CSV\"};\n            for (String word : words) {\n                wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);\n            }\n\n            for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {\n                System.out.println(entry.getKey() + \": \" + entry.getValue());\n            }\n\n            // Read the value back from the CSV\n            String csvContent = writer.toString();\n            CSVParser parser = CSVParser.parse(new StringReader(csvContent), CSVFormat.DEFAULT);\n            CSVRecord record = parser.iterator().next();\n            /* read */ String value = record.get(0);\n\n            // Print the read value\n            System.out.println(value);\n\n            // Close resources\n            csvPrinter.close();\n            parser.close();\n            writer.close();\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport org.apache.commons.csv.CSVParser;\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.io.StringReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Prepare to write to a CSV format in memory\n            StringWriter writer = new StringWriter();\n            CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT);\n\n            // Write a value to the CSV\n            /* write */ csvPrinter.print(\"Hello, World!\");\n            csvPrinter.flush();\n\n            // Read the value back from the CSV\n            String csvContent = writer.toString();\n            CSVParser parser = CSVParser.parse(new StringReader(csvContent), CSVFormat.DEFAULT);\n            CSVRecord record = parser.iterator().next();\n            /* read */ String value = record.get(0);\n\n            // Print the read value\n            System.out.println(value);\n\n            // Close resources\n            csvPrinter.close();\n            parser.close();\n            writer.close();\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVPrinter",
        "write_method": "print",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "get"
    }
}