{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Step 1: Initialize CSVFormat with a header comment\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n            /* write */ CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(\"header1\", \"header2\");\n            printer.printRecord(\"value1\", \"value2\");\n            printer.flush();\n            printer.close();\n\n            // Step 2: Perform additional operations unrelated to CSV\n            ArrayList<Integer> numbers = new ArrayList<>();\n            numbers.add(10);\n            numbers.add(20);\n            numbers.add(30);\n\n            int sum = 0;\n            for (int number : numbers) {\n                sum += number;\n            }\n            System.out.println(\"Sum of numbers: \" + sum);\n\n            // Step 3: Parse the CSV content\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords();\n\n            // Step 4: Perform more unrelated operations\n            ArrayList<String> strings = new ArrayList<>();\n            strings.add(\"apple\");\n            strings.add(\"banana\");\n            strings.add(\"cherry\");\n\n            for (String str : strings) {\n                System.out.println(\"Fruit: \" + str);\n            }\n\n            // Step 5: Retrieve the comment from the first CSV record\n            /* read */ String comment = records.get(0).getComment();  // Assuming the first record contains the comment\n            System.out.println(\"CSV Comment: \" + comment);\n\n            // Step 6: Further unrelated operations\n            int product = 1;\n            for (int number : numbers) {\n                product *= number;\n            }\n            System.out.println(\"Product of numbers: \" + product);\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVPrinter;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringWriter;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            StringWriter writer = new StringWriter();\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a comment\");\n            /* write */ CSVPrinter printer = new CSVPrinter(writer, format);\n            printer.printRecord(\"header1\", \"header2\");\n            printer.printRecord(\"value1\", \"value2\");\n            printer.flush();\n            printer.close();\n\n            // Parse the CSV content\n            List<CSVRecord> records = CSVFormat.DEFAULT.parse(new java.io.StringReader(writer.toString())).getRecords();\n            /* read */ String comment = records.get(0).getComment();  // Assuming the first record contains the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}