{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n            // Sample CSV data with multiple records\n            String csvData = \"Name, Age\\nJohn Doe, 30\\nJane Smith, 25\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Additional unrelated processing\n            ArrayList<String> names = new ArrayList<>();\n            ArrayList<Integer> ages = new ArrayList<>();\n\n            // Process each record\n            for (CSVRecord record : records) {\n                String name = record.get(\"Name\");\n                int age = Integer.parseInt(record.get(\"Age\"));\n                names.add(name);\n                ages.add(age);\n            }\n\n            // Perform some operations on the extracted data\n            int totalAge = 0;\n            for (int age : ages) {\n                totalAge += age;\n            }\n            double averageAge = totalAge / (double) ages.size();\n            System.out.println(\"Average Age: \" + averageAge);\n\n            // Additional unrelated operations\n            List<String> reversedNames = new ArrayList<>(names);\n            java.util.Collections.reverse(reversedNames);\n            for (String reversedName : reversedNames) {\n                System.out.println(\"Reversed Name: \" + reversedName);\n            }\n\n            // Read the comment from the first CSV record\n            /* read */\n            String comment = records.get(0).getComment();\n            System.out.println(\"Header Comment: \" + comment);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVRecord;\nimport java.io.StringReader;\nimport java.io.IOException;\nimport org.apache.commons.csv.CSVParser;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize CSVFormat with header comments\n            /* write */\n            CSVFormat format = CSVFormat.DEFAULT.withHeaderComments(\"This is a header comment\");\n\n            // Sample CSV data with a single record\n            String csvData = \"Name, Age\\nJohn Doe, 30\";\n            StringReader reader = new StringReader(csvData);\n\n            // Parse the CSV data\n            CSVParser parser = new CSVParser(reader, format);\n            CSVRecord record = parser.getRecords().get(0);\n\n            // Read the comment from the CSV record\n            /* read */\n            String comment = record.getComment();\n            System.out.println(comment);\n\n            parser.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}