{
    "java_code": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSV data\n        String csvData = \"# This is a comment\\nHeader1,Header2\\nValue1,Value2\";\n\n        // Create CSVFormat with header comments\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        // Unrelated code to make the program more complex\n        Map<String, Integer> wordCount = new HashMap<>();\n        String text = \"apple banana apple orange banana apple\";\n        String[] words = text.split(\" \");\n        for (String word : words) {\n            wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);\n        }\n\n        // More unrelated code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * i);\n        }\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of squares: \" + sum);\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // More unrelated code\n            Map<String, String> capitalCities = new HashMap<>();\n            capitalCities.put(\"France\", \"Paris\");\n            capitalCities.put(\"Germany\", \"Berlin\");\n            capitalCities.put(\"Italy\", \"Rome\");\n\n            // Read the comment from the first record\n            CSVRecord record = records.get(0);\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n\n            // More unrelated code\n            for (Map.Entry<String, String> entry : capitalCities.entrySet()) {\n                System.out.println(\"The capital of \" + entry.getKey() + \" is \" + entry.getValue());\n            }\n\n            // Print the word count\n            for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {\n                System.out.println(\"Word: \" + entry.getKey() + \", Count: \" + entry.getValue());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.csv.CSVFormat;\nimport org.apache.commons.csv.CSVParser;\nimport org.apache.commons.csv.CSVRecord;\n\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CSV data\n        String csvData = \"# This is a comment\\nHeader1,Header2\\nValue1,Value2\";\n\n        // Create CSVFormat with header comments\n        CSVFormat format = CSVFormat.DEFAULT;\n        /* write */ format = format.withHeaderComments(\"This is a comment\");\n\n        try {\n            // Parse the CSV data\n            CSVParser parser = CSVParser.parse(new StringReader(csvData), format);\n            List<CSVRecord> records = parser.getRecords();\n\n            // Read the comment from the first record\n            CSVRecord record = records.get(0);\n            /* read */ String comment = record.getComment();\n\n            // Print the comment\n            System.out.println(comment);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.csv.CSVFormat",
        "write_method": "withHeaderComments",
        "read_class": "org.apache.commons.csv.CSVRecord",
        "read_method": "getComment"
    }
}