{
    "files": {
        "VectorOperations.java": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class VectorOperations {\n    private ArrayRealVector vector;\n\n    public VectorOperations(int size) {\n        this.vector = new ArrayRealVector(size);\n    }\n\n    public void setVectorEntry(int index, double value) {\n        /* write */ vector.setEntry(index, value);\n    }\n\n    public double getVectorEntry(int index) {\n        return vector.getEntry(index);\n    }\n\n    public RealVector scaleVector(double scale) {\n        return vector.mapMultiply(scale);\n    }\n\n    public RealVector addVector(RealVector otherVector) {\n        return vector.add(otherVector);\n    }\n\n    public RealVector subtractVector(RealVector otherVector) {\n        return vector.subtract(otherVector);\n    }\n\n    public RealVector normalizeVector() {\n        return vector.unitVector();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Double> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(double grade) {\n        grades.add(grade);\n    }\n\n    public List<Double> getGrades() {\n        return grades;\n    }\n\n    public double calculateAverageGrade() {\n        double sum = 0;\n        for (double grade : grades) {\n            sum += grade;\n        }\n        return grades.isEmpty() ? 0 : sum / grades.size();\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        VectorOperations vectorOps = new VectorOperations(3);\n\n        vectorOps.setVectorEntry(1, 10.0);\n        vectorOps.setVectorEntry(2, 20.0);\n\n        RealVector anotherVector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        RealVector resultVector = vectorOps.addVector(anotherVector);\n\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        vectorOps.setVectorEntry(0, 42.0);\n\n        Student student = new Student(\"John\");\n        student.addGrade(85.0);\n        student.addGrade(92.0);\n        student.addGrade(78.0);\n\n        System.out.println(\"Student Grades:\");\n        for (double grade : student.getGrades()) {\n            System.out.println(grade);\n        }\n\n        System.out.println(\"Average Grade: \" + student.calculateAverageGrade());\n\n        /* read */ double value = vectorOps.getVectorEntry(0);\n        System.out.println(\"Read value: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.ArrayRealVector",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.ArrayRealVector",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArrayRealVector vector = new ArrayRealVector(1);\n        /* write */ vector.setEntry(0, 42.0);\n        /* read */ double value = vector.getEntry(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArrayRealVector vector = new ArrayRealVector(3);\n        \n        // Initialize other elements in the vector\n        vector.setEntry(1, 10.0);\n        vector.setEntry(2, 20.0);\n        \n        // Perform some operations on the vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        \n        // Create another vector and add it to the original vector\n        ArrayRealVector anotherVector = new ArrayRealVector(new double[] {1.0, 2.0, 3.0});\n        RealVector resultVector = vector.add(anotherVector);\n        \n        // Print the scaled vector\n        System.out.println(\"Scaled Vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n        \n        // Print the result of adding two vectors\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n        \n        /* write */ vector.setEntry(0, 42.0);\n        \n        // Perform some unrelated calculations\n        double sum = 0;\n        for (int i = 0; i < vector.getDimension(); i++) {\n            sum += vector.getEntry(i);\n        }\n        System.out.println(\"Sum of vector elements: \" + sum);\n        \n        // More complex operations\n        RealVector subtractedVector = vector.subtract(anotherVector);\n        System.out.println(\"Subtracted Vector:\");\n        for (int i = 0; i < subtractedVector.getDimension(); i++) {\n            System.out.println(subtractedVector.getEntry(i));\n        }\n        \n        /* read */ double value = vector.getEntry(0);\n        System.out.println(\"Read value: \" + value);\n        \n        // Further operations\n        RealVector normalizedVector = vector.unitVector();\n        System.out.println(\"Normalized Vector:\");\n        for (int i = 0; i < normalizedVector.getDimension(); i++) {\n            System.out.println(normalizedVector.getEntry(i));\n        }\n    }\n}"
}