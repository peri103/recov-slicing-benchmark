{
    "files": {
        "MatrixVisitor.java": "import org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor;\n\npublic class MatrixVisitor extends DefaultRealMatrixChangingVisitor {\n    private double sum = 0;\n\n    @Override\n    public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n        // Initialization if needed\n    }\n\n    @Override\n    public double visit(int row, int column, double value) {\n        /* write */ sum += value;\n        return value;\n    }\n\n    @Override\n    public double end() {\n        return sum;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n}",
        "Main.java": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a matrix and apply the MatrixVisitor\n        RealMatrix matrix = new Array2DRowRealMatrix(new double[][] {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        });\n\n        MatrixVisitor visitor = new MatrixVisitor();\n        matrix.walkInRowOrder(visitor);\n\n        // Create a course and add students\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(new Student(\"Alice\", 1));\n        course.addStudent(new Student(\"Bob\", 2));\n\n        // Print course details\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student ID: \" + student.getId() + \", Name: \" + student.getName());\n        }\n\n        // Read the result of the matrix operation\n        /* read */ double result = visitor.end();\n        System.out.println(\"Sum from visitor: \" + result);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor",
        "read_method": "end"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the DefaultRealMatrixChangingVisitor\n        DefaultRealMatrixChangingVisitor visitor = new DefaultRealMatrixChangingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                // Initialization if needed\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                sum += value;\n                return value;\n            }\n\n            @Override\n            public double end() {\n                return sum;\n            }\n        };\n\n        // Simulate visiting some matrix elements\n        /* write */ visitor.visit(0, 0, 1.0);\n        /* write */ visitor.visit(0, 1, 2.0);\n        /* write */ visitor.visit(1, 0, 3.0);\n        /* write */ visitor.visit(1, 1, 4.0);\n\n        // Read the result of the visit\n        /* read */ double result = visitor.end();\n        System.out.println(result);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the DefaultRealMatrixChangingVisitor\n        DefaultRealMatrixChangingVisitor visitor = new DefaultRealMatrixChangingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                // Initialization if needed\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                sum += value;\n                return value;\n            }\n\n            @Override\n            public double end() {\n                return sum;\n            }\n        };\n\n        // Create a matrix and apply the visitor\n        RealMatrix matrix = new Array2DRowRealMatrix(new double[][] {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        });\n\n        // Visit matrix elements using the visitor\n        matrix.walkInRowOrder(visitor);\n\n        // Additional complexity: Using a Map to store some values\n        Map<String, Double> valueMap = new HashMap<>();\n        valueMap.put(\"First\", 1.0);\n        valueMap.put(\"Second\", 2.0);\n        valueMap.put(\"Third\", 3.0);\n\n        // Manipulating the map\n        double total = 0.0;\n        for (Map.Entry<String, Double> entry : valueMap.entrySet()) {\n            total += entry.getValue();\n        }\n\n        System.out.println(\"Total from map: \" + total);\n\n        // Additional matrix operations\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(new double[][] {\n            {5.0, 6.0},\n            {7.0, 8.0}\n        });\n\n        RealMatrix resultMatrix = matrix.add(anotherMatrix);\n        System.out.println(\"Result matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Read the result of the visit\n        /* read */ double result = visitor.end();\n        System.out.println(\"Sum from visitor: \" + result);\n    }\n}"
}