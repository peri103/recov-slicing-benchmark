{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.BlockRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    private BlockRealMatrix matrix;\n    \n    public MatrixOperations(int rows, int columns) {\n        this.matrix = new BlockRealMatrix(rows, columns);\n    }\n\n    public void setMatrixEntry(int row, int column, double value) {\n        /* write */ matrix.setEntry(row, column, value);\n    }\n\n    public double getMatrixEntry(int row, int column) {\n        return matrix.getEntry(row, column);\n    }\n\n    public RealMatrix addMatrices(BlockRealMatrix otherMatrix) {\n        return matrix.add(otherMatrix);\n    }\n\n    public RealMatrix multiplyMatrices(BlockRealMatrix otherMatrix) {\n        return matrix.multiply(otherMatrix);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Double> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(double grade) {\n        grades.add(grade);\n    }\n\n    public List<Double> getGrades() {\n        return grades;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.BlockRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Matrix operations\n        MatrixOperations matrixOps = new MatrixOperations(3, 3);\n        matrixOps.setMatrixEntry(1, 1, 5.0);\n\n        BlockRealMatrix matrix2 = new BlockRealMatrix(3, 3);\n        matrix2.setEntry(0, 0, 2.0);\n        matrix2.setEntry(0, 1, 4.0);\n        matrix2.setEntry(0, 2, 6.0);\n        matrix2.setEntry(1, 0, 8.0);\n        matrix2.setEntry(1, 1, 10.0);\n        matrix2.setEntry(1, 2, 12.0);\n        matrix2.setEntry(2, 0, 14.0);\n        matrix2.setEntry(2, 1, 16.0);\n        matrix2.setEntry(2, 2, 18.0);\n\n        RealMatrix resultMatrix = matrixOps.addMatrices(matrix2);\n        System.out.println(\"Result of matrix addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        RealMatrix multipliedMatrix = matrixOps.multiplyMatrices(matrix2);\n        System.out.println(\"Result of matrix multiplication:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        /* read */ double value = matrixOps.getMatrixEntry(1, 1);\n        System.out.println(\"Read value: \" + value);\n\n        // Student operations\n        Student student = new Student(\"Alice\");\n        student.addGrade(95.0);\n        student.addGrade(89.5);\n        student.addGrade(76.0);\n\n        System.out.println(\"Grades for \" + student.getName() + \":\");\n        List<Double> grades = student.getGrades();\n        for (double grade : grades) {\n            System.out.println(grade);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.BlockRealMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.BlockRealMatrix",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.BlockRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a matrix with 3 rows and 3 columns\n        BlockRealMatrix matrix = new BlockRealMatrix(3, 3);\n        \n        // Set the value at position (1, 1) to 5.0\n        /* write */ matrix.setEntry(1, 1, 5.0);\n        \n        // Read the value at position (1, 1)\n        /* read */ double value = matrix.getEntry(1, 1);\n        \n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.BlockRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a matrix with 3 rows and 3 columns\n        BlockRealMatrix matrix = new BlockRealMatrix(3, 3);\n        \n        // Set the value at position (1, 1) to 5.0\n        /* write */ matrix.setEntry(1, 1, 5.0);\n\n        // Create another matrix and perform operations\n        BlockRealMatrix matrix2 = new BlockRealMatrix(3, 3);\n        matrix2.setEntry(0, 0, 2.0);\n        matrix2.setEntry(0, 1, 4.0);\n        matrix2.setEntry(0, 2, 6.0);\n        matrix2.setEntry(1, 0, 8.0);\n        matrix2.setEntry(1, 1, 10.0);\n        matrix2.setEntry(1, 2, 12.0);\n        matrix2.setEntry(2, 0, 14.0);\n        matrix2.setEntry(2, 1, 16.0);\n        matrix2.setEntry(2, 2, 18.0);\n\n        // Perform matrix addition\n        RealMatrix resultMatrix = matrix.add(matrix2);\n        \n        // Print the result of matrix addition\n        System.out.println(\"Result of matrix addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform matrix multiplication\n        RealMatrix multipliedMatrix = matrix.multiply(matrix2);\n        \n        // Print the result of matrix multiplication\n        System.out.println(\"Result of matrix multiplication:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Read the value at position (1, 1)\n        /* read */ double value = matrix.getEntry(1, 1);\n        \n        // Print the value\n        System.out.println(\"Read value: \" + value);\n\n        // Perform some unrelated operations\n        double sum = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                sum += matrix2.getEntry(i, j);\n            }\n        }\n        System.out.println(\"Sum of elements in matrix2: \" + sum);\n    }\n}"
}