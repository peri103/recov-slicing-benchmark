{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(int rows, int cols) {\n        matrix = MatrixUtils.createRealMatrix(rows, cols);\n    }\n\n    public void setMatrixEntry(int row, int col, double value) {\n        /* write */ matrix.setEntry(row, col, value);\n    }\n\n    public RealMatrix getMatrix() {\n        return matrix;\n    }\n}\n",
        "MatrixAnalyzer.java": "import org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixAnalyzer {\n    private RealMatrix matrix;\n\n    public MatrixAnalyzer(RealMatrix matrix) {\n        this.matrix = matrix;\n    }\n\n    public double getEntry(int row, int col) {\n        /* read */ return matrix.getEntry(row, col);\n    }\n\n    public double calculateTrace() {\n        double trace = 0.0;\n        for (int i = 0; i < Math.min(matrix.getRowDimension(), matrix.getColumnDimension()); i++) {\n            trace += matrix.getEntry(i, i);\n        }\n        return trace;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        MatrixOperations operations = new MatrixOperations(3, 3);\n        operations.setMatrixEntry(0, 0, 5.0);\n        operations.setMatrixEntry(1, 1, 10.0);\n        operations.setMatrixEntry(2, 2, 15.0);\n\n        MatrixAnalyzer analyzer = new MatrixAnalyzer(operations.getMatrix());\n\n        double trace = analyzer.calculateTrace();\n        System.out.println(\"Trace of the matrix: \" + trace);\n\n        double value = analyzer.getEntry(0, 0);\n        System.out.println(\"Value at (0,0): \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.RealMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.RealMatrix",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrix matrix = MatrixUtils.createRealMatrix(3, 3);\n        /* write */ matrix.setEntry(0, 0, 5.0);\n        /* read */ double value = matrix.getEntry(0, 0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrix matrix = MatrixUtils.createRealMatrix(3, 3);\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(3, 3);\n        \n        /* write */ matrix.setEntry(0, 0, 5.0);\n        \n        // Performing some operations on anotherMatrix\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                anotherMatrix.setEntry(i, j, i + j);\n            }\n        }\n        \n        // Calculating the sum of elements in anotherMatrix\n        double sum = 0.0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                sum += anotherMatrix.getEntry(i, j);\n            }\n        }\n        System.out.println(\"Sum of elements in anotherMatrix: \" + sum);\n        \n        // Performing some arithmetic operations\n        double result = 0.0;\n        for (int i = 1; i <= 10; i++) {\n            result += i * i;\n        }\n        System.out.println(\"Sum of squares from 1 to 10: \" + result);\n        \n        // More operations on the original matrix\n        matrix.setEntry(1, 1, 10.0);\n        matrix.setEntry(2, 2, 15.0);\n        \n        // Calculate the trace of the matrix\n        double trace = matrix.getEntry(0, 0) + matrix.getEntry(1, 1) + matrix.getEntry(2, 2);\n        System.out.println(\"Trace of the matrix: \" + trace);\n        \n        /* read */ double value = matrix.getEntry(0, 0);\n        System.out.println(\"Value at (0,0): \" + value);\n    }\n}"
}