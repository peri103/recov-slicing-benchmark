{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public MatrixOperations(int rows, int columns) {\n        this.matrix = MatrixUtils.createRealMatrix(rows, columns);\n    }\n\n    public void setMatrixEntry(int row, int column, double value) {\n        /* write */ matrix.setEntry(row, column, value);\n    }\n\n    public RealMatrix getMatrix() {\n        return matrix;\n    }\n}\n",
        "MatrixReader.java": "import org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixReader {\n    private RealMatrix matrix;\n\n    public MatrixReader(RealMatrix matrix) {\n        this.matrix = matrix;\n    }\n\n    public double readMatrixEntry(int row, int column) {\n        /* read */ return matrix.getEntry(row, column);\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a MatrixOperations object\n        MatrixOperations matrixOps = new MatrixOperations(3, 3);\n        \n        // Set a value in the matrix\n        matrixOps.setMatrixEntry(1, 1, 5.5);\n\n        // Initialize a vector of size 3\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        \n        // Perform matrix-vector multiplication\n        RealVector resultVector = matrixOps.getMatrix().operate(vector);\n        \n        // Print the result of the matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Use MatrixReader to read the value\n        MatrixReader matrixReader = new MatrixReader(matrixOps.getMatrix());\n        double value = matrixReader.readMatrixEntry(1, 1);\n        \n        // Print the value\n        System.out.println(\"Value at position (1, 1) in the matrix: \" + value);\n        \n        // Perform another matrix operation\n        matrixOps.setMatrixEntry(0, 0, 3.3);\n        matrixOps.setMatrixEntry(2, 2, 7.7);\n        \n        // Calculate the trace of the matrix (sum of diagonal elements)\n        double trace = matrixOps.getMatrix().getEntry(0, 0) + matrixOps.getMatrix().getEntry(1, 1) + matrixOps.getMatrix().getEntry(2, 2);\n        System.out.println(\"Trace of the matrix: \" + trace);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.RealMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.RealMatrix",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with zeros\n        RealMatrix matrix = MatrixUtils.createRealMatrix(3, 3);\n        \n        // Write a value to the matrix at position (1, 1)\n        /* write */ matrix.setEntry(1, 1, 5.5);\n        \n        // Read the value from the matrix at position (1, 1)\n        /* read */ double value = matrix.getEntry(1, 1);\n        \n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 3x3 matrix with zeros\n        RealMatrix matrix = MatrixUtils.createRealMatrix(3, 3);\n        \n        // Write a value to the matrix at position (1, 1)\n        /* write */ matrix.setEntry(1, 1, 5.5);\n        \n        // Initialize a vector of size 3\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 2.0, 3.0});\n        \n        // Perform matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n        \n        // Print the result of the matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n        \n        // Add some unrelated operations\n        double sum = 0.0;\n        for (int i = 0; i < 100; i++) {\n            sum += Math.sqrt(i);\n        }\n        System.out.println(\"Sum of square roots from 0 to 99: \" + sum);\n        \n        // Read the value from the matrix at position (1, 1)\n        /* read */ double value = matrix.getEntry(1, 1);\n        \n        // Print the value\n        System.out.println(\"Value at position (1, 1) in the matrix: \" + value);\n        \n        // Perform another matrix operation\n        matrix.setEntry(0, 0, 3.3);\n        matrix.setEntry(2, 2, 7.7);\n        \n        // Calculate the trace of the matrix (sum of diagonal elements)\n        double trace = matrix.getEntry(0, 0) + matrix.getEntry(1, 1) + matrix.getEntry(2, 2);\n        System.out.println(\"Trace of the matrix: \" + trace);\n    }\n}"
}