{
    "files": {
        "VectorOperations.java": "import org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class VectorOperations {\n    private OpenMapRealVector vector;\n\n    public VectorOperations(int size) {\n        vector = new OpenMapRealVector(size);\n    }\n\n    public void setVectorEntry(int index, double value) {\n        /* write */ vector.setEntry(index, value);\n    }\n\n    public double getVectorEntry(int index) {\n        return vector.getEntry(index);\n    }\n}",
        "Student.java": "public class Student {\n    private String name;\n    private double grade;\n\n    public Student(String name, double grade) {\n        this.name = name;\n        this.grade = grade;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public double getGrade() {\n        return grade;\n    }\n}",
        "Main.java": "import org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        VectorOperations vectorOps = new VectorOperations(10);\n        vectorOps.setVectorEntry(0, 3.14);\n\n        Student student = new Student(\"John Doe\", 85.5);\n        System.out.println(\"Student Name: \" + student.getName());\n        System.out.println(\"Student Grade: \" + student.getGrade());\n\n        ArrayRealVector arrayVector = new ArrayRealVector(10);\n        for (int i = 0; i < 10; i++) {\n            arrayVector.setEntry(i, i * 2.0);\n        }\n\n        RealVector scaledVector = arrayVector.mapMultiply(1.5);\n        System.out.println(\"Scaled ArrayRealVector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n\n        /* read */ double value = vectorOps.getVectorEntry(0);\n        System.out.println(\"Read value from OpenMapRealVector: \" + value);\n\n        double adjustedValue = value + student.getGrade();\n        System.out.println(\"Adjusted value based on student's grade: \" + adjustedValue);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.OpenMapRealVector",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.OpenMapRealVector",
        "read_method": "getEntry"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.OpenMapRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        OpenMapRealVector vector = new OpenMapRealVector(10);\n        /* write */ vector.setEntry(0, 3.14);\n        /* read */ double value = vector.getEntry(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.OpenMapRealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        OpenMapRealVector vector = new OpenMapRealVector(10);\n        ArrayRealVector arrayVector = new ArrayRealVector(10);\n\n        // Initialize the ArrayRealVector with some values\n        for (int i = 0; i < 10; i++) {\n            arrayVector.setEntry(i, i * 1.1);\n        }\n\n        // Perform some operations on ArrayRealVector\n        RealVector scaledVector = arrayVector.mapMultiply(2.0);\n        System.out.println(\"Scaled ArrayRealVector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n\n        // Perform a write operation on OpenMapRealVector\n        /* write */ vector.setEntry(0, 3.14);\n\n        // Some unrelated computations\n        double sum = 0.0;\n        for (int i = 0; i < arrayVector.getDimension(); i++) {\n            sum += arrayVector.getEntry(i);\n        }\n        System.out.println(\"Sum of ArrayRealVector entries: \" + sum);\n\n        // More unrelated computations\n        double max = Double.NEGATIVE_INFINITY;\n        for (int i = 0; i < arrayVector.getDimension(); i++) {\n            double entry = arrayVector.getEntry(i);\n            if (entry > max) {\n                max = entry;\n            }\n        }\n        System.out.println(\"Maximum entry in ArrayRealVector: \" + max);\n\n        // Perform a read operation on OpenMapRealVector\n        /* read */ double value = vector.getEntry(0);\n        System.out.println(\"Read value from OpenMapRealVector: \" + value);\n\n        // Further computations using the read value\n        double adjustedValue = value * 1.5;\n        System.out.println(\"Adjusted value: \" + adjustedValue);\n    }\n}"
}