{
    "files": {
        "MatrixOperations.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class MatrixOperations {\n    private RealMatrix matrix;\n\n    public void createMatrix(double[] rowData) {\n        /* write */ matrix = MatrixUtils.createRowRealMatrix(rowData);\n    }\n\n    public RealMatrix getMatrix() {\n        return matrix;\n    }\n\n    public RealMatrix addMatrices(RealMatrix otherMatrix) {\n        return matrix.add(otherMatrix);\n    }\n\n    public RealMatrix multiplyMatrices(RealMatrix otherMatrix) {\n        return matrix.multiply(otherMatrix);\n    }\n\n    public RealVector scaleVector(double factor) {\n        RealVector vector = new ArrayRealVector(matrix.getRow(0));\n        return vector.mapMultiply(factor);\n    }\n}\n",
        "MatrixReader.java": "import org.apache.commons.math3.linear.RealMatrix;\n\npublic class MatrixReader {\n    private RealMatrix matrix;\n\n    public MatrixReader(RealMatrix matrix) {\n        this.matrix = matrix;\n    }\n\n    public void printMatrix() {\n        /* read */ RealMatrix readMatrix = matrix.getRowMatrix(0);\n        System.out.println(\"Read Matrix:\");\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n        System.out.println();\n    }\n}\n",
        "Main.java": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        double[] columnData = {4.0, 5.0, 6.0};\n\n        MatrixOperations matrixOps = new MatrixOperations();\n        matrixOps.createMatrix(rowData);\n\n        RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(columnData);\n        RealMatrix sumMatrix = matrixOps.addMatrices(columnMatrix.transpose());\n\n        RealVector scaledVector = matrixOps.scaleVector(2.0);\n        System.out.println(\"Scaled Vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.print(scaledVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        RealMatrix productMatrix = matrixOps.multiplyMatrices(columnMatrix.transpose());\n        System.out.println(\"Product Matrix:\");\n        for (int i = 0; i < productMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < productMatrix.getColumnDimension(); j++) {\n                System.out.print(productMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        MatrixReader matrixReader = new MatrixReader(matrixOps.getMatrix());\n        matrixReader.printMatrix();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    },
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        \n        /* read */ RealMatrix readMatrix = matrix.getRowMatrix(0);\n        \n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        double[] columnData = {4.0, 5.0, 6.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        \n        // Create a column matrix using a different method\n        RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        // Perform addition of matrices\n        RealMatrix sumMatrix = matrix.add(columnMatrix.transpose());\n\n        // Create a RealVector from the sum of the matrices\n        RealVector vector = new ArrayRealVector(sumMatrix.getRow(0));\n\n        // Perform scalar multiplication on the vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n\n        // Print the scaled vector\n        System.out.println(\"Scaled Vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.print(scaledVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Perform matrix multiplication\n        RealMatrix productMatrix = matrix.multiply(columnMatrix.transpose());\n\n        // Print the product matrix\n        System.out.println(\"Product Matrix:\");\n        for (int i = 0; i < productMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < productMatrix.getColumnDimension(); j++) {\n                System.out.print(productMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        /* read */ RealMatrix readMatrix = matrix.getRowMatrix(0);\n        \n        System.out.println(\"Read Matrix:\");\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}"
}