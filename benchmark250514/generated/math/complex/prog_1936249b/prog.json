{
    "java_code": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of the DefaultRealMatrixPreservingVisitor\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                sum += value;\n            }\n\n            @Override\n            public double end() {\n                return sum;\n            }\n        };\n\n        // Simulate visiting matrix elements\n        /* write */ visitor.visit(0, 0, 1.0);\n        visitor.visit(0, 1, 2.0);\n        visitor.visit(1, 0, 3.0);\n        visitor.visit(1, 1, 4.0);\n\n        // Additional complex logic\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 2);\n        }\n\n        int sumOfNumbers = 0;\n        for (int number : numbers) {\n            sumOfNumbers += number;\n        }\n\n        System.out.println(\"Sum of numbers: \" + sumOfNumbers);\n\n        double product = 1;\n        for (int i = 1; i <= 3; i++) {\n            product *= i;\n        }\n\n        System.out.println(\"Product of first three numbers: \" + product);\n\n        // End the visit and read the result\n        /* read */ double result = visitor.end();\n        System.out.println(\"Sum of matrix elements: \" + result);\n\n        // More unrelated logic\n        int factorial = 1;\n        for (int i = 1; i <= 4; i++) {\n            factorial *= i;\n        }\n\n        System.out.println(\"Factorial of 4: \" + factorial);\n\n        List<String> strings = new ArrayList<>();\n        strings.add(\"Hello\");\n        strings.add(\"World\");\n\n        for (String str : strings) {\n            System.out.println(str);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of the DefaultRealMatrixPreservingVisitor\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                sum += value;\n            }\n\n            @Override\n            public double end() {\n                return sum;\n            }\n        };\n\n        // Simulate visiting matrix elements\n        /* write */ visitor.visit(0, 0, 1.0);\n        /* write */ visitor.visit(0, 1, 2.0);\n        /* write */ visitor.visit(1, 0, 3.0);\n        /* write */ visitor.visit(1, 1, 4.0);\n\n        // End the visit and read the result\n        /* read */ double result = visitor.end();\n        System.out.println(result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "read_method": "end"
    }
}