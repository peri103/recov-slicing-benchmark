{
    "java_code": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with sample data\n        double[][] data = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(data);\n\n        // Create a visitor to calculate the sum\n        DefaultRealMatrixPreservingVisitor sumVisitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0.0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                /* write */ sum += value; // Visiting each element to calculate the sum\n            }\n\n            @Override\n            public double end() {\n                /* read */ return sum; // Returning the sum after visiting all elements\n            }\n        };\n\n        // Apply the visitor to the matrix\n        matrix.walkInRowOrder(sumVisitor);\n\n        // Unrelated code: Modify matrix elements by multiplying them by 2\n        RealMatrixChangingVisitor multiplyVisitor = new RealMatrixChangingVisitor() {\n            @Override\n            public double visit(int row, int column, double value) {\n                return value * 2; // Multiply each element by 2\n            }\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                // Initialization if needed\n            }\n\n            @Override\n            public double end() {\n                // Finalization if needed\n                return 0;\n            }\n        };\n\n        matrix.walkInRowOrder(multiplyVisitor);\n\n        // Perform unrelated calculations\n        double[][] anotherData = {\n            {5.0, 6.0},\n            {7.0, 8.0}\n        };\n        RealMatrix anotherMatrix = new Array2DRowRealMatrix(anotherData);\n        double[][] resultData = new double[2][2];\n\n        // Add matrices element-wise\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                resultData[i][j] = matrix.getEntry(i, j) + anotherMatrix.getEntry(i, j);\n            }\n        }\n\n        // Print the resulting matrix\n        System.out.println(\"Resulting Matrix:\");\n        for (double[] row : resultData) {\n            for (double val : row) {\n                System.out.print(val + \" \");\n            }\n            System.out.println();\n        }\n\n        // Get the result from the visitor\n        double sumResult = sumVisitor.end();\n        System.out.println(\"Sum of all elements: \" + sumResult);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix with sample data\n        double[][] data = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(data);\n\n        // Create a visitor\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0.0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                /* write */ sum += value; // Visiting each element to calculate the sum\n            }\n\n            @Override\n            public double end() {\n                /* read */ return sum; // Returning the sum after visiting all elements\n            }\n        };\n\n        // Apply the visitor to the matrix\n        matrix.walkInRowOrder(visitor);\n\n        // Get the result from the visitor\n        double result = visitor.end();\n        System.out.println(\"Sum of all elements: \" + result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "read_method": "end"
    }
}