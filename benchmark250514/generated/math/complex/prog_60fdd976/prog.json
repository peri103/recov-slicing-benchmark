{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a double array to create a RealVector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Use MatrixUtils to create a RealVector\n        /* write */ RealVector vector = MatrixUtils.createRealVector(data);\n\n        // Perform operations on the vector\n        double norm = vector.getNorm();\n        System.out.println(\"Norm of the vector: \" + norm);\n\n        // Create a RealMatrix for additional complexity\n        double[][] matrixData = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n\n        // Multiply the vector with the matrix\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication: \");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(resultVector.getEntry(i));\n        }\n\n        // Additional vector operations\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled vector: \");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n\n        // Read the RealVector back using the same reference\n        /* read */ RealVector readVector = vector; // Since there's no getRealVector method, we use the vector directly\n\n        // Print the first element to verify\n        System.out.println(\"Read vector first element: \" + readVector.getEntry(0));\n\n        // Perform more operations to make the program complex\n        RealVector sumVector = vector.add(scaledVector);\n        System.out.println(\"Sum of original and scaled vector: \");\n        for (int i = 0; i < sumVector.getDimension(); i++) {\n            System.out.println(sumVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a double array to create a RealVector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Use MatrixUtils to create a RealVector\n        /* write */ RealVector vector = MatrixUtils.createRealVector(data);\n\n        // Read the RealVector back using the same reference\n        /* read */ RealVector readVector = vector; // Since there's no getRealVector method, we use the vector directly\n\n        // Print the first element to verify\n        System.out.println(readVector.getEntry(0));\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRealVector"
    }
}