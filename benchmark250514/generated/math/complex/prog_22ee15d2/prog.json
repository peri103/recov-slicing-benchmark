{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 2x2 matrix with initial values\n        double[][] initialData = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(initialData);\n        \n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(new double[]{5.0, 6.0});\n        RealVector resultVector = matrix.operate(vector);\n        \n        // Perform a random operation on the vector\n        Random random = new Random();\n        double randomValue = random.nextDouble();\n        RealVector scaledVector = vector.mapMultiply(randomValue);\n        \n        // Print out the scaled vector\n        System.out.println(\"Scaled Vector: \" + scaledVector);\n        \n        // Perform matrix multiplication with another matrix\n        double[][] anotherData = {{7.0, 8.0}, {9.0, 10.0}};\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(anotherData);\n        RealMatrix multipliedMatrix = matrix.multiply(anotherMatrix);\n        \n        // Print out the multiplied matrix\n        System.out.println(\"Multiplied Matrix: \");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform addition of the original matrix with another matrix\n        RealMatrix sumMatrix = matrix.add(anotherMatrix);\n        \n        // Print out the sum matrix\n        System.out.println(\"Sum Matrix: \");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Read the first entry of the original matrix\n        /* read */ double value = matrix.getEntry(0, 0); // Reading the first element (1.0)\n        System.out.println(\"Read Value: \" + value);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a 2x2 matrix with initial values\n        double[][] initialData = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(initialData);\n        \n        // Since MatrixUtils does not have a getRealMatrix method,\n        // we'll directly use the matrix object created above.\n        \n        /* read */ double value = matrix.getEntry(0, 0); // Reading the first element (1.0)\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRealMatrix"
    }
}