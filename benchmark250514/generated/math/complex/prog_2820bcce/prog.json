{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data for the matrix\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a vector using Apache Commons Math\n        RealVector vector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        \n        // Perform some operations on the vector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled Vector: \");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.print(scaledVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Create a matrix using Apache Commons Math\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        \n        // Add the vector to the matrix\n        RealMatrix augmentedMatrix = matrix.add(MatrixUtils.createRowRealMatrix(vector.toArray()));\n        \n        // Perform matrix operations\n        RealMatrix transposedMatrix = augmentedMatrix.transpose();\n        System.out.println(\"Transposed Matrix: \");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Extract a row from the matrix\n        /* read */ RealMatrix readMatrix = matrix.getRowMatrix(0);\n        \n        // Print the values of the read matrix\n        System.out.println(\"Read Matrix: \");\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n        System.out.println();\n        \n        // Perform additional operations on the matrix\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix resultMatrix = identityMatrix.multiply(transposedMatrix);\n        System.out.println(\"Result Matrix after multiplication with identity matrix: \");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        /* read */ RealMatrix readMatrix = matrix.getRowMatrix(0);\n        \n        // Print the values of the read matrix\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}