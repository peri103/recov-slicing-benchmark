{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.RealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Write the 2D array to a RealMatrix object using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Additional complex operations\n        RealVector vector = new ArrayRealVector(new double[]{5.0, 6.0});\n        RealMatrix resultMatrix = matrix.add(matrix); // Matrix addition\n        RealMatrix multipliedMatrix = resultMatrix.scalarMultiply(2.0); // Scalar multiplication\n        \n        // Modify the matrix using a visitor\n        multipliedMatrix.walkInOptimizedOrder(new RealMatrixChangingVisitor() {\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                // Initialization if needed\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                return value + 1; // Increment each element by 1\n            }\n\n            @Override\n            public double end() {\n                return 0; // Finalize if needed\n            }\n        });\n        \n        // Read the 2D array from the RealMatrix object\n        /* read */ double[][] readData = matrix.getData();\n        \n        // Print the read data\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n\n        // Print the modified matrix\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform vector operations\n        RealVector resultVector = vector.mapMultiply(2.0).mapAdd(3.0); // Vector operations\n        System.out.println(\"Modified vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array\n        double[][] data = {{1.0, 2.0}, {3.0, 4.0}};\n        \n        // Write the 2D array to a RealMatrix object using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Read the 2D array from the RealMatrix object\n        /* read */ double[][] readData = matrix.getData();\n        \n        // Print the read data\n        for (int i = 0; i < readData.length; i++) {\n            for (int j = 0; j < readData[i].length; j++) {\n                System.out.print(readData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createArray2DRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getArray2DRowRealMatrix"
    }
}