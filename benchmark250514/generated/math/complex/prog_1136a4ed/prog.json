{
    "java_code": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a DefaultRealMatrixPreservingVisitor object\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                // Accumulate the sum of matrix elements\n                sum += value;\n            }\n\n            @Override\n            public double end() {\n                // Return the accumulated sum\n                return sum;\n            }\n        };\n\n        // Initialize a matrix\n        RealMatrix matrix = new Array2DRowRealMatrix(new double[][] {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        });\n\n        // Visit each element in the matrix\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                /* write */ visitor.visit(i, j, matrix.getEntry(i, j)); // Visit method executed once per element\n            }\n        }\n\n        // Perform some unrelated operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n\n        int sumOfNumbers = 0;\n        for (int number : numbers) {\n            sumOfNumbers += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sumOfNumbers);\n\n        // End the visit and read the accumulated result\n        /* read */ double result = visitor.end(); // End method executed once\n\n        // Print the result\n        System.out.println(\"Sum of matrix elements: \" + result);\n\n        // Additional complex logic\n        int productOfNumbers = 1;\n        for (int number : numbers) {\n            productOfNumbers *= (number + 1);\n        }\n        System.out.println(\"Product of numbers incremented by 1: \" + productOfNumbers);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a DefaultRealMatrixPreservingVisitor object\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                // Accumulate the sum of matrix elements\n                sum += value;\n            }\n\n            @Override\n            public double end() {\n                // Return the accumulated sum\n                return sum;\n            }\n        };\n\n        // Simulate visiting matrix elements\n        /* write */ visitor.visit(0, 0, 5.0); // Visit method executed once with value 5.0\n\n        // End the visit and read the accumulated result\n        /* read */ double result = visitor.end(); // End method executed once\n\n        // Print the result\n        System.out.println(result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "read_method": "end"
    }
}