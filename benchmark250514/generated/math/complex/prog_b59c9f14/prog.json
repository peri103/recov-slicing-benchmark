{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array to create a RealVector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Use MatrixUtils to create a RealVector\n        /* write */ RealVector vector = MatrixUtils.createRealVector(data);\n\n        // Perform some operations with matrices\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n\n        // Multiply the vector with the matrix\n        RealVector resultVector = matrix.operate(vector);\n\n        // Print the result of the matrix operation\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        System.out.println(resultVector);\n\n        // Perform some additional calculations\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled vector:\");\n        System.out.println(scaledVector);\n\n        // More unrelated operations\n        double[] additionalData = {4.0, 5.0, 6.0};\n        RealVector anotherVector = MatrixUtils.createRealVector(additionalData);\n        RealVector sumVector = vector.add(anotherVector);\n        System.out.println(\"Sum of vectors:\");\n        System.out.println(sumVector);\n\n        // Read the RealVector using the same instance\n        /* read */ RealVector readVector = vector;\n\n        // Output the read vector to verify\n        System.out.println(\"Original vector:\");\n        System.out.println(readVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array to create a RealVector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Use MatrixUtils to create a RealVector\n        /* write */ RealVector vector = MatrixUtils.createRealVector(data);\n\n        // Read the RealVector using the same instance\n        /* read */ RealVector readVector = vector;\n\n        // Output the read vector to verify\n        System.out.println(readVector);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRealVector"
    }
}