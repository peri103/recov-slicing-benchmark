{
    "java_code": "import org.apache.commons.math3.linear.RealMatrixChangingVisitor;\nimport org.apache.commons.math3.linear.RealMatrixPreservingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                sum = 0;\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                /* write */ sum += value;\n                return value;\n            }\n\n            @Override\n            public double end() {\n                /* read */ return sum;\n            }\n        };\n\n        RealMatrixPreservingVisitor preservingVisitor = new RealMatrixPreservingVisitor() {\n            private double maxValue = Double.NEGATIVE_INFINITY;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                maxValue = Double.NEGATIVE_INFINITY;\n            }\n\n            @Override\n            public void visit(int row, int column, double value) {\n                if (value > maxValue) {\n                    maxValue = value;\n                }\n            }\n\n            @Override\n            public double end() {\n                return maxValue;\n            }\n        };\n\n        // Example usage for RealMatrixChangingVisitor\n        visitor.start(3, 3, 0, 2, 0, 2);\n        visitor.visit(0, 0, 1.0);\n        visitor.visit(0, 1, 2.0);\n        visitor.visit(0, 2, 3.0);\n        visitor.visit(1, 0, 4.0);\n        visitor.visit(1, 1, 5.0);\n        visitor.visit(1, 2, 6.0);\n        visitor.visit(2, 0, 7.0);\n        visitor.visit(2, 1, 8.0);\n        visitor.visit(2, 2, 9.0);\n        double sumResult = visitor.end();\n        System.out.println(\"Sum of matrix elements: \" + sumResult);\n\n        // Example usage for RealMatrixPreservingVisitor\n        preservingVisitor.start(3, 3, 0, 2, 0, 2);\n        preservingVisitor.visit(0, 0, 1.0);\n        preservingVisitor.visit(0, 1, 2.0);\n        preservingVisitor.visit(0, 2, 3.0);\n        preservingVisitor.visit(1, 0, 4.0);\n        preservingVisitor.visit(1, 1, 5.0);\n        preservingVisitor.visit(1, 2, 6.0);\n        preservingVisitor.visit(2, 0, 7.0);\n        preservingVisitor.visit(2, 1, 8.0);\n        preservingVisitor.visit(2, 2, 9.0);\n        double maxResult = preservingVisitor.end();\n        System.out.println(\"Max element in matrix: \" + maxResult);\n\n        // Additional complex operations\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n\n        double sumOfSquares = 0.0;\n        for (int i = 0; i < matrixData.length; i++) {\n            for (int j = 0; j < matrixData[i].length; j++) {\n                sumOfSquares += Math.pow(matrixData[i][j], 2);\n            }\n        }\n        System.out.println(\"Sum of squares of matrix elements: \" + sumOfSquares);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.RealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                sum = 0;\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                /* write */ sum += value;\n                return value;\n            }\n\n            @Override\n            public double end() {\n                /* read */ return sum;\n            }\n        };\n\n        // Example usage\n        visitor.start(3, 3, 0, 2, 0, 2);\n        visitor.visit(0, 0, 1.0);\n        visitor.visit(0, 1, 2.0);\n        visitor.visit(0, 2, 3.0);\n        visitor.visit(1, 0, 4.0);\n        visitor.visit(1, 1, 5.0);\n        visitor.visit(1, 2, 6.0);\n        visitor.visit(2, 0, 7.0);\n        visitor.visit(2, 1, 8.0);\n        visitor.visit(2, 2, 9.0);\n        double result = visitor.end();\n        System.out.println(result); // Should print the sum of the matrix elements\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
        "read_method": "end"
    }
}