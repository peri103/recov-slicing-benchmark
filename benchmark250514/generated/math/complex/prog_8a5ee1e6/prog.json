{
    "java_code": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrix matrix = new Array2DRowRealMatrix(3, 3);\n        RealMatrix matrix2 = new Array2DRowRealMatrix(3, 3);\n        RealVector vector = new ArrayRealVector(3);\n\n        /* write */ matrix.setEntry(0, 0, 5.0);\n\n        // Initialize the second matrix with some values\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                matrix2.setEntry(i, j, i + j);\n            }\n        }\n\n        // Perform a matrix addition\n        RealMatrix resultMatrix = matrix.add(matrix2);\n\n        // Initialize the vector with some values\n        for (int i = 0; i < 3; i++) {\n            vector.setEntry(i, i * 2.0);\n        }\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = resultMatrix.operate(vector);\n\n        // Print the resulting vector\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.println(\"Vector entry \" + i + \": \" + resultVector.getEntry(i));\n        }\n\n        /* read */ double value = matrix.getEntry(0, 0);\n        System.out.println(\"Read value: \" + value);\n\n        // Additional matrix operations\n        RealMatrix transposedMatrix = resultMatrix.transpose();\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.println(\"Transposed matrix entry (\" + i + \", \" + j + \"): \" + transposedMatrix.getEntry(i, j));\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrix matrix = new Array2DRowRealMatrix(3, 3);\n        /* write */ matrix.setEntry(0, 0, 5.0);\n        /* read */ double value = matrix.getEntry(0, 0);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.RealMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.RealMatrix",
        "read_method": "getEntry"
    }
}