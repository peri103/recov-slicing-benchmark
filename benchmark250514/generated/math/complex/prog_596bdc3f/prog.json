{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array of doubles to be used for creating the RealVector\n        double[] data = { 1.0, 2.0, 3.0 };\n\n        // Create a RealVector using the createRealVector method\n        /* write */ RealVector vector = MatrixUtils.createRealVector(data);\n\n        // Perform some operations with another RealVector\n        double[] data2 = { 4.0, 5.0, 6.0 };\n        RealVector vector2 = MatrixUtils.createRealVector(data2);\n        RealVector sumVector = vector.add(vector2);\n        System.out.println(\"Sum of vectors: \" + sumVector);\n\n        // Create a RealMatrix for additional complexity\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n\n        // Perform matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n        System.out.println(\"Result of matrix-vector multiplication: \" + resultVector);\n\n        // Utilize some other vector operations\n        double norm = vector.getNorm();\n        System.out.println(\"Norm of the original vector: \" + norm);\n\n        // Retrieve the first entry of the original vector\n        /* read */ double value = vector.getEntry(0);\n\n        // Print the first entry of the vector\n        System.out.println(\"First entry of the original vector: \" + value);\n\n        // Perform dot product with another vector\n        double dotProduct = vector.dotProduct(vector2);\n        System.out.println(\"Dot product with another vector: \" + dotProduct);\n\n        // Scale the vector and print it\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled vector: \" + scaledVector);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize an array of doubles to be used for creating the RealVector\n        double[] data = { 1.0, 2.0, 3.0 };\n\n        // Create a RealVector using the createRealVector method\n        /* write */ RealVector vector = MatrixUtils.createRealVector(data);\n\n        // Retrieve the RealVector using the getRealVector method\n        // Since MatrixUtils does not have a getRealVector method, we will use the vector object directly\n        /* read */ double value = vector.getEntry(0);\n\n        // Print the first entry of the vector\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRealVector"
    }
}