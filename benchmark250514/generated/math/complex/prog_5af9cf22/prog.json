{
    "java_code": "import org.apache.commons.math3.linear.RealMatrixChangingVisitor;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrixPreservingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                sum = 0;\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                /* write */\n                sum += value;\n                return value;\n            }\n\n            @Override\n            public double end() {\n                /* read */\n                return sum;\n            }\n        };\n\n        // Example matrix\n        RealMatrix matrix = new Array2DRowRealMatrix(new double[][]{\n            {1, 2},\n            {3, 4}\n        });\n\n        // Apply the visitor to the matrix\n        matrix.walkInOptimizedOrder(visitor);\n\n        // Additional complex operations\n        RealMatrixPreservingVisitor preservingVisitor = new RealMatrixPreservingVisitor() {\n            private double product = 1;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                product = 1;\n            }\n\n            @Override\n            public void visit(int row, int column, double value) {\n                product *= value;\n            }\n\n            @Override\n            public double end() {\n                return product;\n            }\n        };\n\n        // Walk the matrix with preserving visitor\n        matrix.walkInOptimizedOrder(preservingVisitor);\n\n        // Calculate and print the product of all elements\n        double productResult = preservingVisitor.end();\n        System.out.println(\"Product of all elements: \" + productResult);\n\n        // Read the result from the visitor\n        double result = visitor.end();\n        System.out.println(\"Sum of all elements: \" + result);  // Output the sum of all matrix elements\n\n        // Additional loop to manipulate matrix values\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                double currentValue = matrix.getEntry(i, j);\n                double newValue = currentValue * 2;\n                matrix.setEntry(i, j, newValue);\n                System.out.println(\"Updated matrix value at (\" + i + \", \" + j + \"): \" + newValue);\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.RealMatrixChangingVisitor;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                sum = 0;\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                /* write */\n                sum += value;\n                return value;\n            }\n\n            @Override\n            public double end() {\n                /* read */\n                return sum;\n            }\n        };\n\n        // Example matrix\n        RealMatrix matrix = new org.apache.commons.math3.linear.Array2DRowRealMatrix(new double[][]{\n            {1, 2},\n            {3, 4}\n        });\n\n        // Apply the visitor to the matrix\n        matrix.walkInOptimizedOrder(visitor);\n\n        // Read the result from the visitor\n        double result = visitor.end();\n        System.out.println(result);  // Output the sum of all matrix elements\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
        "read_method": "end"
    }
}