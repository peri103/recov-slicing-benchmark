{
    "java_code": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a matrix\n        double[][] data = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(data);\n\n        // Create a visitor to sum the elements\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                sum += value;\n            }\n\n            @Override\n            public double end() {\n                return sum;\n            }\n        };\n\n        // Visit each element in the matrix\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                /* write */ visitor.visit(i, j, matrix.getEntry(i, j));\n            }\n        }\n\n        // Perform some unrelated calculations\n        double total = 0;\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                total += matrix.getEntry(i, j) * 2;\n            }\n        }\n        System.out.println(\"Total after unrelated calculations: \" + total);\n\n        // Calculate the sum of the matrix using the visitor\n        double sum = 0;\n        for (int i = 0; i < matrix.getRowDimension(); i++) {\n            for (int j = 0; j < matrix.getColumnDimension(); j++) {\n                sum += matrix.getEntry(i, j);\n            }\n        }\n        System.out.println(\"Sum of matrix elements: \" + sum);\n\n        // End the visitor and get the final result\n        /* read */ double result = visitor.end();\n        System.out.println(\"Visitor result: \" + result);\n\n        // More unrelated operations\n        double average = sum / (matrix.getRowDimension() * matrix.getColumnDimension());\n        System.out.println(\"Average of matrix elements: \" + average);\n\n        double[][] newData = {\n            {10.0, 20.0, 30.0},\n            {40.0, 50.0, 60.0},\n            {70.0, 80.0, 90.0}\n        };\n        RealMatrix newMatrix = new Array2DRowRealMatrix(newData);\n        double newTotal = 0;\n        for (int i = 0; i < newMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < newMatrix.getColumnDimension(); j++) {\n                newTotal += newMatrix.getEntry(i, j);\n            }\n        }\n        System.out.println(\"New matrix total: \" + newTotal);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                sum += value;\n            }\n\n            @Override\n            public double end() {\n                return sum;\n            }\n        };\n\n        /* write */ visitor.visit(0, 0, 5.0);\n        /* read */ double result = visitor.end();\n        System.out.println(result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "read_method": "end"
    }
}