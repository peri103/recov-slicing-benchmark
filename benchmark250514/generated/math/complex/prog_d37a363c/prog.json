{
    "java_code": "import org.apache.commons.math3.linear.SparseRealMatrix;\nimport org.apache.commons.math3.linear.OpenMapRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        SparseRealMatrix matrix = new OpenMapRealMatrix(3, 3);\n        \n        // Initialize another matrix for complex operations\n        RealMatrix matrix2 = MatrixUtils.createRealMatrix(3, 3);\n        matrix2.setEntry(0, 0, 2.0);\n        matrix2.setEntry(1, 1, 3.0);\n        matrix2.setEntry(2, 2, 4.0);\n\n        // Perform some matrix operations\n        RealMatrix resultMatrix = matrix2.scalarAdd(1.0);\n        System.out.println(\"Result Matrix after scalar addition:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform some unrelated calculations\n        double sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += Math.sqrt(i);\n        }\n        System.out.println(\"Sum of square roots: \" + sum);\n\n        // Original write operation\n        /* write */ matrix.setEntry(0, 0, 5.0);\n\n        // Further operations with matrix2\n        RealMatrix transposedMatrix = matrix2.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Original read operation\n        /* read */ double value = matrix.getEntry(0, 0);\n        System.out.println(\"Read value: \" + value);\n\n        // More complex calculations\n        RealMatrix multipliedMatrix = matrix2.multiply(transposedMatrix);\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.SparseRealMatrix;\nimport org.apache.commons.math3.linear.OpenMapRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        SparseRealMatrix matrix = new OpenMapRealMatrix(3, 3);\n        /* write */ matrix.setEntry(0, 0, 5.0);\n        /* read */ double value = matrix.getEntry(0, 0);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.SparseRealMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.SparseRealMatrix",
        "read_method": "getEntry"
    }
}