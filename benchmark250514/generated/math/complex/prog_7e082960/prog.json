{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2x2 matrix\n        double[][] data = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        // Create a vector for matrix multiplication\n        double[] vectorData = {5.0, 6.0};\n        RealVector vector = new ArrayRealVector(vectorData);\n        \n        // Perform matrix-vector multiplication\n        RealVector resultVector = matrix.operate(vector);\n        \n        // Output the result of the matrix-vector multiplication\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n        \n        // Create another matrix for addition\n        double[][] additionData = {\n            {0.5, 1.5},\n            {2.5, 3.5}\n        };\n        RealMatrix additionMatrix = MatrixUtils.createRealMatrix(additionData);\n        \n        // Perform matrix addition\n        RealMatrix sumMatrix = matrix.add(additionMatrix);\n        \n        // Output the sum matrix\n        System.out.println(\"Sum matrix:\");\n        for (int i = 0; i < sumMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < sumMatrix.getColumnDimension(); j++) {\n                System.out.print(sumMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Perform matrix scalar multiplication\n        RealMatrix scaledMatrix = matrix.scalarMultiply(2.0);\n        \n        // Output the scaled matrix\n        System.out.println(\"Scaled matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < scaledMatrix.getColumnDimension(); j++) {\n                System.out.print(scaledMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ double[][] retrievedData = matrix.getData();\n        \n        // Output the retrieved data to verify the read operation\n        System.out.println(\"Retrieved matrix data:\");\n        for (int i = 0; i < retrievedData.length; i++) {\n            for (int j = 0; j < retrievedData[i].length; j++) {\n                System.out.print(retrievedData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[][] data = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n        \n        /* read */ double[][] retrievedData = matrix.getData();\n        \n        // Output the retrieved data to verify the read operation\n        for (int i = 0; i < retrievedData.length; i++) {\n            for (int j = 0; j < retrievedData[i].length; j++) {\n                System.out.print(retrievedData[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRealMatrix"
    }
}