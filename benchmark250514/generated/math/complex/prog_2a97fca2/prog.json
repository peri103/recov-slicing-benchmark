{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a RealMatrix\n        double[][] data = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n\n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Perform operations on the matrix\n        RealVector vector = new ArrayRealVector(new double[] {5.0, 6.0});\n        RealVector resultVector = matrix.operate(vector);\n\n        System.out.println(\"Result of matrix-vector multiplication:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Additional matrix operations\n        RealMatrix transposeMatrix = matrix.transpose();\n        System.out.println(\"Transpose of matrix:\");\n        for (int i = 0; i < transposeMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposeMatrix.getColumnDimension(); j++) {\n                System.out.print(transposeMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Access the matrix to ensure the read method reads the value written by the write method\n        /* read */ RealMatrix readMatrix = matrix;\n\n        // Output the matrix to verify correctness\n        System.out.println(\"Original matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Additional unrelated code: Create and manipulate another vector\n        RealVector anotherVector = new ArrayRealVector(new double[] {7.0, 8.0});\n        RealVector additionResult = vector.add(anotherVector);\n        System.out.println(\"Result of vector addition:\");\n        for (int i = 0; i < additionResult.getDimension(); i++) {\n            System.out.print(additionResult.getEntry(i) + \" \");\n        }\n        System.out.println();\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a 2D array to create a RealMatrix\n        double[][] data = {\n            {1.0, 2.0},\n            {3.0, 4.0}\n        };\n\n        /* write */ RealMatrix matrix = MatrixUtils.createRealMatrix(data);\n\n        // Access the matrix to ensure the read method reads the value written by the write method\n        /* read */ RealMatrix readMatrix = matrix;\n\n        // Output the matrix to verify correctness\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRealMatrix"
    }
}