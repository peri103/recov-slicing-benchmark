{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        double[] additionalData = {4.0, 5.0, 6.0};\n        \n        /* write */ RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        // Create another matrix and perform some operations\n        RealMatrix additionalMatrix = MatrixUtils.createColumnRealMatrix(additionalData);\n        RealMatrix sumMatrix = columnMatrix.add(additionalMatrix);\n        \n        // Perform vector operations\n        RealVector vector = new ArrayRealVector(data);\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        \n        // Print scaled vector\n        System.out.println(\"Scaled Vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.println(scaledVector.getEntry(i));\n        }\n        \n        // More matrix operations\n        RealMatrix transposedMatrix = sumMatrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ RealMatrix retrievedMatrix = columnMatrix.getColumnMatrix(0);\n        \n        System.out.println(\"Column Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            System.out.println(retrievedMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        /* read */ RealMatrix retrievedMatrix = columnMatrix.getColumnMatrix(0);\n        \n        System.out.println(\"Column Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            System.out.println(retrievedMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}