{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        double[] additionalData = {4.0, 5.0, 6.0};\n\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n\n        // Create a column matrix and perform some operations\n        RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(additionalData);\n        RealMatrix resultMatrix = matrix.multiply(columnMatrix);\n\n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(rowData);\n        RealVector scaledVector = vector.mapMultiply(2.0);\n\n        // Intermediate operations\n        double sum = 0.0;\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            sum += scaledVector.getEntry(i);\n        }\n        System.out.println(\"Sum of scaled vector: \" + sum);\n\n        // More matrix operations\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Retrieve the original row matrix\n        /* read */ RealMatrix readMatrix = MatrixUtils.createRowRealMatrix(matrix.getRow(0));\n\n        // Print the read matrix\n        System.out.println(\"Read matrix:\");\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] rowData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(rowData);\n        \n        /* read */ RealMatrix readMatrix = MatrixUtils.createRowRealMatrix(matrix.getRow(0));\n        \n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}