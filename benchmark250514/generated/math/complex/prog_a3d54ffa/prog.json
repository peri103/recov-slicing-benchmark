{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define initial data for the matrix\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a column real matrix using the data\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n\n        // Perform some unrelated matrix operations to increase complexity\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(3);\n        RealMatrix resultMatrix = matrix.multiply(identityMatrix);\n        \n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(new double[]{4.0, 5.0, 6.0});\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        System.out.println(\"Scaled vector: \" + scaledVector);\n\n        // More operations using the original matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Extract a column from the matrix\n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        // Print the extracted column matrix\n        System.out.println(\"Extracted column matrix:\");\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n\n        // Additional operations to add complexity\n        RealMatrix addedMatrix = matrix.add(identityMatrix);\n        System.out.println(\"Matrix after addition:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}