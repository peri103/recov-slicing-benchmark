{
    "java_code": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original DefaultRealMatrixPreservingVisitor usage\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double accumulatedValue = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                /* write */ accumulatedValue += value; // visit method execution\n            }\n\n            @Override\n            public double end() {\n                /* read */ return accumulatedValue; // end method execution\n            }\n        };\n\n        // Simulate a matrix visit operation\n        visitor.visit(0, 0, 1.5);\n        visitor.visit(0, 1, 2.5);\n        visitor.visit(1, 0, 3.5);\n        visitor.visit(1, 1, 4.5);\n\n        // Additional complexity: ArrayList operations\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            list.add(i * 2);\n        }\n\n        for (int value : list) {\n            System.out.println(\"List value: \" + value);\n        }\n\n        // Additional complexity: HashMap operations\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n        }\n\n        // Result from visitor's end method\n        double result = visitor.end();\n        System.out.println(\"Accumulated value from visitor: \" + result); // Output should be the sum of visited values: 12.0\n\n        // Additional complexity: Further calculations\n        double sum = 0;\n        for (int i = 0; i < list.size(); i++) {\n            sum += list.get(i);\n        }\n        System.out.println(\"Sum of list values: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double accumulatedValue = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                /* write */ accumulatedValue += value; // visit method execution\n            }\n\n            @Override\n            public double end() {\n                /* read */ return accumulatedValue; // end method execution\n            }\n        };\n\n        // Simulate a matrix visit operation\n        visitor.visit(0, 0, 1.5);\n        visitor.visit(0, 1, 2.5);\n        visitor.visit(1, 0, 3.5);\n        visitor.visit(1, 1, 4.5);\n\n        double result = visitor.end();\n        System.out.println(result); // Output should be the sum of visited values: 12.0\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "read_method": "end"
    }
}