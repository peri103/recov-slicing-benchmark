{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data for original write-read pair\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Some unrelated computations\n        double[][] matrixData = {{4.0, 5.0}, {6.0, 7.0}, {8.0, 9.0}};\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n        \n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Original write method\n        /* write */ RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(data);\n\n        // Additional computations\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n        System.out.println(\"Multiplied Matrix:\");\n        for (int i = 0; i < multipliedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < multipliedMatrix.getColumnDimension(); j++) {\n                System.out.print(multipliedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Original read method\n        /* read */ RealMatrix retrievedMatrix = columnMatrix.getColumnMatrix(0);\n        \n        System.out.println(\"Retrieved Column Matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            System.out.println(retrievedMatrix.getEntry(i, 0));\n        }\n\n        // More unrelated computations\n        double[] vectorData = {10.0, 11.0};\n        RealMatrix vectorMatrix = MatrixUtils.createRowRealMatrix(vectorData);\n        RealMatrix resultMatrix = vectorMatrix.multiply(multipliedMatrix);\n        System.out.println(\"Result Matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix columnMatrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        /* read */ RealMatrix retrievedMatrix = columnMatrix.getColumnMatrix(0);\n        \n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            System.out.println(retrievedMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}