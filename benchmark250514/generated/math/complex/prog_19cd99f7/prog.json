{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a square matrix with given dimensions\n        int dimension = 3;\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {2.0, 1.0, 0.0},\n            {3.0, 2.0, 1.0}\n        };\n\n        // Create a triangular matrix using MatrixUtils\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createRealMatrix(data);\n\n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = triangularMatrix.transpose();\n        RealMatrix multipliedMatrix = triangularMatrix.multiply(transposedMatrix);\n\n        // Create a vector and perform operations\n        RealVector vector = new ArrayRealVector(new double[] {1.0, 2.0, 3.0});\n        RealVector resultVector = multipliedMatrix.operate(vector);\n\n        // Print the result vector\n        System.out.println(\"Result Vector:\");\n        for (int i = 0; i < resultVector.getDimension(); i++) {\n            System.out.print(resultVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Read the triangular matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.createRealMatrix(triangularMatrix.getData());\n\n        // Print the matrix to verify the operations\n        System.out.println(\"Read Matrix:\");\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Additional complex operations\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(dimension);\n        RealMatrix addedMatrix = readMatrix.add(identityMatrix);\n\n        // Print the added matrix\n        System.out.println(\"Added Matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a square matrix with given dimensions\n        int dimension = 3;\n        double[][] data = {\n            {1.0, 0.0, 0.0},\n            {2.0, 1.0, 0.0},\n            {3.0, 2.0, 1.0}\n        };\n\n        // Create a triangular matrix using MatrixUtils\n        /* write */ RealMatrix triangularMatrix = MatrixUtils.createRealMatrix(data);\n\n        // Read the triangular matrix using MatrixUtils\n        /* read */ RealMatrix readMatrix = MatrixUtils.createRealMatrix(triangularMatrix.getData());\n\n        // Print the matrix to verify the operations\n        for (int i = 0; i < readMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < readMatrix.getColumnDimension(); j++) {\n                System.out.print(readMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createTriangularMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getTriangularMatrix"
    }
}