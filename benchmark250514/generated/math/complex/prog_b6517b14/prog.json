{
    "java_code": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original visitor\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                /* write */ sum += value;\n            }\n\n            @Override\n            public double end() {\n                /* read */ return sum;\n            }\n        };\n\n        // Simulate visiting matrix elements\n        visitor.visit(0, 0, 1.0);\n        visitor.visit(0, 1, 2.0);\n        visitor.visit(1, 0, 3.0);\n        visitor.visit(1, 1, 4.0);\n\n        // Additional complex logic\n        List<Double> matrixValues = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            matrixValues.add((double) i * 1.5);\n        }\n\n        DefaultRealMatrixPreservingVisitor additionalVisitor = new DefaultRealMatrixPreservingVisitor() {\n            private double product = 1;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                product *= value;\n            }\n\n            @Override\n            public double end() {\n                return product;\n            }\n        };\n\n        // Simulate visiting matrix elements for additional visitor\n        for (int i = 0; i < matrixValues.size(); i++) {\n            additionalVisitor.visit(i, 0, matrixValues.get(i));\n        }\n\n        double additionalResult = additionalVisitor.end();\n        System.out.println(\"Product of additional visitor: \" + additionalResult);\n\n        // Continue with the original visitor\n        double result = visitor.end();\n        System.out.println(\"Sum from original visitor: \" + result); // Output should be the sum of visited elements: 10.0\n\n        // More complex logic\n        List<Integer> numberList = new ArrayList<>();\n        for (int i = 1; i <= 10; i++) {\n            numberList.add(i * 2);\n        }\n\n        int totalSum = 0;\n        for (Integer num : numberList) {\n            totalSum += num;\n        }\n\n        System.out.println(\"Total sum of numberList: \" + totalSum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        DefaultRealMatrixPreservingVisitor visitor = new DefaultRealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void visit(int row, int column, double value) {\n                /* write */ sum += value;\n            }\n\n            @Override\n            public double end() {\n                /* read */ return sum;\n            }\n        };\n\n        // Simulate visiting matrix elements\n        visitor.visit(0, 0, 1.0);\n        visitor.visit(0, 1, 2.0);\n        visitor.visit(1, 0, 3.0);\n        visitor.visit(1, 1, 4.0);\n\n        double result = visitor.end();\n        System.out.println(result); // Output should be the sum of visited elements: 10.0\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
        "read_method": "end"
    }
}