{
    "java_code": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        double[] rowData = {4.0, 5.0, 6.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        // Create a vector and perform some operations\n        RealVector vector = new ArrayRealVector(rowData);\n        vector.mapMultiplyToSelf(2.0); // Multiply each element by 2\n        \n        // Print the modified vector\n        for (int i = 0; i < vector.getDimension(); i++) {\n            System.out.println(\"Vector element \" + i + \": \" + vector.getEntry(i));\n        }\n        \n        // Perform matrix operations\n        RealMatrix rowMatrix = MatrixUtils.createRowRealMatrix(rowData);\n        RealMatrix resultMatrix = matrix.multiply(rowMatrix);\n        \n        // Print the resulting matrix\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < resultMatrix.getColumnDimension(); j++) {\n                System.out.print(resultMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(\"Column matrix element \" + i + \": \" + columnMatrix.getEntry(i, 0));\n        }\n        \n        // Additional operations with the original matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        \n        // Print the transposed matrix\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        \n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}