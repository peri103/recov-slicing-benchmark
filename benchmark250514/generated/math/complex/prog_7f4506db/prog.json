{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a symmetric matrix using MatrixUtils\n        double[][] data = {\n            {1, 2, 3},\n            {2, 4, 5},\n            {3, 5, 6}\n        };\n        \n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createRealMatrix(data);\n\n        // Additional unrelated code to make the program more complex\n        RealVector vector = new ArrayRealVector(new double[] {1, 2, 3});\n        RealMatrix matrixIdentity = MatrixUtils.createRealIdentityMatrix(3);\n        \n        RealVector multipliedVector = matrixIdentity.operate(vector);\n        System.out.println(\"Vector after identity matrix multiplication:\");\n        for (int i = 0; i < multipliedVector.getDimension(); i++) {\n            System.out.print(multipliedVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        double[][] anotherData = {\n            {7, 8, 9},\n            {8, 10, 11},\n            {9, 11, 12}\n        };\n        RealMatrix anotherMatrix = MatrixUtils.createRealMatrix(anotherData);\n        RealMatrix addedMatrix = symmetricMatrix.add(anotherMatrix);\n\n        System.out.println(\"Added matrix:\");\n        for (int i = 0; i < addedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < addedMatrix.getColumnDimension(); j++) {\n                System.out.print(addedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Retrieve and print the original symmetric matrix\n        /* read */ RealMatrix retrievedMatrix = symmetricMatrix;\n        \n        System.out.println(\"Retrieved symmetric matrix:\");\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a symmetric matrix using MatrixUtils\n        double[][] data = {\n            {1, 2, 3},\n            {2, 4, 5},\n            {3, 5, 6}\n        };\n        \n        /* write */ RealMatrix symmetricMatrix = MatrixUtils.createRealMatrix(data);\n        \n        // Assuming getSymmetricMatrix is a method to retrieve the same matrix\n        /* read */ RealMatrix retrievedMatrix = symmetricMatrix;\n        \n        // Print the retrieved matrix\n        for (int i = 0; i < retrievedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < retrievedMatrix.getColumnDimension(); j++) {\n                System.out.print(retrievedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createSymmetricMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getSymmetricMatrix"
    }
}