{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.Array2DRowRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data for the vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create a RealVector using MatrixUtils\n        /* write */ RealVector vector = MatrixUtils.createRealVector(data);\n\n        // Create a RealMatrix for additional complexity\n        double[][] matrixData = {\n            {1.0, 2.0, 3.0},\n            {4.0, 5.0, 6.0},\n            {7.0, 8.0, 9.0}\n        };\n        RealMatrix matrix = new Array2DRowRealMatrix(matrixData);\n\n        // Perform some operations on the matrix\n        RealMatrix transposedMatrix = matrix.transpose();\n        RealMatrix multipliedMatrix = matrix.multiply(transposedMatrix);\n\n        // Print the resulting matrix\n        System.out.println(\"Multiplied Matrix:\");\n        for (int row = 0; row < multipliedMatrix.getRowDimension(); row++) {\n            for (int col = 0; col < multipliedMatrix.getColumnDimension(); col++) {\n                System.out.print(multipliedMatrix.getEntry(row, col) + \" \");\n            }\n            System.out.println();\n        }\n\n        // Perform operations on the RealVector\n        RealVector scaledVector = vector.mapMultiply(2.0);\n        RealVector addedVector = vector.add(scaledVector);\n\n        // Print the scaled and added vectors\n        System.out.println(\"Scaled Vector:\");\n        for (int i = 0; i < scaledVector.getDimension(); i++) {\n            System.out.print(scaledVector.getEntry(i) + \" \");\n        }\n        System.out.println(\"\\nAdded Vector:\");\n        for (int i = 0; i < addedVector.getDimension(); i++) {\n            System.out.print(addedVector.getEntry(i) + \" \");\n        }\n        System.out.println();\n\n        // Retrieve the RealVector\n        /* read */ RealVector retrievedVector = vector;\n\n        // Print the elements of the retrieved vector\n        System.out.println(\"Retrieved Vector:\");\n        for (int i = 0; i < retrievedVector.getDimension(); i++) {\n            System.out.println(retrievedVector.getEntry(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data for the vector\n        double[] data = {1.0, 2.0, 3.0};\n\n        // Create a RealVector using MatrixUtils\n        /* write */ RealVector vector = MatrixUtils.createRealVector(data);\n\n        // Retrieve the RealVector\n        /* read */ RealVector retrievedVector = vector;\n\n        // Print the elements of the retrieved vector\n        for (int i = 0; i < retrievedVector.getDimension(); i++) {\n            System.out.println(retrievedVector.getEntry(i));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRealVector",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRealVector"
    }
}