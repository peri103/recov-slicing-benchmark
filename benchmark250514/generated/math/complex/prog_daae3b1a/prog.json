{
    "java_code": "import org.apache.commons.math3.linear.RealMatrixChangingVisitor;\nimport org.apache.commons.math3.linear.RealMatrixPreservingVisitor;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            private double value;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                // Initialization if needed\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                /* write */ this.value = value; // Store the value\n                return value; // Return the unchanged value\n            }\n\n            @Override\n            public double end() {\n                /* read */ return this.value; // Retrieve the stored value\n            }\n        };\n\n        // Simulate visiting a matrix element\n        visitor.visit(0, 0, 42.0);\n\n        // Additional complex code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * i);\n        }\n\n        RealMatrixPreservingVisitor sumVisitor = new RealMatrixPreservingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                sum = 0; // Reset sum\n            }\n\n            @Override\n            public void visit(int row, int column, double value) {\n                sum += value; // Sum all elements\n            }\n\n            @Override\n            public double end() {\n                return sum; // Return the calculated sum\n            }\n        };\n\n        // Simulate processing matrix elements with sumVisitor\n        sumVisitor.start(1, 1, 0, 0, 0, 0);\n        for (int i = 0; i < numbers.size(); i++) {\n            sumVisitor.visit(0, 0, numbers.get(i));\n        }\n        double totalSum = sumVisitor.end();\n        System.out.println(\"Total sum of squares: \" + totalSum);\n\n        // Retrieve the value stored during the visit\n        double result = visitor.end();\n        System.out.println(\"Value from visitor: \" + result);\n\n        // More complex operations\n        ArrayList<String> words = new ArrayList<>();\n        words.add(\"Hello\");\n        words.add(\"World\");\n        for (String word : words) {\n            System.out.println(word);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.RealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            private double value;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                // Initialization if needed\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                /* write */ this.value = value; // Store the value\n                return value; // Return the unchanged value\n            }\n\n            @Override\n            public double end() {\n                /* read */ return this.value; // Retrieve the stored value\n            }\n        };\n\n        // Simulate visiting a matrix element\n        visitor.visit(0, 0, 42.0);\n\n        // Retrieve the value stored during the visit\n        double result = visitor.end();\n        System.out.println(result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
        "read_method": "end"
    }
}