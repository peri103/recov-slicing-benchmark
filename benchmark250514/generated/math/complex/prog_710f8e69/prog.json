{
    "java_code": "import org.apache.commons.math3.linear.RealMatrixChangingVisitor;\nimport org.apache.commons.math3.linear.RealMatrixPreservingVisitor;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                sum = 0;\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                /* write */ sum += value;\n                return value;\n            }\n\n            @Override\n            public double end() {\n                /* read */ return sum;\n            }\n        };\n\n        // Simulate visiting a matrix\n        visitor.start(3, 3, 0, 2, 0, 2);\n        visitor.visit(0, 0, 1.0);\n        visitor.visit(0, 1, 2.0);\n        visitor.visit(0, 2, 3.0);\n        visitor.visit(1, 0, 4.0);\n        visitor.visit(1, 1, 5.0);\n        visitor.visit(1, 2, 6.0);\n        visitor.visit(2, 0, 7.0);\n        visitor.visit(2, 1, 8.0);\n        visitor.visit(2, 2, 9.0);\n\n        // Additional complexity: Using RealMatrixPreservingVisitor\n        RealMatrixPreservingVisitor preservingVisitor = new RealMatrixPreservingVisitor() {\n            private double product = 1;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                product = 1;\n            }\n\n            @Override\n            public void visit(int row, int column, double value) {\n                product *= value;\n            }\n\n            @Override\n            public double end() {\n                return product;\n            }\n        };\n\n        preservingVisitor.start(3, 3, 0, 2, 0, 2);\n        preservingVisitor.visit(0, 0, 1.0);\n        preservingVisitor.visit(0, 1, 2.0);\n        preservingVisitor.visit(0, 2, 3.0);\n        preservingVisitor.visit(1, 0, 4.0);\n        preservingVisitor.visit(1, 1, 5.0);\n        preservingVisitor.visit(1, 2, 6.0);\n        preservingVisitor.visit(2, 0, 7.0);\n        preservingVisitor.visit(2, 1, 8.0);\n        preservingVisitor.visit(2, 2, 9.0);\n\n        double productResult = preservingVisitor.end();\n        System.out.println(\"Product of all elements: \" + productResult);\n\n        // Unrelated code to increase complexity\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        int total = 0;\n        for (int i = 0; i < list.size(); i++) {\n            total += list.get(i);\n        }\n        System.out.println(\"Sum of list elements: \" + total);\n\n        double sumResult = visitor.end();\n        System.out.println(\"Sum of all matrix elements: \" + sumResult);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.RealMatrixChangingVisitor;\n\npublic class Main {\n    public static void main(String[] args) {\n        RealMatrixChangingVisitor visitor = new RealMatrixChangingVisitor() {\n            private double sum = 0;\n\n            @Override\n            public void start(int rows, int columns, int startRow, int endRow, int startColumn, int endColumn) {\n                sum = 0;\n            }\n\n            @Override\n            public double visit(int row, int column, double value) {\n                /* write */ sum += value;\n                return value;\n            }\n\n            @Override\n            public double end() {\n                /* read */ return sum;\n            }\n        };\n\n        // Simulate visiting a matrix\n        visitor.start(3, 3, 0, 2, 0, 2);\n        visitor.visit(0, 0, 1.0);\n        visitor.visit(0, 1, 2.0);\n        visitor.visit(0, 2, 3.0);\n        visitor.visit(1, 0, 4.0);\n        visitor.visit(1, 1, 5.0);\n        visitor.visit(1, 2, 6.0);\n        visitor.visit(2, 0, 7.0);\n        visitor.visit(2, 1, 8.0);\n        visitor.visit(2, 2, 9.0);\n\n        double result = visitor.end();\n        System.out.println(\"Sum of all elements: \" + result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
        "write_method": "visit",
        "read_class": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
        "read_method": "end"
    }
}