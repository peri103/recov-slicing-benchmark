{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data for matrix creation\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a vector and perform operations on it\n        RealVector vector = new ArrayRealVector(data);\n        vector.mapMultiplyToSelf(2.0); // Multiply each element by 2\n        \n        // Create another matrix using the modified vector\n        RealMatrix anotherMatrix = MatrixUtils.createRowRealMatrix(vector.toArray());\n        \n        // Perform some operations on the second matrix\n        RealMatrix transposedMatrix = anotherMatrix.transpose();\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.print(transposedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Create the main matrix using the original data\n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        \n        // Perform some unrelated calculations\n        double sum = 0;\n        for (double value : data) {\n            sum += value;\n        }\n        System.out.println(\"Sum of data: \" + sum);\n        \n        // Access the row matrix from the main matrix\n        /* read */ RealMatrix readMatrix = matrix.getRowMatrix(0);\n        \n        // Printing the read matrix to verify the result\n        System.out.println(\"Read Matrix:\");\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createRowRealMatrix(data);\n        \n        /* read */ RealMatrix readMatrix = matrix.getRowMatrix(0);\n        \n        // Printing the read matrix to verify the result\n        for (int i = 0; i < readMatrix.getColumnDimension(); i++) {\n            System.out.print(readMatrix.getEntry(0, i) + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createRowRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getRowRealMatrix"
    }
}