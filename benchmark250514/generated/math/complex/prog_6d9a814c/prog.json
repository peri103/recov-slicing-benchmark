{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        \n        // Initialize another matrix for operations\n        RealMatrix anotherMatrix = MatrixUtils.createColumnRealMatrix(new double[]{4.0, 5.0, 6.0});\n        RealVector vector = new ArrayRealVector(new double[]{1.0, 0.0, -1.0});\n\n        // Perform operations on the other matrix\n        RealMatrix resultMatrix = anotherMatrix.add(MatrixUtils.createColumnRealMatrix(new double[]{0.0, 1.0, 0.0}));\n        \n        // Print the result matrix\n        System.out.println(\"Result Matrix:\");\n        for (int i = 0; i < resultMatrix.getRowDimension(); i++) {\n            System.out.println(resultMatrix.getEntry(i, 0));\n        }\n\n        // Perform vector operations\n        RealVector transformedVector = vector.mapMultiply(2.0);\n        System.out.println(\"Transformed Vector:\");\n        for (int i = 0; i < transformedVector.getDimension(); i++) {\n            System.out.println(transformedVector.getEntry(i));\n        }\n\n        // Create the main matrix using the original write method\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n\n        // Perform some operations on the matrix\n        RealMatrix scaledMatrix = matrix.scalarMultiply(3.0);\n        System.out.println(\"Scaled Matrix:\");\n        for (int i = 0; i < scaledMatrix.getRowDimension(); i++) {\n            System.out.println(scaledMatrix.getEntry(i, 0));\n        }\n\n        // Use the original read method to get the column matrix\n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n\n        // Display the column matrix\n        System.out.println(\"Column Matrix:\");\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] columnData = {1.0, 2.0, 3.0};\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(columnData);\n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        // Display the column matrix\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}