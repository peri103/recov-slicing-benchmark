{
    "java_code": "import org.apache.commons.math3.linear.BlockRealMatrix;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.MatrixUtils;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a BlockRealMatrix with 3 rows and 3 columns\n        BlockRealMatrix matrix = new BlockRealMatrix(3, 3);\n        \n        // Write a value at row 1, column 1\n        /* write */ matrix.setEntry(1, 1, 5.0);\n\n        // Initialize another matrix and perform some operations\n        RealMatrix matrix2 = MatrixUtils.createRealMatrix(3, 3);\n        Random random = new Random();\n        \n        // Fill matrix2 with random values\n        for (int i = 0; i < matrix2.getRowDimension(); i++) {\n            for (int j = 0; j < matrix2.getColumnDimension(); j++) {\n                matrix2.setEntry(i, j, random.nextDouble() * 10);\n            }\n        }\n        \n        // Add matrix2 to the original matrix\n        RealMatrix resultMatrix = matrix.add(matrix2);\n        \n        // Perform a scalar multiplication on resultMatrix\n        RealMatrix scaledMatrix = resultMatrix.scalarMultiply(2.0);\n        \n        // Calculate the transpose of the scaledMatrix\n        RealMatrix transposedMatrix = scaledMatrix.transpose();\n\n        // Print the transposed matrix\n        System.out.println(\"Transposed Matrix:\");\n        for (int i = 0; i < transposedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < transposedMatrix.getColumnDimension(); j++) {\n                System.out.printf(\"%.2f \", transposedMatrix.getEntry(i, j));\n            }\n            System.out.println();\n        }\n\n        // Read the original value at row 1, column 1\n        /* read */ double value = matrix.getEntry(1, 1);\n        \n        // Print the read value\n        System.out.println(\"Original value at (1,1): \" + value);\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.BlockRealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a BlockRealMatrix with 3 rows and 3 columns\n        BlockRealMatrix matrix = new BlockRealMatrix(3, 3);\n        \n        // Write a value at row 1, column 1\n        /* write */ matrix.setEntry(1, 1, 5.0);\n        \n        // Read the value at row 1, column 1\n        /* read */ double value = matrix.getEntry(1, 1);\n        \n        // Print the read value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.BlockRealMatrix",
        "write_method": "setEntry",
        "read_class": "org.apache.commons.math3.linear.BlockRealMatrix",
        "read_method": "getEntry"
    }
}