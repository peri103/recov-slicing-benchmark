{
    "java_code": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\nimport org.apache.commons.math3.linear.RealVector;\nimport org.apache.commons.math3.linear.ArrayRealVector;\nimport org.apache.commons.math3.linear.DecompositionSolver;\nimport org.apache.commons.math3.linear.LUDecomposition;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize data for matrix creation\n        double[] data = {1.0, 2.0, 3.0};\n        \n        // Create a column matrix using MatrixUtils\n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        // Perform some operations on the matrix\n        RealMatrix identityMatrix = MatrixUtils.createRealIdentityMatrix(data.length);\n        RealMatrix addedMatrix = matrix.add(identityMatrix);\n        \n        // Use LU decomposition to solve a system of equations\n        RealMatrix coefficients = MatrixUtils.createRealMatrix(new double[][] {\n            {1, 2, 3},\n            {0, 1, 4},\n            {5, 6, 0}\n        });\n        RealVector constants = new ArrayRealVector(new double[] {1, 2, 3});\n        DecompositionSolver solver = new LUDecomposition(coefficients).getSolver();\n        RealVector solution = solver.solve(constants);\n        \n        // Print the solution vector\n        System.out.println(\"Solution Vector:\");\n        for (int i = 0; i < solution.getDimension(); i++) {\n            System.out.println(solution.getEntry(i));\n        }\n\n        // Read the column matrix from the original matrix\n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        // Print the column matrix to verify the value\n        System.out.println(\"Column Matrix:\");\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n        \n        // Further operations on matrices\n        RealMatrix multipliedMatrix = matrix.multiply(identityMatrix);\n        RealMatrix subtractedMatrix = multipliedMatrix.subtract(addedMatrix);\n        \n        // Print the subtracted matrix\n        System.out.println(\"Subtracted Matrix:\");\n        for (int i = 0; i < subtractedMatrix.getRowDimension(); i++) {\n            for (int j = 0; j < subtractedMatrix.getColumnDimension(); j++) {\n                System.out.print(subtractedMatrix.getEntry(i, j) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.math3.linear.MatrixUtils;\nimport org.apache.commons.math3.linear.RealMatrix;\n\npublic class Main {\n    public static void main(String[] args) {\n        double[] data = {1.0, 2.0, 3.0};\n        \n        /* write */ RealMatrix matrix = MatrixUtils.createColumnRealMatrix(data);\n        \n        /* read */ RealMatrix columnMatrix = matrix.getColumnMatrix(0);\n        \n        // Print the read matrix to verify the value\n        for (int i = 0; i < columnMatrix.getRowDimension(); i++) {\n            System.out.println(columnMatrix.getEntry(i, 0));\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.math3.linear.MatrixUtils",
        "write_method": "createColumnRealMatrix",
        "read_class": "org.apache.commons.math3.linear.MatrixUtils",
        "read_method": "getColumnRealMatrix"
    }
}