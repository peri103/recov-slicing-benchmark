{
    "files": {
        "DateOperations.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class DateOperations {\n    private Date date;\n\n    public DateOperations(Date date) {\n        this.date = date;\n    }\n\n    public void setSeconds(int seconds) {\n        /* write */ this.date = DateUtils.setSeconds(this.date, seconds);\n    }\n\n    public Date getTruncatedDate() {\n        return DateUtils.truncate(this.date, Calendar.SECOND);\n    }\n\n    public Date getDate() {\n        return this.date;\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setSeconds",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    },
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        /* write */ Date updatedDate = DateUtils.setSeconds(currentDate, 30);\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, java.util.Calendar.SECOND);\n        \n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"Updated Date with Seconds Set: \" + updatedDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        /* write */ Date updatedDate = DateUtils.setSeconds(currentDate, 30);\n        \n        // Adding some unrelated complex logic\n        ArrayList<Date> dateList = new ArrayList<>();\n        HashMap<String, Date> dateMap = new HashMap<>();\n        dateList.add(currentDate);\n        dateMap.put(\"start\", currentDate);\n        \n        // Manipulating dates\n        Date futureDate = DateUtils.addDays(currentDate, 10);\n        dateList.add(futureDate);\n        dateMap.put(\"future\", futureDate);\n        \n        // More date manipulations\n        Date pastDate = DateUtils.addDays(currentDate, -10);\n        dateList.add(pastDate);\n        dateMap.put(\"past\", pastDate);\n        \n        // Iterate over the map and list\n        for (String key : dateMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Date: \" + dateMap.get(key));\n        }\n        \n        for (Date date : dateList) {\n            System.out.println(\"List Date: \" + date);\n        }\n        \n        // Further processing on dates\n        Date nearestHour = DateUtils.round(currentDate, Calendar.HOUR);\n        System.out.println(\"Nearest Hour: \" + nearestHour);\n        \n        // Finally using the read method\n        /* read */ Date truncatedDate = DateUtils.truncate(updatedDate, Calendar.SECOND);\n        \n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"Updated Date with Seconds Set: \" + updatedDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional unrelated processing\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n    }\n}"
}