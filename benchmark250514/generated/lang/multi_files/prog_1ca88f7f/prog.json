{
    "files": {
        "MutableNumber.java": "import org.apache.commons.lang3.mutable.MutableInt;\n\npublic class MutableNumber {\n    private MutableInt mutableInt = new MutableInt();\n\n    public void setNumber(int value) {\n        /* write */ mutableInt.setValue(value);\n    }\n\n    public int getNumber() {\n        return mutableInt.getValue();\n    }\n}",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> grades = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n\n    public List<Integer> getGrades() {\n        return grades;\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a course\n        Course course = new Course(\"Mathematics\");\n\n        // Create students\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        // Add grades to students\n        student1.addGrade(85);\n        student2.addGrade(90);\n\n        // Add students to the course\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Create a mutable number instance\n        MutableNumber number = new MutableNumber();\n        \n        // Perform write operation\n        number.setNumber(42);\n\n        // Complex logic\n        for (Student student : course.getStudents()) {\n            System.out.println(student.getName() + \"'s grades: \" + student.getGrades());\n        }\n\n        // Perform read operation\n        /* read */ int finalValue = number.getNumber();\n        System.out.println(\"Final Value: \" + finalValue);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.mutable.MutableInt",
        "write_method": "setValue",
        "read_class": "org.apache.commons.lang3.mutable.MutableInt",
        "read_method": "getValue"
    },
    "java_code_simple": "import org.apache.commons.lang3.mutable.MutableInt;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableInt mutableInt = new MutableInt();\n        /* write */ mutableInt.setValue(42);\n        /* read */ int value = mutableInt.getValue();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.mutable.MutableInt;\nimport org.apache.commons.lang3.mutable.MutableDouble;\nimport org.apache.commons.lang3.mutable.MutableBoolean;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableInt mutableInt = new MutableInt();\n        MutableDouble mutableDouble = new MutableDouble();\n        MutableBoolean mutableBoolean = new MutableBoolean();\n\n        // Complex operations with mutableDouble\n        mutableDouble.setValue(3.14);\n        double pi = mutableDouble.getValue();\n        System.out.println(\"Pi: \" + pi);\n\n        // Complex operations with mutableBoolean\n        mutableBoolean.setTrue();\n        boolean isTrue = mutableBoolean.isTrue();\n        System.out.println(\"Boolean is true: \" + isTrue);\n\n        // Perform arithmetic operations\n        int result = 0;\n        for (int i = 0; i < 10; i++) {\n            result += i;\n        }\n        System.out.println(\"Sum from 0 to 9: \" + result);\n\n        // Use conditional logic\n        if (result > 20) {\n            System.out.println(\"Result is greater than 20\");\n        } else {\n            System.out.println(\"Result is not greater than 20\");\n        }\n\n        // Use a loop to manipulate mutableInt\n        for (int i = 0; i < 5; i++) {\n            mutableInt.add(i);\n        }\n\n        // More complex logic before final read\n        int threshold = 10;\n        int adjustedValue = mutableInt.getValue() - threshold;\n        System.out.println(\"Adjusted Value: \" + adjustedValue);\n\n        // Write operation\n        /* write */ mutableInt.setValue(42);\n\n        // Additional operations\n        mutableInt.increment();\n\n        // Read operation\n        /* read */ int value = mutableInt.getValue();\n        System.out.println(\"Final Value: \" + value);\n    }\n}"
}