{
    "files": {
        "DateHandler.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class DateHandler {\n    private Date currentDate;\n    private Date newDate;\n\n    public DateHandler(Date currentDate) {\n        this.currentDate = currentDate;\n    }\n\n    public void addDaysToCurrentDate(int days) {\n        /* write */ this.newDate = DateUtils.addDays(currentDate, days);\n    }\n\n    public Date getNewDate() {\n        return this.newDate;\n    }\n}\n",
        "DateTruncator.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class DateTruncator {\n    public Date truncateDate(Date date) {\n        /* read */ return DateUtils.truncate(date, Calendar.DATE);\n    }\n}\n",
        "Main.java": "import java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        DateHandler dateHandler = new DateHandler(currentDate);\n        dateHandler.addDaysToCurrentDate(5);\n        \n        DateTruncator dateTruncator = new DateTruncator();\n        Date truncatedDate = dateTruncator.truncateDate(dateHandler.getNewDate());\n        \n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"New Date: \" + dateHandler.getNewDate());\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addDays",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    },
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Add 5 days to the current date\n        /* write */ Date newDate = DateUtils.addDays(currentDate, 5);\n        \n        // Truncate the new date to remove time elements\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, java.util.Calendar.DATE);\n        \n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"New Date: \" + newDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Add 5 days to the current date\n        /* write */ Date newDate = DateUtils.addDays(currentDate, 5);\n        \n        // Perform some unrelated date operations\n        Calendar cal = Calendar.getInstance();\n        cal.setTime(newDate);\n        cal.add(Calendar.MONTH, 1); // Add one month\n        Date oneMonthLater = cal.getTime();\n        \n        System.out.println(\"One Month Later: \" + oneMonthLater);\n        \n        // Further unrelated operations\n        Date yesterday = DateUtils.addDays(currentDate, -1);\n        System.out.println(\"Yesterday's Date: \" + yesterday);\n        \n        // More unrelated operations\n        Date startOfDay = DateUtils.truncate(currentDate, Calendar.DAY_OF_MONTH);\n        System.out.println(\"Start of Current Day: \" + startOfDay);\n        \n        // Truncate the new date to remove time elements\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, Calendar.DATE);\n        \n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"New Date: \" + newDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional unrelated date manipulations\n        Date nextWeek = DateUtils.addDays(currentDate, 7);\n        System.out.println(\"Date Next Week: \" + nextWeek);\n        \n        Date endOfDay = DateUtils.addMilliseconds(startOfDay, DateUtils.MILLIS_PER_DAY - 1);\n        System.out.println(\"End of Current Day: \" + endOfDay);\n    }\n}"
}