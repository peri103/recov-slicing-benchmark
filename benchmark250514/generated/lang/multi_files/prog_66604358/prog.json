{
    "files": {
        "EqualityChecker.java": "import org.apache.commons.lang3.builder.EqualsBuilder;\n\npublic class EqualityChecker {\n    private EqualsBuilder equalsBuilder = new EqualsBuilder();\n\n    public void appendValues(int a, int b) {\n        /* write */ equalsBuilder.append(a, b);\n    }\n\n    public boolean checkEquality() {\n        return equalsBuilder.isEquals();\n    }\n}\n",
        "HashCodeGenerator.java": "import org.apache.commons.lang3.builder.HashCodeBuilder;\n\npublic class HashCodeGenerator {\n    private HashCodeBuilder hashCodeBuilder = new HashCodeBuilder();\n\n    public void appendValue(int value) {\n        hashCodeBuilder.append(value);\n    }\n\n    public int generateHashCode() {\n        return hashCodeBuilder.toHashCode();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int studentId;\n\n    public Student(String name, int studentId) {\n        this.name = name;\n        this.studentId = studentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getStudentId() {\n        return studentId;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        EqualityChecker equalityChecker = new EqualityChecker();\n        equalityChecker.appendValues(1, 1);\n\n        HashCodeGenerator hashCodeGenerator = new HashCodeGenerator();\n        for (int i = 0; i < 5; i++) {\n            hashCodeGenerator.appendValue(i);\n        }\n\n        int generatedHashCode = hashCodeGenerator.generateHashCode();\n        System.out.println(\"Generated HashCode: \" + generatedHashCode);\n\n        Student student1 = new Student(\"Alice\", 101);\n        Student student2 = new Student(\"Bob\", 102);\n\n        System.out.println(\"Student 1: \" + student1.getName() + \", ID: \" + student1.getStudentId());\n        System.out.println(\"Student 2: \" + student2.getName() + \", ID: \" + student2.getStudentId());\n\n        boolean areNumbersEqual = equalityChecker.checkEquality(); /* read */\n        System.out.println(\"Are numbers equal? \" + areNumbersEqual);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.builder.EqualsBuilder",
        "write_method": "append",
        "read_class": "org.apache.commons.lang3.builder.EqualsBuilder",
        "read_method": "isEquals"
    },
    "java_code_simple": "import org.apache.commons.lang3.builder.EqualsBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        EqualsBuilder equalsBuilder = new EqualsBuilder();\n        /* write */ equalsBuilder.append(1, 1);\n        /* read */ boolean isEqual = equalsBuilder.isEquals();\n        System.out.println(isEqual);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.builder.EqualsBuilder;\nimport org.apache.commons.lang3.builder.HashCodeBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        EqualsBuilder equalsBuilder = new EqualsBuilder();\n        HashCodeBuilder hashCodeBuilder = new HashCodeBuilder();\n\n        /* write */ equalsBuilder.append(1, 1);\n        hashCodeBuilder.append(1).append(2).append(3);\n\n        int hashCode = hashCodeBuilder.toHashCode();\n        System.out.println(\"Generated HashCode: \" + hashCode);\n\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n            hashCodeBuilder.append(i);\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        int newHashCode = hashCodeBuilder.toHashCode();\n        System.out.println(\"Updated HashCode: \" + newHashCode);\n\n        boolean isEqual = equalsBuilder.isEquals(); /* read */\n        System.out.println(\"Are numbers equal? \" + isEqual);\n\n        // Additional logic for complexity\n        String str1 = \"Hello\";\n        String str2 = \"World\";\n        EqualsBuilder stringEqualsBuilder = new EqualsBuilder();\n        stringEqualsBuilder.append(str1, str2);\n        boolean areStringsEqual = stringEqualsBuilder.isEquals();\n        System.out.println(\"Are strings equal? \" + areStringsEqual);\n    }\n}"
}