{
    "files": {
        "StrManipulator.java": "import org.apache.commons.lang3.text.StrBuilder;\n\npublic class StrManipulator {\n    private StrBuilder strBuilder;\n\n    public StrManipulator(String initialText) {\n        this.strBuilder = new StrBuilder(initialText);\n    }\n\n    public void replaceWorldWithJava() {\n        /* write */ strBuilder.replaceAll(\"World\", \"Java\");\n    }\n\n    public String getResult() {\n        /* read */ return strBuilder.toString();\n    }\n}",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<String> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollCourse(String course) {\n        courses.add(course);\n    }\n\n    public ArrayList<String> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Using StrManipulator\n        StrManipulator manipulator = new StrManipulator(\"Hello World\");\n        manipulator.replaceWorldWithJava();\n        \n        // Creating a student and enrolling in courses\n        Student student = new Student(\"Alice\");\n        student.enrollCourse(\"Mathematics\");\n        student.enrollCourse(\"Science\");\n\n        // Print student details\n        System.out.println(\"Student Name: \" + student.getName());\n        System.out.println(\"Courses Enrolled:\");\n        for (String course : student.getCourses()) {\n            System.out.println(course);\n        }\n\n        // Read and print result from StrManipulator\n        String result = manipulator.getResult();\n        System.out.println(\"Manipulated String: \" + result);\n\n        // Additional operations\n        ArrayList<String> greetings = new ArrayList<>();\n        greetings.add(\"Hello\");\n        greetings.add(\"Hi\");\n        greetings.add(\"Greetings\");\n\n        for (String greeting : greetings) {\n            System.out.println(greeting + \", \" + student.getName());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrBuilder",
        "write_method": "replaceAll",
        "read_class": "org.apache.commons.lang3.text.StrBuilder",
        "read_method": "toString"
    },
    "java_code_simple": "import org.apache.commons.lang3.text.StrBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrBuilder strBuilder = new StrBuilder(\"Hello World\");\n        /* write */ strBuilder.replaceAll(\"World\", \"Java\");\n        /* read */ String result = strBuilder.toString();\n        System.out.println(result);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.text.StrBuilder;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        StrBuilder strBuilder = new StrBuilder(\"Hello World\");\n        /* write */ strBuilder.replaceAll(\"World\", \"Java\");\n\n        // Additional unrelated code to make the program more complex\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"First Element\");\n        list.add(\"Second Element\");\n        list.add(\"Third Element\");\n\n        for (String element : list) {\n            System.out.println(element);\n        }\n\n        // Additional similar write-read pair\n        StrBuilder anotherStrBuilder = new StrBuilder(\"Goodbye World\");\n        anotherStrBuilder.replaceAll(\"World\", \"Universe\");\n        String anotherResult = anotherStrBuilder.toString();\n        System.out.println(anotherResult);\n\n        // More complexity with loops and conditions\n        for (int i = 0; i < 5; i++) {\n            if (i % 2 == 0) {\n                list.add(\"Even \" + i);\n            } else {\n                list.add(\"Odd \" + i);\n            }\n        }\n\n        for (String element : list) {\n            System.out.println(\"Processed: \" + element);\n        }\n\n        // Read operation from the original write-read pair\n        /* read */ String result = strBuilder.toString();\n        System.out.println(result);\n    }\n}"
}