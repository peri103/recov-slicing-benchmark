{
    "files": {
        "DateOperations.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class DateOperations {\n    private Date date;\n\n    public DateOperations(Date date) {\n        this.date = date;\n    }\n\n    public Date addYearsToDate(int years) {\n        /* write */ Date newDate = DateUtils.addYears(date, years);\n        return newDate;\n    }\n\n    public Date truncateDate(Date dateToTruncate) {\n        /* read */ Date truncatedDate = DateUtils.truncate(dateToTruncate, Calendar.DAY_OF_MONTH);\n        return truncatedDate;\n    }\n}",
        "Student.java": "import java.util.Date;\n\npublic class Student {\n    private String name;\n    private DateOperations dateOps;\n\n    public Student(String name, Date date) {\n        this.name = name;\n        this.dateOps = new DateOperations(date);\n    }\n\n    public Date performDateOperation(int yearsToAdd) {\n        Date newDate = dateOps.addYearsToDate(yearsToAdd);\n        return dateOps.truncateDate(newDate);\n    }\n\n    public String getName() {\n        return name;\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Main.java": "import java.util.Date;\nimport java.text.SimpleDateFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        Student student = new Student(\"Alice\", currentDate);\n        Course course = new Course(\"History 101\");\n        course.addStudent(student);\n\n        Date resultDate = student.performDateOperation(5);\n\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        System.out.println(\"Student: \" + student.getName());\n        System.out.println(\"Course: \" + course.getCourseName());\n        System.out.println(\"Original Date: \" + sdf.format(currentDate));\n        System.out.println(\"Date after operation: \" + sdf.format(resultDate));\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addYears",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    },
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Add 5 years to the current date\n        /* write */ Date newDate = DateUtils.addYears(date, 5);\n        \n        // Truncate the date to remove time components\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, java.util.Calendar.DAY_OF_MONTH);\n        \n        System.out.println(\"Original Date: \" + date);\n        System.out.println(\"Date after adding 5 years: \" + newDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.text.SimpleDateFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n\n        // Add 5 years to the current date\n        /* write */ Date newDate = DateUtils.addYears(date, 5);\n\n        // Perform some unrelated operations\n        calendar.add(Calendar.MONTH, 2);\n        Date futureDate = calendar.getTime();\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        String formattedDate = sdf.format(futureDate);\n        System.out.println(\"Future Date after 2 months: \" + formattedDate);\n\n        // Calculate the difference in days between the original and future date\n        long diffInMillis = futureDate.getTime() - date.getTime();\n        long diffInDays = diffInMillis / (1000 * 60 * 60 * 24);\n        System.out.println(\"Difference in days: \" + diffInDays);\n\n        // Truncate the date to remove time components\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, Calendar.DAY_OF_MONTH);\n\n        // Print the original, new, and truncated dates\n        System.out.println(\"Original Date: \" + sdf.format(date));\n        System.out.println(\"Date after adding 5 years: \" + sdf.format(newDate));\n        System.out.println(\"Truncated Date: \" + sdf.format(truncatedDate));\n\n        // Additional unrelated operations\n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.DAY_OF_MONTH, 10);\n        Date tenDaysLater = calendar.getTime();\n        String tenDaysLaterFormatted = sdf.format(tenDaysLater);\n        System.out.println(\"Date 10 days after truncation: \" + tenDaysLaterFormatted);\n    }\n}"
}