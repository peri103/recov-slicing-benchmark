{
    "files": {
        "DateManipulator.java": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class DateManipulator {\n    private Date currentDate;\n\n    public DateManipulator(Date currentDate) {\n        this.currentDate = currentDate;\n    }\n\n    public Date addDaysToDate(int days) {\n        /* write */ return DateUtils.addDays(currentDate, days);\n    }\n    \n    public Date truncateDate(Date date) {\n        /* read */ return DateUtils.truncate(date, Calendar.DAY_OF_MONTH);\n    }\n}\n",
        "Event.java": "import java.util.Date;\n\npublic class Event {\n    private String name;\n    private Date date;\n\n    public Event(String name, Date date) {\n        this.name = name;\n        this.date = date;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Date getDate() {\n        return date;\n    }\n}\n",
        "Main.java": "import java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        DateManipulator dateManipulator = new DateManipulator(currentDate);\n        \n        // Add days to the current date\n        Date futureDate = dateManipulator.addDaysToDate(5);\n        \n        // Create an event with the future date\n        Event futureEvent = new Event(\"Future Event\", futureDate);\n        System.out.println(\"Event Name: \" + futureEvent.getName());\n        System.out.println(\"Event Date: \" + futureEvent.getDate());\n\n        // Perform some unrelated operations\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(currentDate);\n        calendar.add(Calendar.MONTH, 1);\n        Date oneMonthAhead = calendar.getTime();\n        System.out.println(\"One month ahead: \" + oneMonthAhead);\n        \n        // Truncate the future date\n        Date truncatedDate = dateManipulator.truncateDate(futureDate);\n        \n        // Print the truncated date\n        System.out.println(\"Truncated future date: \" + truncatedDate);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addDays",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    },
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Use DateUtils to add days to the current date\n        /* write */ Date futureDate = DateUtils.addDays(currentDate, 5);\n        \n        // Use DateUtils to truncate the future date to remove time components\n        /* read */ Date truncatedDate = DateUtils.truncate(futureDate, java.util.Calendar.DAY_OF_MONTH);\n        \n        // Print the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "java_code_complex": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(currentDate);\n        \n        // Calculate a future date using DateUtils\n        /* write */ Date futureDate = DateUtils.addDays(currentDate, 5);\n        \n        // Perform some unrelated operations\n        calendar.add(Calendar.MONTH, 1);\n        Date oneMonthAhead = calendar.getTime();\n        System.out.println(\"One month ahead: \" + oneMonthAhead);\n        \n        // More unrelated operations\n        calendar.add(Calendar.YEAR, 1);\n        Date oneYearAhead = calendar.getTime();\n        System.out.println(\"One year ahead: \" + oneYearAhead);\n        \n        // Use DateUtils to truncate the future date to remove time components\n        /* read */ Date truncatedDate = DateUtils.truncate(futureDate, Calendar.DAY_OF_MONTH);\n        \n        // Print the truncated date\n        System.out.println(\"Truncated future date: \" + truncatedDate);\n        \n        // Additional complex operations\n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.DAY_OF_MONTH, 10);\n        Date tenDaysAfterTruncated = calendar.getTime();\n        System.out.println(\"Ten days after truncated date: \" + tenDaysAfterTruncated);\n        \n        // Another DateUtils operation for demonstration\n        Date roundedDate = DateUtils.round(oneMonthAhead, Calendar.HOUR);\n        System.out.println(\"Rounded month ahead date: \" + roundedDate);\n    }\n}"
}