{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n        \n        // Initialize another StrTokenizer with a different string\n        StrTokenizer tokenizer2 = new StrTokenizer(\"Java Programming\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Create an ArrayList to store tokens from the second tokenizer\n        ArrayList<String> tokensList = new ArrayList<>();\n        \n        // Use the second tokenizer to extract tokens and store them in the list\n        while (tokenizer2.hasNext()) {\n            String token2 = tokenizer2.nextToken();\n            tokensList.add(token2);\n        }\n        \n        // Perform some unrelated operations on the tokens list\n        for (String s : tokensList) {\n            System.out.println(\"Token from tokenizer2: \" + s);\n        }\n        \n        // Add a new token to the list\n        tokensList.add(\"Extra Token\");\n        \n        // Read the first token from the original tokenizer\n        /* read */ String token = tokenizer.nextToken();\n        \n        // Output the token to verify the result\n        System.out.println(\"Token from tokenizer: \" + token);\n        \n        // Perform additional operations on the tokens list\n        for (int i = 0; i < tokensList.size(); i++) {\n            System.out.println(\"Token at index \" + i + \": \" + tokensList.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Read the first token from the tokenizer\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token to verify the result\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "reset",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}