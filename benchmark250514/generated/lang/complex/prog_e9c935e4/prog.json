{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"Hello, World! This is a test.\";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n\n        // Set the ignored matcher to ignore spaces\n        /* write */ tokenizer.setIgnoredMatcher(StrMatcher.spaceMatcher());\n\n        // Additional unrelated code to make the program more complex\n        List<String> sampleList = Arrays.asList(\"Java\", \"Python\", \"C++\", \"JavaScript\");\n        for (String language : sampleList) {\n            System.out.println(\"Programming Language: \" + language);\n        }\n\n        // Another StrTokenizer operation\n        StrTokenizer tokenizer2 = new StrTokenizer(\"A B C D\");\n        tokenizer2.setDelimiterMatcher(StrMatcher.charSetMatcher(' '));\n        while (tokenizer2.hasNext()) {\n            System.out.println(\"Token from tokenizer2: \" + tokenizer2.nextToken());\n        }\n\n        // Read the first token from the original tokenizer\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n\n        // More complex operations\n        int sum = 0;\n        for (int i = 1; i <= 100; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 100: \" + sum);\n\n        // Another unrelated StrTokenizer operation\n        StrTokenizer tokenizer3 = new StrTokenizer(\"X Y Z\");\n        tokenizer3.setDelimiterMatcher(StrMatcher.charSetMatcher(' '));\n        while (tokenizer3.hasNext()) {\n            System.out.println(\"Token from tokenizer3: \" + tokenizer3.nextToken());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"Hello, World! This is a test.\";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        // Set the ignored matcher to ignore spaces\n        /* write */ tokenizer.setIgnoredMatcher(StrMatcher.spaceMatcher());\n        \n        // Read the first token\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setIgnoredMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}