{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing a string for tokenization\n        String input = \"apple,banana,cherry\";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        // Set the delimiter to a comma\n        StrMatcher delimiterMatcher = StrMatcher.charMatcher(',');\n        /* write */ tokenizer.setDelimiterMatcher(delimiterMatcher);\n        \n        // Creating an ArrayList to store tokens\n        ArrayList<String> tokenList = new ArrayList<>();\n        \n        // Adding tokens to the ArrayList\n        while (tokenizer.hasNext()) {\n            tokenList.add(tokenizer.nextToken());\n        }\n        \n        // Shuffling the list to add complexity\n        Collections.shuffle(tokenList);\n        \n        // Performing some operations on the list\n        for (String token : tokenList) {\n            System.out.println(\"Shuffled token: \" + token);\n        }\n        \n        // Resetting tokenizer to read the first token again\n        tokenizer.reset();\n        \n        // Read the first token\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(\"First token: \" + token);\n        \n        // Additional operations on the token list\n        tokenList.sort(String::compareTo);\n        System.out.println(\"Sorted tokens:\");\n        for (String sortedToken : tokenList) {\n            System.out.println(sortedToken);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"apple,banana,cherry\";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        // Set the delimiter to a comma\n        StrMatcher delimiterMatcher = StrMatcher.charMatcher(',');\n        /* write */ tokenizer.setDelimiterMatcher(delimiterMatcher);\n        \n        // Read the first token\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setDelimiterMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}