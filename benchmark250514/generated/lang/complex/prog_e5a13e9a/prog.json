{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.StringUtils;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World' Example\");\n        ArrayList<String> tokensList = new ArrayList<>();\n\n        /* write */ tokenizer.setQuoteChar('\\'');\n        \n        // Adding some complexity with String manipulation\n        String initialString = \"Hello, how are you doing today?\";\n        String reversedString = StringUtils.reverse(initialString);\n        System.out.println(\"Reversed String: \" + reversedString);\n        \n        // Tokenizing the initial string using a different tokenizer\n        StrTokenizer anotherTokenizer = new StrTokenizer(initialString);\n        anotherTokenizer.setDelimiterString(\" \");\n        while (anotherTokenizer.hasNext()) {\n            String token = anotherTokenizer.nextToken();\n            tokensList.add(token);\n        }\n        \n        // Processing the tokens to create a new sentence\n        StringBuilder processedString = new StringBuilder();\n        for (String token : tokensList) {\n            processedString.append(StringUtils.capitalize(token)).append(\" \");\n        }\n        System.out.println(\"Processed String: \" + processedString.toString().trim());\n        \n        // Using the original tokenizer to read the next token\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(\"First Token: \" + token);\n        \n        // Further processing on the token list\n        for (String tokenInList : tokensList) {\n            System.out.println(\"Token from List: \" + tokenInList);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World' Example\");\n        /* write */ tokenizer.setQuoteChar('\\'');\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setQuoteChar",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}