{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World'!\");\n\n        // Additional code: Create and manipulate a list\n        List<String> words = Arrays.asList(\"Java\", \"Python\", \"C++\");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            sb.append(word).append(\" \");\n        }\n\n        // Set the quote character using the write method\n        /* write */ tokenizer.setQuoteChar('\\'');\n\n        // More complex operations: Tokenize and process the string\n        StrTokenizer tokenizer2 = new StrTokenizer(sb.toString());\n        tokenizer2.setDelimiterChar(' ');\n        while (tokenizer2.hasNext()) {\n            String language = tokenizer2.nextToken();\n            System.out.println(\"Language: \" + language);\n        }\n\n        // Retrieve the next token using the read method\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token to verify the output\n        System.out.println(\"First Token: \" + token);\n\n        // Additional logic: Perform arithmetic operations\n        int sum = 0;\n        for (int i = 1; i <= 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 numbers: \" + sum);\n\n        // Final operations: Concatenate strings\n        String finalString = sb.toString() + \"is fun!\";\n        System.out.println(finalString);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World'!\");\n\n        // Set the quote character using the write method\n        /* write */ tokenizer.setQuoteChar('\\'');\n\n        // Retrieve the next token using the read method\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token to verify the output\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setQuoteChar",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}