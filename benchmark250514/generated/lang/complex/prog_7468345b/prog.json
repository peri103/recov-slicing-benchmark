{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(currentDate);\n\n        // Use the ceiling method to round up the date to the next hour\n        /* write */ Date roundedUpDate = DateUtils.ceiling(calendar, Calendar.HOUR).getTime();\n\n        // Additional unrelated code to increase complexity\n        List<Date> dateList = new ArrayList<>();\n        dateList.add(currentDate);\n        dateList.add(roundedUpDate);\n\n        for (Date date : dateList) {\n            System.out.println(\"Date in list: \" + date);\n        }\n\n        // More unrelated code\n        Calendar anotherCalendar = Calendar.getInstance();\n        anotherCalendar.add(Calendar.DAY_OF_MONTH, 1);\n        Date tomorrow = anotherCalendar.getTime();\n        dateList.add(tomorrow);\n\n        for (Date date : dateList) {\n            System.out.println(\"Updated Date in list: \" + date);\n        }\n\n        // Use the truncate method to round down the date to the start of the hour\n        /* read */ Date truncatedDate = DateUtils.truncate(roundedUpDate, Calendar.HOUR);\n\n        // Print the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n\n        // Additional unrelated code to increase complexity\n        List<Date> truncatedDateList = new ArrayList<>();\n        truncatedDateList.add(truncatedDate);\n        truncatedDateList.add(DateUtils.truncate(tomorrow, Calendar.DAY_OF_MONTH));\n\n        for (Date date : truncatedDateList) {\n            System.out.println(\"Truncated Date in list: \" + date);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(currentDate);\n\n        // Use the ceiling method to round up the date to the next hour\n        /* write */ Date roundedUpDate = DateUtils.ceiling(calendar, Calendar.HOUR).getTime();\n\n        // Use the truncate method to round down the date to the start of the hour\n        /* read */ Date truncatedDate = DateUtils.truncate(roundedUpDate, Calendar.HOUR);\n\n        // Print the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "ceiling",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}