{
    "java_code": "import org.apache.commons.lang3.time.StopWatch;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StopWatch stopWatch = new StopWatch();\n        /* write */ stopWatch.start();\n        \n        // Simulate some processing time\n        try {\n            Thread.sleep(500); // Sleep for 0.5 seconds\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        \n        // Additional processing\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // More processing\n        int maxNumber = Integer.MIN_VALUE;\n        for (int number : numbers) {\n            if (number > maxNumber) {\n                maxNumber = number;\n            }\n        }\n        System.out.println(\"Max number: \" + maxNumber);\n\n        // Simulate more processing time\n        try {\n            Thread.sleep(500); // Sleep for another 0.5 seconds\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        /* read */ long timeElapsed = stopWatch.getTime();\n        System.out.println(\"Time elapsed: \" + timeElapsed + \" milliseconds\");\n        \n        // Final processing\n        ArrayList<String> words = new ArrayList<>();\n        words.add(\"hello\");\n        words.add(\"world\");\n        words.add(\"java\");\n        words.add(\"programming\");\n        \n        for (String word : words) {\n            System.out.println(\"Word: \" + word);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.StopWatch;\n\npublic class Main {\n    public static void main(String[] args) {\n        StopWatch stopWatch = new StopWatch();\n        /* write */ stopWatch.start();\n        \n        // Simulate some processing time\n        try {\n            Thread.sleep(1000); // Sleep for 1 second\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        \n        /* read */ long timeElapsed = stopWatch.getTime();\n        System.out.println(\"Time elapsed: \" + timeElapsed + \" milliseconds\");\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.StopWatch",
        "write_method": "start",
        "read_class": "org.apache.commons.lang3.time.StopWatch",
        "read_method": "getTime"
    }
}