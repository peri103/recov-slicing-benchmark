{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"  Hello  World  \";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        // Set a trimmer matcher to trim spaces\n        StrMatcher trimmerMatcher = StrMatcher.trimMatcher();\n        /* write */ tokenizer.setTrimmerMatcher(trimmerMatcher);\n        \n        // Additional complexity: manipulate a list of tokens\n        ArrayList<String> tokensList = new ArrayList<>();\n        \n        // Add more tokens to the list\n        StrTokenizer additionalTokenizer = new StrTokenizer(\"Extra Tokens\");\n        while (additionalTokenizer.hasNext()) {\n            tokensList.add(additionalTokenizer.nextToken());\n        }\n        \n        // Perform some operations on the tokens list\n        for (int i = 0; i < tokensList.size(); i++) {\n            tokensList.set(i, tokensList.get(i).toUpperCase());\n        }\n        \n        // Further manipulate the list\n        tokensList.add(\"NEW_TOKEN\");\n        \n        // Read the first token after trimming\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n        \n        // Print all tokens in the list\n        for (String t : tokensList) {\n            System.out.println(t);\n        }\n        \n        // Perform a final operation on tokensList\n        tokensList.remove(\"NEW_TOKEN\");\n        \n        // Print the final state of tokensList\n        System.out.println(\"Final Tokens List: \" + tokensList);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"  Hello  World  \";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        // Set a trimmer matcher to trim spaces\n        StrMatcher trimmerMatcher = StrMatcher.trimMatcher();\n        /* write */ tokenizer.setTrimmerMatcher(trimmerMatcher);\n        \n        // Read the first token after trimming\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setTrimmerMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}