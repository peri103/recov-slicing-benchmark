{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Round the current date to the nearest semi-month\n        /* write */ Date roundedDate = DateUtils.round(currentDate, DateUtils.SEMI_MONTH);\n        \n        // Perform some unrelated operations to make the program more complex\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(currentDate);\n        calendar.add(Calendar.DAY_OF_MONTH, 10); // Add 10 days\n        Date futureDate = calendar.getTime();\n        \n        List<Date> dateList = new ArrayList<>();\n        dateList.add(futureDate);\n        dateList.add(currentDate);\n        \n        // Print all dates in the list\n        for (Date date : dateList) {\n            System.out.println(\"Date in list: \" + date);\n        }\n        \n        // Calculate the difference between the future date and current date\n        long differenceInMillis = futureDate.getTime() - currentDate.getTime();\n        long differenceInDays = differenceInMillis / (1000 * 60 * 60 * 24);\n        System.out.println(\"Difference in days: \" + differenceInDays);\n        \n        // Truncate the rounded date to the start of the semi-month\n        /* read */ Date truncatedDate = DateUtils.truncate(roundedDate, DateUtils.SEMI_MONTH);\n        \n        // Output the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Add more operations to increase complexity\n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.MONTH, 1); // Add one month\n        Date nextMonthDate = calendar.getTime();\n        System.out.println(\"Next month date: \" + nextMonthDate);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Round the current date to the nearest day\n        /* write */ Date roundedDate = DateUtils.round(currentDate, DateUtils.SEMI_MONTH);\n        \n        // Truncate the rounded date to the start of the day\n        /* read */ Date truncatedDate = DateUtils.truncate(roundedDate, DateUtils.SEMI_MONTH);\n        \n        // Output the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "round",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}