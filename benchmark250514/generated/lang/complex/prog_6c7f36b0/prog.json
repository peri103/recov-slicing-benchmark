{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a Date object with the current date\n        Date date = new Date();\n        \n        // Add 1 week to the current date\n        /* write */ Date newDate = DateUtils.addWeeks(date, 1);\n        \n        // Perform some unrelated date manipulations\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(newDate);\n        calendar.add(Calendar.DAY_OF_YEAR, 5);\n        Date fiveDaysLater = calendar.getTime();\n        \n        // Print the modified date\n        System.out.println(\"Date after adding 5 days: \" + fiveDaysLater);\n        \n        // More date manipulations\n        calendar.add(Calendar.MONTH, 2);\n        Date twoMonthsLater = calendar.getTime();\n        System.out.println(\"Date after adding 2 months: \" + twoMonthsLater);\n        \n        // Truncate the newDate to the nearest semi-month\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, DateUtils.SEMI_MONTH);\n        \n        // Print the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional complexity: Calculate the difference in days between two dates\n        long diffInMillies = Math.abs(twoMonthsLater.getTime() - fiveDaysLater.getTime());\n        long diffInDays = diffInMillies / (24 * 60 * 60 * 1000);\n        System.out.println(\"Difference in days: \" + diffInDays);\n        \n        // Further manipulation: Check if the year is a leap year\n        calendar.setTime(truncatedDate);\n        int year = calendar.get(Calendar.YEAR);\n        boolean isLeapYear = (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);\n        System.out.println(\"Is the year \" + year + \" a leap year? \" + isLeapYear);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        /* write */ Date newDate = DateUtils.addWeeks(date, 1);\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, DateUtils.SEMI_MONTH);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addWeeks",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}