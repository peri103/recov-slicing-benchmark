{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,,World\");\n\n        // Create an ArrayList to store tokens\n        ArrayList<String> tokensList = new ArrayList<>();\n\n        // Create a HashMap to map tokens to their lengths\n        HashMap<String, Integer> tokenLengthMap = new HashMap<>();\n\n        // Set the tokenizer to ignore empty tokens\n        /* write */ tokenizer.setIgnoreEmptyTokens(true);\n\n        // Add some unrelated code to make the program more complex\n        for (int i = 0; i < 5; i++) {\n            tokensList.add(\"Token\" + i);\n        }\n\n        // Process the tokens from the tokenizer and add them to the list\n        while (tokenizer.hasNext()) {\n            String currentToken = tokenizer.nextToken();\n            tokensList.add(currentToken);\n            tokenLengthMap.put(currentToken, currentToken.length());\n        }\n\n        // Calculate and print the total length of all tokens in the list\n        int totalLength = 0;\n        for (String token : tokensList) {\n            totalLength += token.length();\n        }\n        System.out.println(\"Total length of tokens: \" + totalLength);\n\n        // Read the first token from the tokenizer\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token to verify the operation\n        System.out.println(\"First token: \" + token);\n\n        // Print the lengths of all tokens\n        for (String key : tokenLengthMap.keySet()) {\n            System.out.println(\"Token: \" + key + \", Length: \" + tokenLengthMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,,World\");\n\n        // Set the tokenizer to ignore empty tokens\n        /* write */ tokenizer.setIgnoreEmptyTokens(true);\n\n        // Read the first token from the tokenizer\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token to verify the operation\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setIgnoreEmptyTokens",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}