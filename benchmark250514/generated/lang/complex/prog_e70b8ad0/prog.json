{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World' and 'Java'\");\n        \n        // Set quote matcher to recognize single quotes\n        /* write */ tokenizer.setQuoteMatcher(StrMatcher.singleQuoteMatcher());\n\n        // Additional unrelated code to increase complexity\n        ArrayList<String> tokensList = new ArrayList<>();\n        \n        // Process all tokens and add them to the list\n        while (tokenizer.hasNext()) {\n            String token = tokenizer.nextToken();\n            tokensList.add(token);\n        }\n        \n        // Perform some operations on the list\n        for (int i = 0; i < tokensList.size(); i++) {\n            tokensList.set(i, tokensList.get(i).toUpperCase());\n        }\n        \n        // Initialize another StrTokenizer for a different purpose\n        StrTokenizer anotherTokenizer = new StrTokenizer(\"Complex 'Example' Code\");\n        anotherTokenizer.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());\n\n        // Read the next token which should respect the quote matcher\n        /* read */ String firstToken = tokenizer.nextToken();\n\n        // Output the original token\n        System.out.println(\"First Token: \" + firstToken);\n\n        // Output the processed tokens\n        for (String processedToken : tokensList) {\n            System.out.println(\"Processed Token: \" + processedToken);\n        }\n        \n        // Use another tokenizer to demonstrate different string handling\n        while (anotherTokenizer.hasNext()) {\n            System.out.println(\"Another Tokenizer Token: \" + anotherTokenizer.nextToken());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World'\");\n\n        // Set quote matcher to recognize single quotes\n        /* write */ tokenizer.setQuoteMatcher(StrMatcher.singleQuoteMatcher());\n\n        // Read the next token which should respect the quote matcher\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setQuoteMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}