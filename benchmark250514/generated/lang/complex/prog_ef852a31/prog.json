{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        Calendar calendar = Calendar.getInstance();\n        \n        // Additional unrelated code: manipulate the calendar object\n        calendar.setTime(currentDate);\n        calendar.add(Calendar.DAY_OF_MONTH, 5);\n        Date fiveDaysLater = calendar.getTime();\n        System.out.println(\"Five days later: \" + fiveDaysLater);\n        \n        /* write */ Date dateAfterAddingWeeks = DateUtils.addWeeks(currentDate, 2);\n        \n        // More unrelated code: format the current date\n        System.out.println(\"Current Date: \" + currentDate);\n        \n        // Additional unrelated code: check if the year is a leap year\n        boolean isLeapYear = calendar.getActualMaximum(Calendar.DAY_OF_YEAR) > 365;\n        System.out.println(\"Is leap year: \" + isLeapYear);\n        \n        // Unrelated code: manipulate another date\n        Date anotherDate = DateUtils.addDays(currentDate, 10);\n        System.out.println(\"Another Date: \" + anotherDate);\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(dateAfterAddingWeeks, Calendar.DATE);\n        \n        // Unrelated code: output the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional unrelated code: calculate the difference in days between two dates\n        long diffInMillies = anotherDate.getTime() - currentDate.getTime();\n        long diffInDays = diffInMillies / (1000 * 60 * 60 * 24);\n        System.out.println(\"Difference in days: \" + diffInDays);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        /* write */ Date dateAfterAddingWeeks = DateUtils.addWeeks(currentDate, 2);\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(dateAfterAddingWeeks, java.util.Calendar.DATE);\n        \n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addWeeks",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}