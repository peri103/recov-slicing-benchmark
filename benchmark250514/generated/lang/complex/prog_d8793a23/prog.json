{
    "java_code": "import org.apache.commons.lang3.builder.ToStringBuilder;\nimport org.apache.commons.lang3.builder.EqualsBuilder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ToStringBuilder builder = new ToStringBuilder(\"Initial\");\n        /* write */ builder.append(\"key\", \"value\");\n\n        // Additional complex code using EqualsBuilder\n        EqualsBuilder equalsBuilder1 = new EqualsBuilder();\n        EqualsBuilder equalsBuilder2 = new EqualsBuilder();\n        String str1 = \"Hello\";\n        String str2 = \"World\";\n        equalsBuilder1.append(str1, str2);\n        equalsBuilder2.append(str1, \"Hello\");\n\n        boolean areEqual1 = equalsBuilder1.isEquals();\n        boolean areEqual2 = equalsBuilder2.isEquals();\n\n        System.out.println(\"Are str1 and str2 equal? \" + areEqual1);\n        System.out.println(\"Is str1 equal to 'Hello'? \" + areEqual2);\n\n        // Using a HashMap to store some values\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n\n        System.out.println(\"Sum of values in the map: \" + sum);\n\n        // Continue with the original read operation\n        /* read */ String result = builder.toString();\n        System.out.println(result);\n\n        // Further manipulation of the map\n        map.put(\"four\", 4);\n        map.put(\"five\", 5);\n\n        sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n\n        System.out.println(\"Updated sum of values in the map: \" + sum);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.builder.ToStringBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        ToStringBuilder builder = new ToStringBuilder(\"Initial\");\n        /* write */ builder.append(\"key\", \"value\");\n        /* read */ String result = builder.toString();\n        System.out.println(result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.builder.ToStringBuilder",
        "write_method": "append",
        "read_class": "org.apache.commons.lang3.builder.ToStringBuilder",
        "read_method": "toString"
    }
}