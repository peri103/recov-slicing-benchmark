{
    "java_code": "import org.apache.commons.lang3.text.StrBuilder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrBuilder strBuilder = new StrBuilder();\n        Map<String, Integer> wordCount = new HashMap<>();\n        \n        // Adding some initial data to the map\n        wordCount.put(\"Hello\", 3);\n        wordCount.put(\"World\", 5);\n        \n        // Perform some operations on the map\n        for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        // Add more data to the map\n        wordCount.put(\"Java\", 10);\n        wordCount.put(\"Programming\", 7);\n        \n        // Some conditional logic\n        if (wordCount.containsKey(\"Java\")) {\n            wordCount.put(\"Java\", wordCount.get(\"Java\") + 1);\n        }\n        \n        // Update strBuilder with new line text\n        /* write */ strBuilder.setNewLineText(\"Hello, World!\");\n        \n        // Perform additional operations\n        int totalWordCount = 0;\n        for (int count : wordCount.values()) {\n            totalWordCount += count;\n        }\n        System.out.println(\"Total word count: \" + totalWordCount);\n        \n        // More logic and calculations\n        double averageWordCount = totalWordCount / (double) wordCount.size();\n        System.out.println(\"Average word count: \" + averageWordCount);\n        \n        // Final read operation\n        /* read */ String result = strBuilder.toString();\n        System.out.println(result);\n        \n        // Further processing\n        strBuilder.append(\" Additional text.\");\n        System.out.println(strBuilder.toString());\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrBuilder strBuilder = new StrBuilder();\n        /* write */ strBuilder.setNewLineText(\"Hello, World!\");\n        /* read */ String result = strBuilder.toString();\n        System.out.println(result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrBuilder",
        "write_method": "setNewLineText",
        "read_class": "org.apache.commons.lang3.text.StrBuilder",
        "read_method": "toString"
    }
}