{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.StringUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the tokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Additional complexity: Use StringUtils to manipulate strings\n        String sample = \"Apache,Commons,Lang\";\n        String[] words = StringUtils.split(sample, \",\");\n\n        // Process each word and store in a StringBuilder\n        StringBuilder processedWords = new StringBuilder();\n        for (String word : words) {\n            processedWords.append(word.toUpperCase()).append(\" \");\n        }\n\n        // Print the processed string\n        System.out.println(processedWords.toString().trim());\n\n        // Read the first token from the tokenizer\n        /* read */ String token = tokenizer.nextToken();\n        \n        // Print the token to verify the read operation\n        System.out.println(token);\n\n        // Further complexity: Reverse each word and store in a new array\n        String[] reversedWords = new String[words.length];\n        for (int i = 0; i < words.length; i++) {\n            reversedWords[i] = new StringBuilder(words[i]).reverse().toString();\n        }\n\n        // Print each reversed word\n        for (String reversedWord : reversedWords) {\n            System.out.println(reversedWord);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the tokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Read the first token from the tokenizer\n        /* read */ String token = tokenizer.nextToken();\n        \n        // Print the token to verify the read operation\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "reset",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}