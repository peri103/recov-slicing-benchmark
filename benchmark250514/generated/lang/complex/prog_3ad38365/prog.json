{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'world'!\");\n        \n        // Additional code for complexity: ArrayList operations\n        ArrayList<String> words = new ArrayList<>();\n        words.add(\"Java\");\n        words.add(\"Programming\");\n        words.add(\"Language\");\n        \n        // Process each word in the ArrayList\n        for (String word : words) {\n            System.out.println(\"Processing word: \" + word);\n            for (int i = 0; i < word.length(); i++) {\n                System.out.print(word.charAt(i) + \" \");\n            }\n            System.out.println();\n        }\n        \n        // Set the quote matcher to handle single quotes in StrTokenizer\n        /* write */ tokenizer.setQuoteMatcher(StrMatcher.quoteMatcher());\n\n        // More operations on StrTokenizer\n        tokenizer.reset(\"New 'example' string!\");\n        tokenizer.setDelimiterMatcher(StrMatcher.spaceMatcher());\n        \n        // Another unrelated operation: reverse a string\n        StringBuilder sb = new StringBuilder(\"Reverse this string\");\n        String reversed = sb.reverse().toString();\n        System.out.println(\"Reversed string: \" + reversed);\n        \n        // Read the next token, which should respect the quote matcher\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token\n        System.out.println(\"Token: \" + token);\n        \n        // Additional ArrayList processing\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * i);\n        }\n        \n        for (Integer number : numbers) {\n            System.out.println(\"Square: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'world'!\");\n\n        // Set the quote matcher to handle single quotes\n        /* write */ tokenizer.setQuoteMatcher(StrMatcher.quoteMatcher());\n\n        // Read the next token, which should respect the quote matcher\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setQuoteMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}