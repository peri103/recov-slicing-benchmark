{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.StringUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"value1,value2,value3\";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        /* write */ tokenizer.setDelimiterString(\",\");\n        \n        // Unrelated code to make the program more complex\n        String[] tokens = StringUtils.split(input, \",\");\n        for (String token : tokens) {\n            System.out.println(\"Token: \" + token);\n        }\n        \n        // Additional logic using StrTokenizer without marking\n        StrTokenizer anotherTokenizer = new StrTokenizer(\"apple|banana|cherry\", '|');\n        while (anotherTokenizer.hasNext()) {\n            String fruit = anotherTokenizer.nextToken();\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        // More complex logic involving string manipulation\n        String reversedInput = StringUtils.reverse(input);\n        System.out.println(\"Reversed Input: \" + reversedInput);\n        \n        // Using StringUtils to check if a string is numeric\n        boolean isNumeric = StringUtils.isNumeric(\"12345\");\n        System.out.println(\"Is Numeric: \" + isNumeric);\n        \n        // More unrelated logic\n        int sum = 0;\n        for (int i = 1; i <= 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n        \n        /* read */ String token = tokenizer.nextToken();\n        \n        System.out.println(token);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"value1,value2,value3\";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        /* write */ tokenizer.setDelimiterString(\",\");\n        \n        /* read */ String token = tokenizer.nextToken();\n        \n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setDelimiterString",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}