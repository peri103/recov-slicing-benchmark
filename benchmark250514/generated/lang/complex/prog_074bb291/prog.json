{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World' and 'Java'!\");\n\n        // Set a custom quote matcher to recognize single quotes\n        /* write */ tokenizer.setQuoteMatcher(StrMatcher.singleQuoteMatcher());\n\n        // Create an ArrayList to store tokens\n        ArrayList<String> tokens = new ArrayList<>();\n\n        // Create a HashMap to count occurrences of each token\n        HashMap<String, Integer> tokenCount = new HashMap<>();\n\n        // Process all tokens in the tokenizer\n        while (tokenizer.hasNext()) {\n            String currentToken = tokenizer.nextToken();\n            tokens.add(currentToken);\n            tokenCount.put(currentToken, tokenCount.getOrDefault(currentToken, 0) + 1);\n        }\n\n        // Perform some operations on the tokens\n        for (String token : tokens) {\n            System.out.println(\"Token: \" + token + \", Count: \" + tokenCount.get(token));\n        }\n\n        // Read the first token, which should be 'World' due to the quote matcher\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token\n        System.out.println(\"First quoted token: \" + token);\n\n        // Additional complex operations\n        int totalTokens = tokens.size();\n        System.out.println(\"Total tokens processed: \" + totalTokens);\n\n        // Use more StrTokenizer functionality\n        StrTokenizer newTokenizer = new StrTokenizer(\"Java,Python,C++,JavaScript\");\n        newTokenizer.setDelimiterMatcher(StrMatcher.commaMatcher());\n\n        // Store and print programming languages\n        ArrayList<String> languages = new ArrayList<>();\n        while (newTokenizer.hasNext()) {\n            languages.add(newTokenizer.nextToken());\n        }\n\n        System.out.println(\"Programming Languages:\");\n        for (String language : languages) {\n            System.out.println(language);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World'!\");\n\n        // Set a custom quote matcher to recognize single quotes\n        /* write */ tokenizer.setQuoteMatcher(StrMatcher.singleQuoteMatcher());\n\n        // Read the next token, which should be 'World' due to the quote matcher\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setQuoteMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}