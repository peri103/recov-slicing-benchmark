{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Additional code to make the program more complex\n        ArrayList<String> list = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        list.add(\"Java\");\n        list.add(\"Python\");\n        list.add(\"C++\");\n\n        for (String language : list) {\n            map.put(language, language.length());\n        }\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Language: \" + key + \", Length: \" + map.get(key));\n        }\n\n        // Perform operations on the list\n        StringBuilder sb = new StringBuilder();\n        for (String item : list) {\n            sb.append(item).append(\" \");\n        }\n        System.out.println(\"Concatenated languages: \" + sb.toString());\n\n        // Read the first token from the tokenizer\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token\n        System.out.println(\"First token: \" + token);\n\n        // Further operations\n        int totalLength = 0;\n        for (String language : list) {\n            totalLength += language.length();\n        }\n        System.out.println(\"Total length of all languages: \" + totalLength);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Read the first token from the tokenizer\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "reset",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}