{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.StringUtils;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"a,b,c\");\n        /* write */ tokenizer.setIgnoredChar(',');\n\n        // Additional logic using StringUtils\n        String str = \"Hello, World!\";\n        boolean isAlpha = StringUtils.isAlpha(str);\n        System.out.println(\"Is the string alphabetic? \" + isAlpha);\n\n        // Adding more complexity with a list\n        ArrayList<String> tokensList = new ArrayList<>();\n        tokensList.add(\"First\");\n        tokensList.add(\"Second\");\n        tokensList.add(\"Third\");\n\n        for (String s : tokensList) {\n            System.out.println(\"List item: \" + s);\n        }\n\n        // Processing the tokenizer\n        while (tokenizer.hasNext()) {\n            String next = tokenizer.nextToken();\n            System.out.println(\"Token: \" + next);\n        }\n\n        // Re-initializing tokenizer for further demonstration\n        tokenizer = new StrTokenizer(\"x,y,z\");\n        tokenizer.setIgnoredChar('y');\n        \n        // More unrelated logic\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 integers: \" + sum);\n\n        // Continue with the original read operation\n        tokenizer = new StrTokenizer(\"apple,banana,grape\");\n        tokenizer.setIgnoredChar(',');\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"a,b,c\");\n        /* write */ tokenizer.setIgnoredChar(',');\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setIgnoredChar",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}