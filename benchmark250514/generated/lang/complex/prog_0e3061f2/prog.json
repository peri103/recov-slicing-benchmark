{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"  Hello World  \");\n        \n        // Initialize another StrTokenizer with a different string\n        StrTokenizer tokenizer2 = new StrTokenizer(\"Java Programming Language\");\n        \n        // Set the TrimmerMatcher to trim leading and trailing spaces for the first tokenizer\n        /* write */ tokenizer.setTrimmerMatcher(StrMatcher.trimMatcher());\n        \n        // Use the second tokenizer to split the string into tokens and store them in an ArrayList\n        ArrayList<String> tokensList = new ArrayList<>();\n        while (tokenizer2.hasNext()) {\n            tokensList.add(tokenizer2.nextToken());\n        }\n\n        // Process the tokens in the list and print them\n        for (String token : tokensList) {\n            System.out.println(\"Token from tokenizer2: \" + token);\n        }\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Retrieve the next token from the first tokenizer after trimming\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token from the first tokenizer\n        System.out.println(\"Token from tokenizer1: \" + token);\n\n        // Add more complexity with additional operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * i);\n        }\n        for (Integer number : numbers) {\n            System.out.println(\"Square: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"  Hello World  \");\n        \n        // Set the TrimmerMatcher to trim leading and trailing spaces\n        /* write */ tokenizer.setTrimmerMatcher(StrMatcher.trimMatcher());\n\n        // Retrieve the next token after trimming\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setTrimmerMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}