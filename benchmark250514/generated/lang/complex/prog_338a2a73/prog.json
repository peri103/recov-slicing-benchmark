{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World,Apache,Commons\");\n\n        // Set the delimiter matcher to split tokens by comma\n        /* write */ tokenizer.setDelimiterMatcher(StrMatcher.charMatcher(','));\n\n        // Initialize a list to store tokens\n        List<String> tokenList = new ArrayList<>();\n\n        // Add tokens to the list\n        while (tokenizer.hasNext()) {\n            tokenList.add(tokenizer.nextToken());\n        }\n\n        // Perform some operations on the list\n        tokenList.add(\"Library\");\n        tokenList.remove(1);\n        tokenList.add(\"Text\");\n\n        // Initialize another StrTokenizer with a different string\n        StrTokenizer anotherTokenizer = new StrTokenizer(\"Java,Programming,Language\");\n        anotherTokenizer.setDelimiterMatcher(StrMatcher.charMatcher(','));\n\n        // Read the next token from the original tokenizer, which should be \"Hello\"\n        /* read */ String token = tokenizer.nextToken();\n        \n        // Output the token\n        System.out.println(token);\n\n        // Perform operations on the second tokenizer\n        while (anotherTokenizer.hasNext()) {\n            String anotherToken = anotherTokenizer.nextToken();\n            System.out.println(anotherToken);\n        }\n\n        // Output the final list of tokens\n        System.out.println(tokenList);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World\");\n\n        // Set the delimiter matcher to split tokens by comma\n        /* write */ tokenizer.setDelimiterMatcher(StrMatcher.charMatcher(','));\n\n        // Read the next token, which should be \"Hello\"\n        /* read */ String token = tokenizer.nextToken();\n        \n        // Output the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setDelimiterMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}