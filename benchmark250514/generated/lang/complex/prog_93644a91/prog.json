{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World from Java\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Initialize a list to hold tokens\n        List<String> tokens = new ArrayList<>();\n\n        // Add some unrelated operations\n        for (int i = 0; i < 5; i++) {\n            tokens.add(\"Token\" + i);\n        }\n\n        // Add another StrTokenizer operation\n        StrTokenizer anotherTokenizer = new StrTokenizer(\"Another Test String\");\n        anotherTokenizer.reset();\n        while (anotherTokenizer.hasNext()) {\n            tokens.add(anotherTokenizer.nextToken());\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < tokens.size(); i++) {\n            sum += i;\n        }\n\n        // Add more unrelated code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        // Use the original tokenizer to read the next token after resetting\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token to verify the read operation\n        System.out.println(token);\n\n        // Print the tokens collected from the unrelated tokenizer\n        for (String str : tokens) {\n            System.out.println(str);\n        }\n\n        // Print the sum of indices\n        System.out.println(\"Sum of indices: \" + sum);\n\n        // Print the numbers\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Read the next token after resetting\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token to verify the read operation\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "reset",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}