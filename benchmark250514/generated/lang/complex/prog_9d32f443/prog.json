{
    "java_code": "import org.apache.commons.lang3.mutable.MutableDouble;\nimport org.apache.commons.lang3.mutable.MutableInt;\nimport org.apache.commons.lang3.mutable.MutableBoolean;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        MutableDouble mutableDouble = new MutableDouble();\n        /* write */ mutableDouble.setValue(5.5);\n\n        // Additional code for complexity\n        MutableInt mutableInt = new MutableInt(10);\n        MutableBoolean mutableBoolean = new MutableBoolean(true);\n\n        ArrayList<Object> objectList = new ArrayList<>();\n        objectList.add(mutableInt);\n        objectList.add(mutableBoolean);\n\n        for (Object obj : objectList) {\n            if (obj instanceof MutableInt) {\n                MutableInt mi = (MutableInt) obj;\n                mi.increment();\n            } else if (obj instanceof MutableBoolean) {\n                MutableBoolean mb = (MutableBoolean) obj;\n                mb.setFalse();\n            }\n        }\n\n        // Further operations\n        int intValue = mutableInt.getValue();\n        boolean boolValue = mutableBoolean.getValue();\n\n        System.out.println(\"MutableInt value after increment: \" + intValue);\n        System.out.println(\"MutableBoolean value after setFalse: \" + boolValue);\n\n        // Original read operation\n        /* read */ double value = mutableDouble.getValue();\n        System.out.println(\"MutableDouble value: \" + value);\n\n        // Additional unrelated operations\n        ArrayList<Double> doubleList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            doubleList.add(i * 1.1);\n        }\n\n        for (Double d : doubleList) {\n            System.out.println(\"Double value in list: \" + d);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.mutable.MutableDouble;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableDouble mutableDouble = new MutableDouble();\n        /* write */ mutableDouble.setValue(5.5);\n        /* read */ double value = mutableDouble.getValue();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.mutable.MutableDouble",
        "write_method": "setValue",
        "read_class": "org.apache.commons.lang3.mutable.MutableDouble",
        "read_method": "getValue"
    }
}