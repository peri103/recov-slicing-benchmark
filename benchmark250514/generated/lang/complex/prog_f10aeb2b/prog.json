{
    "java_code": "import org.apache.commons.lang3.builder.ToStringBuilder;\nimport org.apache.commons.lang3.builder.EqualsBuilder;\nimport org.apache.commons.lang3.builder.HashCodeBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        ToStringBuilder builder = new ToStringBuilder(Main.class);\n\n        // Additional logic\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n\n        // Using EqualsBuilder and HashCodeBuilder for additional complexity\n        EqualsBuilder equalsBuilder = new EqualsBuilder();\n        HashCodeBuilder hashCodeBuilder = new HashCodeBuilder();\n\n        boolean isEqual = equalsBuilder.append(numbers, new int[]{1, 2, 3, 4, 5}).isEquals();\n        int hashCode = hashCodeBuilder.append(numbers).toHashCode();\n\n        System.out.println(\"Sum of numbers: \" + sum);\n        System.out.println(\"Arrays are equal: \" + isEqual);\n        System.out.println(\"Hash code: \" + hashCode);\n\n        /* write */ builder.append(\"key\", \"value\");\n\n        // More operations to increase complexity\n        String message = \"Complex operations\";\n        for (char c : message.toCharArray()) {\n            System.out.print(c + \" \");\n        }\n        System.out.println();\n\n        // Performing some mathematical operations\n        double result = Math.pow(sum, 2) + Math.sqrt(sum);\n        System.out.println(\"Result of mathematical operations: \" + result);\n\n        /* read */ String resultString = builder.toString();\n        System.out.println(resultString);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.builder.ToStringBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        ToStringBuilder builder = new ToStringBuilder(Main.class);\n        /* write */ builder.append(\"key\", \"value\");\n        /* read */ String result = builder.toString();\n        System.out.println(result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.builder.ToStringBuilder",
        "write_method": "append",
        "read_class": "org.apache.commons.lang3.builder.ToStringBuilder",
        "read_method": "toString"
    }
}