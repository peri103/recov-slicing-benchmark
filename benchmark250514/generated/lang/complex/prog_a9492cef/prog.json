{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the date object\n        Date date = new Date();\n\n        // Set the seconds to a specific value\n        /* write */ date = DateUtils.setSeconds(date, 30);\n\n        // Introduce a Calendar object for additional complexity\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        calendar.add(Calendar.HOUR, 2); // Add 2 hours to the calendar\n\n        // Perform some unrelated date manipulation\n        Date futureDate = calendar.getTime();\n        System.out.println(\"Future date: \" + futureDate);\n\n        // More unrelated operations\n        Date roundedDate = DateUtils.round(futureDate, Calendar.HOUR);\n        System.out.println(\"Rounded date: \" + roundedDate);\n\n        // Complex date manipulation\n        calendar.setTime(roundedDate);\n        calendar.add(Calendar.DAY_OF_MONTH, 5); // Add 5 days\n        Date extendedDate = calendar.getTime();\n        System.out.println(\"Extended date: \" + extendedDate);\n\n        // Truncate the date to remove seconds and milliseconds\n        /* read */ Date truncatedDate = DateUtils.truncate(date, Calendar.MINUTE);\n\n        // Print the truncated date\n        System.out.println(\"Truncated date: \" + truncatedDate);\n\n        // Additional unrelated operations\n        Date truncatedFutureDate = DateUtils.truncate(futureDate, Calendar.HOUR);\n        System.out.println(\"Truncated future date: \" + truncatedFutureDate);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the date object\n        Date date = new Date();\n\n        // Set the seconds to a specific value\n        /* write */ date = DateUtils.setSeconds(date, 30);\n\n        // Truncate the date to remove seconds and milliseconds\n        /* read */ Date truncatedDate = DateUtils.truncate(date, java.util.Calendar.MINUTE);\n\n        // Print the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setSeconds",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}