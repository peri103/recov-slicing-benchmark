{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.StringUtils;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample text\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World' and 'Java'\");\n\n        // Set the quote character to handle quoted text\n        /* write */ tokenizer.setQuoteChar('\\'');\n\n        // Additional logic to manipulate and analyze text using StringUtils\n        String text = \"   Apache Commons Lang   \";\n        String trimmedText = StringUtils.trim(text);\n        System.out.println(\"Trimmed text: \" + trimmedText);\n\n        // Use ArrayList to store tokens\n        ArrayList<String> tokens = new ArrayList<>();\n        while (tokenizer.hasNext()) {\n            String currentToken = tokenizer.nextToken();\n            tokens.add(currentToken);\n        }\n\n        // Perform some operations on the tokens list\n        for (String token : tokens) {\n            System.out.println(\"Token length: \" + token.length());\n        }\n\n        // Read the first token, which should respect the quote character setting\n        /* read */ String firstToken = tokenizer.nextToken();\n\n        // Output the first token\n        System.out.println(\"First token: \" + firstToken);\n\n        // Additional operations with the tokens list\n        if (!tokens.isEmpty()) {\n            System.out.println(\"Total tokens: \" + tokens.size());\n            String joinedTokens = StringUtils.join(tokens, \", \");\n            System.out.println(\"Joined tokens: \" + joinedTokens);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample text\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello 'World'\");\n\n        // Set the quote character to handle quoted text\n        /* write */ tokenizer.setQuoteChar('\\'');\n\n        // Read the next token, which should respect the quote character setting\n        /* read */ String token = tokenizer.nextToken();\n        \n        // Output the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setQuoteChar",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}