{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World,This,Is,A,Test\");\n\n        // Use the nextToken method to read the first token\n        /* read */ String firstToken = tokenizer.nextToken();\n\n        // Create an ArrayList and populate it with values\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n\n        // Create a HashMap to store token counts\n        HashMap<String, Integer> tokenCountMap = new HashMap<>();\n        tokenCountMap.put(\"Hello\", 1);\n        tokenCountMap.put(\"World\", 2);\n\n        // Print all tokens in the ArrayList\n        for (Integer num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n\n        // Reset the tokenizer to start reading from the beginning again\n        /* write */ tokenizer.reset();\n\n        // Use the nextToken method again to read the first token after reset\n        /* read */ String resetToken = tokenizer.nextToken();\n\n        // Print the first token read after reset\n        System.out.println(\"Reset Token: \" + resetToken);\n\n        // Print the token counts from the HashMap\n        for (String key : tokenCountMap.keySet()) {\n            System.out.println(\"Token: \" + key + \", Count: \" + tokenCountMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World,This,Is,A,Test\");\n\n        // Use the nextToken method to read the first token\n        /* read */ String firstToken = tokenizer.nextToken();\n        \n        // Reset the tokenizer to start reading from the beginning again\n        /* write */ tokenizer.reset();\n\n        // Use the nextToken method again to read the first token after reset\n        /* read */ String resetToken = tokenizer.nextToken();\n\n        // Print the first token read after reset\n        System.out.println(resetToken);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "reset",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}