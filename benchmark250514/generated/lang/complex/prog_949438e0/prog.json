{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the current date\n        Date currentDate = new Date();\n        \n        // Add 2 weeks to the current date\n        /* write */ Date newDate = DateUtils.addWeeks(currentDate, 2);\n        \n        // Create a list of dates for demonstration\n        ArrayList<Date> dateList = new ArrayList<>();\n        dateList.add(currentDate);\n        dateList.add(newDate);\n        \n        // Add more dates to the list\n        for (int i = 1; i <= 3; i++) {\n            Date futureDate = DateUtils.addDays(newDate, i * 7);\n            dateList.add(futureDate);\n        }\n        \n        // Print all dates in the list\n        for (Date date : dateList) {\n            System.out.println(\"Date in list: \" + date);\n        }\n        \n        // Perform some operations on the list\n        Date firstDate = dateList.get(0);\n        Date lastDate = dateList.get(dateList.size() - 1);\n        \n        // Calculate the difference in days between the first and last date\n        long diffInMillis = lastDate.getTime() - firstDate.getTime();\n        long diffInDays = diffInMillis / (24 * 60 * 60 * 1000);\n        System.out.println(\"Difference in days: \" + diffInDays);\n        \n        // Truncate the date to remove time information\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, Calendar.DATE);\n        \n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"Date after adding 2 weeks: \" + newDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Add 2 weeks to the current date\n        /* write */ Date newDate = DateUtils.addWeeks(currentDate, 2);\n        \n        // Truncate the date to remove time information\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, java.util.Calendar.DATE);\n        \n        System.out.println(\"Original Date: \" + currentDate);\n        System.out.println(\"Date after adding 2 weeks: \" + newDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addWeeks",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}