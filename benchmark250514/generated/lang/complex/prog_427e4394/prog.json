{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a date object\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(2023, Calendar.OCTOBER, 15, 10, 30, 45);\n        Date date = calendar.getTime();\n\n        // Round the date to the nearest hour\n        /* write */ Date roundedDate = DateUtils.round(date, Calendar.HOUR);\n\n        // Perform some unrelated operations to make the program more complex\n        ArrayList<Date> dateList = new ArrayList<>();\n        dateList.add(date);\n        dateList.add(new Date());\n\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        for (Date d : dateList) {\n            System.out.println(\"Formatted Date: \" + sdf.format(d));\n        }\n\n        // Add more complexity by manipulating the calendar object\n        calendar.add(Calendar.DAY_OF_MONTH, 5);\n        Date futureDate = calendar.getTime();\n        System.out.println(\"Future Date: \" + sdf.format(futureDate));\n\n        // Truncate the date to the nearest hour\n        /* read */ Date truncatedDate = DateUtils.truncate(roundedDate, Calendar.HOUR);\n\n        // Print the truncated date\n        System.out.println(\"Truncated Date: \" + sdf.format(truncatedDate));\n\n        // Further manipulate the calendar to show different date manipulations\n        calendar.add(Calendar.MONTH, -2);\n        Date pastDate = calendar.getTime();\n        System.out.println(\"Past Date: \" + sdf.format(pastDate));\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a date object\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(2023, Calendar.OCTOBER, 15, 10, 30, 45);\n        Date date = calendar.getTime();\n\n        // Round the date to the nearest hour\n        /* write */ Date roundedDate = DateUtils.round(date, Calendar.HOUR);\n\n        // Truncate the date to the nearest hour\n        /* read */ Date truncatedDate = DateUtils.truncate(roundedDate, Calendar.HOUR);\n\n        // Print the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "round",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}