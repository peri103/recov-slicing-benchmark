{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date now = new Date();\n        \n        // Additional code to manipulate dates\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(now);\n        calendar.add(Calendar.DAY_OF_YEAR, 1);\n        Date tomorrow = calendar.getTime();\n        \n        // Some unrelated complex calculations\n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += i;\n        }\n        \n        // More date manipulations\n        Date yesterday = DateUtils.addDays(now, -1);\n        Date startOfDay = DateUtils.truncate(now, Calendar.DAY_OF_MONTH);\n        \n        // Original write operation\n        /* write */ Date newDate = DateUtils.addSeconds(now, 3600);\n        \n        // Some more unrelated logic\n        double result = Math.sqrt(sum);\n        System.out.println(\"Square root of sum: \" + result);\n        \n        // More date manipulations\n        Date endOfDay = DateUtils.addMilliseconds(startOfDay, (24 * 60 * 60 * 1000) - 1);\n        \n        // Original read operation\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, Calendar.SECOND);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional date logic\n        boolean isAfter = tomorrow.after(now);\n        System.out.println(\"Is tomorrow after now? \" + isAfter);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date now = new Date();\n        /* write */ Date newDate = DateUtils.addSeconds(now, 3600);\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, java.util.Calendar.SECOND);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addSeconds",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}