{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize tokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello, World! Welcome to Java Programming.\");\n\n        // Set a matcher to ignore commas\n        /* write */ tokenizer.setIgnoredMatcher(StrMatcher.charMatcher(','));\n\n        // Create a list to store tokens\n        ArrayList<String> tokenList = new ArrayList<>();\n\n        // Process tokens and add them to the list\n        while (tokenizer.hasNext()) {\n            tokenList.add(tokenizer.nextToken());\n        }\n\n        // Print all tokens\n        for (String token : tokenList) {\n            System.out.println(token);\n        }\n\n        // Initialize another tokenizer\n        StrTokenizer tokenizer2 = new StrTokenizer(\"Java is fun. Let's code!\");\n        tokenizer2.setIgnoredMatcher(StrMatcher.charMatcher('.'));\n\n        // Read the next token from the first tokenizer\n        /* read */ String firstToken = tokenizer.nextToken();\n        System.out.println(\"First token from original tokenizer: \" + firstToken);\n\n        // Process tokens from the second tokenizer\n        ArrayList<String> tokenList2 = new ArrayList<>();\n        while (tokenizer2.hasNext()) {\n            tokenList2.add(tokenizer2.nextToken());\n        }\n\n        // Print all tokens from the second tokenizer\n        for (String token : tokenList2) {\n            System.out.println(token);\n        }\n\n        // Additional logic to manipulate tokens in tokenList\n        for (int i = 0; i < tokenList.size(); i++) {\n            String modifiedToken = tokenList.get(i).toUpperCase();\n            System.out.println(\"Modified Token: \" + modifiedToken);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello, World!\");\n\n        // Set a matcher to ignore commas\n        /* write */ tokenizer.setIgnoredMatcher(StrMatcher.charMatcher(','));\n\n        // Read the next token\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setIgnoredMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}