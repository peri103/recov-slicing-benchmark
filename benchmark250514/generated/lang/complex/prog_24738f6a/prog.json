{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Add 5 years to the current date\n        /* write */ Date futureDate = DateUtils.addYears(currentDate, 5);\n        \n        // Introduce complexity by adding months and days to the current date\n        Date futureDateWithMonths = DateUtils.addMonths(futureDate, 2);\n        Date futureDateWithDays = DateUtils.addDays(futureDateWithMonths, 10);\n        \n        // Calculate the difference in days between the current date and future date\n        long daysBetween = (futureDateWithDays.getTime() - currentDate.getTime()) / (1000 * 60 * 60 * 24);\n        System.out.println(\"Days between current date and future date: \" + daysBetween);\n        \n        // Perform some unrelated operations with Calendar\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(futureDateWithDays);\n        calendar.add(Calendar.HOUR, 5);\n        calendar.add(Calendar.MINUTE, 30);\n        \n        // Print the calendar time after adding hours and minutes\n        System.out.println(\"Calendar time after adding hours and minutes: \" + calendar.getTime());\n        \n        // Truncate the future date to remove time information\n        /* read */ Date truncatedDate = DateUtils.truncate(futureDate, java.util.Calendar.DAY_OF_MONTH);\n        \n        System.out.println(\"Future Date: \" + futureDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date currentDate = new Date();\n        \n        // Add 5 years to the current date\n        /* write */ Date futureDate = DateUtils.addYears(currentDate, 5);\n        \n        // Truncate the future date to remove time information\n        /* read */ Date truncatedDate = DateUtils.truncate(futureDate, java.util.Calendar.DAY_OF_MONTH);\n        \n        System.out.println(\"Future Date: \" + futureDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addYears",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}