{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Use Calendar to manipulate the Date object\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        \n        // Set a specific time for demonstration purposes\n        calendar.set(Calendar.HOUR_OF_DAY, 10);\n        calendar.set(Calendar.MINUTE, 30);\n        calendar.set(Calendar.SECOND, 0);\n        \n        date = calendar.getTime();\n        \n        // Additional complexity: manipulate another date\n        Calendar anotherCalendar = Calendar.getInstance();\n        anotherCalendar.set(Calendar.YEAR, 2022);\n        anotherCalendar.set(Calendar.MONTH, Calendar.JANUARY);\n        anotherCalendar.set(Calendar.DAY_OF_MONTH, 1);\n        anotherCalendar.set(Calendar.HOUR_OF_DAY, 15);\n        anotherCalendar.set(Calendar.MINUTE, 45);\n        Date anotherDate = anotherCalendar.getTime();\n        \n        // List to store manipulated dates\n        ArrayList<Date> dateList = new ArrayList<>();\n        dateList.add(anotherDate);\n        \n        // Perform some operations on dateList\n        for (Date d : dateList) {\n            System.out.println(\"Original Date in List: \" + d);\n        }\n        \n        /* write */ Date ceilingDate = DateUtils.ceiling(date, Calendar.HOUR);\n        \n        // Further manipulate the ceilingDate\n        Calendar ceilingCalendar = Calendar.getInstance();\n        ceilingCalendar.setTime(ceilingDate);\n        ceilingCalendar.add(Calendar.MINUTE, 10);\n        Date modifiedCeilingDate = ceilingCalendar.getTime();\n        \n        dateList.add(modifiedCeilingDate);\n        \n        // More operations on dateList\n        for (Date d : dateList) {\n            System.out.println(\"Modified Date in List: \" + d);\n        }\n        \n        /* read */ Date truncatedDate = DateUtils.truncate(ceilingDate, Calendar.HOUR);\n        \n        System.out.println(\"Ceiling Date: \" + ceilingDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional operation to add complexity\n        Calendar finalCalendar = Calendar.getInstance();\n        finalCalendar.setTime(truncatedDate);\n        finalCalendar.add(Calendar.DAY_OF_MONTH, 5);\n        Date finalDate = finalCalendar.getTime();\n        System.out.println(\"Final Date after adding 5 days: \" + finalDate);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        \n        // Use Calendar to manipulate the Date object\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        \n        // Set a specific time for demonstration purposes\n        calendar.set(Calendar.HOUR_OF_DAY, 10);\n        calendar.set(Calendar.MINUTE, 30);\n        calendar.set(Calendar.SECOND, 0);\n        \n        date = calendar.getTime();\n        \n        /* write */ Date ceilingDate = DateUtils.ceiling(date, Calendar.HOUR);\n        /* read */ Date truncatedDate = DateUtils.truncate(ceilingDate, Calendar.HOUR);\n        \n        System.out.println(\"Ceiling Date: \" + ceilingDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "ceiling",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}