{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Step 1: Initialize a Date object\n        Date now = new Date();\n        \n        // Step 2: Add 5 hours to the current date\n        /* write */ Date newDate = DateUtils.addHours(now, 5);\n        \n        // Step 3: Perform some unrelated date manipulations\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(now);\n        calendar.add(Calendar.DAY_OF_MONTH, 10);\n        Date futureDate = calendar.getTime();\n        \n        calendar.setTime(newDate);\n        calendar.add(Calendar.MINUTE, 30);\n        Date newDateWithMinutes = calendar.getTime();\n\n        // Step 4: Truncate the new date to remove minutes, seconds, and milliseconds\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, Calendar.HOUR);\n        \n        // Step 5: Output the results of various date manipulations\n        System.out.println(\"Original Date: \" + now);\n        System.out.println(\"Date after adding 5 hours: \" + newDate);\n        System.out.println(\"Future Date (10 days from now): \" + futureDate);\n        System.out.println(\"New Date with additional 30 minutes: \" + newDateWithMinutes);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Step 6: Additional unrelated operations\n        calendar.setTime(futureDate);\n        calendar.add(Calendar.YEAR, 2);\n        Date twoYearsLater = calendar.getTime();\n        \n        System.out.println(\"Date two years later: \" + twoYearsLater);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date now = new Date();\n        \n        // Add 5 hours to the current date\n        /* write */ Date newDate = DateUtils.addHours(now, 5);\n        \n        // Truncate the new date to remove minutes, seconds, and milliseconds\n        /* read */ Date truncatedDate = DateUtils.truncate(newDate, java.util.Calendar.HOUR);\n        \n        System.out.println(\"Original Date: \" + now);\n        System.out.println(\"Date after adding 5 hours: \" + newDate);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "addHours",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}