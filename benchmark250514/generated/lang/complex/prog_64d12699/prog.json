{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport org.apache.commons.lang3.StringUtils;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World,Java,Programming\");\n        \n        // Set the delimiter to a comma\n        StrMatcher delimiterMatcher = StrMatcher.charMatcher(',');\n        /* write */ tokenizer.setDelimiterMatcher(delimiterMatcher);\n\n        // Initialize another StrTokenizer for additional complexity\n        StrTokenizer tokenizer2 = new StrTokenizer(\"Apache,Commons,Lang3\");\n        tokenizer2.setDelimiterMatcher(StrMatcher.charMatcher(','));\n\n        // Use StringUtils for additional string operations\n        String reversedString = StringUtils.reverse(\"Example\");\n        System.out.println(\"Reversed String: \" + reversedString);\n\n        // Process tokens from the second tokenizer\n        while (tokenizer2.hasNext()) {\n            String token2 = tokenizer2.nextToken();\n            System.out.println(\"Token from tokenizer2: \" + token2);\n        }\n\n        // Read the next token from the first tokenizer, which should be \"Hello\"\n        /* read */ String token = tokenizer.nextToken();\n        \n        System.out.println(\"Token from tokenizer1: \" + token);\n\n        // Additional string manipulation using StringUtils\n        String capitalizedString = StringUtils.capitalize(\"java programming\");\n        System.out.println(\"Capitalized String: \" + capitalizedString);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World\");\n        \n        // Set the delimiter to a comma\n        StrMatcher delimiterMatcher = StrMatcher.charMatcher(',');\n        /* write */ tokenizer.setDelimiterMatcher(delimiterMatcher);\n        \n        // Read the next token, which should be \"Hello\"\n        /* read */ String token = tokenizer.nextToken();\n        \n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setDelimiterMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}