{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.StringUtils;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"apple,,banana,,cherry\";\n        StrTokenizer tokenizer = new StrTokenizer(input, ',');\n        \n        // Additional operations with StrTokenizer\n        StrTokenizer anotherTokenizer = new StrTokenizer(\"dog;cat;bird\", ';');\n        anotherTokenizer.setIgnoreEmptyTokens(false);\n        String[] tokensArray = anotherTokenizer.getTokenArray();\n        ArrayList<String> tokensList = new ArrayList<>(Arrays.asList(tokensArray));\n        \n        /* write */ tokenizer.setIgnoreEmptyTokens(true);\n        \n        // Unrelated complex operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        \n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // More operations with StrTokenizer\n        String joinedTokens = StringUtils.join(tokensList, \"-\");\n        System.out.println(\"Joined tokens: \" + joinedTokens);\n        \n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token); // Output should be \"apple\"\n        \n        // Further unrelated operations\n        ArrayList<String> fruits = new ArrayList<>(Arrays.asList(\"grape\", \"orange\", \"pineapple\"));\n        fruits.add(token); // Adding the read token to the fruits list\n        \n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"apple,,banana,,cherry\";\n        StrTokenizer tokenizer = new StrTokenizer(input, ',');\n        \n        /* write */ tokenizer.setIgnoreEmptyTokens(true);\n        \n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token); // Output should be \"apple\"\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setIgnoreEmptyTokens",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}