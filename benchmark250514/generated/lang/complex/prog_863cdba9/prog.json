{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the tokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World,Apache,Commons\");\n\n        // Create an ArrayList and add some elements\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Java\");\n        list.add(\"Python\");\n\n        // Create a HashMap and put some key-value pairs\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Perform operations on the ArrayList\n        for (String lang : list) {\n            System.out.println(\"Language: \" + lang);\n        }\n\n        // Perform operations on the HashMap\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // Retrieve the first token from the tokenizer\n        /* read */ String firstToken = tokenizer.nextToken();\n\n        // Print the first token\n        System.out.println(\"First Token: \" + firstToken);\n\n        // Further operations on the tokenizer\n        while (tokenizer.hasNext()) {\n            String token = tokenizer.nextToken();\n            System.out.println(\"Next Token: \" + token);\n        }\n\n        // Add more elements to the ArrayList\n        list.add(\"C++\");\n        list.add(\"Ruby\");\n\n        // Print all elements in the ArrayList\n        for (String lang : list) {\n            System.out.println(\"Updated Language List: \" + lang);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the tokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset();\n\n        // Retrieve the first token from the tokenizer\n        /* read */ String firstToken = tokenizer.nextToken();\n\n        // Print the first token\n        System.out.println(firstToken);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "reset",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}