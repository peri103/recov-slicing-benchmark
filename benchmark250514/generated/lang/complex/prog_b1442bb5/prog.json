{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"apple,,banana,,orange\";\n        StrTokenizer tokenizer = new StrTokenizer(input, ',');\n\n        /* write */ tokenizer.setIgnoreEmptyTokens(true);\n\n        // Additional complexity: using ArrayList\n        ArrayList<String> fruits = new ArrayList<>();\n        fruits.add(\"grape\");\n        fruits.add(\"melon\");\n        fruits.add(\"kiwi\");\n\n        // Additional complexity: using HashMap\n        HashMap<String, Integer> fruitQuantities = new HashMap<>();\n        fruitQuantities.put(\"apple\", 10);\n        fruitQuantities.put(\"banana\", 20);\n        fruitQuantities.put(\"orange\", 30);\n\n        // Process the ArrayList\n        for (String fruit : fruits) {\n            System.out.println(\"Processing fruit: \" + fruit);\n            fruitQuantities.put(fruit, fruit.length() * 2);\n        }\n\n        // Process the HashMap\n        for (String key : fruitQuantities.keySet()) {\n            System.out.println(\"Fruit: \" + key + \", Quantity: \" + fruitQuantities.get(key));\n        }\n\n        // Further complexity: Perform some calculations\n        int totalQuantity = 0;\n        for (Integer quantity : fruitQuantities.values()) {\n            totalQuantity += quantity;\n        }\n        System.out.println(\"Total quantity of all fruits: \" + totalQuantity);\n\n        // Additional unrelated logic\n        int number = 42;\n        int result = number * 2 + 10 / 5 - 3;\n        System.out.println(\"Result of calculation: \" + result);\n\n        // Back to the original task\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(\"Next token: \" + token); // Output: apple\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"apple,,banana,,orange\";\n        StrTokenizer tokenizer = new StrTokenizer(input, ',');\n\n        /* write */ tokenizer.setIgnoreEmptyTokens(true);\n\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token); // Output: apple\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setIgnoreEmptyTokens",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}