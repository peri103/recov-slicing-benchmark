{
    "java_code": "import org.apache.commons.lang3.builder.EqualsBuilder;\nimport org.apache.commons.lang3.builder.HashCodeBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        boolean value1 = true;\n        boolean value2 = true;\n\n        EqualsBuilder equalsBuilder = new EqualsBuilder();\n        /* write */ equalsBuilder.append(value1, value2);\n\n        // Adding complexity with HashCodeBuilder\n        HashCodeBuilder hashCodeBuilder = new HashCodeBuilder(17, 37);\n        hashCodeBuilder.append(\"Hello\");\n        hashCodeBuilder.append(\"World\");\n        int hashCode = hashCodeBuilder.toHashCode();\n        System.out.println(\"HashCode: \" + hashCode);\n\n        // More logic to increase complexity\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n\n        // Some additional logic\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product: \" + product);\n\n        // More EqualsBuilder logic\n        EqualsBuilder anotherEqualsBuilder = new EqualsBuilder();\n        anotherEqualsBuilder.append(123, 123);\n        boolean anotherResult = anotherEqualsBuilder.isEquals();\n        System.out.println(\"Another Equals Result: \" + anotherResult);\n\n        /* read */ boolean result = equalsBuilder.isEquals();\n        System.out.println(\"Equals Result: \" + result);\n\n        // Additional logic with HashCodeBuilder\n        HashCodeBuilder anotherHashCodeBuilder = new HashCodeBuilder(19, 39);\n        anotherHashCodeBuilder.append(\"Foo\");\n        anotherHashCodeBuilder.append(\"Bar\");\n        int anotherHashCode = anotherHashCodeBuilder.toHashCode();\n        System.out.println(\"Another HashCode: \" + anotherHashCode);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.builder.EqualsBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        boolean value1 = true;\n        boolean value2 = true;\n\n        EqualsBuilder equalsBuilder = new EqualsBuilder();\n        /* write */ equalsBuilder.append(value1, value2);\n        /* read */ boolean result = equalsBuilder.isEquals();\n        \n        System.out.println(result);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.builder.EqualsBuilder",
        "write_method": "append",
        "read_class": "org.apache.commons.lang3.builder.EqualsBuilder",
        "read_method": "isEquals"
    }
}