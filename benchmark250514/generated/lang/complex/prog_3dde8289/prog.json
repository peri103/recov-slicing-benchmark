{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        \n        // Set the date to the first day of the current month\n        calendar.set(Calendar.DAY_OF_MONTH, 1);\n        Date startOfMonth = calendar.getTime();\n        \n        // Add 10 days to the start of the month\n        calendar.add(Calendar.DAY_OF_MONTH, 10);\n        Date tenDaysLater = calendar.getTime();\n        \n        // Use DateUtils to set hours\n        /* write */ date = DateUtils.setHours(tenDaysLater, 15);\n        \n        // Add some unrelated operations\n        calendar.setTime(date);\n        calendar.add(Calendar.MINUTE, 30);\n        Date halfHourLater = calendar.getTime();\n        \n        // Another unrelated DateUtils operation\n        Date roundedDate = DateUtils.round(halfHourLater, Calendar.HOUR);\n        System.out.println(\"Rounded Date: \" + roundedDate);\n        \n        // Truncate the date to the nearest semi-month\n        /* read */ Date truncatedDate = DateUtils.truncate(date, DateUtils.SEMI_MONTH);\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Further unrelated operations\n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.DAY_OF_YEAR, 5);\n        Date fiveDaysLater = calendar.getTime();\n        System.out.println(\"Five Days Later: \" + fiveDaysLater);\n        \n        // More complex logic\n        for (int i = 0; i < 3; i++) {\n            calendar.add(Calendar.DAY_OF_MONTH, i);\n            System.out.println(\"Date with \" + i + \" days added: \" + calendar.getTime());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        Date date = new Date();\n        /* write */ date = DateUtils.setHours(date, 15);\n        /* read */ Date truncatedDate = DateUtils.truncate(date, DateUtils.SEMI_MONTH);\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setHours",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}