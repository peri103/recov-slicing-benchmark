{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the tokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n\n        // Initialize another tokenizer with a different string\n        StrTokenizer tokenizer2 = new StrTokenizer(\"Java Programming\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset(\"Hello World\");\n\n        // Initialize a list to store tokens\n        ArrayList<String> tokenList = new ArrayList<>();\n\n        // Extract tokens from the second tokenizer and add them to the list\n        while (tokenizer2.hasNext()) {\n            tokenList.add(tokenizer2.nextToken());\n        }\n\n        // Initialize a map to store the frequency of each token\n        HashMap<String, Integer> tokenFrequency = new HashMap<>();\n\n        // Calculate frequency of each token in the list\n        for (String token : tokenList) {\n            tokenFrequency.put(token, tokenFrequency.getOrDefault(token, 0) + 1);\n        }\n\n        // Read the first token from the original tokenizer\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token\n        System.out.println(token);\n\n        // Print token frequencies from the map\n        for (String key : tokenFrequency.keySet()) {\n            System.out.println(\"Token: \" + key + \", Frequency: \" + tokenFrequency.get(key));\n        }\n\n        // Perform additional operations on the list\n        for (int i = 0; i < tokenList.size(); i++) {\n            System.out.println(\"List item: \" + tokenList.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the tokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello World\");\n\n        // Reset the tokenizer to ensure it starts from the beginning\n        /* write */ tokenizer.reset(\"Hello World\");\n\n        // Read the first token\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "reset",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}