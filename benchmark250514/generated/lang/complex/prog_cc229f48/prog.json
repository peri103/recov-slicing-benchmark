{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World,Java,Programming\");\n\n        // Set the delimiter character to ','\n        /* write */ tokenizer.setDelimiterChar(',');\n\n        // Create an ArrayList to store tokens\n        ArrayList<String> tokens = new ArrayList<>();\n\n        // Use a loop to tokenize the entire string and store tokens in the ArrayList\n        while (tokenizer.hasNext()) {\n            tokens.add(tokenizer.nextToken());\n        }\n\n        // Create a HashMap to count occurrences of each token\n        HashMap<String, Integer> tokenCount = new HashMap<>();\n\n        // Populate the HashMap with token counts\n        for (String token : tokens) {\n            tokenCount.put(token, tokenCount.getOrDefault(token, 0) + 1);\n        }\n\n        // Print the token counts\n        for (String key : tokenCount.keySet()) {\n            System.out.println(\"Token: \" + key + \", Count: \" + tokenCount.get(key));\n        }\n\n        // Read the first token using nextToken method\n        tokenizer.reset();\n        /* read */ String firstToken = tokenizer.nextToken();\n\n        // Print the first token\n        System.out.println(\"First token: \" + firstToken);\n\n        // Additional operations on ArrayList\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        // Print the numbers\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World\");\n\n        // Set the delimiter character to ','\n        /* write */ tokenizer.setDelimiterChar(',');\n\n        // Read the first token using nextToken method\n        /* read */ String token = tokenizer.nextToken();\n\n        // Print the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setDelimiterChar",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}