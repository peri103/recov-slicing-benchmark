{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"  Hello World  \");\n        \n        // Initialize another StrTokenizer with a different string\n        StrTokenizer tokenizer2 = new StrTokenizer(\"  Foo Bar Baz  \");\n        \n        // Set a trimmer matcher to trim whitespace on the first tokenizer\n        /* write */ tokenizer.setTrimmerMatcher(StrMatcher.trimMatcher());\n\n        // Perform some unrelated operations using tokenizer2\n        tokenizer2.setDelimiterMatcher(StrMatcher.charSetMatcher(' '));\n        while (tokenizer2.hasNext()) {\n            String token2 = tokenizer2.nextToken();\n            System.out.println(\"Token from tokenizer2: \" + token2);\n        }\n\n        // Add some complex logic\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n            System.out.println(\"Intermediate sum: \" + sum);\n        }\n        \n        // Read the next token after trimming on the first tokenizer\n        /* read */ String token = tokenizer.nextToken();\n        \n        // Output the token\n        System.out.println(\"Token from tokenizer: \" + token);\n\n        // More complex operations\n        StrTokenizer tokenizer3 = new StrTokenizer(\"  Alpha Beta Gamma  \");\n        tokenizer3.setDelimiterMatcher(StrMatcher.charSetMatcher(' '));\n        while (tokenizer3.hasNext()) {\n            String token3 = tokenizer3.nextToken();\n            System.out.println(\"Token from tokenizer3: \" + token3);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize StrTokenizer with a sample string\n        StrTokenizer tokenizer = new StrTokenizer(\"  Hello World  \");\n\n        // Set a trimmer matcher to trim whitespace\n        /* write */ tokenizer.setTrimmerMatcher(StrMatcher.trimMatcher());\n\n        // Read the next token after trimming\n        /* read */ String token = tokenizer.nextToken();\n\n        // Output the token\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setTrimmerMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}