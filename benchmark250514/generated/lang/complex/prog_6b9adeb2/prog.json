{
    "java_code": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\nimport java.util.Locale;\nimport java.text.SimpleDateFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a Date object\n        Date date = new Date();\n        \n        // Create a Calendar object to manipulate the date\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        \n        // Set the month using DateUtils\n        /* write */ date = DateUtils.setMonths(date, 5); // Set month to June (0-based index)\n        \n        // Perform some unrelated date manipulations\n        calendar.set(Calendar.YEAR, 2023);\n        calendar.set(Calendar.DAY_OF_MONTH, 15);\n        Date newDate = calendar.getTime();\n        SimpleDateFormat formatter = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.ENGLISH);\n        System.out.println(\"Formatted Date: \" + formatter.format(newDate));\n        \n        // Calculate the difference in days between two dates\n        Calendar anotherCalendar = Calendar.getInstance();\n        anotherCalendar.set(2023, Calendar.JUNE, 20);\n        Date anotherDate = anotherCalendar.getTime();\n        long diffInMillis = anotherDate.getTime() - newDate.getTime();\n        long diffInDays = diffInMillis / (1000 * 60 * 60 * 24);\n        System.out.println(\"Difference in days: \" + diffInDays);\n\n        // Truncate the date to remove time components\n        /* read */ Date truncatedDate = DateUtils.truncate(date, Calendar.MONTH);\n        \n        // Print the truncated date\n        System.out.println(\"Truncated Date: \" + truncatedDate);\n        \n        // Additional operations with the truncated date\n        calendar.setTime(truncatedDate);\n        calendar.add(Calendar.DAY_OF_MONTH, 10);\n        Date futureDate = calendar.getTime();\n        System.out.println(\"Future Date after 10 days: \" + formatter.format(futureDate));\n        \n        // Check if a date is before another date\n        boolean isBefore = truncatedDate.before(anotherDate);\n        System.out.println(\"Is truncated date before another date? \" + isBefore);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.time.DateUtils;\nimport java.util.Date;\nimport java.util.Calendar;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a Date object\n        Date date = new Date();\n        \n        // Create a Calendar object to manipulate the date\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        \n        // Set the month using DateUtils\n        /* write */ date = DateUtils.setMonths(date, 5); // Set month to June (0-based index)\n        \n        // Truncate the date to remove time components\n        /* read */ Date truncatedDate = DateUtils.truncate(date, Calendar.MONTH);\n        \n        // Print the truncated date\n        System.out.println(truncatedDate);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.time.DateUtils",
        "write_method": "setMonths",
        "read_class": "org.apache.commons.lang3.time.DateUtils",
        "read_method": "truncate"
    }
}