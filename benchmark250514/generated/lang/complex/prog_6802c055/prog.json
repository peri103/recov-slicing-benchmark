{
    "java_code": "import org.apache.commons.lang3.builder.CompareToBuilder;\nimport org.apache.commons.lang3.builder.EqualsBuilder;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        EqualsBuilder equalsBuilder = new EqualsBuilder();\n        HashMap<String, Integer> map = new HashMap<>();\n\n        // Initialize some values in the map\n        map.put(\"A\", 1);\n        map.put(\"B\", 2);\n        map.put(\"C\", 3);\n\n        // Perform some operations with EqualsBuilder\n        boolean isEqual = equalsBuilder.append(\"test\", \"test\").isEquals();\n        System.out.println(\"Equality check result: \" + isEqual);\n\n        // Perform some operations with HashMap\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n\n        // More complex operation with CompareToBuilder\n        compareToBuilder.append(10, 20); // Additional comparison\n        compareToBuilder.append(5, 5); // Additional comparison\n\n        /* write */ compareToBuilder.append(5, 3);\n\n        // Perform some operations\n        boolean check = equalsBuilder.append(1, 1).isEquals();\n        System.out.println(\"Another equality check result: \" + check);\n\n        // Calculate and print the comparison result\n        /* read */ int comparisonResult = compareToBuilder.toComparison();\n        System.out.println(\"Comparison result: \" + comparisonResult);\n\n        // Additional complex operations\n        for (int i = 0; i < 3; i++) {\n            map.put(\"Key\" + i, i * 10);\n        }\n        for (String key : map.keySet()) {\n            System.out.println(\"Value for \" + key + \": \" + map.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.builder.CompareToBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        CompareToBuilder compareToBuilder = new CompareToBuilder();\n        /* write */ compareToBuilder.append(5, 3);\n        /* read */ int comparisonResult = compareToBuilder.toComparison();\n        System.out.println(comparisonResult);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.builder.CompareToBuilder",
        "write_method": "append",
        "read_class": "org.apache.commons.lang3.builder.CompareToBuilder",
        "read_method": "toComparison"
    }
}