{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"apple;banana;cherry\";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        // Additional functionality with ArrayList\n        ArrayList<String> fruits = new ArrayList<>();\n        fruits.add(\"orange\");\n        fruits.add(\"grape\");\n        \n        for (String fruit : fruits) {\n            System.out.println(\"Fruit from ArrayList: \" + fruit);\n        }\n        \n        /* write */ tokenizer.setDelimiterString(\";\");\n        \n        // Further processing before reading the token\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n            System.out.println(\"Current sum: \" + sum);\n        }\n        \n        // Additional StrTokenizer usage\n        StrTokenizer anotherTokenizer = new StrTokenizer(\"dog,cat,bird\");\n        anotherTokenizer.setDelimiterString(\",\");\n        while (anotherTokenizer.hasNext()) {\n            System.out.println(\"Animal: \" + anotherTokenizer.nextToken());\n        }\n        \n        /* read */ String token = tokenizer.nextToken();\n        \n        System.out.println(\"First token: \" + token);\n        \n        // Additional calculations\n        int product = 1;\n        for (int i = 1; i <= 3; i++) {\n            product *= i;\n            System.out.println(\"Current product: \" + product);\n        }\n        \n        // Further ArrayList operations\n        fruits.add(\"pineapple\");\n        for (String fruit : fruits) {\n            System.out.println(\"Updated Fruit List: \" + fruit);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"apple;banana;cherry\";\n        StrTokenizer tokenizer = new StrTokenizer(input);\n        \n        /* write */ tokenizer.setDelimiterString(\";\");\n        \n        /* read */ String token = tokenizer.nextToken();\n        \n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setDelimiterString",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}