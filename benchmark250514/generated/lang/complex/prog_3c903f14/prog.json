{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.StringUtils;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World\");\n        /* write */ tokenizer.setDelimiterString(\",\");\n        \n        // Additional complex logic\n        HashMap<String, Integer> wordCount = new HashMap<>();\n        String phrase = \"Hello World Hello Universe\";\n        StrTokenizer tokenizer2 = new StrTokenizer(phrase);\n        tokenizer2.setDelimiterString(\" \");\n        \n        while (tokenizer2.hasNext()) {\n            String word = tokenizer2.nextToken();\n            wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);\n        }\n        \n        StringUtils.capitalize(\"example\");\n\n        // More complex operations\n        int totalWords = 0;\n        for (String key : wordCount.keySet()) {\n            totalWords += wordCount.get(key);\n        }\n        \n        // Unrelated logical operations\n        int a = 5, b = 10;\n        int sum = a + b;\n        int product = a * b;\n        System.out.println(\"Sum: \" + sum + \", Product: \" + product);\n        \n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(\"First token: \" + token);\n        \n        // Finalize the word count display\n        System.out.println(\"Total words counted: \" + totalWords);\n        for (String key : wordCount.keySet()) {\n            System.out.println(key + \": \" + wordCount.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"Hello,World\");\n        /* write */ tokenizer.setDelimiterString(\",\");\n        /* read */ String token = tokenizer.nextToken();\n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setDelimiterString",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}