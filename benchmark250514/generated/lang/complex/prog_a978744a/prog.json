{
    "java_code": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"  Hello World  \");\n        \n        // Set a trimmer matcher to trim spaces at the start and end of tokens\n        /* write */ tokenizer.setTrimmerMatcher(StrMatcher.trimMatcher());\n        \n        // Additional operations to increase complexity\n        ArrayList<String> tokensList = new ArrayList<>();\n        \n        // Another StrTokenizer instance for demonstration\n        StrTokenizer anotherTokenizer = new StrTokenizer(\"Java,Programming,Language\");\n        anotherTokenizer.setDelimiterMatcher(StrMatcher.commaMatcher());\n        \n        // Adding tokens from anotherTokenizer to tokensList\n        while (anotherTokenizer.hasNext()) {\n            tokensList.add(anotherTokenizer.nextToken());\n        }\n        \n        // Process tokensList\n        for (String token : tokensList) {\n            System.out.println(\"Token from anotherTokenizer: \" + token);\n        }\n        \n        // Read the first token after trimming spaces\n        /* read */ String token = tokenizer.nextToken();\n        \n        System.out.println(\"Token from original tokenizer: \" + token);\n        \n        // Further operations on tokensList\n        tokensList.add(\"ExtraToken\");\n        \n        // Print all tokens from tokensList\n        for (String t : tokensList) {\n            System.out.println(\"Final list token: \" + t);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.text.StrTokenizer;\nimport org.apache.commons.lang3.text.StrMatcher;\n\npublic class Main {\n    public static void main(String[] args) {\n        StrTokenizer tokenizer = new StrTokenizer(\"  Hello World  \");\n        \n        // Set a trimmer matcher to trim spaces at the start and end of tokens\n        /* write */ tokenizer.setTrimmerMatcher(StrMatcher.trimMatcher());\n        \n        // Read the first token after trimming spaces\n        /* read */ String token = tokenizer.nextToken();\n        \n        System.out.println(token);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.text.StrTokenizer",
        "write_method": "setTrimmerMatcher",
        "read_class": "org.apache.commons.lang3.text.StrTokenizer",
        "read_method": "nextToken"
    }
}