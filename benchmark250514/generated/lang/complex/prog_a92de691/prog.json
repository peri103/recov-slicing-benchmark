{
    "java_code": "import org.apache.commons.lang3.builder.CompareToBuilder;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Main {\n    public static void main(String[] args) {\n        CompareToBuilder builder = new CompareToBuilder();\n        ArrayList<Integer> numbers = new ArrayList<>();\n        \n        // Adding elements to the list\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i);\n        }\n\n        // Shuffle the list to make it more complex\n        Collections.shuffle(numbers);\n\n        // Sort the list using a simple bubble sort algorithm\n        for (int i = 0; i < numbers.size(); i++) {\n            for (int j = 0; j < numbers.size() - i - 1; j++) {\n                /* write */ builder.append(numbers.get(j), numbers.get(j + 1));\n                int comparisonResult = builder.toComparison();\n                if (comparisonResult > 0) {\n                    // Swap elements\n                    int temp = numbers.get(j);\n                    numbers.set(j, numbers.get(j + 1));\n                    numbers.set(j + 1, temp);\n                }\n            }\n        }\n\n        // Print sorted list\n        System.out.println(\"Sorted List: \" + numbers);\n\n        // Using the original write-read pair\n        /* write */ builder.append(5, 3);\n        // Performing some unrelated calculations\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        int average = sum / numbers.size();\n        System.out.println(\"Average: \" + average);\n\n        // More unrelated code\n        int max = Collections.max(numbers);\n        System.out.println(\"Max Value: \" + max);\n\n        /* read */ int comparisonResult = builder.toComparison();\n        System.out.println(\"Comparison Result: \" + comparisonResult);\n    }\n}",
    "java_code_simple": "import org.apache.commons.lang3.builder.CompareToBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        CompareToBuilder builder = new CompareToBuilder();\n        /* write */ builder.append(5, 3);\n        /* read */ int comparisonResult = builder.toComparison();\n        System.out.println(comparisonResult);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.lang3.builder.CompareToBuilder",
        "write_method": "append",
        "read_class": "org.apache.commons.lang3.builder.CompareToBuilder",
        "read_method": "toComparison"
    }
}