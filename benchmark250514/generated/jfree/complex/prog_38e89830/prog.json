{
    "java_code": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot plot = new PiePlot();\n        Paint paint = new Color(255, 0, 0); // Red color\n\n        // Complex logic with a map to store plot properties\n        Map<String, Paint> plotProperties = new HashMap<>();\n        plotProperties.put(\"defaultOutline\", new Color(0, 0, 0)); // Black color\n\n        // Additional code to manipulate plot properties\n        Paint defaultPaint = plotProperties.get(\"defaultOutline\");\n        plot.setLabelOutlinePaint(defaultPaint);\n\n        // Write operation\n        /* write */ plot.setLabelOutlinePaint(paint);\n\n        // More operations before reading\n        plotProperties.put(\"customOutline\", paint);\n        Paint customPaint = plotProperties.get(\"customOutline\");\n\n        // Logic to simulate complex operations\n        for (Map.Entry<String, Paint> entry : plotProperties.entrySet()) {\n            System.out.println(\"Property: \" + entry.getKey() + \", Paint: \" + entry.getValue());\n        }\n\n        // Read operation\n        /* read */ Paint readPaint = plot.getLabelOutlinePaint();\n        System.out.println(\"Read Paint: \" + readPaint);\n\n        // Additional logic to demonstrate complexity\n        Paint anotherPaint = new Color(0, 255, 0); // Green color\n        plot.setLabelOutlinePaint(anotherPaint);\n\n        // Simulate further operations\n        plotProperties.put(\"greenOutline\", anotherPaint);\n        Paint greenPaint = plotProperties.get(\"greenOutline\");\n        System.out.println(\"Green Paint: \" + greenPaint);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot plot = new PiePlot();\n        Paint paint = new Color(255, 0, 0); // Red color\n        /* write */ plot.setLabelOutlinePaint(paint);\n        /* read */ Paint readPaint = plot.getLabelOutlinePaint();\n        System.out.println(readPaint);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setLabelOutlinePaint",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getLabelOutlinePaint"
    }
}