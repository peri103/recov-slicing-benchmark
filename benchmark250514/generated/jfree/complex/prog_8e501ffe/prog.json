{
    "java_code": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport org.jfree.chart.labels.PieSectionLabelGenerator;\nimport org.jfree.chart.ChartFactory;\nimport org.jfree.chart.ChartPanel;\nimport org.jfree.chart.JFreeChart;\nimport org.jfree.data.general.DefaultPieDataset;\n\nimport javax.swing.JFrame;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize PiePlot object\n        PiePlot piePlot = new PiePlot();\n        \n        // Create a label generator\n        PieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator();\n        \n        // Set the label generator using the write method\n        /* write */ piePlot.setLabelGenerator(labelGenerator);\n        \n        // Create a pie dataset\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Category A\", 50);\n        dataset.setValue(\"Category B\", 30);\n        dataset.setValue(\"Category C\", 20);\n        \n        // Create a JFreeChart object using the dataset and the piePlot\n        JFreeChart chart = ChartFactory.createPieChart(\"Sample Pie Chart\", dataset, true, true, false);\n        chart.getPlot().setBackgroundPaint(java.awt.Color.white);\n        \n        // Create a JFrame to display the chart\n        JFrame frame = new JFrame(\"Chart Example\");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.add(new ChartPanel(chart));\n        frame.pack();\n        frame.setVisible(true);\n        \n        // Perform some unrelated operations\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Unrelated operation \" + i);\n        }\n        \n        // Retrieve the label generator using the read method\n        /* read */ PieSectionLabelGenerator retrievedLabelGenerator = piePlot.getLabelGenerator();\n        \n        // Print the result to verify the read method retrieved the correct value\n        System.out.println(retrievedLabelGenerator.equals(labelGenerator));\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport org.jfree.chart.labels.PieSectionLabelGenerator;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize PiePlot object\n        PiePlot piePlot = new PiePlot();\n        \n        // Create a label generator\n        PieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator();\n        \n        // Set the label generator using the write method\n        /* write */ piePlot.setLabelGenerator(labelGenerator);\n        \n        // Retrieve the label generator using the read method\n        /* read */ PieSectionLabelGenerator retrievedLabelGenerator = piePlot.getLabelGenerator();\n        \n        // Print the result to verify the read method retrieved the correct value\n        System.out.println(retrievedLabelGenerator.equals(labelGenerator));\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setLabelGenerator",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getLabelGenerator"
    }
}