{
    "java_code": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport org.jfree.chart.labels.PieSectionLabelGenerator;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        StandardPieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator();\n        \n        // Additional unrelated code to increase complexity\n        ArrayList<String> stringList = new ArrayList<>();\n        HashMap<Integer, String> integerStringMap = new HashMap<>();\n        \n        stringList.add(\"Apple\");\n        stringList.add(\"Banana\");\n        integerStringMap.put(1, \"One\");\n        integerStringMap.put(2, \"Two\");\n        \n        for (String fruit : stringList) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        for (Integer key : integerStringMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + integerStringMap.get(key));\n        }\n        \n        /* write */ piePlot.setLabelGenerator(labelGenerator);\n        \n        // More unrelated code\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 integers: \" + sum);\n        \n        PieSectionLabelGenerator anotherLabelGenerator = new StandardPieSectionLabelGenerator(\"{0}: {1} ({2})\");\n        piePlot.setLabelGenerator(anotherLabelGenerator);\n        \n        /* read */ PieSectionLabelGenerator retrievedGenerator = piePlot.getLabelGenerator();\n        \n        System.out.println(retrievedGenerator != null ? \"Label generator retrieved successfully.\" : \"Failed to retrieve label generator.\");\n        \n        // Additional complex logic\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numberList.add(i * 2);\n        }\n        \n        for (Integer number : numberList) {\n            if (number % 3 == 0) {\n                System.out.println(\"Number divisible by 3: \" + number);\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.labels.StandardPieSectionLabelGenerator;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        StandardPieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator();\n        \n        /* write */ piePlot.setLabelGenerator(labelGenerator);\n        /* read */ StandardPieSectionLabelGenerator retrievedGenerator = (StandardPieSectionLabelGenerator) piePlot.getLabelGenerator();\n        \n        System.out.println(retrievedGenerator != null ? \"Label generator set successfully.\" : \"Failed to set label generator.\");\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setLabelGenerator",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getLabelGenerator"
    }
}