{
    "java_code": "import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        StackedXYAreaRenderer renderer = new StackedXYAreaRenderer();\n        HashMap<Integer, Paint> paintMap = new HashMap<>();\n        \n        /* write */ renderer.setSeriesPaint(0, Color.RED);\n        \n        // Adding multiple paints to a map for later use\n        paintMap.put(1, Color.BLUE);\n        paintMap.put(2, Color.GREEN);\n        paintMap.put(3, Color.YELLOW);\n\n        // Simulate complex operations\n        for (int i = 0; i < 3; i++) {\n            renderer.setSeriesPaint(i + 1, paintMap.get(i + 1));\n        }\n        \n        // Perform operations using renderer\n        for (int i = 0; i < 4; i++) {\n            Paint currentPaint = renderer.getSeriesPaint(i);\n            System.out.println(\"Series \" + i + \" Paint: \" + currentPaint.toString());\n        }\n        \n        // More unrelated complex operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n        \n        // Retrieve the original paint\n        /* read */ Paint paint = renderer.getSeriesPaint(0);\n        System.out.println(\"Original Series 0 Paint: \" + paint.toString());\n        \n        // Additional unrelated operations\n        StringBuilder builder = new StringBuilder();\n        for (char c = 'a'; c <= 'z'; c++) {\n            builder.append(c);\n        }\n        System.out.println(\"Alphabet: \" + builder.toString());\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        StackedXYAreaRenderer renderer = new StackedXYAreaRenderer();\n        /* write */ renderer.setSeriesPaint(0, Color.RED);\n        /* read */ Paint paint = renderer.getSeriesPaint(0);\n        System.out.println(paint.toString());\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.StackedXYAreaRenderer",
        "write_method": "setSeriesPaint",
        "read_class": "org.jfree.chart.renderer.xy.StackedXYAreaRenderer",
        "read_method": "getSeriesPaint"
    }
}