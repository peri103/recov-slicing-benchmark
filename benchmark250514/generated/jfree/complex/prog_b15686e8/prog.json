{
    "java_code": "import org.jfree.chart.plot.Crosshair;\nimport org.jfree.chart.labels.CrosshairLabelGenerator;\nimport org.jfree.chart.plot.ValueMarker;\nimport org.jfree.chart.labels.StandardXYToolTipGenerator;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the Crosshair object\n        Crosshair crosshair = new Crosshair();\n        \n        // Create a CrosshairLabelGenerator\n        CrosshairLabelGenerator labelGenerator = new CrosshairLabelGenerator() {\n            @Override\n            public String generateLabel(Crosshair crosshair) {\n                return \"Crosshair Label\";\n            }\n        };\n        \n        // Initialize a ValueMarker and set a label\n        ValueMarker marker = new ValueMarker(10.0);\n        marker.setLabel(\"Initial Marker Label\");\n        \n        // Create a StandardXYToolTipGenerator\n        StandardXYToolTipGenerator toolTipGenerator = new StandardXYToolTipGenerator();\n        \n        // Set the label generator for the crosshair\n        /* write */ crosshair.setLabelGenerator(labelGenerator);\n        \n        // Perform some operations on the marker\n        marker.setLabel(\"Updated Marker Label\");\n        System.out.println(\"Marker Label: \" + marker.getLabel());\n        \n        // Use the tooltip generator\n        String tooltip = toolTipGenerator.generateToolTip(null, 0, 0);\n        System.out.println(\"Tooltip: \" + tooltip);\n        \n        // Additional complex logic\n        double value = 5.0;\n        if (value > 0) {\n            marker.setValue(value * 2);\n        }\n        \n        // Retrieve and use the label generator from the crosshair\n        /* read */ CrosshairLabelGenerator readLabelGenerator = crosshair.getLabelGenerator();\n        \n        // Output the generated label\n        System.out.println(\"Generated Label: \" + readLabelGenerator.generateLabel(crosshair));\n        \n        // Final marker value\n        System.out.println(\"Final Marker Value: \" + marker.getValue());\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.Crosshair;\nimport org.jfree.chart.labels.CrosshairLabelGenerator;\n\npublic class Main {\n    public static void main(String[] args) {\n        Crosshair crosshair = new Crosshair();\n        CrosshairLabelGenerator labelGenerator = new CrosshairLabelGenerator() {\n            @Override\n            public String generateLabel(Crosshair crosshair) {\n                return \"Crosshair Label\";\n            }\n        };\n        \n        /* write */ crosshair.setLabelGenerator(labelGenerator);\n        /* read */ CrosshairLabelGenerator readLabelGenerator = crosshair.getLabelGenerator();\n        \n        System.out.println(readLabelGenerator.generateLabel(crosshair));\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.Crosshair",
        "write_method": "setLabelGenerator",
        "read_class": "org.jfree.chart.plot.Crosshair",
        "read_method": "getLabelGenerator"
    }
}