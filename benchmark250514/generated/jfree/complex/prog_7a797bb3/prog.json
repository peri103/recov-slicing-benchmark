{
    "java_code": "import org.jfree.chart.renderer.xy.XYBarRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYBarRenderer renderer = new XYBarRenderer();\n        Paint paint = new Color(255, 0, 0); // Red color\n\n        /* write */ renderer.setSeriesOutlinePaint(0, paint);\n\n        // Additional unrelated operations\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 10);\n        }\n\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Another usage of XYBarRenderer methods\n        Paint anotherPaint = new Color(0, 255, 0); // Green color\n        renderer.setSeriesOutlinePaint(1, anotherPaint);\n        Paint retrievedAnotherPaint = renderer.getSeriesOutlinePaint(1);\n        System.out.println(\"Another paint: \" + retrievedAnotherPaint);\n\n        // More complex operations\n        List<String> strings = new ArrayList<>();\n        strings.add(\"Hello\");\n        strings.add(\"World\");\n\n        StringBuilder concatenatedString = new StringBuilder();\n        for (String str : strings) {\n            concatenatedString.append(str).append(\" \");\n        }\n        System.out.println(\"Concatenated String: \" + concatenatedString.toString().trim());\n\n        // Finally, retrieve the original paint\n        /* read */ Paint retrievedPaint = renderer.getSeriesOutlinePaint(0);\n        System.out.println(\"Original paint: \" + retrievedPaint);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYBarRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYBarRenderer renderer = new XYBarRenderer();\n        Paint paint = new Color(255, 0, 0); // Red color\n\n        /* write */ renderer.setSeriesOutlinePaint(0, paint);\n        /* read */ Paint retrievedPaint = renderer.getSeriesOutlinePaint(0);\n\n        System.out.println(retrievedPaint);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYBarRenderer",
        "write_method": "setSeriesOutlinePaint",
        "read_class": "org.jfree.chart.renderer.xy.XYBarRenderer",
        "read_method": "getSeriesOutlinePaint"
    }
}