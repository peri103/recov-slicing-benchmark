{
    "java_code": "import org.jfree.chart.ChartPanel;\nimport org.jfree.chart.JFreeChart;\nimport javax.swing.JPopupMenu;\nimport java.awt.Color;\nimport java.awt.Dimension;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the ChartPanel with a null chart\n        ChartPanel chartPanel = new ChartPanel(null);\n\n        // Initialize a JPopupMenu and add items\n        JPopupMenu popupMenu = new JPopupMenu();\n        popupMenu.add(\"Option 1\");\n        popupMenu.add(\"Option 2\");\n\n        // Set the popup menu using the write method\n        /* write */ chartPanel.setPopupMenu(popupMenu);\n\n        // Additional complexity: set background and preferred size\n        chartPanel.setBackground(Color.WHITE);\n        chartPanel.setPreferredSize(new Dimension(800, 600));\n\n        // Create another ChartPanel with a mock chart\n        JFreeChart mockChart = new JFreeChart(\"Mock Chart\", JFreeChart.DEFAULT_TITLE_FONT, null, false);\n        ChartPanel anotherChartPanel = new ChartPanel(mockChart);\n\n        // Set a different popup menu for the other ChartPanel\n        JPopupMenu anotherPopupMenu = new JPopupMenu();\n        anotherPopupMenu.add(\"Another Option 1\");\n        anotherPopupMenu.add(\"Another Option 2\");\n        anotherChartPanel.setPopupMenu(anotherPopupMenu);\n\n        // Use an unrelated ArrayList to store ChartPanels\n        ArrayList<ChartPanel> chartPanels = new ArrayList<>();\n        chartPanels.add(chartPanel);\n        chartPanels.add(anotherChartPanel);\n\n        // Iterate over the ArrayList and print the preferred sizes\n        for (ChartPanel panel : chartPanels) {\n            System.out.println(\"ChartPanel preferred size: \" + panel.getPreferredSize());\n        }\n\n        // Retrieve the popup menu using the read method\n        /* read */ JPopupMenu retrievedPopupMenu = chartPanel.getPopupMenu();\n\n        // Print to verify that the read value is the same as the written value\n        System.out.println(retrievedPopupMenu == popupMenu); // Should print true\n\n        // Additional complexity: manipulate the mock chart and print its title\n        mockChart.setTitle(\"Updated Mock Chart\");\n        System.out.println(\"Mock Chart Title: \" + mockChart.getTitle());\n    }\n}",
    "java_code_simple": "import org.jfree.chart.ChartPanel;\nimport javax.swing.JPopupMenu;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the ChartPanel\n        ChartPanel chartPanel = new ChartPanel(null);\n\n        // Initialize a JPopupMenu\n        JPopupMenu popupMenu = new JPopupMenu();\n        popupMenu.add(\"Option 1\");\n        popupMenu.add(\"Option 2\");\n\n        // Use the write method to set the popup menu\n        /* write */ chartPanel.setPopupMenu(popupMenu);\n\n        // Use the read method to retrieve the popup menu\n        /* read */ JPopupMenu retrievedPopupMenu = chartPanel.getPopupMenu();\n\n        // Print to verify that the read value is the same as the written value\n        System.out.println(retrievedPopupMenu == popupMenu); // Should print true\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.ChartPanel",
        "write_method": "setPopupMenu",
        "read_class": "org.jfree.chart.ChartPanel",
        "read_method": "getPopupMenu"
    }
}