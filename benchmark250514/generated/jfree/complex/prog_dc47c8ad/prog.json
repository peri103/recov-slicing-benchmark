{
    "java_code": "import org.jfree.chart.renderer.xy.XYAreaRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYAreaRenderer renderer = new XYAreaRenderer();\n        Paint fillPaint = Color.RED;\n\n        // Unrelated complex code\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"Alpha\", 1);\n        dataMap.put(\"Beta\", 2);\n        dataMap.put(\"Gamma\", 3);\n\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        int sum = 0;\n        for (Integer value : dataMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n\n        // Additional unrelated logic\n        int[] numbers = {5, 10, 15, 20};\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n\n        /* write */ renderer.setSeriesFillPaint(0, fillPaint);\n\n        // More unrelated complex code\n        String[] names = {\"Alice\", \"Bob\", \"Charlie\"};\n        for (String name : names) {\n            System.out.println(\"Hello, \" + name + \"!\");\n        }\n\n        // Nested loop example\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 2; j++) {\n                System.out.println(\"i: \" + i + \", j: \" + j);\n            }\n        }\n\n        /* read */ Paint readPaint = renderer.getSeriesFillPaint(0);\n        System.out.println(\"Read Paint: \" + readPaint);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYAreaRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYAreaRenderer renderer = new XYAreaRenderer();\n        Paint fillPaint = Color.RED;\n        \n        /* write */ renderer.setSeriesFillPaint(0, fillPaint);\n        /* read */ Paint readPaint = renderer.getSeriesFillPaint(0);\n        \n        System.out.println(readPaint);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYAreaRenderer",
        "write_method": "setSeriesFillPaint",
        "read_class": "org.jfree.chart.renderer.xy.XYAreaRenderer",
        "read_method": "getSeriesFillPaint"
    }
}