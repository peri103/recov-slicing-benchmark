{
    "java_code": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.BasicStroke;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        BasicStroke stroke = new BasicStroke(2.0f);\n\n        // Additional complex logic\n        Map<String, BasicStroke> strokeMap = new HashMap<>();\n        strokeMap.put(\"SectionKey\", stroke);\n        strokeMap.put(\"AnotherSection\", new BasicStroke(3.0f));\n\n        for (Map.Entry<String, BasicStroke> entry : strokeMap.entrySet()) {\n            piePlot.setSectionOutlineStroke(entry.getKey(), entry.getValue());\n        }\n\n        // More unrelated calculations\n        int sum = 0;\n        for (BasicStroke s : strokeMap.values()) {\n            sum += s.getLineWidth();\n        }\n        System.out.println(\"Sum of line widths: \" + sum);\n\n        // Writing to PiePlot\n        /* write */ piePlot.setSectionOutlineStroke(\"SectionKey\", stroke);\n\n        // More complex logic\n        int product = 1;\n        for (BasicStroke s : strokeMap.values()) {\n            product *= s.getLineWidth();\n        }\n        System.out.println(\"Product of line widths: \" + product);\n\n        // Reading from PiePlot\n        /* read */ BasicStroke readStroke = (BasicStroke) piePlot.getSectionOutlineStroke(\"SectionKey\");\n\n        System.out.println(\"Read line width: \" + readStroke.getLineWidth());\n\n        // Additional unrelated code\n        int maxLineWidth = 0;\n        for (String key : strokeMap.keySet()) {\n            BasicStroke s = strokeMap.get(key);\n            if (s.getLineWidth() > maxLineWidth) {\n                maxLineWidth = (int) s.getLineWidth();\n            }\n        }\n        System.out.println(\"Max line width: \" + maxLineWidth);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.BasicStroke;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        BasicStroke stroke = new BasicStroke(2.0f);\n\n        /* write */ piePlot.setSectionOutlineStroke(\"SectionKey\", stroke);\n        /* read */ BasicStroke readStroke = (BasicStroke) piePlot.getSectionOutlineStroke(\"SectionKey\");\n\n        System.out.println(readStroke.getLineWidth());\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setSectionOutlineStroke",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getSectionOutlineStroke"
    }
}