{
    "java_code": "import org.jfree.chart.axis.DateAxis;\nimport java.text.SimpleDateFormat;\nimport java.text.DateFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        DateAxis dateAxis = new DateAxis();\n        DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n        \n        /* write */ dateAxis.setDateFormatOverride(dateFormat);\n\n        // Additional complex operations\n        ArrayList<DateFormat> dateFormats = new ArrayList<>();\n        dateFormats.add(dateFormat);\n        dateFormats.add(new SimpleDateFormat(\"MM-dd-yyyy\"));\n        dateFormats.add(new SimpleDateFormat(\"dd/MM/yyyy\"));\n\n        HashMap<String, DateFormat> formatMap = new HashMap<>();\n        formatMap.put(\"ISO\", dateFormats.get(0));\n        formatMap.put(\"US\", dateFormats.get(1));\n        formatMap.put(\"EU\", dateFormats.get(2));\n\n        for (String key : formatMap.keySet()) {\n            DateFormat format = formatMap.get(key);\n            System.out.println(\"Format for \" + key + \": \" + format.format(new java.util.Date()));\n        }\n\n        // More operations to increase complexity\n        ArrayList<String> dateStrings = new ArrayList<>();\n        dateStrings.add(\"2023-10-10\");\n        dateStrings.add(\"10-11-2023\");\n        dateStrings.add(\"12/10/2023\");\n\n        for (String dateStr : dateStrings) {\n            System.out.println(\"Processing date string: \" + dateStr);\n        }\n\n        /* read */ DateFormat readFormat = dateAxis.getDateFormatOverride();\n        System.out.println(\"Read format: \" + readFormat.format(new java.util.Date()));\n    }\n}",
    "java_code_simple": "import org.jfree.chart.axis.DateAxis;\nimport java.text.SimpleDateFormat;\nimport java.text.DateFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        DateAxis dateAxis = new DateAxis();\n        DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n        /* write */ dateAxis.setDateFormatOverride(dateFormat);\n\n        /* read */ DateFormat readFormat = dateAxis.getDateFormatOverride();\n        System.out.println(readFormat.format(new java.util.Date()));\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.axis.DateAxis",
        "write_method": "setDateFormatOverride",
        "read_class": "org.jfree.chart.axis.DateAxis",
        "read_method": "getDateFormatOverride"
    }
}