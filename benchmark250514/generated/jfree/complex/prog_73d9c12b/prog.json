{
    "java_code": "import org.jfree.chart.axis.CategoryAxis;\nimport org.jfree.chart.axis.CategoryLabelPositions;\nimport org.jfree.chart.axis.ValueAxis;\nimport org.jfree.chart.axis.NumberAxis;\n\npublic class Main {\n    public static void main(String[] args) {\n        CategoryAxis categoryAxis = new CategoryAxis();\n        \n        // Initialize CategoryLabelPositions with a sample value\n        CategoryLabelPositions initialLabelPositions = CategoryLabelPositions.STANDARD;\n        \n        /* write */ categoryAxis.setCategoryLabelPositions(initialLabelPositions);\n        \n        // Additional unrelated code to increase complexity\n        ValueAxis valueAxis = new NumberAxis(\"Value Axis\");\n        valueAxis.setRange(0.0, 100.0);\n        \n        // Perform some operations on the value axis\n        double lowerBound = valueAxis.getLowerBound();\n        double upperBound = valueAxis.getUpperBound();\n        \n        System.out.println(\"Value Axis Range: \" + lowerBound + \" to \" + upperBound);\n        \n        // More unrelated code\n        for (int i = 0; i < 5; i++) {\n            double tickValue = lowerBound + i * (upperBound - lowerBound) / 4;\n            System.out.println(\"Tick Value: \" + tickValue);\n        }\n        \n        // Operations on category axis\n        CategoryLabelPositions retrievedPositions = categoryAxis.getCategoryLabelPositions();\n        System.out.println(\"Original Category Label Positions: \" + retrievedPositions);\n        \n        // Continue with more unrelated operations\n        int numberOfTicks = 10;\n        double tickInterval = (upperBound - lowerBound) / numberOfTicks;\n        for (int i = 0; i <= numberOfTicks; i++) {\n            double tickValue = lowerBound + i * tickInterval;\n            System.out.println(\"Calculated Tick Value: \" + tickValue);\n        }\n        \n        // Final operation to use the retrieved category label positions\n        /* read */ CategoryLabelPositions finalPositions = categoryAxis.getCategoryLabelPositions();\n        System.out.println(\"Final Category Label Positions: \" + finalPositions);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.axis.CategoryAxis;\nimport org.jfree.chart.axis.CategoryLabelPositions;\n\npublic class Main {\n    public static void main(String[] args) {\n        CategoryAxis axis = new CategoryAxis();\n        \n        // Initialize CategoryLabelPositions with a sample value\n        CategoryLabelPositions labelPositions = CategoryLabelPositions.STANDARD;\n        \n        /* write */ axis.setCategoryLabelPositions(labelPositions);\n        \n        /* read */ CategoryLabelPositions retrievedPositions = axis.getCategoryLabelPositions();\n        \n        // Print the retrieved positions to verify\n        System.out.println(retrievedPositions);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.axis.CategoryAxis",
        "write_method": "setCategoryLabelPositions",
        "read_class": "org.jfree.chart.axis.CategoryAxis",
        "read_method": "getCategoryLabelPositions"
    }
}