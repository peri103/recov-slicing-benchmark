{
    "java_code": "import org.jfree.chart.renderer.xy.XYDifferenceRenderer;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDifferenceRenderer renderer = new XYDifferenceRenderer();\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        \n        // Set up some properties for lineRenderer\n        lineRenderer.setSeriesPaint(0, Color.BLUE);\n        lineRenderer.setSeriesShapesVisible(0, true);\n        \n        // Perform some operations with lineRenderer\n        Color seriesPaint = (Color) lineRenderer.getSeriesPaint(0);\n        boolean shapesVisible = lineRenderer.getSeriesShapesVisible(0);\n        \n        System.out.println(\"Series Paint: \" + seriesPaint);\n        System.out.println(\"Shapes Visible: \" + shapesVisible);\n        \n        /* write */ renderer.setNegativePaint(Color.RED);\n        \n        // Additional operations unrelated to the write-read pair\n        XYDifferenceRenderer anotherRenderer = new XYDifferenceRenderer();\n        anotherRenderer.setPositivePaint(Color.GREEN);\n        \n        Color positivePaint = (Color) anotherRenderer.getPositivePaint();\n        System.out.println(\"Positive Paint Color: \" + positivePaint);\n        \n        // More complex operations\n        for (int i = 0; i < 5; i++) {\n            lineRenderer.setSeriesPaint(i, new Color(50 * i, 100, 150));\n            System.out.println(\"Series \" + i + \" Paint: \" + lineRenderer.getSeriesPaint(i));\n        }\n        \n        /* read */ Color negativePaint = (Color) renderer.getNegativePaint();\n        \n        System.out.println(\"Negative Paint Color: \" + negativePaint);\n        \n        // Final operations to further increase complexity\n        for (int i = 0; i < 3; i++) {\n            anotherRenderer.setPositivePaint(new Color(100, 100 + 20 * i, 200));\n            System.out.println(\"Updated Positive Paint Color: \" + anotherRenderer.getPositivePaint());\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYDifferenceRenderer;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDifferenceRenderer renderer = new XYDifferenceRenderer();\n        \n        /* write */ renderer.setNegativePaint(Color.RED);\n        \n        /* read */ Color negativePaint = (Color) renderer.getNegativePaint();\n        \n        System.out.println(\"Negative Paint Color: \" + negativePaint);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYDifferenceRenderer",
        "write_method": "setNegativePaint",
        "read_class": "org.jfree.chart.renderer.xy.XYDifferenceRenderer",
        "read_method": "getNegativePaint"
    }
}