{
    "java_code": "import org.jfree.chart.axis.DateAxis;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        DateAxis dateAxis = new DateAxis();\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n        \n        List<String> patterns = new ArrayList<>();\n        patterns.add(\"yyyy-MM-dd\");\n        patterns.add(\"MM/dd/yyyy\");\n        patterns.add(\"dd.MM.yyyy\");\n\n        // Set a date format override\n        /* write */ dateAxis.setDateFormatOverride(dateFormat);\n\n        // Perform some unrelated operations\n        for (String pattern : patterns) {\n            SimpleDateFormat tempFormat = new SimpleDateFormat(pattern);\n            System.out.println(\"Pattern: \" + tempFormat.toPattern());\n        }\n\n        // More unrelated operations\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Retrieve the date format override\n        /* read */ SimpleDateFormat retrievedFormat = (SimpleDateFormat) dateAxis.getDateFormatOverride();\n\n        // Output the retrieved pattern\n        System.out.println(\"Retrieved Date Format Pattern: \" + retrievedFormat.toPattern());\n\n        // Additional unrelated operations\n        for (int i = 0; i < numbers.size(); i++) {\n            System.out.println(\"Number at index \" + i + \": \" + numbers.get(i));\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.axis.DateAxis;\nimport java.text.SimpleDateFormat;\n\npublic class Main {\n    public static void main(String[] args) {\n        DateAxis dateAxis = new DateAxis();\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n        /* write */ dateAxis.setDateFormatOverride(dateFormat);\n        /* read */ SimpleDateFormat retrievedFormat = (SimpleDateFormat) dateAxis.getDateFormatOverride();\n\n        System.out.println(retrievedFormat.toPattern());\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.axis.DateAxis",
        "write_method": "setDateFormatOverride",
        "read_class": "org.jfree.chart.axis.DateAxis",
        "read_method": "getDateFormatOverride"
    }
}