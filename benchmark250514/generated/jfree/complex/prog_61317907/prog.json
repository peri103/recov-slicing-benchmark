{
    "java_code": "import org.jfree.chart.LegendItem;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LegendItem legendItem = new LegendItem(\"Sample Legend\");\n        ArrayList<String> legendLabels = new ArrayList<>();\n        HashMap<String, Boolean> visibilityMap = new HashMap<>();\n        \n        // Adding some legend labels\n        legendLabels.add(\"Legend 1\");\n        legendLabels.add(\"Legend 2\");\n        legendLabels.add(\"Legend 3\");\n        \n        // Initialize visibility map\n        for (String label : legendLabels) {\n            visibilityMap.put(label, false);\n        }\n        \n        // Set line visibility for the first legend\n        /* write */ legendItem.setLineVisible(true);\n        visibilityMap.put(\"Legend 1\", true);\n        \n        // Modify some other properties\n        for (String label : legendLabels) {\n            if (visibilityMap.get(label)) {\n                System.out.println(label + \" is visible.\");\n            } else {\n                System.out.println(label + \" is not visible.\");\n            }\n        }\n        \n        // Simulating some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 integers: \" + sum);\n        \n        // Read the line visibility status\n        /* read */ boolean isLineVisible = legendItem.isLineVisible();\n        System.out.println(\"Line visibility for 'Sample Legend': \" + isLineVisible);\n        \n        // Further processing\n        if (isLineVisible) {\n            System.out.println(\"Performing actions for visible legend.\");\n        } else {\n            System.out.println(\"No actions needed for invisible legend.\");\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.LegendItem;\n\npublic class Main {\n    public static void main(String[] args) {\n        LegendItem legendItem = new LegendItem(\"Sample Legend\");\n        /* write */ legendItem.setLineVisible(true);\n        /* read */ boolean isLineVisible = legendItem.isLineVisible();\n        System.out.println(isLineVisible);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.LegendItem",
        "write_method": "setLineVisible",
        "read_class": "org.jfree.chart.LegendItem",
        "read_method": "isLineVisible"
    }
}