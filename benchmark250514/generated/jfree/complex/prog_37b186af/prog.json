{
    "java_code": "import org.jfree.chart.renderer.category.LineAndShapeRenderer;\nimport org.jfree.chart.renderer.category.BarRenderer;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LineAndShapeRenderer renderer = new LineAndShapeRenderer();\n        BarRenderer barRenderer = new BarRenderer();\n        ArrayList<Boolean> visibilityList = new ArrayList<>();\n        \n        // Write operation for LineAndShapeRenderer\n        /* write */ renderer.setSeriesShapesVisible(0, true);\n        \n        // Additional write-read pair for BarRenderer\n        barRenderer.setSeriesVisible(1, true);\n        \n        // Complex operations\n        for (int i = 0; i < 5; i++) {\n            boolean visible = (i % 2 == 0);\n            barRenderer.setSeriesVisible(i, visible);\n            visibilityList.add(barRenderer.getSeriesVisible(i));\n        }\n        \n        // Additional operations\n        int sum = 0;\n        for (Boolean visible : visibilityList) {\n            if (visible) {\n                sum += 10;\n            }\n        }\n        System.out.println(\"Sum of visible series: \" + sum);\n        \n        // Read operation for LineAndShapeRenderer\n        /* read */ Boolean isVisible = renderer.getSeriesShapesVisible(0);\n        \n        System.out.println(\"LineAndShapeRenderer series 0 visibility: \" + isVisible);\n        \n        // Further complex operations\n        ArrayList<Boolean> shapesVisibilityList = new ArrayList<>();\n        for (int i = 0; i < 3; i++) {\n            renderer.setSeriesShapesVisible(i, i % 2 == 0);\n            shapesVisibilityList.add(renderer.getSeriesShapesVisible(i));\n        }\n        \n        for (Boolean shapeVisible : shapesVisibilityList) {\n            System.out.println(\"Shape visibility: \" + shapeVisible);\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.category.LineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        LineAndShapeRenderer renderer = new LineAndShapeRenderer();\n        \n        // Write operation\n        /* write */ renderer.setSeriesShapesVisible(0, true);\n        \n        // Read operation\n        /* read */ Boolean isVisible = renderer.getSeriesShapesVisible(0);\n        \n        System.out.println(isVisible);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "write_method": "setSeriesShapesVisible",
        "read_class": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "read_method": "getSeriesShapesVisible"
    }
}