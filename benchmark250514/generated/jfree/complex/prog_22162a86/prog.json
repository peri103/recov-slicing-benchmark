{
    "java_code": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.plot.CategoryPlot;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        CategoryPlot categoryPlot = new CategoryPlot();\n        HashMap<String, Double> plotSettings = new HashMap<>();\n\n        // Set some properties in CategoryPlot\n        categoryPlot.setRangeGridlinesVisible(true);\n        categoryPlot.setRangeCrosshairVisible(false);\n\n        // Store settings in HashMap\n        plotSettings.put(\"gridlinesVisible\", categoryPlot.isRangeGridlinesVisible() ? 1.0 : 0.0);\n        plotSettings.put(\"crosshairVisible\", categoryPlot.isRangeCrosshairVisible() ? 1.0 : 0.0);\n\n        // Perform some calculations\n        double totalVisibility = plotSettings.get(\"gridlinesVisible\") + plotSettings.get(\"crosshairVisible\");\n        System.out.println(\"Total Visibility: \" + totalVisibility);\n\n        // Interact with PiePlot\n        /* write */ piePlot.setMaximumLabelWidth(0.25);\n        \n        // Manipulate other settings\n        double labelWidthFactor = 0.5;\n        double adjustedLabelWidth = piePlot.getMaximumLabelWidth() * labelWidthFactor;\n        System.out.println(\"Adjusted Label Width: \" + adjustedLabelWidth);\n\n        // Use a loop to simulate complex operations\n        for (int i = 0; i < 3; i++) {\n            plotSettings.put(\"iteration\" + i, adjustedLabelWidth * i);\n        }\n\n        for (String key : plotSettings.keySet()) {\n            System.out.println(key + \": \" + plotSettings.get(key));\n        }\n\n        // Retrieve and print the maximum label width from PiePlot\n        /* read */ double maxLabelWidth = piePlot.getMaximumLabelWidth();\n        System.out.println(\"Maximum Label Width: \" + maxLabelWidth);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot plot = new PiePlot();\n        /* write */ plot.setMaximumLabelWidth(0.25);\n        /* read */ double value = plot.getMaximumLabelWidth();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setMaximumLabelWidth",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getMaximumLabelWidth"
    }
}