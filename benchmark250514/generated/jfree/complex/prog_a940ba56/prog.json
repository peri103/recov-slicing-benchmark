{
    "java_code": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.plot.CategoryPlot;\nimport org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.plot.Plot;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        CategoryPlot categoryPlot = new CategoryPlot();\n        XYPlot xyPlot = new XYPlot();\n\n        /* write */ piePlot.setMaximumLabelWidth(0.2);\n        \n        // Unrelated operations on CategoryPlot\n        categoryPlot.setDomainGridlinesVisible(true);\n        categoryPlot.setRangeGridlinesVisible(false);\n        \n        // Operations on XYPlot\n        xyPlot.setDomainCrosshairVisible(true);\n        xyPlot.setRangeCrosshairVisible(true);\n        \n        // More operations on PiePlot\n        piePlot.setInteriorGap(0.05);\n        piePlot.setCircular(true);\n        \n        // Operations on a generic Plot object\n        Plot genericPlot = piePlot;\n        genericPlot.setOutlineVisible(true);\n        \n        // Additional unrelated code\n        double totalWidth = 0;\n        for (int i = 0; i < 3; i++) {\n            totalWidth += piePlot.getMaximumLabelWidth();\n        }\n        \n        /* read */ double maxLabelWidth = piePlot.getMaximumLabelWidth();\n        System.out.println(maxLabelWidth);\n        \n        // Further operations on XYPlot\n        xyPlot.setDomainPannable(true);\n        xyPlot.setRangePannable(false);\n        \n        // Print statements for unrelated plots\n        System.out.println(\"CategoryPlot domain gridlines visible: \" + categoryPlot.isDomainGridlinesVisible());\n        System.out.println(\"XYPlot domain crosshair visible: \" + xyPlot.isDomainCrosshairVisible());\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        /* write */ piePlot.setMaximumLabelWidth(0.2);\n        /* read */ double maxLabelWidth = piePlot.getMaximumLabelWidth();\n        System.out.println(maxLabelWidth);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setMaximumLabelWidth",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getMaximumLabelWidth"
    }
}