{
    "java_code": "import org.jfree.chart.renderer.xy.XYAreaRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYAreaRenderer renderer = new XYAreaRenderer();\n        Paint paint = new Color(255, 0, 0); // Red color\n\n        // Additional unrelated code for complexity\n        Map<Integer, Paint> paintMap = new HashMap<>();\n        paintMap.put(0, paint);\n        paintMap.put(1, new Color(0, 255, 0)); // Green color\n        paintMap.put(2, new Color(0, 0, 255)); // Blue color\n\n        // Applying paints to renderer\n        for (Map.Entry<Integer, Paint> entry : paintMap.entrySet()) {\n            renderer.setSeriesFillPaint(entry.getKey(), entry.getValue());\n        }\n\n        // Some complex operations\n        int index = 0;\n        for (int i = 0; i < 5; i++) {\n            index = (index + i) % paintMap.size();\n            Paint currentPaint = paintMap.get(index);\n            System.out.println(\"Paint at index \" + index + \": \" + currentPaint);\n        }\n\n        // Original write-read pair\n        /* write */ renderer.setSeriesFillPaint(0, paint);\n\n        // More complex operations\n        double[] data = {0.1, 0.5, 0.3, 0.7, 0.9};\n        double sum = 0;\n        for (double value : data) {\n            sum += value;\n        }\n        double average = sum / data.length;\n        System.out.println(\"Average of data: \" + average);\n\n        // Original read operation\n        /* read */ Paint readPaint = renderer.getSeriesFillPaint(0);\n        System.out.println(\"Read Paint: \" + readPaint);\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYAreaRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYAreaRenderer renderer = new XYAreaRenderer();\n        Paint paint = new Color(255, 0, 0); // Red color\n        /* write */ renderer.setSeriesFillPaint(0, paint);\n        /* read */ Paint readPaint = renderer.getSeriesFillPaint(0);\n        System.out.println(readPaint);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYAreaRenderer",
        "write_method": "setSeriesFillPaint",
        "read_class": "org.jfree.chart.renderer.xy.XYAreaRenderer",
        "read_method": "getSeriesFillPaint"
    }
}