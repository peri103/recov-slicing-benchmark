{
    "java_code": "import org.jfree.chart.plot.Crosshair;\nimport org.jfree.chart.labels.CrosshairLabelGenerator;\nimport org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a Crosshair object\n        Crosshair crosshair = new Crosshair();\n        \n        // Create a custom label generator for the crosshair\n        CrosshairLabelGenerator labelGenerator = new CrosshairLabelGenerator() {\n            @Override\n            public String generateLabel(Crosshair crosshair) {\n                return \"Sample Label\";\n            }\n        };\n\n        // Create an XYPlot with axes and renderer\n        NumberAxis xAxis = new NumberAxis(\"X-Axis\");\n        NumberAxis yAxis = new NumberAxis(\"Y-Axis\");\n        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();\n        XYPlot plot = new XYPlot(null, xAxis, yAxis, renderer);\n\n        // Add some unrelated operations to make the program more complex\n        plot.setDomainCrosshairVisible(true);\n        plot.setRangeCrosshairVisible(true);\n        \n        // Set the label generator for the crosshair\n        /* write */ crosshair.setLabelGenerator(labelGenerator);\n        \n        // Perform additional unrelated operations\n        plot.setDomainCrosshairValue(5.0);\n        plot.setRangeCrosshairValue(10.0);\n        \n        // Retrieve the label generator from the crosshair\n        /* read */ CrosshairLabelGenerator retrievedLabelGenerator = crosshair.getLabelGenerator();\n        \n        // Generate and print the label using the retrieved label generator\n        String label = retrievedLabelGenerator.generateLabel(crosshair);\n        System.out.println(label);\n        \n        // More unrelated code to add complexity\n        double[] data = {1.0, 2.0, 3.0, 4.0, 5.0};\n        for (double value : data) {\n            System.out.println(\"Data value: \" + value);\n        }\n        \n        // Setting additional properties on the plot\n        plot.setDomainCrosshairLockedOnData(true);\n        plot.setRangeCrosshairStroke(new java.awt.BasicStroke(1.5f));\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.Crosshair;\nimport org.jfree.chart.labels.CrosshairLabelGenerator;\n\npublic class Main {\n    public static void main(String[] args) {\n        Crosshair crosshair = new Crosshair();\n        CrosshairLabelGenerator labelGenerator = new CrosshairLabelGenerator() {\n            @Override\n            public String generateLabel(Crosshair crosshair) {\n                return \"Sample Label\";\n            }\n        };\n        \n        /* write */ crosshair.setLabelGenerator(labelGenerator);\n        /* read */ CrosshairLabelGenerator retrievedLabelGenerator = crosshair.getLabelGenerator();\n        \n        String label = retrievedLabelGenerator.generateLabel(crosshair);\n        System.out.println(label);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.Crosshair",
        "write_method": "setLabelGenerator",
        "read_class": "org.jfree.chart.plot.Crosshair",
        "read_method": "getLabelGenerator"
    }
}