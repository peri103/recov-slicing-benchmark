{
    "java_code": "import org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\nimport org.jfree.chart.renderer.xy.StandardXYItemRenderer;\nimport org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.ValueAxis;\nimport org.jfree.chart.LegendItemCollection;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYPlot plot = new XYPlot();\n        XYItemRenderer renderer = new StandardXYItemRenderer();\n        \n        // Additional unrelated code\n        ValueAxis domainAxis = new NumberAxis(\"X Axis\");\n        ValueAxis rangeAxis = new NumberAxis(\"Y Axis\");\n        plot.setDomainAxis(domainAxis);\n        plot.setRangeAxis(rangeAxis);\n\n        LegendItemCollection legendItems = new LegendItemCollection();\n        legendItems.add(new org.jfree.chart.LegendItem(\"Series 1\"));\n        plot.setFixedLegendItems(legendItems);\n\n        for (int i = 0; i < 5; i++) {\n            plot.setDomainAxisLocation(i, org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT);\n        }\n\n        // Complex operations with the plot\n        plot.setDomainGridlinesVisible(true);\n        plot.setRangeGridlinesVisible(true);\n        plot.setDomainCrosshairVisible(false);\n        \n        /* write */ plot.setRenderer(renderer);\n        \n        // More operations\n        plot.setDomainPannable(true);\n        plot.setRangePannable(true);\n        \n        XYItemRenderer anotherRenderer = new StandardXYItemRenderer();\n        plot.setRenderer(anotherRenderer);\n        \n        // Unrelated logic\n        LegendItemCollection anotherLegendItems = new LegendItemCollection();\n        anotherLegendItems.add(new org.jfree.chart.LegendItem(\"Series 2\"));\n        plot.setFixedLegendItems(anotherLegendItems);\n\n        /* read */ XYItemRenderer retrievedRenderer = plot.getRenderer();\n        System.out.println(retrievedRenderer == renderer); // Should print true if the read method retrieved the value set by the write method\n        \n        // More complex logic\n        for (int i = 0; i < 3; i++) {\n            plot.setRangeAxisLocation(i, org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT);\n        }\n        \n        System.out.println(plot.getDomainAxis().getLabel());\n        System.out.println(plot.getRangeAxis().getLabel());\n        System.out.println(plot.isDomainGridlinesVisible());\n        System.out.println(plot.isRangeGridlinesVisible());\n    }\n}",
    "java_code_simple": "import org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYPlot plot = new XYPlot();\n        XYItemRenderer renderer = new XYItemRenderer() {\n            // Implement necessary methods if required\n        };\n        /* write */ plot.setRenderer(renderer);\n        /* read */ XYItemRenderer retrievedRenderer = plot.getRenderer();\n        System.out.println(retrievedRenderer == renderer); // Should print true if the read method retrieved the value set by the write method\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.plot.XYPlot",
        "write_method": "setRenderer",
        "read_class": "org.jfree.chart.plot.XYPlot",
        "read_method": "getRenderer"
    }
}