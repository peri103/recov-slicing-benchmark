{
    "java_code": "import org.jfree.chart.renderer.xy.XYDifferenceRenderer;\nimport java.awt.Color;\nimport java.awt.GradientPaint;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDifferenceRenderer renderer = new XYDifferenceRenderer();\n        \n        // Additional complex operations\n        ArrayList<Color> colorList = new ArrayList<>();\n        colorList.add(Color.RED);\n        colorList.add(Color.BLUE);\n        colorList.add(Color.YELLOW);\n        \n        for (Color color : colorList) {\n            renderer.setPositivePaint(color);\n            GradientPaint gradientPaint = new GradientPaint(0, 0, color, 100, 100, Color.WHITE);\n            renderer.setNegativePaint(gradientPaint);\n        }\n        \n        /* write */ renderer.setPositivePaint(Color.GREEN);\n        \n        // More complex operations\n        Color defaultColor = Color.BLACK;\n        for (int i = 0; i < 3; i++) {\n            if (i % 2 == 0) {\n                renderer.setPositivePaint(colorList.get(i));\n            } else {\n                renderer.setNegativePaint(new GradientPaint(0, 0, colorList.get(i), 100, 100, defaultColor));\n            }\n        }\n        \n        /* read */ Color positivePaint = (Color) renderer.getPositivePaint();\n        System.out.println(\"Positive Paint: \" + positivePaint);\n        \n        // Unrelated complex operations\n        int[] numbers = {10, 20, 30, 40, 50};\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 1; i <= 5; i++) {\n            numberList.add(i * 10);\n        }\n        for (int number : numberList) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYDifferenceRenderer;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDifferenceRenderer renderer = new XYDifferenceRenderer();\n        /* write */ renderer.setPositivePaint(Color.GREEN);\n        /* read */ Color positivePaint = (Color) renderer.getPositivePaint();\n        System.out.println(positivePaint);\n    }\n}",
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYDifferenceRenderer",
        "write_method": "setPositivePaint",
        "read_class": "org.jfree.chart.renderer.xy.XYDifferenceRenderer",
        "read_method": "getPositivePaint"
    }
}