{
    "files": {
        "RendererUtil.java": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class RendererUtil {\n    private XYStepAreaRenderer renderer;\n    private Stroke stroke;\n\n    public RendererUtil() {\n        this.renderer = new XYStepAreaRenderer();\n        this.stroke = new BasicStroke(2.0f);\n    }\n\n    public void configureRenderer() {\n        /* write */ renderer.setSeriesOutlineStroke(0, stroke);\n    }\n\n    public XYStepAreaRenderer getRenderer() {\n        return this.renderer;\n    }\n\n    public Stroke getStroke() {\n        return this.stroke;\n    }\n}\n",
        "RendererTest.java": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.Stroke;\n\npublic class RendererTest {\n    private RendererUtil rendererUtil;\n\n    public RendererTest() {\n        this.rendererUtil = new RendererUtil();\n    }\n\n    public void performTest() {\n        rendererUtil.configureRenderer();\n        XYStepAreaRenderer renderer = rendererUtil.getRenderer();\n        Stroke expectedStroke = rendererUtil.getStroke();\n        \n        /* read */ Stroke retrievedStroke = renderer.getSeriesOutlineStroke(0);\n        System.out.println(\"Is the stroke set correctly? \" + retrievedStroke.equals(expectedStroke));\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        RendererTest rendererTest = new RendererTest();\n        rendererTest.performTest();\n        \n        // Additional logic can be added here if needed\n        System.out.println(\"Renderer Test Completed\");\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "write_method": "setSeriesOutlineStroke",
        "read_class": "org.jfree.chart.renderer.xy.XYStepAreaRenderer",
        "read_method": "getSeriesOutlineStroke"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        \n        // Initialize a stroke object to be used for setting and getting the outline stroke\n        Stroke stroke = new BasicStroke(2.0f);\n        \n        /* write */ renderer.setSeriesOutlineStroke(0, stroke);\n        /* read */ Stroke retrievedStroke = renderer.getSeriesOutlineStroke(0);\n        \n        System.out.println(retrievedStroke.equals(stroke));\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYStepAreaRenderer;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\nimport java.awt.Color;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYStepAreaRenderer renderer = new XYStepAreaRenderer();\n        \n        // Initialize a stroke object to be used for setting and getting the outline stroke\n        Stroke stroke = new BasicStroke(2.0f);\n        \n        /* write */ renderer.setSeriesOutlineStroke(0, stroke);\n\n        // Create another renderer and set some properties\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        lineRenderer.setSeriesPaint(0, Color.BLUE);\n        lineRenderer.setSeriesShapesVisible(0, true);\n        \n        // Perform some unrelated operations\n        int[] dataPoints = new int[5];\n        for (int i = 0; i < dataPoints.length; i++) {\n            dataPoints[i] = i * 10;\n        }\n        \n        for (int point : dataPoints) {\n            System.out.println(\"Data point: \" + point);\n        }\n        \n        // Use the lineRenderer for another series\n        lineRenderer.setSeriesPaint(1, Color.RED);\n        lineRenderer.setSeriesShapesVisible(1, false);\n        \n        // Retrieve the stroke set earlier\n        /* read */ Stroke retrievedStroke = renderer.getSeriesOutlineStroke(0);\n        \n        System.out.println(\"Is the stroke set correctly? \" + retrievedStroke.equals(stroke));\n        \n        // Perform additional operations with the renderer\n        renderer.setSeriesOutlinePaint(0, Color.GREEN);\n        renderer.setSeriesOutlineStroke(1, new BasicStroke(1.0f));\n        \n        // Verify additional settings\n        System.out.println(\"Series 0 outline paint: \" + renderer.getSeriesOutlinePaint(0));\n        System.out.println(\"Series 1 outline stroke: \" + renderer.getSeriesOutlineStroke(1));\n    }\n}"
}