{
    "files": {
        "DotRendererManager.java": "import org.jfree.chart.renderer.xy.XYDotRenderer;\n\npublic class DotRendererManager {\n    private XYDotRenderer dotRenderer;\n\n    public DotRendererManager() {\n        this.dotRenderer = new XYDotRenderer();\n    }\n\n    public void setDotHeight(int height) {\n        /* write */ dotRenderer.setDotHeight(height);\n    }\n\n    public int getDotHeight() {\n        return dotRenderer.getDotHeight();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n\n    public double calculateAverage() {\n        int sum = 0;\n        for (int grade : grades) {\n            sum += grade;\n        }\n        return grades.isEmpty() ? 0 : (double) sum / grades.size();\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        DotRendererManager rendererManager = new DotRendererManager();\n        rendererManager.setDotHeight(5);\n\n        // Create a student and add grades\n        Student student = new Student(\"John Doe\");\n        student.addGrade(85);\n        student.addGrade(90);\n        student.addGrade(75);\n\n        // Calculate and display average grade\n        double averageGrade = student.calculateAverage();\n        System.out.println(\"Average grade for \" + student.getName() + \": \" + averageGrade);\n\n        // Perform unrelated operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 3);\n        }\n\n        int maxNumber = numbers.stream().max(Integer::compare).orElse(-1);\n        System.out.println(\"Max number: \" + maxNumber);\n\n        // Read the dot height\n        /* read */ int dotHeight = rendererManager.getDotHeight();\n        System.out.println(\"Dot height: \" + dotHeight);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYDotRenderer",
        "write_method": "setDotHeight",
        "read_class": "org.jfree.chart.renderer.xy.XYDotRenderer",
        "read_method": "getDotHeight"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYDotRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDotRenderer renderer = new XYDotRenderer();\n        /* write */ renderer.setDotHeight(5);\n        /* read */ int dotHeight = renderer.getDotHeight();\n        System.out.println(dotHeight);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYDotRenderer;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDotRenderer dotRenderer = new XYDotRenderer();\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        \n        /* write */ dotRenderer.setDotHeight(5);\n        \n        // Additional unrelated code\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        // More operations on numbers\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Setting and getting properties on another renderer\n        lineRenderer.setBaseShapesVisible(true);\n        boolean shapesVisible = lineRenderer.getBaseShapesVisible();\n        System.out.println(\"Shapes visible: \" + shapesVisible);\n        \n        // Further operations using the original renderer\n        int calculatedHeight = dotRenderer.getDotHeight() * 2;\n        System.out.println(\"Calculated height: \" + calculatedHeight);\n        \n        /* read */ int dotHeight = dotRenderer.getDotHeight();\n        System.out.println(\"Dot height: \" + dotHeight);\n        \n        // Additional operations\n        int maxNumber = numbers.stream().max(Integer::compare).orElse(-1);\n        System.out.println(\"Max number: \" + maxNumber);\n    }\n}"
}