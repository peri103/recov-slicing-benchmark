{
    "files": {
        "LegendItemWrapper.java": "import org.jfree.chart.LegendItem;\nimport java.awt.Shape;\n\npublic class LegendItemWrapper {\n    private LegendItem legendItem;\n\n    public LegendItemWrapper(String label) {\n        this.legendItem = new LegendItem(label);\n    }\n\n    public void setLegendShape(Shape shape) {\n        /* write */ legendItem.setShape(shape);\n    }\n\n    public LegendItem getLegendItem() {\n        return legendItem;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import org.jfree.chart.LegendItem;\nimport java.awt.geom.Rectangle2D;\nimport java.awt.Shape;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Creating a LegendItemWrapper and setting a shape\n        LegendItemWrapper legendWrapper = new LegendItemWrapper(\"Sample Legend\");\n        Shape rectangle = new Rectangle2D.Double(0, 0, 10, 10);\n        legendWrapper.setLegendShape(rectangle);\n\n        // Creating a course and adding students to it\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Accessing the legend item and reading the shape\n        LegendItem legendItem = legendWrapper.getLegendItem();\n        /* read */ Shape shape = legendItem.getShape();\n\n        // Printing the legend shape\n        System.out.println(\"Legend Shape: \" + shape);\n\n        // Printing the students in the course\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.LegendItem",
        "write_method": "setShape",
        "read_class": "org.jfree.chart.LegendItem",
        "read_method": "getShape"
    },
    "java_code_simple": "import org.jfree.chart.LegendItem;\nimport java.awt.Shape;\nimport java.awt.geom.Rectangle2D;\n\npublic class Main {\n    public static void main(String[] args) {\n        LegendItem legendItem = new LegendItem(\"Sample\");\n        Shape rectangle = new Rectangle2D.Double(0, 0, 10, 10);\n        \n        /* write */ legendItem.setShape(rectangle);\n        /* read */ Shape shape = legendItem.getShape();\n        \n        System.out.println(shape);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.LegendItem;\nimport java.awt.Shape;\nimport java.awt.geom.Rectangle2D;\nimport java.awt.Color;\nimport org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport org.jfree.chart.labels.PieSectionLabelGenerator;\n\npublic class Main {\n    public static void main(String[] args) {\n        LegendItem legendItem = new LegendItem(\"Sample\");\n        Shape rectangle = new Rectangle2D.Double(0, 0, 10, 10);\n        Color color = Color.BLUE;\n        \n        /* write */ legendItem.setShape(rectangle);\n        \n        // Additional complexity: Setting and getting other properties of LegendItem\n        legendItem.setPaint(color);\n        legendItem.setLabel(\"Updated Sample\");\n        \n        // Using another class: PieSectionLabelGenerator\n        PieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator(\"{0}: {1} ({2})\");\n        String label = labelGenerator.generateSectionLabel(null, null);\n        System.out.println(\"Generated Label: \" + label);\n\n        // More operations on LegendItem\n        legendItem.setLinePaint(Color.RED);\n        legendItem.setOutlinePaint(Color.GREEN);\n        \n        // Manipulating and accessing LegendItem properties\n        Color legendColor = (Color) legendItem.getPaint();\n        System.out.println(\"Legend Color: \" + legendColor);\n        System.out.println(\"Legend Label: \" + legendItem.getLabel());\n        \n        /* read */ Shape shape = legendItem.getShape();\n        \n        System.out.println(\"Legend Shape: \" + shape);\n    }\n}"
}