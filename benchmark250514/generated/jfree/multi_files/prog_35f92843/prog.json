{
    "files": {
        "ChartRenderer.java": "import org.jfree.chart.renderer.xy.XYDifferenceRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class ChartRenderer {\n    private XYDifferenceRenderer renderer;\n\n    public ChartRenderer() {\n        this.renderer = new XYDifferenceRenderer();\n    }\n\n    public void setPositivePaint(Color color) {\n        /* write */ renderer.setPositivePaint(color);\n    }\n\n    public Paint getPositivePaint() {\n        return renderer.getPositivePaint();\n    }\n}",
        "RendererManager.java": "import java.util.ArrayList;\nimport java.awt.Paint;\n\npublic class RendererManager {\n    private ArrayList<ChartRenderer> renderers;\n\n    public RendererManager() {\n        this.renderers = new ArrayList<>();\n    }\n\n    public void addRenderer(ChartRenderer renderer) {\n        renderers.add(renderer);\n    }\n\n    public Paint getRendererPositivePaint(int index) {\n        if (index < renderers.size()) {\n            return renderers.get(index).getPositivePaint();\n        }\n        return null;\n    }\n}",
        "Main.java": "import java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        ChartRenderer renderer1 = new ChartRenderer();\n        ChartRenderer renderer2 = new ChartRenderer();\n        \n        RendererManager manager = new RendererManager();\n        manager.addRenderer(renderer1);\n        manager.addRenderer(renderer2);\n\n        renderer1.setPositivePaint(new Color(0, 255, 0)); // Set green color\n        renderer2.setPositivePaint(new Color(255, 0, 0)); // Set red color\n\n        // Perform unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 4: \" + sum);\n\n        // Retrieve positive paint from the first renderer\n        /* read */ Paint positivePaint = manager.getRendererPositivePaint(0);\n        System.out.println(\"Renderer 1 Positive Paint: \" + positivePaint);\n\n        // Additional unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 3; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 3: \" + product);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYDifferenceRenderer",
        "write_method": "setPositivePaint",
        "read_class": "org.jfree.chart.renderer.xy.XYDifferenceRenderer",
        "read_method": "getPositivePaint"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYDifferenceRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDifferenceRenderer renderer = new XYDifferenceRenderer();\n        Paint positivePaint = new Color(0, 255, 0); // Green color\n        /* write */ renderer.setPositivePaint(positivePaint);\n        /* read */ Paint readPositivePaint = renderer.getPositivePaint();\n        \n        System.out.println(\"Positive Paint: \" + readPositivePaint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYDifferenceRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDifferenceRenderer renderer = new XYDifferenceRenderer();\n        Paint positivePaint = new Color(0, 255, 0); // Green color\n\n        // Create a list to store renderer configurations\n        ArrayList<XYDifferenceRenderer> rendererList = new ArrayList<>();\n        rendererList.add(renderer);\n\n        // Set the positive paint for the renderer\n        /* write */ renderer.setPositivePaint(positivePaint);\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Create another renderer and configure it\n        XYDifferenceRenderer anotherRenderer = new XYDifferenceRenderer();\n        anotherRenderer.setPositivePaint(new Color(255, 0, 0)); // Red color\n        rendererList.add(anotherRenderer);\n\n        // Iterate over the renderer list and print their positive paint\n        for (XYDifferenceRenderer r : rendererList) {\n            Paint paint = r.getPositivePaint();\n            System.out.println(\"Renderer Positive Paint: \" + paint);\n        }\n\n        // Read the positive paint from the original renderer\n        /* read */ Paint readPositivePaint = renderer.getPositivePaint();\n        \n        System.out.println(\"Original Renderer Positive Paint: \" + readPositivePaint);\n\n        // Additional unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n    }\n}"
}