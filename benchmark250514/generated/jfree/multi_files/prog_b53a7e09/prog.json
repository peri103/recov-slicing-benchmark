{
    "files": {
        "LegendManager.java": "import org.jfree.chart.LegendItem;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class LegendManager {\n    private LegendItem legendItem;\n\n    public LegendManager(String label) {\n        this.legendItem = new LegendItem(label);\n    }\n\n    public void setStroke(float width) {\n        Stroke stroke = new BasicStroke(width);\n        /* write */ legendItem.setLineStroke(stroke);\n    }\n\n    public LegendItem getLegendItem() {\n        return legendItem;\n    }\n}\n",
        "LegendAnalyzer.java": "import org.jfree.chart.LegendItem;\nimport java.awt.Stroke;\n\npublic class LegendAnalyzer {\n    private LegendItem legendItem;\n\n    public LegendAnalyzer(LegendItem legendItem) {\n        this.legendItem = legendItem;\n    }\n\n    public void analyze() {\n        /* read */ Stroke readStroke = legendItem.getLineStroke();\n        System.out.println(\"Analyzed Stroke: \" + readStroke);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Main.java": "import java.awt.Color;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LegendManager and set a stroke\n        LegendManager legendManager = new LegendManager(\"Sample Legend\");\n        legendManager.setStroke(2.0f);\n\n        // Create a LegendAnalyzer to analyze the legend item\n        LegendAnalyzer legendAnalyzer = new LegendAnalyzer(legendManager.getLegendItem());\n        legendAnalyzer.analyze();\n\n        // Create a list of students\n        List<Student> students = new ArrayList<>();\n        students.add(new Student(\"Alice\", 20));\n        students.add(new Student(\"Bob\", 22));\n\n        // Print student details\n        for (Student student : students) {\n            System.out.println(\"Student Name: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n\n        // Create a list of colors\n        List<Color> colorList = new ArrayList<>();\n        colorList.add(Color.RED);\n        colorList.add(Color.GREEN);\n        colorList.add(Color.BLUE);\n\n        // Print each color\n        for (Color color : colorList) {\n            System.out.println(\"Color: \" + color);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.LegendItem",
        "write_method": "setLineStroke",
        "read_class": "org.jfree.chart.LegendItem",
        "read_method": "getLineStroke"
    },
    "java_code_simple": "import org.jfree.chart.LegendItem;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a LegendItem object\n        LegendItem legendItem = new LegendItem(\"Sample\");\n\n        // Create a Stroke object to set\n        Stroke stroke = new BasicStroke(2.0f);\n\n        // Use the write method to set the line stroke\n        /* write */ legendItem.setLineStroke(stroke);\n\n        // Use the read method to get the line stroke\n        /* read */ Stroke readStroke = legendItem.getLineStroke();\n\n        // Print the result to verify correctness\n        System.out.println(readStroke.equals(stroke));\n    }\n}",
    "java_code_complex": "import org.jfree.chart.LegendItem;\nimport java.awt.BasicStroke;\nimport java.awt.Stroke;\nimport java.awt.Color;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a LegendItem object\n        LegendItem legendItem = new LegendItem(\"Sample\");\n\n        // Create a Stroke object to set\n        Stroke stroke = new BasicStroke(2.0f);\n\n        // Use the write method to set the line stroke\n        /* write */ legendItem.setLineStroke(stroke);\n\n        // Create a list of colors and add some colors to it\n        List<Color> colorList = new ArrayList<>();\n        colorList.add(Color.RED);\n        colorList.add(Color.GREEN);\n        colorList.add(Color.BLUE);\n\n        // Iterate over the list and print each color\n        for (Color color : colorList) {\n            System.out.println(\"Color: \" + color);\n        }\n\n        // Create another LegendItem and set properties\n        LegendItem anotherLegendItem = new LegendItem(\"Another Sample\");\n        anotherLegendItem.setLineStroke(new BasicStroke(3.0f));\n        anotherLegendItem.setLinePaint(Color.ORANGE);\n\n        // Use the read method to get the line stroke\n        /* read */ Stroke readStroke = legendItem.getLineStroke();\n\n        // Print the result to verify correctness\n        System.out.println(\"Read Stroke equals set Stroke: \" + readStroke.equals(stroke));\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Print properties of anotherLegendItem\n        System.out.println(\"Another Legend Item Line Stroke: \" + anotherLegendItem.getLineStroke());\n        System.out.println(\"Another Legend Item Line Paint: \" + anotherLegendItem.getLinePaint());\n    }\n}"
}