{
    "files": {
        "TimePeriodManager.java": "import org.jfree.chart.axis.PeriodAxis;\nimport org.jfree.data.time.RegularTimePeriod;\n\npublic class TimePeriodManager {\n    private PeriodAxis periodAxis;\n\n    public TimePeriodManager(String axisName) {\n        this.periodAxis = new PeriodAxis(axisName);\n    }\n\n    public void setFirstPeriod(RegularTimePeriod period) {\n        /* write */ periodAxis.setFirst(period);\n    }\n\n    public RegularTimePeriod getFirstPeriod() {\n        return periodAxis.getFirst();\n    }\n}",
        "Student.java": "public class Student {\n    private String name;\n    private int studentId;\n\n    public Student(String name, int studentId) {\n        this.name = name;\n        this.studentId = studentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getStudentId() {\n        return studentId;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', studentId=\" + studentId + \"}\";\n    }\n}",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n\n    @Override\n    public String toString() {\n        return \"Course{courseName='\" + courseName + \"', students=\" + students + \"}\";\n    }\n}",
        "Main.java": "import org.jfree.data.time.Day;\nimport org.jfree.data.time.RegularTimePeriod;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize TimePeriodManager and set the first period\n        TimePeriodManager timePeriodManager = new TimePeriodManager(\"Academic Year\");\n        RegularTimePeriod startPeriod = new Day(1, 1, 2023);\n        timePeriodManager.setFirstPeriod(startPeriod);\n\n        // Create a course and add students\n        Course course = new Course(\"Computer Science\");\n        course.addStudent(new Student(\"Alice\", 1));\n        course.addStudent(new Student(\"Bob\", 2));\n\n        // Print course and students\n        System.out.println(course);\n\n        // Retrieve the first period using the read method\n        /* read */ RegularTimePeriod firstPeriod = timePeriodManager.getFirstPeriod();\n        System.out.println(\"First period of the academic year: \" + firstPeriod);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.axis.PeriodAxis",
        "write_method": "setFirst",
        "read_class": "org.jfree.chart.axis.PeriodAxis",
        "read_method": "getFirst"
    },
    "java_code_simple": "import org.jfree.chart.axis.PeriodAxis;\nimport org.jfree.data.time.RegularTimePeriod;\nimport org.jfree.data.time.Day;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the PeriodAxis object\n        PeriodAxis periodAxis = new PeriodAxis(\"Demo Axis\");\n\n        // Create a RegularTimePeriod instance to use with the write and read methods\n        RegularTimePeriod period = new Day(1, 1, 2023);\n\n        // Use the write method to set the first period\n        /* write */ periodAxis.setFirst(period);\n\n        // Use the read method to get the first period\n        /* read */ RegularTimePeriod firstPeriod = periodAxis.getFirst();\n\n        // Print the result to verify that the read method retrieves the value written by the write method\n        System.out.println(firstPeriod);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.axis.PeriodAxis;\nimport org.jfree.data.time.RegularTimePeriod;\nimport org.jfree.data.time.Day;\nimport org.jfree.data.time.Month;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the PeriodAxis object\n        PeriodAxis periodAxis = new PeriodAxis(\"Demo Axis\");\n\n        // Create a RegularTimePeriod instance to use with the write and read methods\n        RegularTimePeriod period = new Day(1, 1, 2023);\n\n        // Use the write method to set the first period\n        /* write */ periodAxis.setFirst(period);\n\n        // Create another PeriodAxis object for more complexity\n        PeriodAxis anotherPeriodAxis = new PeriodAxis(\"Another Axis\");\n        RegularTimePeriod anotherPeriod = new Month(1, 2023);\n        anotherPeriodAxis.setFirst(anotherPeriod);\n\n        // Create an ArrayList to store some RegularTimePeriod objects\n        ArrayList<RegularTimePeriod> periodList = new ArrayList<>();\n        periodList.add(period);\n        periodList.add(anotherPeriod);\n\n        // Perform operations on the periodList\n        for (RegularTimePeriod p : periodList) {\n            System.out.println(\"Period: \" + p);\n        }\n\n        // Use the read method to get the first period\n        /* read */ RegularTimePeriod firstPeriod = periodAxis.getFirst();\n\n        // Print the result to verify that the read method retrieves the value written by the write method\n        System.out.println(\"First period from periodAxis: \" + firstPeriod);\n\n        // Perform additional operations on anotherPeriodAxis\n        RegularTimePeriod retrievedPeriod = anotherPeriodAxis.getFirst();\n        System.out.println(\"First period from anotherPeriodAxis: \" + retrievedPeriod);\n\n        // Create more RegularTimePeriod instances and manipulate them\n        RegularTimePeriod period3 = new Day(15, 1, 2023);\n        RegularTimePeriod period4 = new Day(20, 1, 2023);\n        periodList.add(period3);\n        periodList.add(period4);\n\n        for (RegularTimePeriod p : periodList) {\n            System.out.println(\"Updated Period List: \" + p);\n        }\n    }\n}"
}