{
    "files": {
        "PiePlotVisibility.java": "import org.jfree.chart.plot.PiePlot;\n\npublic class PiePlotVisibility {\n    private PiePlot piePlot;\n\n    public PiePlotVisibility() {\n        piePlot = new PiePlot();\n    }\n\n    public void setOutlinesVisible(boolean visible) {\n        /* write */ piePlot.setSectionOutlinesVisible(visible);\n    }\n\n    public boolean getOutlinesVisible() {\n        return piePlot.getSectionOutlinesVisible();\n    }\n}\n",
        "ComplexPlotOperations.java": "import org.jfree.chart.plot.CategoryPlot;\nimport org.jfree.chart.plot.XYPlot;\n\npublic class ComplexPlotOperations {\n    private CategoryPlot categoryPlot;\n    private XYPlot xyPlot;\n\n    public ComplexPlotOperations() {\n        categoryPlot = new CategoryPlot();\n        xyPlot = new XYPlot();\n    }\n\n    public void toggleGridlines() {\n        categoryPlot.setDomainGridlinesVisible(false);\n        xyPlot.setDomainGridlinesVisible(true);\n    }\n\n    public boolean areCategoryGridlinesVisible() {\n        return categoryPlot.isDomainGridlinesVisible();\n    }\n\n    public boolean areXYGridlinesVisible() {\n        return xyPlot.isDomainGridlinesVisible();\n    }\n}\n",
        "DataAnalyzer.java": "public class DataAnalyzer {\n    private double[] dataValues;\n\n    public DataAnalyzer(double[] dataValues) {\n        this.dataValues = dataValues;\n    }\n\n    public double calculateAverage() {\n        double total = 0;\n        for (double value : dataValues) {\n            total += value;\n        }\n        return total / dataValues.length;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        PiePlotVisibility piePlotVisibility = new PiePlotVisibility();\n        ComplexPlotOperations complexPlotOperations = new ComplexPlotOperations();\n        DataAnalyzer dataAnalyzer = new DataAnalyzer(new double[]{1.0, 2.5, 3.0, 4.5, 5.0});\n\n        piePlotVisibility.setOutlinesVisible(true);\n        complexPlotOperations.toggleGridlines();\n\n        if (complexPlotOperations.areCategoryGridlinesVisible()) {\n            System.out.println(\"Category gridlines are visible.\");\n        } else {\n            System.out.println(\"Category gridlines are not visible.\");\n        }\n\n        if (complexPlotOperations.areXYGridlinesVisible()) {\n            System.out.println(\"XY gridlines are visible.\");\n        } else {\n            System.out.println(\"XY gridlines are not visible.\");\n        }\n\n        double average = dataAnalyzer.calculateAverage();\n        System.out.println(\"Average value: \" + average);\n\n        /* read */ boolean outlinesVisible = piePlotVisibility.getOutlinesVisible();\n        System.out.println(\"Outlines visible: \" + outlinesVisible);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setSectionOutlinesVisible",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getSectionOutlinesVisible"
    },
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        /* write */ piePlot.setSectionOutlinesVisible(true);\n        /* read */ boolean outlinesVisible = piePlot.getSectionOutlinesVisible();\n        System.out.println(outlinesVisible);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.plot.CategoryPlot;\nimport org.jfree.chart.plot.XYPlot;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot piePlot = new PiePlot();\n        CategoryPlot categoryPlot = new CategoryPlot();\n        XYPlot xyPlot = new XYPlot();\n        \n        /* write */ piePlot.setSectionOutlinesVisible(true);\n        \n        categoryPlot.setDomainGridlinesVisible(false);\n        xyPlot.setDomainGridlinesVisible(true);\n        \n        boolean categoryGridlinesVisible = categoryPlot.isDomainGridlinesVisible();\n        boolean xyGridlinesVisible = xyPlot.isDomainGridlinesVisible();\n        \n        if (categoryGridlinesVisible) {\n            System.out.println(\"Category gridlines are visible.\");\n        } else {\n            System.out.println(\"Category gridlines are not visible.\");\n        }\n        \n        if (xyGridlinesVisible) {\n            System.out.println(\"XY gridlines are visible.\");\n        } else {\n            System.out.println(\"XY gridlines are not visible.\");\n        }\n        \n        // Complex logic using PiePlot\n        int numberOfSections = 5;\n        for (int i = 0; i < numberOfSections; i++) {\n            piePlot.setSectionOutlinesVisible(i % 2 == 0);\n        }\n        \n        /* read */ boolean outlinesVisible = piePlot.getSectionOutlinesVisible();\n        System.out.println(\"Outlines visible: \" + outlinesVisible);\n        \n        // Additional complex logic\n        double[] dataValues = {1.0, 2.5, 3.0, 4.5, 5.0};\n        double total = 0;\n        for (double value : dataValues) {\n            total += value;\n        }\n        \n        double average = total / dataValues.length;\n        System.out.println(\"Average value: \" + average);\n    }\n}"
}