{
    "files": {
        "PaintManager.java": "import java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\n\npublic class PaintManager {\n    private HashMap<String, Paint> plotPaints = new HashMap<>();\n\n    public PaintManager() {\n        // Initialize default paints\n        plotPaints.put(\"PiePlot\", new Color(100, 100, 100));\n        plotPaints.put(\"CategoryPlot\", new Color(150, 150, 150));\n    }\n\n    public void setPaint(String plotName, Paint paint) {\n        /* write */ plotPaints.put(plotName, paint);\n    }\n\n    public Paint getPaint(String plotName) {\n        return plotPaints.get(plotName);\n    }\n\n    public void printAllPaints() {\n        for (String plotName : plotPaints.keySet()) {\n            System.out.println(plotName + \" Paint: \" + plotPaints.get(plotName));\n        }\n    }\n}\n",
        "PlotManager.java": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.plot.CategoryPlot;\nimport java.awt.Paint;\n\npublic class PlotManager {\n    private PiePlot piePlot = new PiePlot();\n    private CategoryPlot categoryPlot = new CategoryPlot();\n    private PaintManager paintManager;\n\n    public PlotManager(PaintManager paintManager) {\n        this.paintManager = paintManager;\n    }\n\n    public void initializePlots() {\n        piePlot.setShadowPaint(paintManager.getPaint(\"PiePlot\"));\n        categoryPlot.setDomainGridlinePaint(paintManager.getPaint(\"CategoryPlot\"));\n    }\n\n    public Paint getPiePlotShadowPaint() {\n        /* read */ return piePlot.getShadowPaint();\n    }\n\n    public Paint getCategoryPlotGridlinePaint() {\n        return categoryPlot.getDomainGridlinePaint();\n    }\n}\n",
        "Main.java": "import java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        PaintManager paintManager = new PaintManager();\n        PlotManager plotManager = new PlotManager(paintManager);\n\n        // Change the shadow paint for PiePlot\n        paintManager.setPaint(\"PiePlot\", new Color(200, 200, 200));\n\n        // Initialize plots with the current paint settings\n        plotManager.initializePlots();\n\n        // Print all paints\n        paintManager.printAllPaints();\n\n        // Read the shadow paint from PiePlot\n        Paint piePlotShadowPaint = plotManager.getPiePlotShadowPaint();\n        System.out.println(\"PiePlot Shadow Paint: \" + piePlotShadowPaint);\n\n        // Additional operations\n        int shadowBlueComponent = ((Color) piePlotShadowPaint).getBlue();\n        System.out.println(\"Shadow Paint Blue Component: \" + shadowBlueComponent);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setShadowPaint",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getShadowPaint"
    },
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot plot = new PiePlot();\n        Paint shadowPaint = new Color(100, 100, 100); // Initialize shadow paint color\n\n        /* write */ plot.setShadowPaint(shadowPaint);\n        /* read */ Paint readShadowPaint = plot.getShadowPaint();\n\n        System.out.println(\"Shadow Paint: \" + readShadowPaint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.PiePlot;\nimport org.jfree.chart.plot.CategoryPlot;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize PiePlot and shadow paint color\n        PiePlot piePlot = new PiePlot();\n        Paint shadowPaint = new Color(100, 100, 100); \n\n        // Initialize a CategoryPlot with a different paint color\n        CategoryPlot categoryPlot = new CategoryPlot();\n        Paint categoryPaint = new Color(150, 150, 150);\n        categoryPlot.setDomainGridlinePaint(categoryPaint);\n\n        // Using a HashMap to store plot information\n        HashMap<String, Paint> plotPaints = new HashMap<>();\n        plotPaints.put(\"PiePlot\", shadowPaint);\n        plotPaints.put(\"CategoryPlot\", categoryPaint);\n\n        // Iterate over the HashMap and print the paints\n        for (String plotName : plotPaints.keySet()) {\n            System.out.println(plotName + \" Paint: \" + plotPaints.get(plotName));\n        }\n\n        // Set shadow paint for PiePlot\n        /* write */ piePlot.setShadowPaint(plotPaints.get(\"PiePlot\"));\n\n        // Additional operations on CategoryPlot\n        Paint readCategoryPaint = categoryPlot.getDomainGridlinePaint();\n        System.out.println(\"CategoryPlot Domain Gridline Paint: \" + readCategoryPaint);\n\n        // Perform some calculations using plot colors\n        int colorSum = ((Color) shadowPaint).getRed() + ((Color) categoryPaint).getRed();\n        System.out.println(\"Sum of Red components: \" + colorSum);\n\n        // Read shadow paint from PiePlot\n        /* read */ Paint readShadowPaint = piePlot.getShadowPaint();\n        System.out.println(\"PiePlot Shadow Paint: \" + readShadowPaint);\n\n        // Perform additional operations using the read shadow paint\n        int shadowBlueComponent = ((Color) readShadowPaint).getBlue();\n        System.out.println(\"Shadow Paint Blue Component: \" + shadowBlueComponent);\n    }\n}"
}