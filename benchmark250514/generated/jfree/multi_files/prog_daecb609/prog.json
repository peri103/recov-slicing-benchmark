{
    "files": {
        "PiePlotManager.java": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\n\npublic class PiePlotManager {\n    private PiePlot plot;\n\n    public PiePlotManager() {\n        this.plot = new PiePlot();\n    }\n\n    public void setSectionOutline(String section, Color color) {\n        /* write */ plot.setSectionOutlinePaint(section, color);\n    }\n\n    public Color getSectionOutline(String section) {\n        return (Color) plot.getSectionOutlinePaint(section);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n}\n",
        "Main.java": "import java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Managing pie plot section outlines\n        PiePlotManager plotManager = new PiePlotManager();\n        plotManager.setSectionOutline(\"Section1\", Color.RED);\n\n        // Creating a course and adding students\n        Course mathCourse = new Course(\"Mathematics\");\n        Student alice = new Student(\"Alice\", 1);\n        Student bob = new Student(\"Bob\", 2);\n        mathCourse.addStudent(alice);\n        mathCourse.addStudent(bob);\n\n        // Displaying students in the course\n        for (Student student : mathCourse.getStudents()) {\n            System.out.println(\"Student Name: \" + student.getName() + \", ID: \" + student.getId());\n        }\n\n        // More complex operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 integers: \" + sum);\n\n        // Reading the outline paint for a section\n        /* read */ Color outlinePaint = plotManager.getSectionOutline(\"Section1\");\n        System.out.println(\"Outline paint for Section1: \" + outlinePaint);\n\n        // Additional complex operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 integers: \" + product);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setSectionOutlinePaint",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getSectionOutlinePaint"
    },
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot plot = new PiePlot();\n        /* write */ plot.setSectionOutlinePaint(\"Section1\", Color.RED);\n        /* read */ Color outlinePaint = (Color) plot.getSectionOutlinePaint(\"Section1\");\n        System.out.println(outlinePaint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot plot = new PiePlot();\n        PiePlot plot2 = new PiePlot();\n        \n        // Setting up a map to store section names and their colors\n        Map<String, Color> sectionColors = new HashMap<>();\n        sectionColors.put(\"Section1\", Color.RED);\n        sectionColors.put(\"Section2\", Color.BLUE);\n        sectionColors.put(\"Section3\", Color.GREEN);\n\n        // Applying colors to sections in plot2\n        for (Map.Entry<String, Color> entry : sectionColors.entrySet()) {\n            plot2.setSectionOutlinePaint(entry.getKey(), entry.getValue());\n        }\n\n        // More complex operations\n        int counter = 0;\n        for (String section : sectionColors.keySet()) {\n            if (counter % 2 == 0) {\n                plot2.setSectionOutlinePaint(section, Color.YELLOW);\n            }\n            counter++;\n        }\n\n        /* write */ plot.setSectionOutlinePaint(\"Section1\", Color.RED);\n\n        // Simulating some unrelated computations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 integers: \" + sum);\n\n        // Checking colors in plot2\n        for (String section : sectionColors.keySet()) {\n            Color color = (Color) plot2.getSectionOutlinePaint(section);\n            System.out.println(\"Section: \" + section + \", Color: \" + color);\n        }\n\n        /* read */ Color outlinePaint = (Color) plot.getSectionOutlinePaint(\"Section1\");\n        System.out.println(\"Outline paint for Section1 in plot: \" + outlinePaint);\n\n        // Additional complex operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 integers: \" + product);\n    }\n}"
}