{
    "files": {
        "ChartRenderer.java": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class ChartRenderer {\n    private XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n\n    public void configureLineVisibility(int seriesIndex, boolean visible) {\n        /* write */ lineRenderer.setSeriesLinesVisible(seriesIndex, visible);\n    }\n\n    public Boolean isLineVisible(int seriesIndex) {\n        return lineRenderer.getSeriesLinesVisible(seriesIndex);\n    }\n}",
        "DataProcessor.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class DataProcessor {\n    private List<Integer> data = new ArrayList<>();\n\n    public void addData(int value) {\n        data.add(value);\n    }\n\n    public int calculateSum() {\n        int sum = 0;\n        for (int value : data) {\n            sum += value;\n        }\n        return sum;\n    }\n}",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        ChartRenderer renderer = new ChartRenderer();\n        DataProcessor processor = new DataProcessor();\n\n        // Configure renderer\n        renderer.configureLineVisibility(0, true);\n\n        // Add data and calculate sum\n        for (int i = 0; i < 10; i++) {\n            processor.addData(i);\n        }\n        int sum = processor.calculateSum();\n        System.out.println(\"Sum: \" + sum);\n\n        // Check visibility of series lines\n        /* read */ Boolean isVisible = renderer.isLineVisible(0);\n        \n        // Print visibility\n        System.out.println(\"Series 0 lines visible: \" + isVisible);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",
        "write_method": "setSeriesLinesVisible",
        "read_class": "org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",
        "read_method": "getSeriesLinesVisible"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();\n        \n        /* write */ renderer.setSeriesLinesVisible(0, true);\n        \n        /* read */ Boolean isVisible = renderer.getSeriesLinesVisible(0);\n        \n        System.out.println(isVisible);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\nimport org.jfree.chart.renderer.xy.XYAreaRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        XYItemRenderer itemRenderer = new XYAreaRenderer();\n        \n        // Configure line renderer\n        /* write */ lineRenderer.setSeriesLinesVisible(0, true);\n        \n        // Configure item renderer\n        itemRenderer.setSeriesPaint(0, java.awt.Color.RED);\n        itemRenderer.setSeriesPaint(1, java.awt.Color.BLUE);\n        \n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n        \n        // Check visibility of series lines\n        /* read */ Boolean isVisible = lineRenderer.getSeriesLinesVisible(0);\n        \n        // Print visibility\n        System.out.println(\"Series 0 lines visible: \" + isVisible);\n        \n        // Additional configuration for item renderer\n        itemRenderer.setSeriesShapesVisible(0, true);\n        itemRenderer.setSeriesShapesVisible(1, false);\n        \n        // Print some information\n        System.out.println(\"Configuration complete.\");\n    }\n}"
}