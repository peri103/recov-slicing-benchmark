{
    "files": {
        "LegendManager.java": "import org.jfree.chart.LegendItem;\nimport java.awt.Color;\n\npublic class LegendManager {\n    private LegendItem legendItem;\n\n    public LegendManager(String label) {\n        legendItem = new LegendItem(label);\n    }\n\n    public void setLegendLabelPaint(Color color) {\n        /* write */ legendItem.setLabelPaint(color);\n    }\n\n    public LegendItem getLegendItem() {\n        return legendItem;\n    }\n}\n",
        "LegendDisplay.java": "import org.jfree.chart.LegendItem;\nimport java.awt.Color;\n\npublic class LegendDisplay {\n    private LegendItem legendItem;\n\n    public LegendDisplay(LegendItem legendItem) {\n        this.legendItem = legendItem;\n    }\n\n    public void displayLegendDetails() {\n        System.out.println(\"Legend: \" + legendItem.getLabel());\n        System.out.println(\"Font: \" + legendItem.getLabelFont());\n\n        /* read */ Color labelPaint = (Color) legendItem.getLabelPaint();\n        System.out.println(\"Paint: \" + labelPaint);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public void displayCourseDetails() {\n        System.out.println(\"Course: \" + courseName);\n        for (Student student : students) {\n            System.out.println(\"Student: \" + student.getName() + \", ID: \" + student.getId());\n        }\n    }\n}\n",
        "Main.java": "import java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create LegendManager and use the write method\n        LegendManager legendManager = new LegendManager(\"Sample Legend\");\n        legendManager.setLegendLabelPaint(Color.RED);\n\n        // Create LegendDisplay and use the read method\n        LegendDisplay legendDisplay = new LegendDisplay(legendManager.getLegendItem());\n        legendDisplay.displayLegendDetails();\n\n        // Create a course and add students\n        Course course = new Course(\"Computer Science\");\n        course.addStudent(new Student(\"Alice\", 1));\n        course.addStudent(new Student(\"Bob\", 2));\n\n        // Display course details\n        course.displayCourseDetails();\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.LegendItem",
        "write_method": "setLabelPaint",
        "read_class": "org.jfree.chart.LegendItem",
        "read_method": "getLabelPaint"
    },
    "java_code_simple": "import org.jfree.chart.LegendItem;\nimport java.awt.Color;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the LegendItem object\n        LegendItem legendItem = new LegendItem(\"Sample Legend\");\n\n        // Use the write method\n        /* write */ legendItem.setLabelPaint(Color.RED);\n\n        // Use the read method\n        /* read */ Color labelPaint = (Color) legendItem.getLabelPaint();\n\n        // Print the result to verify\n        System.out.println(labelPaint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.LegendItem;\nimport java.awt.Color;\nimport java.awt.Font;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the LegendItem object\n        LegendItem legendItem = new LegendItem(\"Sample Legend\");\n\n        // Initialize another LegendItem object for additional complexity\n        LegendItem anotherLegendItem = new LegendItem(\"Another Legend\");\n\n        // Initialize an ArrayList to store LegendItems\n        ArrayList<LegendItem> legendList = new ArrayList<>();\n        legendList.add(legendItem);\n        legendList.add(anotherLegendItem);\n\n        // Use the write method on the first LegendItem\n        /* write */ legendItem.setLabelPaint(Color.RED);\n\n        // Set label paint for the second LegendItem\n        anotherLegendItem.setLabelPaint(Color.BLUE);\n\n        // Set font for the LegendItems\n        Font font = new Font(\"Arial\", Font.BOLD, 12);\n        legendItem.setLabelFont(font);\n        anotherLegendItem.setLabelFont(font);\n\n        // Iterate through the list and print properties of each LegendItem\n        for (LegendItem item : legendList) {\n            System.out.println(\"Legend: \" + item.getLabel());\n            System.out.println(\"Font: \" + item.getLabelFont());\n            System.out.println(\"Paint: \" + item.getLabelPaint());\n        }\n\n        // Use the read method on the first LegendItem\n        /* read */ Color labelPaint = (Color) legendItem.getLabelPaint();\n\n        // Print the result to verify\n        System.out.println(\"Read Label Paint: \" + labelPaint);\n\n        // Perform additional operations to increase complexity\n        if (labelPaint.equals(Color.RED)) {\n            System.out.println(\"The label paint is correctly set to RED.\");\n        } else {\n            System.out.println(\"The label paint is not RED.\");\n        }\n\n        // Modify the label of the LegendItems\n        legendItem.setLabel(\"Updated Sample Legend\");\n        anotherLegendItem.setLabel(\"Updated Another Legend\");\n\n        // Print updated labels\n        System.out.println(\"Updated Legend 1: \" + legendItem.getLabel());\n        System.out.println(\"Updated Legend 2: \" + anotherLegendItem.getLabel());\n    }\n}"
}