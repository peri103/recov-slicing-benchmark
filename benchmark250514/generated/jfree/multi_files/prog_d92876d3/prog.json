{
    "files": {
        "ChartRenderer.java": "import org.jfree.chart.renderer.xy.XYBarRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class ChartRenderer {\n    private XYBarRenderer barRenderer = new XYBarRenderer();\n    private int seriesIndex = 0;\n    \n    public void setBarOutlinePaint(Paint paint) {\n        /* write */ barRenderer.setSeriesOutlinePaint(seriesIndex, paint);\n    }\n    \n    public Paint getBarOutlinePaint() {\n        return barRenderer.getSeriesOutlinePaint(seriesIndex);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> grades = new ArrayList<>();\n    \n    public Student(String name) {\n        this.name = name;\n    }\n    \n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n    \n    public ArrayList<Integer> getGrades() {\n        return grades;\n    }\n    \n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        ChartRenderer chartRenderer = new ChartRenderer();\n        Paint outlinePaint = Color.RED;\n        \n        chartRenderer.setBarOutlinePaint(outlinePaint);\n        \n        // Create a student and add grades\n        Student student = new Student(\"Alice\");\n        student.addGrade(95);\n        student.addGrade(85);\n        \n        // Print student details\n        System.out.println(\"Student Name: \" + student.getName());\n        System.out.println(\"Grades: \" + student.getGrades());\n        \n        // Retrieve and print the outline paint of the bar\n        /* read */ Paint retrievedPaint = chartRenderer.getBarOutlinePaint();\n        System.out.println(\"Retrieved Bar Outline Paint: \" + retrievedPaint);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYBarRenderer",
        "write_method": "setSeriesOutlinePaint",
        "read_class": "org.jfree.chart.renderer.xy.XYBarRenderer",
        "read_method": "getSeriesOutlinePaint"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYBarRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYBarRenderer renderer = new XYBarRenderer();\n        int seriesIndex = 0;\n        Paint outlinePaint = Color.RED;\n        \n        /* write */ renderer.setSeriesOutlinePaint(seriesIndex, outlinePaint);\n        /* read */ Paint retrievedPaint = renderer.getSeriesOutlinePaint(seriesIndex);\n        \n        System.out.println(retrievedPaint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYBarRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYBarRenderer barRenderer = new XYBarRenderer();\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        ArrayList<Paint> paintList = new ArrayList<>();\n        \n        int seriesIndexBar = 0;\n        int seriesIndexLine = 1;\n        Paint outlinePaintBar = Color.RED;\n        Paint outlinePaintLine = Color.BLUE;\n        \n        /* write */ barRenderer.setSeriesOutlinePaint(seriesIndexBar, outlinePaintBar);\n        \n        // Additional operations on lineRenderer\n        lineRenderer.setSeriesOutlinePaint(seriesIndexLine, outlinePaintLine);\n        paintList.add(lineRenderer.getSeriesOutlinePaint(seriesIndexLine));\n        \n        // Complex operations involving paintList\n        for (int i = 0; i < paintList.size(); i++) {\n            System.out.println(\"Paint in list: \" + paintList.get(i));\n        }\n        \n        // Further unrelated operations\n        int[] numbers = {1, 2, 3, 4, 5};\n        for (int num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n        \n        /* read */ Paint retrievedPaintBar = barRenderer.getSeriesOutlinePaint(seriesIndexBar);\n        \n        System.out.println(\"Retrieved Bar Paint: \" + retrievedPaintBar);\n    }\n}"
}