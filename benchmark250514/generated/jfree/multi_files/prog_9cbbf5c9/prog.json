{
    "files": {
        "PaintManager.java": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class PaintManager {\n    private PiePlot plot;\n    private Map<Comparable, Color> sectionColors;\n\n    public PaintManager() {\n        this.plot = new PiePlot();\n        this.sectionColors = new HashMap<>();\n    }\n\n    public void addSectionPaint(Comparable key, Color color) {\n        /* write */ plot.setSectionPaint(key, color);\n        sectionColors.put(key, color);\n    }\n\n    public Paint getSectionPaint(Comparable key) {\n        return plot.getSectionPaint(key);\n    }\n\n    public Map<Comparable, Paint> getAllSectionPaints() {\n        Map<Comparable, Paint> paints = new HashMap<>();\n        for (Comparable key : sectionColors.keySet()) {\n            paints.put(key, plot.getSectionPaint(key));\n        }\n        return paints;\n    }\n}\n",
        "Section.java": "import java.awt.Color;\n\npublic class Section {\n    private Comparable key;\n    private Color color;\n\n    public Section(Comparable key, Color color) {\n        this.key = key;\n        this.color = color;\n    }\n\n    public Comparable getKey() {\n        return key;\n    }\n\n    public Color getColor() {\n        return color;\n    }\n}\n",
        "Main.java": "import java.awt.Color;\nimport java.awt.Paint;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        PaintManager paintManager = new PaintManager();\n\n        Section section1 = new Section(\"Section1\", Color.RED);\n        Section section2 = new Section(\"Section2\", Color.BLUE);\n        Section section3 = new Section(\"Section3\", Color.GREEN);\n\n        paintManager.addSectionPaint(section1.getKey(), section1.getColor());\n        paintManager.addSectionPaint(section2.getKey(), section2.getColor());\n        paintManager.addSectionPaint(section3.getKey(), section3.getColor());\n\n        /* read */ Paint paint = paintManager.getSectionPaint(section1.getKey());\n        System.out.println(\"Original section paint: \" + paint);\n\n        Map<Comparable, Paint> allPaints = paintManager.getAllSectionPaints();\n        for (Map.Entry<Comparable, Paint> entry : allPaints.entrySet()) {\n            System.out.println(\"Paint for \" + entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.PiePlot",
        "write_method": "setSectionPaint",
        "read_class": "org.jfree.chart.plot.PiePlot",
        "read_method": "getSectionPaint"
    },
    "java_code_simple": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot plot = new PiePlot();\n        Comparable key = \"Section1\";\n        Color color = Color.RED;\n        \n        /* write */ plot.setSectionPaint(key, color);\n        /* read */ Paint paint = plot.getSectionPaint(key);\n        \n        System.out.println(paint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.PiePlot;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        PiePlot plot = new PiePlot();\n        Comparable key = \"Section1\";\n        Color color = Color.RED;\n        \n        /* write */ plot.setSectionPaint(key, color);\n        \n        // Additional complex code\n        Map<Comparable, Color> sectionColors = new HashMap<>();\n        sectionColors.put(\"Section2\", Color.BLUE);\n        sectionColors.put(\"Section3\", Color.GREEN);\n        sectionColors.put(\"Section4\", Color.YELLOW);\n        \n        for (Map.Entry<Comparable, Color> entry : sectionColors.entrySet()) {\n            plot.setSectionPaint(entry.getKey(), entry.getValue());\n        }\n        \n        for (Comparable sectionKey : sectionColors.keySet()) {\n            Paint sectionPaint = plot.getSectionPaint(sectionKey);\n            System.out.println(\"Paint for \" + sectionKey + \": \" + sectionPaint);\n        }\n        \n        // Some unrelated calculations\n        int totalSections = sectionColors.size() + 1; // Including the original section\n        int sum = 0;\n        for (int i = 1; i <= totalSections; i++) {\n            sum += i * 10;\n        }\n        System.out.println(\"Sum of section indices multiplied by 10: \" + sum);\n        \n        /* read */ Paint paint = plot.getSectionPaint(key);\n        System.out.println(\"Original section paint: \" + paint);\n    }\n}"
}