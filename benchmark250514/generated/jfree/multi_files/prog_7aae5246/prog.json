{
    "files": {
        "ChartRendererManager.java": "import org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\n\npublic class ChartRendererManager {\n    private XYPlot plot;\n\n    public ChartRendererManager() {\n        plot = new XYPlot();\n    }\n\n    public void configureRenderer(XYItemRenderer renderer) {\n        /* write */ plot.setRenderer(renderer);\n    }\n\n    public XYPlot getPlot() {\n        return plot;\n    }\n}\n",
        "ChartAnalysis.java": "import org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\n\npublic class ChartAnalysis {\n    private XYPlot plot;\n\n    public ChartAnalysis(XYPlot plot) {\n        this.plot = plot;\n    }\n\n    public XYItemRenderer analyzeRenderer() {\n        /* read */ return plot.getRenderer();\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int studentId;\n\n    public Student(String name, int studentId) {\n        this.name = name;\n        this.studentId = studentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getStudentId() {\n        return studentId;\n    }\n}\n",
        "Main.java": "import org.jfree.chart.renderer.xy.StandardXYItemRenderer;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Setup chart renderer\n        ChartRendererManager manager = new ChartRendererManager();\n        XYItemRenderer renderer = new StandardXYItemRenderer();\n        manager.configureRenderer(renderer);\n\n        // Perform analysis on the chart\n        ChartAnalysis analysis = new ChartAnalysis(manager.getPlot());\n        XYItemRenderer retrievedRenderer = analysis.analyzeRenderer();\n        System.out.println(retrievedRenderer != null ? \"Renderer set successfully\" : \"Renderer not set\");\n\n        // Setup course and students\n        Course course = new Course(\"Advanced Mathematics\");\n        Student alice = new Student(\"Alice\", 101);\n        Student bob = new Student(\"Bob\", 102);\n        course.addStudent(alice);\n        course.addStudent(bob);\n\n        // Display students in the course\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", ID: \" + student.getStudentId());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.XYPlot",
        "write_method": "setRenderer",
        "read_class": "org.jfree.chart.plot.XYPlot",
        "read_method": "getRenderer"
    },
    "java_code_simple": "import org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYPlot plot = new XYPlot();\n        XYItemRenderer renderer = new XYItemRenderer() {\n            // Implement necessary methods for the interface (if any)\n        };\n        /* write */ plot.setRenderer(renderer);\n        /* read */ XYItemRenderer retrievedRenderer = plot.getRenderer();\n        System.out.println(retrievedRenderer != null ? \"Renderer set successfully\" : \"Renderer not set\");\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.XYPlot;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\nimport org.jfree.chart.renderer.xy.StandardXYItemRenderer;\nimport org.jfree.chart.axis.NumberAxis;\nimport org.jfree.chart.axis.ValueAxis;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the XYPlot and renderer\n        XYPlot plot = new XYPlot();\n        XYItemRenderer renderer = new StandardXYItemRenderer();\n        \n        // Configure plot with axes\n        ValueAxis domainAxis = new NumberAxis(\"X\");\n        ValueAxis rangeAxis = new NumberAxis(\"Y\");\n        plot.setDomainAxis(domainAxis);\n        plot.setRangeAxis(rangeAxis);\n\n        // Set renderer\n        /* write */ plot.setRenderer(renderer);\n\n        // Perform some unrelated operations\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n        lineRenderer.setSeriesLinesVisible(0, true);\n        lineRenderer.setSeriesShapesVisible(0, false);\n\n        // Configure another plot\n        XYPlot anotherPlot = new XYPlot();\n        anotherPlot.setDomainAxis(new NumberAxis(\"X2\"));\n        anotherPlot.setRangeAxis(new NumberAxis(\"Y2\"));\n        anotherPlot.setRenderer(lineRenderer);\n\n        // Modify the original plot\n        plot.setDomainAxis(new NumberAxis(\"Modified X\"));\n\n        // More unrelated operations\n        double[] data = {1.0, 2.0, 3.0, 4.0, 5.0};\n        for (double d : data) {\n            System.out.println(\"Data point: \" + d);\n        }\n\n        // Retrieve the renderer from the plot\n        /* read */ XYItemRenderer retrievedRenderer = plot.getRenderer();\n        System.out.println(retrievedRenderer != null ? \"Renderer set successfully\" : \"Renderer not set\");\n\n        // Final unrelated operation\n        for (int i = 0; i < 3; i++) {\n            System.out.println(\"Iteration: \" + i);\n        }\n    }\n}"
}