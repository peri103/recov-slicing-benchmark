{
    "files": {
        "ChartUtils.java": "import org.jfree.chart.renderer.category.BarRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ChartUtils {\n    private BarRenderer barRenderer = new BarRenderer();\n    private Map<Integer, Color> colorMap = new HashMap<>();\n\n    public ChartUtils() {\n        colorMap.put(0, Color.RED);\n        colorMap.put(1, Color.BLUE);\n        colorMap.put(2, Color.GREEN);\n    }\n\n    public void initializeRenderer() {\n        for (Map.Entry<Integer, Color> entry : colorMap.entrySet()) {\n            /* write */ barRenderer.setSeriesOutlinePaint(entry.getKey(), entry.getValue());\n        }\n    }\n\n    public Paint getOutlinePaint(int series) {\n        return barRenderer.getSeriesOutlinePaint(series);\n    }\n\n    public Map<Integer, Color> getColorMap() {\n        return colorMap;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int studentId;\n\n    public Student(String name, int studentId) {\n        this.name = name;\n        this.studentId = studentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getStudentId() {\n        return studentId;\n    }\n}\n",
        "Main.java": "import java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize chart utilities\n        ChartUtils chartUtils = new ChartUtils();\n        chartUtils.initializeRenderer();\n\n        // Create a course and add students\n        Course course = new Course(\"Advanced Java\");\n        course.addStudent(new Student(\"Alice\", 1));\n        course.addStudent(new Student(\"Bob\", 2));\n\n        // Display course details\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", ID: \" + student.getStudentId());\n        }\n\n        // Retrieve and print series outline paint from ChartUtils\n        /* read */ Paint paint = chartUtils.getOutlinePaint(0);\n        System.out.println(\"Series 0 outline paint: \" + paint);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.category.BarRenderer",
        "write_method": "setSeriesOutlinePaint",
        "read_class": "org.jfree.chart.renderer.category.BarRenderer",
        "read_method": "getSeriesOutlinePaint"
    },
    "java_code_simple": "import org.jfree.chart.renderer.category.BarRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\n\npublic class Main {\n    public static void main(String[] args) {\n        BarRenderer renderer = new BarRenderer();\n        /* write */ renderer.setSeriesOutlinePaint(0, Color.RED);\n        /* read */ Paint paint = renderer.getSeriesOutlinePaint(0);\n        System.out.println(paint);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.category.BarRenderer;\nimport org.jfree.chart.renderer.category.LineAndShapeRenderer;\nimport java.awt.Color;\nimport java.awt.Paint;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the BarRenderer and LineAndShapeRenderer\n        BarRenderer barRenderer = new BarRenderer();\n        LineAndShapeRenderer lineRenderer = new LineAndShapeRenderer();\n        \n        // Create a HashMap to store color mappings\n        Map<Integer, Color> colorMap = new HashMap<>();\n        colorMap.put(0, Color.RED);\n        colorMap.put(1, Color.BLUE);\n        colorMap.put(2, Color.GREEN);\n        \n        // Set series outline paints for BarRenderer using the color map\n        for (Map.Entry<Integer, Color> entry : colorMap.entrySet()) {\n            barRenderer.setSeriesOutlinePaint(entry.getKey(), entry.getValue());\n        }\n        \n        // Add some unrelated complex logic\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n        \n        // Set series paint for LineAndShapeRenderer\n        lineRenderer.setSeriesPaint(0, Color.YELLOW);\n        lineRenderer.setSeriesPaint(1, Color.CYAN);\n        \n        // Retrieve and print series outline paint from BarRenderer\n        /* read */ Paint paint = barRenderer.getSeriesOutlinePaint(0);\n        System.out.println(\"Series 0 outline paint: \" + paint);\n        \n        // Additional logic to manipulate LineAndShapeRenderer\n        Paint linePaint = lineRenderer.getSeriesPaint(0);\n        System.out.println(\"Line series 0 paint: \" + linePaint);\n        \n        // Further unrelated code\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 numbers: \" + product);\n        \n        // Complex operation using the color map\n        for (Integer key : colorMap.keySet()) {\n            System.out.println(\"Color for series \" + key + \": \" + colorMap.get(key));\n        }\n    }\n}"
}