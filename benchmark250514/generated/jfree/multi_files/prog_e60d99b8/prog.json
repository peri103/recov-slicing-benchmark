{
    "files": {
        "RingPlotManager.java": "import org.jfree.chart.plot.RingPlot;\n\npublic class RingPlotManager {\n    private RingPlot plot;\n\n    public RingPlotManager() {\n        this.plot = new RingPlot();\n    }\n\n    public void setSectionDepth(double depth) {\n        /* write */ plot.setSectionDepth(depth);\n    }\n\n    public double getSectionDepth() {\n        return plot.getSectionDepth();\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private double grade;\n\n    public Student(String name, double grade) {\n        this.name = name;\n        this.grade = grade;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public double getGrade() {\n        return grade;\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        RingPlotManager plotManager = new RingPlotManager();\n        plotManager.setSectionDepth(0.5);\n\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(new Student(\"Alice\", 85.0));\n        course.addStudent(new Student(\"Bob\", 90.0));\n\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Grade: \" + student.getGrade());\n        }\n\n        /* read */ double sectionDepth = plotManager.getSectionDepth();\n        System.out.println(\"RingPlot Section Depth: \" + sectionDepth);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.plot.RingPlot",
        "write_method": "setSectionDepth",
        "read_class": "org.jfree.chart.plot.RingPlot",
        "read_method": "getSectionDepth"
    },
    "java_code_simple": "import org.jfree.chart.plot.RingPlot;\n\npublic class Main {\n    public static void main(String[] args) {\n        RingPlot plot = new RingPlot();\n        /* write */ plot.setSectionDepth(0.5);\n        /* read */ double sectionDepth = plot.getSectionDepth();\n        System.out.println(sectionDepth);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.plot.RingPlot;\nimport org.jfree.chart.plot.PiePlot;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        RingPlot plot = new RingPlot();\n        PiePlot piePlot = new PiePlot();\n        Map<String, Double> data = new HashMap<>();\n        data.put(\"A\", 0.2);\n        data.put(\"B\", 0.3);\n        data.put(\"C\", 0.5);\n\n        // Set up PiePlot with data\n        for (Map.Entry<String, Double> entry : data.entrySet()) {\n            piePlot.setSectionOutlinePaint(entry.getKey(), null);\n            piePlot.setSectionOutlineStroke(entry.getKey(), null);\n        }\n\n        // Perform some calculations\n        double sum = 0;\n        for (Double value : data.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of all sections: \" + sum);\n\n        // Set section depth in RingPlot\n        /* write */ plot.setSectionDepth(0.5);\n\n        // Modify PiePlot settings\n        piePlot.setInteriorGap(0.04);\n        piePlot.setLabelGap(0.02);\n\n        // Read section depth from RingPlot\n        /* read */ double sectionDepth = plot.getSectionDepth();\n        System.out.println(\"RingPlot Section Depth: \" + sectionDepth);\n\n        // More complex operations\n        double average = sum / data.size();\n        System.out.println(\"Average value of sections: \" + average);\n\n        // Use PiePlot's methods\n        piePlot.setCircular(true);\n        piePlot.setStartAngle(90);\n        System.out.println(\"PiePlot is circular: \" + piePlot.isCircular());\n    }\n}"
}