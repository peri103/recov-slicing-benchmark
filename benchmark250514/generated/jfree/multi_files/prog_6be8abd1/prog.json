{
    "files": {
        "ChartRenderer.java": "import org.jfree.chart.renderer.xy.XYDotRenderer;\n\npublic class ChartRenderer {\n    private XYDotRenderer dotRenderer = new XYDotRenderer();\n\n    public void configureDotRenderer(int dotHeight) {\n        /* write */ dotRenderer.setDotHeight(dotHeight);\n    }\n\n    public int getDotHeight() {\n        return dotRenderer.getDotHeight();\n    }\n}",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}",
        "Student.java": "public class Student {\n    private String name;\n    private int id;\n\n    public Student(String name, int id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getId() {\n        return id;\n    }\n}",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a chart renderer and configure it\n        ChartRenderer chartRenderer = new ChartRenderer();\n        chartRenderer.configureDotRenderer(10);\n\n        // Create a course and add students\n        Course course = new Course(\"Computer Science\");\n        course.addStudent(new Student(\"Alice\", 1));\n        course.addStudent(new Student(\"Bob\", 2));\n\n        // Display course information\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", ID: \" + student.getId());\n        }\n\n        // Read the configured dot height from the chart renderer\n        /* read */ int dotHeight = chartRenderer.getDotHeight();\n        System.out.println(\"Configured Dot Height: \" + dotHeight);\n    }\n}"
    },
    "pair": {
        "write_class": "org.jfree.chart.renderer.xy.XYDotRenderer",
        "write_method": "setDotHeight",
        "read_class": "org.jfree.chart.renderer.xy.XYDotRenderer",
        "read_method": "getDotHeight"
    },
    "java_code_simple": "import org.jfree.chart.renderer.xy.XYDotRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDotRenderer renderer = new XYDotRenderer();\n        /* write */ renderer.setDotHeight(10);\n        /* read */ int dotHeight = renderer.getDotHeight();\n        System.out.println(dotHeight);\n    }\n}",
    "java_code_complex": "import org.jfree.chart.renderer.xy.XYDotRenderer;\nimport org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;\nimport org.jfree.chart.renderer.xy.XYItemRenderer;\n\npublic class Main {\n    public static void main(String[] args) {\n        XYDotRenderer dotRenderer = new XYDotRenderer();\n        XYLineAndShapeRenderer lineRenderer = new XYLineAndShapeRenderer();\n\n        // Configure the line renderer\n        lineRenderer.setSeriesLinesVisible(0, true);\n        lineRenderer.setSeriesShapesVisible(0, true);\n\n        // Configure the dot renderer\n        /* write */ dotRenderer.setDotHeight(10);\n\n        // Create an array of renderers\n        XYItemRenderer[] renderers = new XYItemRenderer[2];\n        renderers[0] = dotRenderer;\n        renderers[1] = lineRenderer;\n\n        // Iterate over renderers and apply some operations\n        for (XYItemRenderer renderer : renderers) {\n            if (renderer instanceof XYDotRenderer) {\n                XYDotRenderer tempRenderer = (XYDotRenderer) renderer;\n                int currentDotHeight = tempRenderer.getDotHeight();\n                System.out.println(\"Current Dot Height: \" + currentDotHeight);\n            } else if (renderer instanceof XYLineAndShapeRenderer) {\n                XYLineAndShapeRenderer tempRenderer = (XYLineAndShapeRenderer) renderer;\n                boolean isLineVisible = tempRenderer.getSeriesLinesVisible(0);\n                boolean isShapeVisible = tempRenderer.getSeriesShapesVisible(0);\n                System.out.println(\"Line Visible: \" + isLineVisible + \", Shape Visible: \" + isShapeVisible);\n            }\n        }\n\n        // Perform other unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n\n        // Read the dot height from the dotRenderer\n        /* read */ int dotHeight = dotRenderer.getDotHeight();\n        System.out.println(\"Final Dot Height: \" + dotHeight);\n    }\n}"
}