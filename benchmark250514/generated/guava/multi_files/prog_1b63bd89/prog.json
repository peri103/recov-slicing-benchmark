{
    "files": {
        "RangeSetOperations.java": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\n\npublic class RangeSetOperations {\n    private RangeSet<Integer> rangeSet = TreeRangeSet.create();\n\n    public void addRange(int start, int end) {\n        /* write */ rangeSet.add(Range.closed(start, end));\n    }\n\n    public boolean containsValue(int value) {\n        return rangeSet.contains(value);\n    }\n\n    public RangeSet<Integer> getRangeSet() {\n        return rangeSet;\n    }\n}\n",
        "RangeMapOperations.java": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeMap;\nimport com.google.common.collect.TreeRangeMap;\n\npublic class RangeMapOperations {\n    private RangeMap<Integer, String> rangeMap = TreeRangeMap.create();\n\n    public void addRangeWithLabel(int start, int end, String label) {\n        rangeMap.put(Range.closed(start, end), label);\n    }\n\n    public String getLabel(int value) {\n        return rangeMap.get(value);\n    }\n\n    public RangeMap<Integer, String> getRangeMap() {\n        return rangeMap;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        RangeSetOperations rangeSetOps = new RangeSetOperations();\n        RangeMapOperations rangeMapOps = new RangeMapOperations();\n\n        // Add ranges to RangeMap\n        rangeMapOps.addRangeWithLabel(1, 5, \"Low\");\n        rangeMapOps.addRangeWithLabel(6, 10, \"Medium\");\n        rangeMapOps.addRangeWithLabel(11, 15, \"High\");\n\n        // Add range to RangeSet\n        rangeSetOps.addRange(1, 10);\n\n        // Perform operations on RangeMap\n        System.out.println(\"Label for 3: \" + rangeMapOps.getLabel(3));\n        System.out.println(\"Label for 7: \" + rangeMapOps.getLabel(7));\n        System.out.println(\"Label for 12: \" + rangeMapOps.getLabel(12));\n\n        // Additional logic and operations\n        for (int i = 1; i <= 15; i++) {\n            System.out.println(\"Value \" + i + \" falls in range: \" + rangeMapOps.getLabel(i));\n        }\n\n        // Simulate complex logic\n        int sumInRange = 0;\n        for (int i = 1; i <= 10; i++) {\n            if (rangeSetOps.containsValue(i)) {\n                sumInRange += i;\n            }\n        }\n        System.out.println(\"Sum of values within the range 1 to 10: \" + sumInRange);\n\n        // Check if a value is in the RangeSet\n        /* read */ boolean containsValue = rangeSetOps.containsValue(5);\n        System.out.println(\"RangeSet contains 5: \" + containsValue);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.RangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.RangeSet",
        "read_method": "contains"
    },
    "java_code_simple": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n        /* write */ rangeSet.add(Range.closed(1, 10));\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.RangeMap;\nimport com.google.common.collect.TreeRangeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n        RangeMap<Integer, String> rangeMap = TreeRangeMap.create();\n        \n        // Adding ranges to the RangeMap\n        rangeMap.put(Range.closed(1, 5), \"Low\");\n        rangeMap.put(Range.closed(6, 10), \"Medium\");\n        rangeMap.put(Range.closed(11, 15), \"High\");\n\n        /* write */ \n        rangeSet.add(Range.closed(1, 10));\n\n        // Perform operations on RangeMap\n        String label1 = rangeMap.get(3);\n        String label2 = rangeMap.get(7);\n        String label3 = rangeMap.get(12);\n\n        // Output the labels\n        System.out.println(\"Label for 3: \" + label1);\n        System.out.println(\"Label for 7: \" + label2);\n        System.out.println(\"Label for 12: \" + label3);\n\n        // Additional logic and operations\n        for (int i = 1; i <= 15; i++) {\n            System.out.println(\"Value \" + i + \" falls in range: \" + rangeMap.get(i));\n        }\n\n        // Simulate complex logic\n        int sumInRange = 0;\n        for (int i = 1; i <= 10; i++) {\n            if (rangeSet.contains(i)) {\n                sumInRange += i;\n            }\n        }\n        System.out.println(\"Sum of values within the range 1 to 10: \" + sumInRange);\n\n        /* read */ \n        boolean containsValue = rangeSet.contains(5);\n        System.out.println(\"RangeSet contains 5: \" + containsValue);\n\n        // Further operations to increase complexity\n        RangeSet<Integer> otherRangeSet = TreeRangeSet.create();\n        otherRangeSet.add(Range.closed(5, 15));\n        \n        RangeSet<Integer> intersection = TreeRangeSet.create(rangeSet);\n        intersection.removeAll(otherRangeSet);\n        \n        System.out.println(\"Intersection of ranges: \" + intersection);\n    }\n}"
}