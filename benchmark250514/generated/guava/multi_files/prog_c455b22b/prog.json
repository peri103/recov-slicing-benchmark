{
    "files": {
        "FruitMultiset.java": "import com.google.common.collect.ForwardingMultiset;\nimport com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Multiset;\n\npublic class FruitMultiset {\n    private Multiset<String> multiset = HashMultiset.create();\n    private ForwardingMultiset<String> forwardingMultiset = new ForwardingMultiset<String>() {\n        @Override\n        protected Multiset<String> delegate() {\n            return multiset;\n        }\n    };\n\n    public void addFruit(String fruit) {\n        /* write */ forwardingMultiset.add(fruit);\n    }\n\n    public int countFruit(String fruit) {\n        return forwardingMultiset.count(fruit);\n    }\n}\n",
        "FruitBasket.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class FruitBasket {\n    private Map<String, Integer> fruitBasket = new HashMap<>();\n\n    public FruitBasket() {\n        fruitBasket.put(\"banana\", 2);\n        fruitBasket.put(\"orange\", 3);\n    }\n\n    public void addFruit(String fruit, int count) {\n        fruitBasket.put(fruit, fruitBasket.getOrDefault(fruit, 0) + count);\n    }\n\n    public void displayBasket() {\n        for (Map.Entry<String, Integer> entry : fruitBasket.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        FruitMultiset fruitMultiset = new FruitMultiset();\n        fruitMultiset.addFruit(\"apple\");\n\n        FruitBasket fruitBasket = new FruitBasket();\n        fruitBasket.addFruit(\"apple\", 1);\n        fruitBasket.addFruit(\"banana\", 1);\n        fruitBasket.displayBasket();\n\n        fruitMultiset.addFruit(\"banana\");\n        fruitMultiset.addFruit(\"orange\");\n        fruitMultiset.addFruit(\"orange\");\n\n        /* read */ int appleCount = fruitMultiset.countFruit(\"apple\");\n        System.out.println(\"Count of apple in multiset: \" + appleCount);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingMultiset",
        "read_method": "count"
    },
    "java_code_simple": "import com.google.common.collect.ForwardingMultiset;\nimport com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Multiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multiset<String> multiset = HashMultiset.create();\n        ForwardingMultiset<String> forwardingMultiset = new ForwardingMultiset<String>() {\n            @Override\n            protected Multiset<String> delegate() {\n                return multiset;\n            }\n        };\n\n        /* write */ forwardingMultiset.add(\"apple\");\n        /* read */ int count = forwardingMultiset.count(\"apple\");\n        System.out.println(count);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ForwardingMultiset;\nimport com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Multiset;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multiset<String> multiset = HashMultiset.create();\n        ForwardingMultiset<String> forwardingMultiset = new ForwardingMultiset<String>() {\n            @Override\n            protected Multiset<String> delegate() {\n                return multiset;\n            }\n        };\n\n        /* write */ forwardingMultiset.add(\"apple\");\n\n        // Adding more complexity with a Map\n        Map<String, Integer> fruitBasket = new HashMap<>();\n        fruitBasket.put(\"banana\", 2);\n        fruitBasket.put(\"orange\", 3);\n\n        // Manipulating the map\n        fruitBasket.put(\"apple\", fruitBasket.getOrDefault(\"apple\", 0) + 1);\n        fruitBasket.put(\"banana\", fruitBasket.get(\"banana\") + 1);\n\n        // Iterate and print map values\n        for (Map.Entry<String, Integer> entry : fruitBasket.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Additional operations on the multiset\n        forwardingMultiset.add(\"banana\");\n        forwardingMultiset.add(\"orange\", 2);\n\n        // Calculate total count of all items in the multiset\n        int totalCount = 0;\n        for (String item : forwardingMultiset.elementSet()) {\n            totalCount += forwardingMultiset.count(item);\n        }\n        System.out.println(\"Total count in multiset: \" + totalCount);\n\n        // Final read operation\n        /* read */ int count = forwardingMultiset.count(\"apple\");\n        System.out.println(\"Count of apple in multiset: \" + count);\n    }\n}"
}