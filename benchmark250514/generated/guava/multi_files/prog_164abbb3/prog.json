{
    "files": {
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int credits;\n\n    public Course(String courseName, int credits) {\n        this.courseName = courseName;\n        this.credits = credits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "StudentScores.java": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\n\npublic class StudentScores {\n    private Table<String, String, Integer> scoresTable = TreeBasedTable.create();\n\n    public void addScore(String studentName, String courseName, int score) {\n        /* write */ scoresTable.put(studentName, courseName, score);\n    }\n\n    public Integer getScore(String studentName, String courseName) {\n        return scoresTable.get(studentName, courseName);\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create students\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n\n        // Create courses\n        Course math = new Course(\"Mathematics\", 3);\n        Course science = new Course(\"Science\", 4);\n\n        // Enroll students in courses\n        alice.enrollCourse(math);\n        alice.enrollCourse(science);\n        bob.enrollCourse(math);\n\n        // Manage student scores\n        StudentScores studentScores = new StudentScores();\n        studentScores.addScore(alice.getName(), math.getCourseName(), 95);\n        studentScores.addScore(alice.getName(), science.getCourseName(), 88);\n        studentScores.addScore(bob.getName(), math.getCourseName(), 78);\n\n        // Retrieve and print scores for Alice\n        List<Course> aliceCourses = alice.getCourses();\n        for (Course course : aliceCourses) {\n            /* read */ Integer score = studentScores.getScore(alice.getName(), course.getCourseName());\n            System.out.println(alice.getName() + \" scored \" + score + \" in \" + course.getCourseName());\n        }\n\n        // Additional operations\n        for (Course course : aliceCourses) {\n            System.out.println(\"Course: \" + course.getCourseName() + \", Credits: \" + course.getCredits());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.TreeBasedTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.TreeBasedTable",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the TreeBasedTable\n        Table<String, String, Integer> table = TreeBasedTable.create();\n        \n        // Write a value into the table\n        /* write */ table.put(\"row1\", \"column1\", 42);\n        \n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        \n        // Print the value to ensure it was read correctly\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\nimport com.google.common.collect.HashBasedTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the TreeBasedTable\n        Table<String, String, Integer> table = TreeBasedTable.create();\n        \n        // Initialize another table to demonstrate more complex operations\n        Table<String, String, String> stringTable = HashBasedTable.create();\n        \n        // Write a value into the TreeBasedTable\n        /* write */ table.put(\"row1\", \"column1\", 42);\n        \n        // Perform operations on the stringTable\n        stringTable.put(\"row1\", \"column1\", \"Hello\");\n        stringTable.put(\"row2\", \"column2\", \"World\");\n        \n        // Manipulate and retrieve values from the stringTable\n        String greeting = stringTable.get(\"row1\", \"column1\");\n        String subject = stringTable.get(\"row2\", \"column2\");\n        \n        // Combine and print the values from the stringTable\n        System.out.println(greeting + \" \" + subject);\n        \n        // More complex operations on TreeBasedTable\n        table.put(\"row2\", \"column2\", 84);\n        table.put(\"row3\", \"column3\", 126);\n        \n        // Iterate through the TreeBasedTable and print values\n        for (Table.Cell<String, String, Integer> cell : table.cellSet()) {\n            System.out.println(\"Row: \" + cell.getRowKey() + \", Column: \" + cell.getColumnKey() + \", Value: \" + cell.getValue());\n        }\n        \n        // Read the value from the TreeBasedTable\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        \n        // Print the value to ensure it was read correctly\n        System.out.println(\"Read value: \" + value);\n        \n        // Additional operations to enhance complexity\n        int sum = 0;\n        for (Table.Cell<String, String, Integer> cell : table.cellSet()) {\n            sum += cell.getValue();\n        }\n        \n        // Print the sum of all values in the TreeBasedTable\n        System.out.println(\"Sum of all values: \" + sum);\n    }\n}"
}