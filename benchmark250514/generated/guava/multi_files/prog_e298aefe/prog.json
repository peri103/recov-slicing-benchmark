{
    "files": {
        "CourseTable.java": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\n\npublic class CourseTable {\n    private TreeBasedTable<Integer, Integer, String> table = TreeBasedTable.create();\n\n    public void addCourse(int studentId, int courseId, String courseName) {\n        /* write */ table.put(studentId, courseId, courseName);\n    }\n\n    public String getCourse(int studentId, int courseId) {\n        return table.get(studentId, courseId);\n    }\n}\n",
        "Student.java": "public class Student {\n    private int id;\n    private String name;\n    private CourseTable courseTable = new CourseTable();\n\n    public Student(int id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public void enrollCourse(int courseId, String courseName) {\n        courseTable.addCourse(this.id, courseId, courseName);\n    }\n\n    public String getCourseName(int courseId) {\n        return courseTable.getCourse(this.id, courseId);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(1, \"Alice\");\n\n        // Enroll the student in a course\n        student.enrollCourse(101, \"Mathematics\");\n\n        // Enroll the student in more courses\n        student.enrollCourse(102, \"Physics\");\n        student.enrollCourse(103, \"Chemistry\");\n\n        // Retrieve and print the course name for the first course\n        /* read */ String courseName = student.getCourseName(101);\n        System.out.println(\"Course Name: \" + courseName);\n\n        // Print other enrolled courses\n        System.out.println(\"Course Name: \" + student.getCourseName(102));\n        System.out.println(\"Course Name: \" + student.getCourseName(103));\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.TreeBasedTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.TreeBasedTable",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeBasedTable<Integer, Integer, String> table = TreeBasedTable.create();\n        /* write */ table.put(1, 1, \"value\");\n        /* read */ String value = table.get(1, 1);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeBasedTable<Integer, Integer, String> table = TreeBasedTable.create();\n        Map<Integer, String> map = new HashMap<>();\n        \n        // Populate the map with some values\n        for (int i = 0; i < 5; i++) {\n            map.put(i, \"mapValue\" + i);\n        }\n        \n        // Print map values\n        for (Map.Entry<Integer, String> entry : map.entrySet()) {\n            System.out.println(\"Map Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Add a value to the table\n        /* write */ table.put(1, 1, \"value\");\n        \n        // Add more values to the table\n        for (int i = 2; i <= 5; i++) {\n            table.put(i, i, \"tableValue\" + i);\n        }\n        \n        // Perform some operations on the table\n        for (int i = 2; i <= 5; i++) {\n            System.out.println(\"Table Value at (\" + i + \", \" + i + \"): \" + table.get(i, i));\n        }\n        \n        // Retrieve the value from the table\n        /* read */ String value = table.get(1, 1);\n        System.out.println(\"Read Value: \" + value);\n        \n        // Further operations on the map\n        map.put(5, \"newMapValue\");\n        System.out.println(\"Updated Map Value: \" + map.get(5));\n        \n        // Final operations on the table\n        table.remove(2, 2);\n        System.out.println(\"After removal, Table Value at (2, 2): \" + table.get(2, 2));\n    }\n}"
}