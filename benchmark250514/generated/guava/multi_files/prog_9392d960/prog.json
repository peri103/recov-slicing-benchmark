{
    "files": {
        "ImmutableSetBuilder.java": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableSortedSet.Builder;\n\npublic class ImmutableSetBuilder {\n    private Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n\n    public void addElement(int element) {\n        /* write */ builder.add(element);\n    }\n\n    public ImmutableSortedSet<Integer> buildSet() {\n        return builder.build();\n    }\n}\n",
        "ImmutableSetChecker.java": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class ImmutableSetChecker {\n    private ImmutableSortedSet<Integer> set;\n\n    public ImmutableSetChecker(ImmutableSortedSet<Integer> set) {\n        this.set = set;\n    }\n\n    public boolean containsElement(int element) {\n        /* read */ return set.contains(element);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n\n    public List<Integer> getGrades() {\n        return grades;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Use ImmutableSetBuilder\n        ImmutableSetBuilder setBuilder = new ImmutableSetBuilder();\n        setBuilder.addElement(42);\n        \n        // Use Student class\n        Student student = new Student(\"John Doe\");\n        student.addGrade(85);\n        student.addGrade(92);\n        System.out.println(\"Student: \" + student.getName());\n        System.out.println(\"Grades: \" + student.getGrades());\n\n        // Build the set and check for element\n        ImmutableSortedSet<Integer> set = setBuilder.buildSet();\n        ImmutableSetChecker setChecker = new ImmutableSetChecker(set);\n        boolean contains = setChecker.containsElement(42);\n        System.out.println(\"Contains 42: \" + contains);\n\n        // Additional operations\n        int sumGrades = student.getGrades().stream().mapToInt(Integer::intValue).sum();\n        System.out.println(\"Sum of grades: \" + sumGrades);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableSortedSet.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        // Add an element to the builder\n        /* write */ builder.add(42);\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> set = builder.build();\n        \n        // Check if the set contains the element\n        /* read */ boolean contains = set.contains(42);\n        \n        // Print the result\n        System.out.println(contains);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableSortedSet.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        // Add an element to the builder\n        /* write */ builder.add(42);\n        \n        // Create and manipulate a HashMap\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n        \n        // Retrieve and print values from the map\n        int valueOne = map.get(\"one\");\n        int valueTwo = map.get(\"two\");\n        System.out.println(\"Map values: \" + valueOne + \", \" + valueTwo);\n        \n        // Perform some calculations\n        int sum = valueOne + valueTwo;\n        int product = valueOne * valueTwo;\n        System.out.println(\"Sum: \" + sum + \", Product: \" + product);\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> set = builder.build();\n        \n        // Check if the set contains the element\n        /* read */ boolean contains = set.contains(42);\n        \n        // Print the result\n        System.out.println(\"Contains 42: \" + contains);\n        \n        // Create and manipulate another ImmutableSortedSet\n        Builder<Integer> anotherBuilder = ImmutableSortedSet.naturalOrder();\n        anotherBuilder.add(10).add(20).add(30);\n        ImmutableSortedSet<Integer> anotherSet = anotherBuilder.build();\n        \n        // Iterate over the set and print each element\n        System.out.println(\"Elements in another set:\");\n        for (Integer num : anotherSet) {\n            System.out.println(num);\n        }\n        \n        // Perform additional calculations\n        int totalSum = sum + anotherSet.first() + anotherSet.last();\n        System.out.println(\"Total sum: \" + totalSum);\n    }\n}"
}