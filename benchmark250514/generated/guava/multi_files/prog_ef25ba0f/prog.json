{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public void enrollInCourse(String courseName) {\n        course.addStudent(this, courseName);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n}\n",
        "Course.java": "import com.google.common.collect.ImmutableListMultimap;\n\npublic class Course {\n    private ImmutableListMultimap.Builder<String, String> courseBuilder;\n\n    public Course() {\n        courseBuilder = ImmutableListMultimap.builder();\n    }\n\n    public void addStudent(Student student, String courseName) {\n        /* write */ courseBuilder.put(courseName, student.getName());\n    }\n\n    public ImmutableListMultimap<String, String> buildCourses() {\n        return courseBuilder.build();\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableListMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course();\n        Student student1 = new Student(\"Alice\", course);\n        Student student2 = new Student(\"Bob\", course);\n\n        student1.enrollInCourse(\"Math\");\n        student2.enrollInCourse(\"Science\");\n\n        // Build the ImmutableListMultimap from the course\n        ImmutableListMultimap<String, String> courses = course.buildCourses();\n\n        // Read operation: Get the students enrolled in Math\n        /* read */ String studentName = courses.get(\"Math\").get(0);\n\n        // Print the student's name enrolled in Math\n        System.out.println(\"Student enrolled in Math: \" + studentName);\n\n        // Additional operations to demonstrate complexity\n        for (String courseName : courses.keySet()) {\n            System.out.println(\"Course: \" + courseName + \", Students: \" + courses.get(courseName));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableListMultimap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableListMultimap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableListMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableListMultimap\n        ImmutableListMultimap.Builder<String, String> builder = ImmutableListMultimap.builder();\n        \n        // Write operation: Add a key-value pair to the builder\n        /* write */ builder.put(\"key\", \"value\");\n        \n        // Build the ImmutableListMultimap\n        ImmutableListMultimap<String, String> multimap = builder.build();\n        \n        // Read operation: Get the value associated with the key\n        /* read */ String value = multimap.get(\"key\").get(0);\n        \n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableListMultimap;\nimport com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a builder for ImmutableListMultimap\n        ImmutableListMultimap.Builder<String, String> builder = ImmutableListMultimap.builder();\n        \n        // Add a key-value pair to the builder\n        /* write */ builder.put(\"key\", \"value\");\n        \n        // Create a HashMap to store additional data\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"one\", 1);\n        hashMap.put(\"two\", 2);\n        \n        // Perform operations on the HashMap\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Build the ImmutableListMultimap\n        ImmutableListMultimap<String, String> multimap = builder.build();\n        \n        // Create another ImmutableMap for demonstration purposes\n        ImmutableMap<String, Integer> immutableMap = ImmutableMap.of(\"three\", 3, \"four\", 4);\n        \n        // Perform operations on the ImmutableMap\n        for (Map.Entry<String, Integer> entry : immutableMap.entrySet()) {\n            System.out.println(\"ImmutableMap Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Read operation: Get the value associated with the key from the multimap\n        /* read */ String value = multimap.get(\"key\").get(0);\n        \n        // Print the value from the multimap\n        System.out.println(\"Multimap Value: \" + value);\n        \n        // Additional operations to make the program more complex\n        int sum = 0;\n        for (Integer val : hashMap.values()) {\n            sum += val;\n        }\n        System.out.println(\"Sum of HashMap values: \" + sum);\n        \n        int product = 1;\n        for (Integer val : immutableMap.values()) {\n            product *= val;\n        }\n        System.out.println(\"Product of ImmutableMap values: \" + product);\n    }\n}"
}