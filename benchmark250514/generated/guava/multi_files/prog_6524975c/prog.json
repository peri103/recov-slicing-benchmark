{
    "files": {
        "CustomMap.java": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.TreeMap;\n\npublic class CustomMap<K, V> extends ForwardingSortedMap<K, V> {\n    private final TreeMap<K, V> delegate = new TreeMap<>();\n\n    @Override\n    protected TreeMap<K, V> delegate() {\n        return delegate;\n    }\n\n    public void addEntry(K key, V value) {\n        /* write */ put(key, value);\n    }\n}\n",
        "DataManager.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class DataManager {\n    private Map<String, String> stringMap = new HashMap<>();\n    private CustomMap<String, Integer> integerMap = new CustomMap<>();\n\n    public void addStringEntry(String key, String value) {\n        stringMap.put(key, value);\n    }\n\n    public void addIntegerEntry(String key, Integer value) {\n        integerMap.addEntry(key, value);\n    }\n\n    public String getStringEntry(String key) {\n        return stringMap.get(key);\n    }\n\n    public Integer getIntegerEntry(String key) {\n        /* read */ return integerMap.get(key);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        DataManager dataManager = new DataManager();\n\n        // Adding string entries\n        dataManager.addStringEntry(\"hello\", \"world\");\n        dataManager.addStringEntry(\"foo\", \"bar\");\n\n        // Printing string entries\n        System.out.println(\"String Entries:\");\n        System.out.println(\"hello = \" + dataManager.getStringEntry(\"hello\"));\n        System.out.println(\"foo = \" + dataManager.getStringEntry(\"foo\"));\n\n        // Adding integer entries\n        dataManager.addIntegerEntry(\"key\", 42);\n\n        // Getting and printing integer entry\n        Integer value = dataManager.getIntegerEntry(\"key\");\n        System.out.println(\"Integer Entry:\");\n        System.out.println(\"key = \" + value);\n\n        // Additional computations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSortedMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingSortedMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ForwardingSortedMap<String, Integer> map = new ForwardingSortedMap<String, Integer>() {\n            private final TreeMap<String, Integer> delegate = new TreeMap<>();\n\n            @Override\n            protected TreeMap<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.TreeMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        ForwardingSortedMap<String, Integer> map = new ForwardingSortedMap<String, Integer>() {\n            private final TreeMap<String, Integer> delegate = new TreeMap<>();\n\n            @Override\n            protected TreeMap<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ map.put(\"key\", 42);\n\n        // Additional unrelated code\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"hello\", \"world\");\n        stringMap.put(\"foo\", \"bar\");\n\n        for (Map.Entry<String, String> entry : stringMap.entrySet()) {\n            System.out.println(entry.getKey() + \" = \" + entry.getValue());\n        }\n\n        // Additional similar api pair usage\n        ForwardingSortedMap<String, Double> anotherMap = new ForwardingSortedMap<String, Double>() {\n            private final TreeMap<String, Double> delegate = new TreeMap<>();\n\n            @Override\n            protected TreeMap<String, Double> delegate() {\n                return delegate;\n            }\n        };\n\n        anotherMap.put(\"pi\", 3.14159);\n        anotherMap.put(\"e\", 2.71828);\n\n        Double piValue = anotherMap.get(\"pi\");\n        System.out.println(\"Value of pi: \" + piValue);\n\n        // More unrelated code\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Iteration: \" + i);\n        }\n\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n\n        // Additional computations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n    }\n}"
}