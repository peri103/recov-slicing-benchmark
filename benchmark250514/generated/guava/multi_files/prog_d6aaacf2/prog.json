{
    "files": {
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Student {\n    private String name;\n    private ImmutableClassToInstanceMap<Object> studentDetails;\n\n    public Student(String name) {\n        this.name = name;\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        /* write */ this.studentDetails = builder.put(String.class, name).build();\n    }\n\n    public String getName() {\n        /* read */ return studentDetails.getInstance(String.class);\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a course\n        Course course = new Course(\"Computer Science\");\n\n        // Enroll students\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        course.enrollStudent(student1);\n        course.enrollStudent(student2);\n\n        // Retrieve and print student names from the course\n        List<Student> students = course.getStudents();\n        for (Student student : students) {\n            System.out.println(\"Enrolled Student: \" + student.getName());\n        }\n\n        // Additional unrelated operations\n        int[] array = {5, 10, 15, 20};\n        for (int number : array) {\n            System.out.println(\"Array element: \" + number);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Use the write method to build the map\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.put(String.class, \"Hello, World!\").build();\n        \n        // Use the read method to retrieve the instance\n        /* read */ String value = map.getInstance(String.class);\n        \n        // Output the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Use the write method to build the map\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.put(String.class, \"Hello, World!\").build();\n        \n        // Create a HashMap for additional complexity\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"One\", 1);\n        hashMap.put(\"Two\", 2);\n        hashMap.put(\"Three\", 3);\n        \n        // Iterate over the HashMap and perform some operations\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n            sum += entry.getValue();\n        }\n        \n        // Print the sum of values in the HashMap\n        System.out.println(\"Sum of values in HashMap: \" + sum);\n        \n        // Perform some unrelated computations\n        int a = 10;\n        int b = 20;\n        int c = a * b;\n        System.out.println(\"Multiplication of \" + a + \" and \" + b + \" is: \" + c);\n        \n        // Use the read method to retrieve the instance\n        /* read */ String value = map.getInstance(String.class);\n        \n        // Output the value\n        System.out.println(value);\n        \n        // Additional unrelated operations\n        int[] array = {5, 10, 15, 20};\n        for (int number : array) {\n            System.out.println(\"Array element: \" + number);\n        }\n    }\n}"
}