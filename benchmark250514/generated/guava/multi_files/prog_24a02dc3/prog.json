{
    "files": {
        "Color.java": "public enum Color {\n    RED, GREEN, BLUE\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.EnumHashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.EnumHashBiMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.EnumHashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize EnumHashBiMap with a sample Enum class\n        EnumHashBiMap<Color, String> map = EnumHashBiMap.create(Color.class);\n\n        /* write */ map.put(Color.RED, \"Red Color\");\n        /* read */ String value = map.get(Color.RED);\n        \n        System.out.println(value);\n    }\n\n    // Sample Enum class for demonstration\n    private enum Color {\n        RED, GREEN, BLUE\n    }\n}",
    "java_code_complex": "import com.google.common.collect.EnumHashBiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize EnumHashBiMap with a sample Enum class\n        EnumHashBiMap<Color, String> map = EnumHashBiMap.create(Color.class);\n\n        // Additional data structure for complexity\n        Map<String, Integer> additionalMap = new HashMap<>();\n        additionalMap.put(\"One\", 1);\n        additionalMap.put(\"Two\", 2);\n\n        // Manipulate additionalMap\n        for (Map.Entry<String, Integer> entry : additionalMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (Integer value : additionalMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in additionalMap: \" + sum);\n\n        /* write */ map.put(Color.RED, \"Red Color\");\n\n        // More operations with additionalMap\n        if (additionalMap.containsKey(\"One\")) {\n            additionalMap.put(\"Three\", 3);\n        }\n\n        // Iterate over the EnumHashBiMap keys\n        for (Color color : map.keySet()) {\n            System.out.println(\"Color key in map: \" + color);\n        }\n\n        // Final calculations\n        int product = 1;\n        for (Integer value : additionalMap.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of values in additionalMap: \" + product);\n\n        /* read */ String value = map.get(Color.RED);\n        System.out.println(value);\n\n        // Additional complexity: modify and print map\n        map.put(Color.GREEN, \"Green Color\");\n        System.out.println(\"Map size after adding GREEN: \" + map.size());\n    }\n\n    // Sample Enum class for demonstration\n    private enum Color {\n        RED, GREEN, BLUE\n    }\n}"
}