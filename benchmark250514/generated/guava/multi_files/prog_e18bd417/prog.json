{
    "files": {
        "CustomMap.java": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.TreeMap;\n\npublic class CustomMap extends ForwardingSortedMap<String, Integer> {\n    private final TreeMap<String, Integer> delegate = new TreeMap<>();\n\n    @Override\n    protected TreeMap<String, Integer> delegate() {\n        return delegate;\n    }\n\n    public void addEntry(String key, Integer value) {\n        /* write */ put(key, value);\n    }\n}\n",
        "DataProcessor.java": "public class DataProcessor {\n    private CustomMap map;\n\n    public DataProcessor(CustomMap map) {\n        this.map = map;\n    }\n\n    public int getValue(String key) {\n        return map.get(key);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        CustomMap customMap = new CustomMap();\n        customMap.addEntry(\"key\", 42);\n\n        DataProcessor processor = new DataProcessor(customMap);\n        int sum = 0;\n\n        for (int i = 0; i < 10; i++) {\n            customMap.addEntry(\"key\" + i, i * 10);\n            sum += processor.getValue(\"key\" + i);\n        }\n        \n        System.out.println(\"Sum of dynamic keys: \" + sum);\n\n        /* read */ int value = processor.getValue(\"key\");\n        System.out.println(\"Value for 'key': \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSortedMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingSortedMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ForwardingSortedMap<String, Integer> map = new ForwardingSortedMap<String, Integer>() {\n            private final TreeMap<String, Integer> delegate = new TreeMap<>();\n\n            @Override\n            protected TreeMap<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n        \n        /* write */ map.put(\"key\", 42);\n        /* read */ int value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ForwardingSortedMap;\nimport com.google.common.collect.ForwardingList;\nimport java.util.TreeMap;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        ForwardingSortedMap<String, Integer> map = new ForwardingSortedMap<String, Integer>() {\n            private final TreeMap<String, Integer> delegate = new TreeMap<>();\n\n            @Override\n            protected TreeMap<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        List<String> keys = new ArrayList<>();\n        keys.add(\"key1\");\n        keys.add(\"key2\");\n        keys.add(\"key3\");\n\n        ForwardingList<Integer> values = new ForwardingList<Integer>() {\n            private final List<Integer> delegate = new ArrayList<>();\n\n            @Override\n            protected List<Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        for (int i = 0; i < keys.size(); i++) {\n            values.add(i * 10);\n        }\n\n        for (int i = 0; i < keys.size(); i++) {\n            map.put(keys.get(i), values.get(i));\n        }\n\n        /* write */ map.put(\"key\", 42);\n\n        int sum = 0;\n        for (String key : keys) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of values: \" + sum);\n\n        /* read */ int value = map.get(\"key\");\n        System.out.println(\"Value for 'key': \" + value);\n\n        ForwardingSortedMap<String, Double> anotherMap = new ForwardingSortedMap<String, Double>() {\n            private final TreeMap<String, Double> delegate = new TreeMap<>();\n\n            @Override\n            protected TreeMap<String, Double> delegate() {\n                return delegate;\n            }\n        };\n\n        anotherMap.put(\"pi\", 3.14);\n        anotherMap.put(\"e\", 2.71);\n        System.out.println(\"Value for 'pi': \" + anotherMap.get(\"pi\"));\n        System.out.println(\"Value for 'e': \" + anotherMap.get(\"e\"));\n    }\n}"
}