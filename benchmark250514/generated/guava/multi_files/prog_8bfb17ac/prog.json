{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private StudentScores scores = new StudentScores();\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public StudentScores getScores() {\n        return scores;\n    }\n}\n",
        "StudentScores.java": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\n\npublic class StudentScores {\n    private ClassToInstanceMap<Object> scoreMap = MutableClassToInstanceMap.create();\n\n    public void addScore(Integer score) {\n        /* write */ scoreMap.putInstance(Integer.class, score);\n    }\n\n    public Integer getScore() {\n        /* read */ return scoreMap.getInstance(Integer.class);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a course\n        Course course = new Course(\"Advanced Programming\");\n\n        // Create students\n        Student student1 = new Student(\"Alice\", 20);\n        Student student2 = new Student(\"Bob\", 22);\n\n        // Enroll students in the course\n        course.enrollStudent(student1);\n        course.enrollStudent(student2);\n\n        // Add scores to the students\n        student1.addScore(85);\n        student2.addScore(90);\n\n        // Retrieve and print student details\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student Name: \" + student.getName());\n            System.out.println(\"Student Age: \" + student.getAge());\n            System.out.println(\"Course: \" + course.getCourseName());\n            System.out.println(\"Score: \" + student.getScores().getScore());\n            System.out.println();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ClassToInstanceMap",
        "read_method": "getInstance"
    },
    "java_code_simple": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of MutableClassToInstanceMap\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n\n        // Create an instance of Integer to write into the map\n        Integer number = 42;\n\n        /* write */ map.putInstance(Integer.class, number);\n\n        /* read */ Integer retrievedNumber = map.getInstance(Integer.class);\n\n        // Print the retrieved value\n        System.out.println(retrievedNumber);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of MutableClassToInstanceMap\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n\n        // Create an instance of Integer to write into the map\n        Integer number = 42;\n\n        /* write */ map.putInstance(Integer.class, number);\n\n        // Create a HashMap to store some additional data\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"key1\", \"value1\");\n        stringMap.put(\"key2\", \"value2\");\n\n        // Iterate over the entries of the stringMap\n        for (Map.Entry<String, String> entry : stringMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9 is: \" + sum);\n\n        // Use a nested map structure\n        Map<String, Map<String, Integer>> nestedMap = new HashMap<>();\n        Map<String, Integer> innerMap = new HashMap<>();\n        innerMap.put(\"innerKey1\", 100);\n        innerMap.put(\"innerKey2\", 200);\n        nestedMap.put(\"outerKey\", innerMap);\n\n        // Access the nested map\n        Integer innerValue = nestedMap.get(\"outerKey\").get(\"innerKey1\");\n        System.out.println(\"Inner value: \" + innerValue);\n\n        /* read */ Integer retrievedNumber = map.getInstance(Integer.class);\n\n        // Print the retrieved value\n        System.out.println(\"Retrieved number: \" + retrievedNumber);\n\n        // Additional unrelated logic\n        StringBuilder sb = new StringBuilder();\n        for (char c = 'A'; c <= 'Z'; c++) {\n            sb.append(c);\n        }\n        System.out.println(\"Alphabets: \" + sb.toString());\n    }\n}"
}