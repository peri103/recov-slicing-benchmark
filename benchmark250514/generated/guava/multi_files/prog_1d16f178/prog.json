{
    "files": {
        "CustomMap.java": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CustomMap extends ForwardingMap<String, Integer> {\n    private Map<String, Integer> baseMap = new HashMap<>();\n\n    @Override\n    protected Map<String, Integer> delegate() {\n        return baseMap;\n    }\n\n    public void putValue(String key, Integer value) {\n        /* write */ put(key, value);\n    }\n\n    public Integer getValue(String key) {\n        return get(key);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> grades;\n\n    public Student(String name) {\n        this.name = name;\n        this.grades = new ArrayList<>();\n    }\n\n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n\n    public List<Integer> getGrades() {\n        return grades;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        CustomMap customMap = new CustomMap();\n        customMap.putValue(\"key\", 42);\n\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        student1.addGrade(85);\n        student2.addGrade(90);\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Grades: \" + student.getGrades());\n        }\n\n        // Performing some unrelated logic\n        int totalGrades = 0;\n        for (Student student : course.getStudents()) {\n            for (int grade : student.getGrades()) {\n                totalGrades += grade;\n            }\n        }\n        System.out.println(\"Total grades: \" + totalGrades);\n\n        // Reading the value from CustomMap\n        /* read */ int value = customMap.getValue(\"key\");\n        System.out.println(\"Value from CustomMap: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Map<String, Integer> baseMap = new HashMap<>();\n        ForwardingMap<String, Integer> map = new ForwardingMap<String, Integer>() {\n            @Override\n            protected Map<String, Integer> delegate() {\n                return baseMap;\n            }\n        };\n\n        /* write */ map.put(\"key\", 42);\n        /* read */ int value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Map<String, Integer> baseMap = new HashMap<>();\n        ForwardingMap<String, Integer> map = new ForwardingMap<String, Integer>() {\n            @Override\n            protected Map<String, Integer> delegate() {\n                return baseMap;\n            }\n        };\n\n        ArrayList<String> keys = new ArrayList<>();\n        keys.add(\"key\");\n        keys.add(\"anotherKey\");\n\n        // Insert some unrelated complex logic\n        Map<String, Integer> anotherMap = new HashMap<>();\n        anotherMap.put(\"anotherKey\", 100);\n        int sum = 0;\n        for (String key : keys) {\n            if (anotherMap.containsKey(key)) {\n                sum += anotherMap.get(key);\n            }\n        }\n        System.out.println(\"Sum of values in anotherMap: \" + sum);\n\n        /* write */ map.put(\"key\", 42);\n\n        // More unrelated logic\n        Map<String, Integer> yetAnotherMap = new HashMap<>();\n        yetAnotherMap.put(\"yetAnotherKey\", 200);\n        yetAnotherMap.put(\"key\", 84); // Different value for the same key\n        for (Map.Entry<String, Integer> entry : yetAnotherMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // A complex calculation\n        int complexResult = 0;\n        for (int i = 0; i < 10; i++) {\n            complexResult += i * i;\n        }\n        System.out.println(\"Complex calculation result: \" + complexResult);\n\n        /* read */ int value = map.get(\"key\");\n        System.out.println(\"Value from map: \" + value);\n\n        // Final unrelated logic\n        int finalSum = 0;\n        for (int i = 1; i <= 5; i++) {\n            finalSum += i;\n        }\n        System.out.println(\"Final sum: \" + finalSum);\n    }\n}"
}