{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollCourse(Course course) {\n        this.course = course;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class Course {\n    private String courseName;\n    private ImmutableSortedMap<String, Integer> grades;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        /* write */ this.grades = ImmutableSortedMap.of(\"Assignment1\", 85);\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public ImmutableSortedMap<String, Integer> getGrades() {\n        return grades;\n    }\n}\n",
        "Main.java": "import java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"John\");\n        Course mathCourse = new Course(\"Mathematics\");\n\n        student.enrollCourse(mathCourse);\n\n        // Perform some operations with the student and course\n        System.out.println(\"Student: \" + student.getName());\n        System.out.println(\"Enrolled in: \" + student.getCourse().getCourseName());\n\n        // Retrieve grades from the course\n        Map<String, Integer> grades = student.getCourse().getGrades();\n\n        // Iterate over grades and print them\n        for (Map.Entry<String, Integer> entry : grades.entrySet()) {\n            System.out.println(\"Grade for \" + entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Retrieve and print a specific grade using the read method\n        /* read */ Integer assignment1Grade = mathCourse.getGrades().get(\"Assignment1\");\n        System.out.println(\"Grade for Assignment1: \" + assignment1Grade);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMap",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableSortedMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        /* write */ ImmutableSortedMap<String, Integer> map = ImmutableSortedMap.of(\"key1\", 100);\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableSortedMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a mutable map and populate it with some data\n        Map<String, Integer> mutableMap = new HashMap<>();\n        mutableMap.put(\"key2\", 200);\n        mutableMap.put(\"key3\", 300);\n        \n        // Perform some operations on the mutable map\n        mutableMap.put(\"key4\", 400);\n        mutableMap.remove(\"key2\");\n        \n        // Create an ImmutableSortedMap using the original write-read pair\n        /* write */ ImmutableSortedMap<String, Integer> map = ImmutableSortedMap.of(\"key1\", 100);\n        \n        // Add the mutable map's entries to a new ImmutableSortedMap\n        ImmutableSortedMap<String, Integer> combinedMap = ImmutableSortedMap.<String, Integer>naturalOrder()\n            .putAll(mutableMap)\n            .putAll(map)\n            .build();\n        \n        // Perform some operations on the combined map\n        Integer sum = 0;\n        for (Map.Entry<String, Integer> entry : combinedMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in combined map: \" + sum);\n        \n        // Retrieve and print the value from the original map using the read method\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(\"Value for 'key1': \" + value);\n        \n        // Additional operations to make the program more complex\n        for (String key : combinedMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + combinedMap.get(key));\n        }\n        \n        // Another map operation\n        int product = 1;\n        for (Integer val : combinedMap.values()) {\n            product *= val;\n        }\n        System.out.println(\"Product of values in combined map: \" + product);\n    }\n}"
}