{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name) {\n        this.name = name;\n        this.course = new Course();\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void enrollInCourse(String courseName, int grade) {\n        course.addGrade(courseName, grade);\n    }\n\n    public Integer getCourseGrade(String courseName) {\n        return course.getGrade(courseName);\n    }\n}\n",
        "Course.java": "import com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Course {\n    private Table<String, String, Integer> courseGrades = HashBasedTable.create();\n\n    public void addGrade(String courseName, int grade) {\n        /* write */ courseGrades.put(\"student1\", courseName, grade);\n    }\n\n    public Integer getGrade(String courseName) {\n        /* read */ return courseGrades.get(\"student1\", courseName);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"John Doe\");\n        student.enrollInCourse(\"Math\", 95);\n        student.enrollInCourse(\"Science\", 88);\n        \n        Integer mathGrade = student.getCourseGrade(\"Math\");\n        System.out.println(\"Math grade for \" + student.getName() + \": \" + mathGrade);\n        \n        Integer scienceGrade = student.getCourseGrade(\"Science\");\n        System.out.println(\"Science grade for \" + student.getName() + \": \" + scienceGrade);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.Table",
        "write_method": "put",
        "read_class": "com.google.common.collect.Table",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        Table<String, String, Integer> table = HashBasedTable.create();\n        \n        /* write */ table.put(\"row1\", \"column1\", 42);\n        \n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        \n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Table<String, String, Integer> table = HashBasedTable.create();\n        Map<String, Integer> map = new HashMap<>();\n\n        // Adding elements to the map\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        \n        // Performing operations on the map\n        if (map.containsKey(\"key1\")) {\n            System.out.println(\"Map contains key1 with value: \" + map.get(\"key1\"));\n        }\n\n        // Adding more elements to the table\n        table.put(\"row2\", \"column2\", 84);\n        table.put(\"row3\", \"column3\", 126);\n\n        // Performing operations on the table\n        for (String row : table.rowKeySet()) {\n            for (String column : table.columnKeySet()) {\n                Integer val = table.get(row, column);\n                if (val != null) {\n                    System.out.println(\"Table value at (\" + row + \", \" + column + \"): \" + val);\n                }\n            }\n        }\n\n        /* write */ table.put(\"row1\", \"column1\", 42);\n\n        // Performing operations to make the program more complex\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n\n        // More operations on the table\n        table.put(\"row4\", \"column4\", 168);\n        table.put(\"row5\", \"column5\", 210);\n\n        // Retrieving the original value\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        System.out.println(\"Retrieved value: \" + value);\n\n        // Final operations on the table\n        int total = 0;\n        for (Map.Entry<String, Map<String, Integer>> rowEntry : table.rowMap().entrySet()) {\n            for (Integer cellValue : rowEntry.getValue().values()) {\n                total += cellValue;\n            }\n        }\n        System.out.println(\"Total value of all table cells: \" + total);\n    }\n}"
}