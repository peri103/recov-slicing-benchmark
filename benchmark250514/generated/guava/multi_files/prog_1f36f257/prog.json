{
    "files": {
        "Student.java": "import java.util.List;\n\npublic class Student {\n    private String name;\n    private StudentScores scores = new StudentScores();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores.getScores();\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "StudentScores.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class StudentScores {\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public void addScore(int score) {\n        /* write */ scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a course and students\n        Course course = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        // Enroll students in the course\n        course.enrollStudent(student1);\n        course.enrollStudent(student2);\n\n        // Add scores to students\n        student1.addScore(95);\n        student2.addScore(88);\n\n        // Read scores from student1\n        List<Integer> scores1 = student1.getScores();\n        /* read */ int score1 = scores1.get(0);\n\n        // Print results\n        System.out.println(\"Course: \" + course.getCourseName());\n        System.out.println(student1.getName() + \"'s score: \" + score1);\n\n        // Additional operations\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName());\n            System.out.println(\"Scores: \" + student.getScores());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingMultimap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ForwardingMultimap;\nimport com.google.common.collect.Multimap;\nimport com.google.common.collect.ArrayListMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multimap<String, String> multimap = ArrayListMultimap.create();\n        \n        /* write */ multimap.put(\"key\", \"value\");\n        \n        /* read */ String value = multimap.get(\"key\").iterator().next();\n        \n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ForwardingMultimap;\nimport com.google.common.collect.Multimap;\nimport com.google.common.collect.ArrayListMultimap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize multimap and hashmap\n        Multimap<String, String> multimap = ArrayListMultimap.create();\n        Map<String, Integer> hashmap = new HashMap<>();\n        \n        // Put values into hashmap\n        hashmap.put(\"one\", 1);\n        hashmap.put(\"two\", 2);\n        hashmap.put(\"three\", 3);\n        \n        // Perform operations on hashmap\n        for (String key : hashmap.keySet()) {\n            System.out.println(\"Hashmap key: \" + key + \", value: \" + hashmap.get(key));\n        }\n        \n        // Write to multimap\n        /* write */ multimap.put(\"key\", \"value\");\n        \n        // Additional multimap operations\n        multimap.put(\"key\", \"anotherValue\");\n        multimap.put(\"anotherKey\", \"newValue\");\n        \n        // Read from multimap\n        /* read */ String value = multimap.get(\"key\").iterator().next();\n        \n        System.out.println(\"Multimap read value: \" + value);\n        \n        // Further operations on multimap\n        for (String key : multimap.keySet()) {\n            System.out.println(\"Multimap key: \" + key + \", values: \" + multimap.get(key));\n        }\n        \n        // Perform calculations\n        int sum = 0;\n        for (Integer num : hashmap.values()) {\n            sum += num;\n        }\n        System.out.println(\"Sum of hashmap values: \" + sum);\n        \n        // Conditional logic\n        if (multimap.containsKey(\"anotherKey\")) {\n            System.out.println(\"Multimap contains 'anotherKey'\");\n        }\n    }\n}"
}