{
    "files": {
        "RangeMapHandler.java": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeMap;\nimport com.google.common.collect.TreeRangeMap;\n\npublic class RangeMapHandler {\n    private RangeMap<Integer, String> rangeMap = TreeRangeMap.create();\n\n    public void addRange(int start, int end, String value) {\n        /* write */ rangeMap.put(Range.closed(start, end), value);\n    }\n\n    public String getValue(int key) {\n        return rangeMap.get(key);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<String> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(String studentName) {\n        students.add(studentName);\n    }\n\n    public List<String> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n        course.addStudent(name);\n    }\n\n    public List<Course> getCourses() {\n        return courses;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        RangeMapHandler rangeMapHandler = new RangeMapHandler();\n        rangeMapHandler.addRange(1, 10, \"Hello\");\n\n        Student student = new Student(\"Alice\");\n        Course course = new Course(\"Mathematics\");\n        student.enrollInCourse(course);\n\n        System.out.println(\"Courses enrolled by Alice:\");\n        for (Course c : student.getCourses()) {\n            System.out.println(c.getStudents());\n        }\n\n        /* read */ String value = rangeMapHandler.getValue(5);\n        System.out.println(\"Read value: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.RangeMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.RangeMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeMap;\nimport com.google.common.collect.TreeRangeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        RangeMap<Integer, String> rangeMap = TreeRangeMap.create();\n        /* write */ rangeMap.put(Range.closed(1, 10), \"Hello\");\n        /* read */ String value = rangeMap.get(5);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeMap;\nimport com.google.common.collect.TreeRangeMap;\nimport com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.RangeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        RangeMap<Integer, String> rangeMap = TreeRangeMap.create();\n        RangeMap<Integer, String> rangeMap2 = TreeRangeMap.create();\n        \n        // Additional RangeMap operations\n        rangeMap2.put(Range.closed(20, 30), \"World\");\n        rangeMap2.put(Range.closed(31, 40), \"Guava\");\n        \n        RangeSet<Integer> rangeSet = ImmutableRangeSet.of(Range.closed(1, 10), Range.closed(20, 30));\n        \n        /* write */ rangeMap.put(Range.closed(1, 10), \"Hello\");\n        \n        // Complex operations involving rangeSet\n        if (rangeSet.contains(5)) {\n            System.out.println(\"5 is within the rangeSet\");\n        }\n        \n        if (rangeSet.contains(25)) {\n            System.out.println(\"25 is within the rangeSet\");\n        }\n        \n        String valueFromRangeMap2 = rangeMap2.get(25);\n        System.out.println(\"Value from rangeMap2: \" + valueFromRangeMap2);\n        \n        // ImmutableRangeMap usage\n        ImmutableRangeMap<Integer, String> immutableRangeMap = ImmutableRangeMap.<Integer, String>builder()\n            .put(Range.closed(50, 60), \"Immutable\")\n            .put(Range.closed(61, 70), \"RangeMap\")\n            .build();\n        \n        String valueFromImmutableRangeMap = immutableRangeMap.get(55);\n        System.out.println(\"Value from immutableRangeMap: \" + valueFromImmutableRangeMap);\n        \n        /* read */ String value = rangeMap.get(5);\n        System.out.println(\"Read value: \" + value);\n        \n        // More operations to make the program complex\n        for (int i = 1; i <= 10; i++) {\n            if (rangeSet.contains(i)) {\n                System.out.println(i + \" is within the rangeSet\");\n            }\n        }\n    }\n}"
}