{
    "files": {
        "Course.java": "import com.google.common.collect.ArrayTable;\nimport com.google.common.collect.Lists;\nimport java.util.List;\n\npublic class Course {\n    private ArrayTable<String, String, Integer> grades;\n\n    public Course() {\n        List<String> students = Lists.newArrayList(\"Alice\", \"Bob\");\n        List<String> assignments = Lists.newArrayList(\"Assignment1\", \"Assignment2\");\n        grades = ArrayTable.create(students, assignments);\n    }\n\n    public void addGrade(String student, String assignment, int grade) {\n        /* write */ grades.put(student, assignment, grade);\n    }\n\n    public Integer getGrade(String student, String assignment) {\n        return grades.get(student, assignment);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public void addGrade(String assignment, int grade) {\n        course.addGrade(name, assignment, grade);\n    }\n\n    public Integer getGrade(String assignment) {\n        return course.getGrade(name, assignment);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Course course = new Course();\n        Student alice = new Student(\"Alice\", course);\n        Student bob = new Student(\"Bob\", course);\n\n        alice.addGrade(\"Assignment1\", 85);\n        bob.addGrade(\"Assignment1\", 90);\n\n        // Unrelated operations\n        int unrelatedCalculation = 7 * 6;\n        System.out.println(\"Unrelated Calculation: \" + unrelatedCalculation);\n\n        // Further operations\n        alice.addGrade(\"Assignment2\", 95);\n        bob.addGrade(\"Assignment2\", 88);\n\n        // Retrieve and print grades\n        Integer aliceGrade = alice.getGrade(\"Assignment1\");\n        /* read */ System.out.println(\"Alice's Grade for Assignment1: \" + aliceGrade);\n\n        Integer bobGrade = bob.getGrade(\"Assignment1\");\n        System.out.println(\"Bob's Grade for Assignment1: \" + bobGrade);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ArrayTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.ArrayTable",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ArrayTable;\nimport com.google.common.collect.Lists;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the row and column keys for the ArrayTable\n        java.util.List<String> rowKeys = Lists.newArrayList(\"row1\");\n        java.util.List<String> columnKeys = Lists.newArrayList(\"column1\");\n\n        // Create an ArrayTable with the specified row and column keys\n        ArrayTable<String, String, Integer> table = ArrayTable.create(rowKeys, columnKeys);\n\n        /* write */ table.put(\"row1\", \"column1\", 42);\n\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ArrayTable;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the row and column keys for the ArrayTable\n        java.util.List<String> rowKeys = Lists.newArrayList(\"row1\", \"row2\");\n        java.util.List<String> columnKeys = Lists.newArrayList(\"column1\", \"column2\");\n\n        // Create an ArrayTable with the specified row and column keys\n        ArrayTable<String, String, Integer> table = ArrayTable.create(rowKeys, columnKeys);\n\n        /* write */ table.put(\"row1\", \"column1\", 42);\n\n        // Create a HashBasedTable for additional operations\n        Table<String, String, String> hashTable = HashBasedTable.create();\n        hashTable.put(\"key1\", \"subKey1\", \"value1\");\n        hashTable.put(\"key2\", \"subKey2\", \"value2\");\n\n        // Perform some operations on the hashTable\n        String hashValue = hashTable.get(\"key1\", \"subKey1\");\n        System.out.println(\"Hash Table Value: \" + hashValue);\n\n        // Iterate over the hashTable\n        for (Table.Cell<String, String, String> cell : hashTable.cellSet()) {\n            System.out.println(\"Hash Table Cell: \" + cell.getRowKey() + \", \" + cell.getColumnKey() + \" = \" + cell.getValue());\n        }\n\n        // Perform calculations and store results in the ArrayTable\n        int sum = 0;\n        for (String rowKey : rowKeys) {\n            for (String columnKey : columnKeys) {\n                if (table.contains(rowKey, columnKey)) {\n                    sum += table.get(rowKey, columnKey);\n                }\n            }\n        }\n        System.out.println(\"Sum of ArrayTable values: \" + sum);\n\n        // Perform some unrelated operations\n        int unrelatedCalculation = 5 * 10;\n        System.out.println(\"Unrelated Calculation: \" + unrelatedCalculation);\n\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        System.out.println(value);\n\n        // Additional operations on ArrayTable\n        table.put(\"row2\", \"column2\", 100);\n        Integer newValue = table.get(\"row2\", \"column2\");\n        System.out.println(\"New Value: \" + newValue);\n    }\n}"
}