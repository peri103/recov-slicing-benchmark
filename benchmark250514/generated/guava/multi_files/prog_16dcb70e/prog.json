{
    "files": {
        "RangeSetBuilder.java": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\n\npublic class RangeSetBuilder {\n    private ImmutableRangeSet.Builder<Integer> builder = ImmutableRangeSet.builder();\n\n    public void addRange(int start, int end) {\n        /* write */ builder.add(Range.closed(start, end));\n    }\n\n    public ImmutableRangeSet<Integer> build() {\n        return builder.build();\n    }\n}\n",
        "RangeSetChecker.java": "import com.google.common.collect.ImmutableRangeSet;\n\npublic class RangeSetChecker {\n    private ImmutableRangeSet<Integer> rangeSet;\n\n    public RangeSetChecker(ImmutableRangeSet<Integer> rangeSet) {\n        this.rangeSet = rangeSet;\n    }\n\n    public boolean contains(int value) {\n        return rangeSet.contains(value);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableRangeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a RangeSetBuilder and add a range\n        RangeSetBuilder rangeSetBuilder = new RangeSetBuilder();\n        rangeSetBuilder.addRange(1, 10);\n\n        // Build the ImmutableRangeSet\n        ImmutableRangeSet<Integer> rangeSet = rangeSetBuilder.build();\n\n        // Create a RangeSetChecker to check if a value is within the range\n        RangeSetChecker rangeSetChecker = new RangeSetChecker(rangeSet);\n\n        // Create a student and add scores\n        Student student = new Student(\"Alice\");\n        student.addScore(85);\n        student.addScore(90);\n\n        // Check if a specific value is within the range\n        /* read */ boolean containsValue = rangeSetChecker.contains(5);\n        System.out.println(\"RangeSet contains 5: \" + containsValue);\n\n        // Print student details\n        System.out.println(\"Student: \" + student.getName());\n        System.out.println(\"Scores: \" + student.getScores());\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableRangeSet",
        "read_method": "contains"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableRangeSet.Builder<Integer> builder = ImmutableRangeSet.builder();\n        /* write */ builder.add(Range.closed(1, 10));\n        ImmutableRangeSet<Integer> rangeSet = builder.build();\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a builder for ImmutableRangeSet\n        ImmutableRangeSet.Builder<Integer> builder = ImmutableRangeSet.builder();\n        \n        // Add a range to the builder\n        /* write */ builder.add(Range.closed(1, 10));\n        \n        // Create an ImmutableRangeSet from the builder\n        ImmutableRangeSet<Integer> rangeSet = builder.build();\n        \n        // Initialize a map to associate range sets with their descriptions\n        Map<String, ImmutableRangeSet<Integer>> rangeSetMap = new HashMap<>();\n        rangeSetMap.put(\"Range 1-10\", rangeSet);\n        \n        // Create another range set and add it to the map\n        ImmutableRangeSet.Builder<Integer> anotherBuilder = ImmutableRangeSet.builder();\n        anotherBuilder.add(Range.closed(20, 30));\n        ImmutableRangeSet<Integer> anotherRangeSet = anotherBuilder.build();\n        rangeSetMap.put(\"Range 20-30\", anotherRangeSet);\n\n        // Iterate over the map and print the description of each range set\n        for (Map.Entry<String, ImmutableRangeSet<Integer>> entry : rangeSetMap.entrySet()) {\n            System.out.println(\"Description: \" + entry.getKey());\n            System.out.println(\"Contains 5: \" + entry.getValue().contains(5));\n            System.out.println(\"Contains 25: \" + entry.getValue().contains(25));\n        }\n\n        // Use the original rangeSet to check if it contains a specific value\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(\"Original RangeSet contains 5: \" + containsValue);\n\n        // Create an ImmutableSet and perform operations\n        ImmutableSet<Integer> immutableSet = ImmutableSet.of(1, 2, 3, 4, 5);\n        System.out.println(\"ImmutableSet contains 3: \" + immutableSet.contains(3));\n        \n        // Perform some unrelated calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n    }\n}"
}