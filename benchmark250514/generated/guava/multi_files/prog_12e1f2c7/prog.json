{
    "files": {
        "ColorCounter.java": "import com.google.common.collect.EnumMultiset;\nimport java.util.Arrays;\n\npublic class ColorCounter {\n    // Define an enum for demonstration purposes\n    public enum Color {\n        RED, GREEN, BLUE\n    }\n\n    private EnumMultiset<Color> multiset;\n\n    public ColorCounter() {\n        // Create an EnumMultiset instance for the Color enum\n        multiset = EnumMultiset.create(Arrays.asList(Color.class.getEnumConstants()));\n    }\n\n    public void addColor(Color color) {\n        /* write */ multiset.add(color);\n    }\n\n    public int getColorCount(Color color) {\n        return multiset.count(color);\n    }\n}\n",
        "FruitBasket.java": "import com.google.common.collect.HashMultiset;\n\npublic class FruitBasket {\n    private HashMultiset<String> fruitMultiset;\n\n    public FruitBasket() {\n        fruitMultiset = HashMultiset.create();\n    }\n\n    public void addFruit(String fruit) {\n        fruitMultiset.add(fruit);\n    }\n\n    public int getFruitCount(String fruit) {\n        return fruitMultiset.count(fruit);\n    }\n\n    public void printAllFruits() {\n        for (String fruit : fruitMultiset.elementSet()) {\n            System.out.println(fruit + \": \" + fruitMultiset.count(fruit));\n        }\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a ColorCounter instance\n        ColorCounter colorCounter = new ColorCounter();\n        \n        // Add a color to the ColorCounter\n        colorCounter.addColor(ColorCounter.Color.RED);\n\n        // Create a FruitBasket instance\n        FruitBasket fruitBasket = new FruitBasket();\n        \n        // Add fruits to the FruitBasket\n        fruitBasket.addFruit(\"apple\");\n        fruitBasket.addFruit(\"banana\");\n        fruitBasket.addFruit(\"apple\");\n        fruitBasket.addFruit(\"orange\");\n\n        // Perform operations on the FruitBasket\n        int appleCount = fruitBasket.getFruitCount(\"apple\");\n        System.out.println(\"Apple count: \" + appleCount);\n\n        // Read the count of the color added to the ColorCounter\n        /* read */ int redCount = colorCounter.getColorCount(ColorCounter.Color.RED);\n\n        // Print the count of the color\n        System.out.println(\"Count of RED: \" + redCount);\n\n        // Print all fruits in the FruitBasket\n        fruitBasket.printAllFruits();\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.EnumMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.EnumMultiset",
        "read_method": "count"
    },
    "java_code_simple": "import com.google.common.collect.EnumMultiset;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define an enum for demonstration purposes\n        enum Color {\n            RED, GREEN, BLUE\n        }\n\n        // Create an EnumMultiset instance for the Color enum\n        EnumMultiset<Color> multiset = EnumMultiset.create(Arrays.asList(Color.class.getEnumConstants()));\n\n        // Add an element to the multiset\n        /* write */ multiset.add(Color.RED);\n\n        // Read the count of the element added\n        /* read */ int count = multiset.count(Color.RED);\n\n        // Print the count\n        System.out.println(count);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.EnumMultiset;\nimport com.google.common.collect.HashMultiset;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define an enum for demonstration purposes\n        enum Color {\n            RED, GREEN, BLUE\n        }\n\n        // Create an EnumMultiset instance for the Color enum\n        EnumMultiset<Color> multiset = EnumMultiset.create(Arrays.asList(Color.class.getEnumConstants()));\n\n        // Add an element to the multiset\n        /* write */ multiset.add(Color.RED);\n\n        // Create another multiset for demonstration\n        HashMultiset<String> stringMultiset = HashMultiset.create();\n        stringMultiset.add(\"apple\");\n        stringMultiset.add(\"banana\");\n        stringMultiset.add(\"apple\");\n\n        // Perform some operations on the string multiset\n        int appleCount = stringMultiset.count(\"apple\");\n        System.out.println(\"Apple count: \" + appleCount);\n\n        // Perform additional unrelated operations\n        int sum = 0;\n        for (Color color : Color.values()) {\n            sum += color.ordinal();\n        }\n        System.out.println(\"Sum of ordinals: \" + sum);\n\n        // Read the count of the element added to the original multiset\n        /* read */ int count = multiset.count(Color.RED);\n\n        // Print the count\n        System.out.println(\"Count of RED: \" + count);\n\n        // Perform more operations on the string multiset\n        stringMultiset.add(\"orange\");\n        int orangeCount = stringMultiset.count(\"orange\");\n        System.out.println(\"Orange count: \" + orangeCount);\n\n        // Final operation to show complexity\n        for (String fruit : stringMultiset.elementSet()) {\n            System.out.println(fruit + \": \" + stringMultiset.count(fruit));\n        }\n    }\n}"
}