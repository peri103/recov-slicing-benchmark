{
    "files": {
        "Student.java": "import java.util.List;\n\npublic class Student {\n    private String name;\n    private StudentScores scores = new StudentScores();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores.getScores();\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "StudentScores.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class StudentScores {\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public void addScore(int score) {\n        /* write */ scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a new course\n        Course course = new Course(\"Mathematics\");\n\n        // Create students and add them to the course\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n        \n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Add scores to students\n        student1.addScore(85);\n        student2.addScore(90);\n\n        // Get scores for a student\n        List<Integer> aliceScores = student1.getScores();\n        \n        // Read a score from the list\n        /* read */ int aliceScore = aliceScores.get(0);\n        \n        // Print the score\n        System.out.println(\"Alice's first score: \" + aliceScore);\n\n        // Additional operations for complexity\n        for (Student student : course.getStudents()) {\n            System.out.println(student.getName() + \" is enrolled in \" + course.getCourseName());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.TreeBasedTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.TreeBasedTable",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the TreeBasedTable\n        Table<String, String, Integer> table = TreeBasedTable.create();\n        \n        // Write a value to the table\n        /* write */ table.put(\"row1\", \"column1\", 42);\n        \n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        \n        // Print the value to ensure correctness\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the TreeBasedTable\n        Table<String, String, Integer> table = TreeBasedTable.create();\n        \n        // Initialize a HashMap for additional complexity\n        Map<String, Integer> map = new HashMap<>();\n        \n        // Populate the HashMap with some values\n        map.put(\"key1\", 10);\n        map.put(\"key2\", 20);\n        \n        // Write a value to the table\n        /* write */ table.put(\"row1\", \"column1\", 42);\n        \n        // Perform some operations on the HashMap\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            sum += entry.getValue();\n        }\n        \n        // Print the sum of HashMap values\n        System.out.println(\"Sum of HashMap values: \" + sum);\n        \n        // Initialize another TreeBasedTable for additional complexity\n        Table<String, String, String> stringTable = TreeBasedTable.create();\n        \n        // Populate the stringTable with some values\n        stringTable.put(\"rowA\", \"columnA\", \"Hello\");\n        stringTable.put(\"rowB\", \"columnB\", \"World\");\n        \n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        \n        // Print the value to ensure correctness\n        System.out.println(value);\n        \n        // Perform some operations on the stringTable\n        for (Table.Cell<String, String, String> cell : stringTable.cellSet()) {\n            System.out.println(\"StringTable Value: \" + cell.getValue());\n        }\n        \n        // More operations on the original table for complexity\n        table.put(\"row2\", \"column2\", 84);\n        Integer newValue = table.get(\"row2\", \"column2\");\n        System.out.println(\"New Value from Table: \" + newValue);\n    }\n}"
}