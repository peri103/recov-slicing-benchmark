{
    "files": {
        "RangeOperations.java": "import com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.Range;\n\npublic class RangeOperations {\n    private TreeRangeSet<Integer> rangeSet = TreeRangeSet.create();\n\n    public void addRange(int start, int end) {\n        /* write */ rangeSet.add(Range.closed(start, end));\n    }\n\n    public boolean containsValue(int value) {\n        return rangeSet.contains(value);\n    }\n}\n",
        "Student.java": "import java.util.HashMap;\n\npublic class Student {\n    private String name;\n    private HashMap<String, Integer> scores = new HashMap<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(String subject, int score) {\n        scores.put(subject, score);\n    }\n\n    public Integer getScore(String subject) {\n        return scores.get(subject);\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a RangeOperations instance\n        RangeOperations rangeOps = new RangeOperations();\n        rangeOps.addRange(1, 10);\n\n        // Create a Student instance\n        Student student = new Student(\"Alice\");\n        student.addScore(\"Math\", 95);\n        student.addScore(\"Science\", 88);\n\n        // Display student scores\n        ImmutableSet<String> subjects = ImmutableSet.of(\"Math\", \"Science\");\n        for (String subject : subjects) {\n            System.out.println(student.getName() + \"'s score in \" + subject + \": \" + student.getScore(subject));\n        }\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n            System.out.println(\"Sum after adding \" + i + \" is: \" + sum);\n        }\n\n        // Check if a value is in the range\n        /* read */ boolean contains = rangeOps.containsValue(5);\n        System.out.println(\"Range contains 5: \" + contains);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.TreeRangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.TreeRangeSet",
        "read_method": "contains"
    },
    "java_code_simple": "import com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeRangeSet<Integer> rangeSet = TreeRangeSet.create();\n        /* write */ rangeSet.add(Range.closed(1, 10));\n        /* read */ boolean contains = rangeSet.contains(5);\n        System.out.println(contains);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeRangeSet<Integer> rangeSet = TreeRangeSet.create();\n        /* write */ rangeSet.add(Range.closed(1, 10));\n\n        // Additional code to add complexity\n        ImmutableSet<String> immutableSet = ImmutableSet.of(\"A\", \"B\", \"C\");\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"A\", 1);\n        map.put(\"B\", 2);\n        map.put(\"C\", 3);\n\n        for (String s : immutableSet) {\n            if (map.containsKey(s)) {\n                System.out.println(\"Key \" + s + \" has value \" + map.get(s));\n            }\n        }\n\n        // Perform some operations unrelated to the original write-read pair\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n            System.out.println(\"Sum after adding \" + i + \" is: \" + sum);\n        }\n\n        // More unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 4; i++) {\n            product *= i;\n            System.out.println(\"Product after multiplying \" + i + \" is: \" + product);\n        }\n\n        // Now read from the rangeSet\n        /* read */ boolean contains = rangeSet.contains(5);\n        System.out.println(\"RangeSet contains 5: \" + contains);\n    }\n}"
}