{
    "files": {
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Integer> grades = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addGrade(int grade) {\n        /* write */ grades.add(grade);\n    }\n\n    public List<Integer> getGrades() {\n        return grades;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Course> courses = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void enrollCourse(Course course) {\n        courses.add(course);\n    }\n\n    public ArrayList<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.HashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Bob\");\n        Course math = new Course(\"Mathematics\");\n        Course science = new Course(\"Science\");\n\n        student.enrollCourse(math);\n        student.enrollCourse(science);\n\n        math.addGrade(95);\n        science.addGrade(88);\n\n        HashBiMap<String, Integer> map = HashBiMap.create();\n        /* write */ map.put(\"key\", 123);\n\n        for (Course course : student.getCourses()) {\n            System.out.println(\"Course: \" + course.getCourseName());\n            for (int grade : course.getGrades()) {\n                System.out.println(\"Grade: \" + grade);\n            }\n        }\n\n        /* read */ int value = map.get(\"key\");\n        System.out.println(\"Original key value: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.HashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.HashBiMap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.HashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> map = HashBiMap.create();\n        /* write */ map.put(\"key\", 123);\n        /* read */ int value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.HashBiMap;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> map = HashBiMap.create();\n        HashMap<String, String> simpleMap = new HashMap<>();\n        ArrayList<Integer> numbers = new ArrayList<>();\n\n        // Add some elements to the HashMap\n        simpleMap.put(\"first\", \"apple\");\n        simpleMap.put(\"second\", \"banana\");\n\n        // Add some numbers to the ArrayList\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 2);\n        }\n\n        // Perform some operations with the numbers\n        for (int num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n\n        // More complex operations\n        if (simpleMap.containsKey(\"first\")) {\n            System.out.println(\"First element in simpleMap: \" + simpleMap.get(\"first\"));\n        }\n\n        /* write */ map.put(\"key\", 123); // Original write operation\n\n        // Add more entries to the HashBiMap\n        map.put(\"anotherKey\", 456);\n        map.put(\"thirdKey\", 789);\n\n        // Perform operations with the HashBiMap\n        if (map.containsKey(\"anotherKey\")) {\n            System.out.println(\"Another key value: \" + map.get(\"anotherKey\"));\n        }\n\n        // Some unrelated computations\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        /* read */ int value = map.get(\"key\"); // Original read operation\n        System.out.println(\"Original key value: \" + value);\n\n        // Further operations with HashBiMap\n        if (map.containsKey(\"thirdKey\")) {\n            System.out.println(\"Third key value: \" + map.get(\"thirdKey\"));\n        }\n    }\n}"
}