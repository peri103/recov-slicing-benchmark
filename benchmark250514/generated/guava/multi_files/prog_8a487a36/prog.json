{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name) {\n        this.name = name;\n        this.course = new Course();\n    }\n\n    public void enrollCourse(String courseName) {\n        course.addCourse(courseName);\n    }\n\n    public String getFirstCourse() {\n        return course.getFirstCourse();\n    }\n}\n",
        "Course.java": "import com.google.common.collect.MinMaxPriorityQueue;\n\npublic class Course {\n    private MinMaxPriorityQueue<String> courses = MinMaxPriorityQueue.create();\n\n    public void addCourse(String courseName) {\n        /* write */ courses.add(courseName);\n    }\n\n    public String getFirstCourse() {\n        /* read */ return courses.peek();\n    }\n}\n",
        "Main.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"John Doe\");\n        student.enrollCourse(\"Mathematics\");\n        student.enrollCourse(\"Science\");\n\n        System.out.println(\"First enrolled course: \" + student.getFirstCourse());\n\n        Map<Integer, Student> studentMap = new HashMap<>();\n        studentMap.put(1, student);\n\n        for (Map.Entry<Integer, Student> entry : studentMap.entrySet()) {\n            System.out.println(\"Student ID: \" + entry.getKey() + \", Name: \" + entry.getValue().getFirstCourse());\n        }\n\n        Student anotherStudent = new Student(\"Jane Doe\");\n        anotherStudent.enrollCourse(\"History\");\n        anotherStudent.enrollCourse(\"Geography\");\n\n        studentMap.put(2, anotherStudent);\n\n        for (Map.Entry<Integer, Student> entry : studentMap.entrySet()) {\n            System.out.println(\"Student ID: \" + entry.getKey() + \", First Course: \" + entry.getValue().getFirstCourse());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.MinMaxPriorityQueue",
        "write_method": "add",
        "read_class": "com.google.common.collect.MinMaxPriorityQueue",
        "read_method": "peek"
    },
    "java_code_simple": "import com.google.common.collect.MinMaxPriorityQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        MinMaxPriorityQueue<Integer> queue = MinMaxPriorityQueue.create();\n        /* write */ queue.add(42);\n        /* read */ Integer value = queue.peek();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.MinMaxPriorityQueue;\nimport java.util.PriorityQueue;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        MinMaxPriorityQueue<Integer> queue = MinMaxPriorityQueue.create();\n        PriorityQueue<String> stringQueue = new PriorityQueue<>();\n        HashMap<Integer, String> map = new HashMap<>();\n\n        stringQueue.add(\"Hello\");\n        stringQueue.add(\"World\");\n        map.put(1, \"One\");\n        map.put(2, \"Two\");\n\n        /* write */ queue.add(42);\n        \n        for (int i = 0; i < 10; i++) {\n            map.put(i + 3, \"Number: \" + (i + 3));\n        }\n\n        System.out.println(\"String Queue Peek: \" + stringQueue.peek());\n        \n        for (Integer key : map.keySet()) {\n            System.out.println(\"Map Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        /* read */ Integer value = queue.peek();\n        System.out.println(\"MinMaxPriorityQueue Peek: \" + value);\n\n        MinMaxPriorityQueue<Integer> anotherQueue = MinMaxPriorityQueue.create();\n        anotherQueue.add(100);\n        anotherQueue.add(200);\n        anotherQueue.add(300);\n\n        System.out.println(\"Another Queue Peek: \" + anotherQueue.peek());\n\n        for (int i = 0; i < 5; i++) {\n            anotherQueue.add(i * 10);\n        }\n\n        while (!anotherQueue.isEmpty()) {\n            System.out.println(\"Polling from Another Queue: \" + anotherQueue.poll());\n        }\n    }\n}"
}