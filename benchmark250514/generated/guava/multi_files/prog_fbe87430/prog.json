{
    "files": {
        "ImmutableTableHandler.java": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableTable.Builder;\n\npublic class ImmutableTableHandler {\n    private Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n    private ImmutableTable<String, String, Integer> table;\n\n    public void putValue(String row, String column, Integer value) {\n        /* write */ builder.put(row, column, value);\n        table = builder.build();\n    }\n\n    public Integer getValue(String row, String column) {\n        return table.get(row, column);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private ImmutableTableHandler tableHandler = new ImmutableTableHandler();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(String subject, int score) {\n        tableHandler.putValue(name, subject, score);\n    }\n\n    public Integer getScore(String subject) {\n        return tableHandler.getValue(name, subject);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        student.addScore(\"Math\", 95);\n\n        // Perform some unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n\n        // Read the score for Math\n        /* read */ Integer mathScore = student.getScore(\"Math\");\n        System.out.println(\"Math Score: \" + mathScore);\n\n        // Additional unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableTable.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n\n        // Write operation\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Build the ImmutableTable\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Read operation\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableTable.Builder;\nimport com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n\n        // Write operation\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Create a HashBasedTable for additional operations\n        Table<String, String, String> hashTable = HashBasedTable.create();\n        hashTable.put(\"row2\", \"column2\", \"value1\");\n        hashTable.put(\"row3\", \"column3\", \"value2\");\n\n        // Perform operations on HashBasedTable\n        String valueFromHashTable = hashTable.get(\"row2\", \"column2\");\n        System.out.println(\"HashTable Value: \" + valueFromHashTable);\n\n        // Create a HashMap for unrelated operations\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n\n        // Iterate over HashMap and perform operations\n        for (String key : map.keySet()) {\n            System.out.println(\"Map Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // Build the ImmutableTable\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Perform some unrelated calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Read operation\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        // Print the value\n        System.out.println(\"ImmutableTable Value: \" + value);\n\n        // Perform additional operations with HashBasedTable\n        hashTable.put(\"row4\", \"column4\", \"value3\");\n        String anotherValueFromHashTable = hashTable.get(\"row3\", \"column3\");\n        System.out.println(\"Another HashTable Value: \" + anotherValueFromHashTable);\n    }\n}"
}