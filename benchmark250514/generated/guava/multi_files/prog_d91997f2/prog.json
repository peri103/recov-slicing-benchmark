{
    "files": {
        "MultimapBuilder.java": "import com.google.common.collect.ImmutableMultimap;\nimport com.google.common.collect.ImmutableMultimap.Builder;\n\npublic class MultimapBuilder {\n    private Builder<String, String> builder = ImmutableMultimap.builder();\n\n    public void addEntry(String key, String value) {\n        /* write */ builder.put(key, value);\n    }\n\n    public ImmutableMultimap<String, String> build() {\n        return builder.build();\n    }\n}\n",
        "DataStructures.java": "import com.google.common.collect.Multimap;\nimport com.google.common.collect.ArrayListMultimap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class DataStructures {\n    private Multimap<String, String> regularMultimap = ArrayListMultimap.create();\n    private Map<String, Integer> map = new HashMap<>();\n\n    public void addToMultimap(String key, String value) {\n        regularMultimap.put(key, value);\n    }\n\n    public Multimap<String, String> getRegularMultimap() {\n        return regularMultimap;\n    }\n\n    public void addToMap(String key, Integer value) {\n        map.put(key, value);\n    }\n\n    public Map<String, Integer> getMap() {\n        return map;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.ImmutableMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create and use MultimapBuilder\n        MultimapBuilder multimapBuilder = new MultimapBuilder();\n        multimapBuilder.addEntry(\"key1\", \"value1\");\n        multimapBuilder.addEntry(\"key2\", \"value2\");\n        \n        // Original write operation\n        multimapBuilder.addEntry(\"key\", \"value\");\n        \n        ImmutableMultimap<String, String> multimap = multimapBuilder.build();\n        \n        // Create and use DataStructures\n        DataStructures dataStructures = new DataStructures();\n        dataStructures.addToMultimap(\"anotherKey\", \"anotherValue\");\n        dataStructures.addToMap(\"one\", 1);\n        dataStructures.addToMap(\"two\", 2);\n        dataStructures.addToMap(\"three\", 3);\n\n        // Perform operations on the HashMap\n        int sum = 0;\n        for (Integer value : dataStructures.getMap().values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in HashMap: \" + sum);\n\n        // Perform operations on the regular Multimap\n        for (String key : dataStructures.getRegularMultimap().keySet()) {\n            System.out.println(\"Values for \" + key + \": \" + dataStructures.getRegularMultimap().get(key));\n        }\n\n        // Original read operation\n        /* read */ String value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n\n        // Additional unrelated operations\n        dataStructures.addToMultimap(\"anotherKey\", \"additionalValue\");\n        for (String key : dataStructures.getRegularMultimap().keySet()) {\n            System.out.println(\"Updated values for \" + key + \": \" + dataStructures.getRegularMultimap().get(key));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableMultimap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.ImmutableMultimap;\nimport com.google.common.collect.ImmutableMultimap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String, String> builder = ImmutableMultimap.builder();\n        /* write */ builder.put(\"key\", \"value\");\n        ImmutableMultimap<String, String> multimap = builder.build();\n        /* read */ String value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.collect.ImmutableMultimap;\nimport com.google.common.collect.ImmutableMultimap.Builder;\nimport com.google.common.collect.Multimap;\nimport com.google.common.collect.ArrayListMultimap;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableMultimap\n        Builder<String, String> builder = ImmutableMultimap.builder();\n        \n        // Add multiple entries to the builder\n        builder.put(\"key1\", \"value1\");\n        builder.put(\"key2\", \"value2\");\n        builder.put(\"key3\", \"value3\");\n        \n        // Original write operation\n        /* write */ builder.put(\"key\", \"value\");\n        \n        // Build the ImmutableMultimap\n        ImmutableMultimap<String, String> multimap = builder.build();\n        \n        // Create a regular Multimap for additional operations\n        Multimap<String, String> regularMultimap = ArrayListMultimap.create();\n        regularMultimap.put(\"anotherKey\", \"anotherValue\");\n        \n        // Create a HashMap for unrelated operations\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n        \n        // Perform some operations on the HashMap\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in HashMap: \" + sum);\n        \n        // Perform operations on the regular Multimap\n        for (String key : regularMultimap.keySet()) {\n            System.out.println(\"Values for \" + key + \": \" + regularMultimap.get(key));\n        }\n        \n        // Original read operation\n        /* read */ String value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n        \n        // Additional unrelated operations\n        regularMultimap.put(\"anotherKey\", \"additionalValue\");\n        for (String key : regularMultimap.keySet()) {\n            System.out.println(\"Updated values for \" + key + \": \" + regularMultimap.get(key));\n        }\n    }\n}"
}