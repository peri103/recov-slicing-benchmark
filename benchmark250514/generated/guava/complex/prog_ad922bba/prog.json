{
    "java_code": "import com.google.common.collect.ImmutableCollection;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Additional data structures\n        HashMap<String, Integer> fruitCountMap = new HashMap<>();\n        fruitCountMap.put(\"apple\", 10);\n        fruitCountMap.put(\"banana\", 20);\n        fruitCountMap.put(\"cherry\", 15);\n\n        // Additional ImmutableCollection\n        ImmutableCollection<String> fruitSet = ImmutableSet.of(\"apple\", \"banana\", \"orange\");\n\n        // Print fruit counts\n        for (Map.Entry<String, Integer> entry : fruitCountMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Use a different ImmutableCollection\n        boolean hasOrange = fruitSet.contains(\"orange\");\n        System.out.println(\"Fruit set contains orange: \" + hasOrange);\n\n        // Original write operation\n        /* write */ ImmutableCollection<String> collection = ImmutableList.of(\"apple\", \"banana\", \"cherry\");\n\n        // Perform operations on fruitCountMap\n        int totalFruits = 0;\n        for (int count : fruitCountMap.values()) {\n            totalFruits += count;\n        }\n        System.out.println(\"Total number of fruits: \" + totalFruits);\n\n        // Check if a specific fruit is available in the original collection\n        /* read */ boolean containsBanana = collection.contains(\"banana\");\n        System.out.println(\"Original collection contains banana: \" + containsBanana);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableCollection;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        /* write */ ImmutableCollection<String> collection = ImmutableList.of(\"apple\", \"banana\", \"cherry\");\n        /* read */ boolean containsBanana = collection.contains(\"banana\");\n        System.out.println(containsBanana);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableCollection",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableCollection",
        "read_method": "contains"
    }
}