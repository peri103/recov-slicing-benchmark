{
    "java_code": "import com.google.common.collect.ImmutableMultimap;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableMultimap.Builder<String, Integer> builder = ImmutableMultimap.builder();\n        Map<String, String> simpleMap = new HashMap<>();\n        ImmutableSet.Builder<String> setBuilder = ImmutableSet.builder();\n\n        simpleMap.put(\"example\", \"test\");\n        setBuilder.add(\"element1\").add(\"element2\");\n\n        /* write */ builder.put(\"key\", 1);\n\n        simpleMap.put(\"anotherExample\", \"test2\");\n        setBuilder.add(\"element3\").add(\"element4\");\n\n        ImmutableMultimap<String, Integer> multimap = builder.build();\n        ImmutableSet<String> immutableSet = setBuilder.build();\n\n        if (simpleMap.containsKey(\"example\")) {\n            System.out.println(\"Simple map contains 'example': \" + simpleMap.get(\"example\"));\n        }\n\n        for (String element : immutableSet) {\n            System.out.println(\"ImmutableSet Element: \" + element);\n        }\n\n        /* read */ Integer value = multimap.get(\"key\").iterator().next();\n\n        System.out.println(\"Value from multimap: \" + value);\n\n        for (Map.Entry<String, String> entry : simpleMap.entrySet()) {\n            System.out.println(\"Map Entry: \" + entry.getKey() + \" -> \" + entry.getValue());\n        }\n\n        for (Integer number : multimap.values()) {\n            System.out.println(\"Multimap Value: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableMultimap.Builder<String, Integer> builder = ImmutableMultimap.builder();\n        /* write */ builder.put(\"key\", 1);\n\n        ImmutableMultimap<String, Integer> multimap = builder.build();\n        /* read */ Integer value = multimap.get(\"key\").iterator().next();\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableMultimap",
        "read_method": "get"
    }
}