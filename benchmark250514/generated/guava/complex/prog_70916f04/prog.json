{
    "java_code": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Create a HashMap to store some key-value pairs\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"One\", 1);\n        hashMap.put(\"Two\", 2);\n        hashMap.put(\"Three\", 3);\n        \n        // Process the HashMap and print its contents\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Write a value to the map using the builder\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.put(String.class, \"Hello World\").build();\n        \n        // Perform some unrelated operations\n        int sum = 0;\n        for (int value : hashMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in hashMap: \" + sum);\n        \n        // Create another ImmutableClassToInstanceMap for different types\n        Builder<Object> anotherBuilder = ImmutableClassToInstanceMap.builder();\n        ImmutableClassToInstanceMap<Object> anotherMap = anotherBuilder.put(Integer.class, 42).build();\n        Integer intValue = anotherMap.getInstance(Integer.class);\n        System.out.println(\"Integer value from anotherMap: \" + intValue);\n        \n        // Read the value from the original map\n        /* read */ String value = (String) map.getInstance(String.class);\n        \n        // Print the read value\n        System.out.println(value);\n        \n        // Additional complex operations\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"A\", \"Apple\");\n        stringMap.put(\"B\", \"Banana\");\n        \n        for (String key : stringMap.keySet()) {\n            System.out.println(\"Fruit: \" + stringMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Write a value to the map using the builder\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.put(String.class, \"Hello World\").build();\n        \n        // Read the value from the map\n        /* read */ String value = (String) map.getInstance(String.class);\n        \n        // Print the read value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}