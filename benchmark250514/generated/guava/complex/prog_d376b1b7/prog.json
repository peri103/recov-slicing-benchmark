{
    "java_code": "import com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.Range;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n        Map<String, RangeSet<Integer>> rangeMap = new HashMap<>();\n        \n        // Adding ranges to the rangeSet\n        /* write */ rangeSet.add(Range.closed(1, 10));\n        \n        // Adding more ranges to rangeSet\n        rangeSet.add(Range.closed(11, 20));\n        \n        // Adding rangeSet to a map with a key\n        rangeMap.put(\"firstRangeSet\", rangeSet);\n        \n        // Performing operations on the map\n        RangeSet<Integer> retrievedRangeSet = rangeMap.get(\"firstRangeSet\");\n        boolean isContained = retrievedRangeSet.contains(15);\n        System.out.println(\"Contains 15: \" + isContained);\n        \n        // More complex operations with the map\n        RangeSet<Integer> anotherRangeSet = TreeRangeSet.create();\n        anotherRangeSet.add(Range.closed(21, 30));\n        rangeMap.put(\"secondRangeSet\", anotherRangeSet);\n        \n        for (String key : rangeMap.keySet()) {\n            RangeSet<Integer> currentSet = rangeMap.get(key);\n            System.out.println(\"RangeSet for key \" + key + \": \" + currentSet);\n        }\n        \n        // Final operation to read from the original rangeSet\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        \n        System.out.println(\"Original RangeSet contains 5: \" + containsValue);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n        \n        /* write */ rangeSet.add(Range.closed(1, 10));\n        \n        /* read */ boolean containsValue = rangeSet.contains(5);\n        \n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.RangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.RangeSet",
        "read_method": "contains"
    }
}