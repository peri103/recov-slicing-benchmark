{
    "java_code": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.Table;\nimport com.google.common.collect.HashBasedTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an ImmutableTable and put a value\n        ImmutableTable.Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n        /* write */ builder.put(\"rowKey1\", \"columnKey1\", 42);\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Create a HashBasedTable and perform operations\n        Table<String, String, String> hashTable = HashBasedTable.create();\n        hashTable.put(\"rowKeyA\", \"columnKeyA\", \"ValueA\");\n        hashTable.put(\"rowKeyB\", \"columnKeyB\", \"ValueB\");\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Read from the ImmutableTable\n        /* read */ Integer value = table.get(\"rowKey1\", \"columnKey1\");\n        System.out.println(value);\n\n        // Additional operations with HashBasedTable\n        String retrievedValueA = hashTable.get(\"rowKeyA\", \"columnKeyA\");\n        String retrievedValueB = hashTable.get(\"rowKeyB\", \"columnKeyB\");\n        System.out.println(\"Retrieved Value A: \" + retrievedValueA);\n        System.out.println(\"Retrieved Value B: \" + retrievedValueB);\n\n        // More unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 numbers: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableTable.Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n        /* write */ builder.put(\"rowKey1\", \"columnKey1\", 42);\n        ImmutableTable<String, String, Integer> table = builder.build();\n        /* read */ Integer value = table.get(\"rowKey1\", \"columnKey1\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    }
}