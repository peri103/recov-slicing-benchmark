{
    "java_code": "import com.google.common.collect.ForwardingSet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        Set<String> baseSet = new HashSet<>();\n        ForwardingSet<String> forwardingSet = new ForwardingSet<String>() {\n            @Override\n            protected Set<String> delegate() {\n                return baseSet;\n            }\n        };\n        \n        // Adding multiple elements to the forwarding set\n        forwardingSet.add(\"first\");\n        forwardingSet.add(\"second\");\n        forwardingSet.add(\"third\");\n        \n        /* write */ forwardingSet.add(\"example\");\n        \n        // Perform some unrelated operations\n        Set<String> anotherSet = new HashSet<>();\n        anotherSet.add(\"fourth\");\n        anotherSet.add(\"fifth\");\n        \n        for (String item : anotherSet) {\n            forwardingSet.add(item);\n        }\n        \n        // Check if specific elements exist in the set\n        boolean containsFirst = forwardingSet.contains(\"first\");\n        boolean containsFourth = forwardingSet.contains(\"fourth\");\n        \n        System.out.println(\"Contains 'first': \" + containsFirst);\n        System.out.println(\"Contains 'fourth': \" + containsFourth);\n        \n        // Perform some more operations\n        forwardingSet.remove(\"second\");\n        forwardingSet.add(\"sixth\");\n        \n        /* read */ boolean containsValue = forwardingSet.contains(\"example\");\n        \n        // Print the final result of the original write-read pair\n        System.out.println(\"Contains 'example': \" + containsValue);\n        \n        // Display all elements in the forwarding set\n        for (String item : forwardingSet) {\n            System.out.println(\"Element: \" + item);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingSet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        Set<String> baseSet = new HashSet<>();\n        ForwardingSet<String> forwardingSet = new ForwardingSet<String>() {\n            @Override\n            protected Set<String> delegate() {\n                return baseSet;\n            }\n        };\n        \n        /* write */ forwardingSet.add(\"example\");\n        /* read */ boolean containsValue = forwardingSet.contains(\"example\");\n        \n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingSet",
        "read_method": "contains"
    }
}