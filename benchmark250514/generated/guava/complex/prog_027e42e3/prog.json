{
    "java_code": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Multiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableSortedMultiset\n        ImmutableSortedMultiset.Builder<String> builder = ImmutableSortedMultiset.<String>naturalOrder();\n        \n        // Add elements to the builder\n        builder.add(\"apple\");\n        builder.add(\"banana\");\n        \n        // Build the ImmutableSortedMultiset\n        /* write */ ImmutableSortedMultiset<String> multiset = builder.build();\n        \n        // Introduce a HashMultiset and add elements to it\n        Multiset<String> hashMultiset = HashMultiset.create();\n        hashMultiset.add(\"orange\");\n        hashMultiset.add(\"apple\");\n        hashMultiset.add(\"apple\");\n        \n        // Count the occurrences of \"orange\" in the hashMultiset\n        int orangeCount = hashMultiset.count(\"orange\");\n        System.out.println(\"Orange count: \" + orangeCount);\n        \n        // Perform some operations on hashMultiset\n        hashMultiset.remove(\"apple\");\n        System.out.println(\"Apple count after removal: \" + hashMultiset.count(\"apple\"));\n        \n        // Use the original multiset to count occurrences of \"apple\"\n        /* read */ int appleCount = multiset.count(\"apple\");\n        \n        // Print the count from the original multiset\n        System.out.println(\"Apple count in ImmutableSortedMultiset: \" + appleCount);\n        \n        // Additional unrelated operations\n        int totalElements = hashMultiset.size();\n        System.out.println(\"Total elements in HashMultiset: \" + totalElements);\n        \n        for (String element : hashMultiset.elementSet()) {\n            System.out.println(\"Element: \" + element + \", Count: \" + hashMultiset.count(element));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableSortedMultiset\n        ImmutableSortedMultiset.Builder<String> builder = ImmutableSortedMultiset.<String>naturalOrder();\n        \n        // Add elements to the builder\n        builder.add(\"apple\");\n        builder.add(\"banana\");\n        \n        // Build the ImmutableSortedMultiset\n        /* write */ ImmutableSortedMultiset<String> multiset = builder.build();\n        \n        // Count the occurrences of \"apple\" in the multiset\n        /* read */ int count = multiset.count(\"apple\");\n        \n        // Print the count\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedMultiset",
        "read_method": "count"
    }
}