{
    "java_code": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        ImmutableList.Builder<Integer> listBuilder = ImmutableList.builder();\n        Map<String, Integer> fruitCountMap = new HashMap<>();\n\n        /* write */ builder.add(\"apple\");\n        builder.add(\"banana\");\n        builder.add(\"orange\");\n\n        listBuilder.add(10);\n        listBuilder.add(20);\n        listBuilder.add(30);\n\n        ImmutableMultiset<String> multiset = builder.build();\n        ImmutableList<Integer> numbers = listBuilder.build();\n\n        for (String fruit : multiset.elementSet()) {\n            fruitCountMap.put(fruit, multiset.count(fruit));\n        }\n\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n\n        /* read */ int appleCount = multiset.count(\"apple\");\n        System.out.println(\"Apple Count: \" + appleCount);\n\n        int totalFruitCount = 0;\n        for (Integer count : fruitCountMap.values()) {\n            totalFruitCount += count;\n        }\n\n        System.out.println(\"Total Fruit Count: \" + totalFruitCount);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        /* write */ builder.add(\"apple\");\n        \n        ImmutableMultiset<String> multiset = builder.build();\n        /* read */ int count = multiset.count(\"apple\");\n        \n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableMultiset",
        "read_method": "count"
    }
}