{
    "java_code": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an immutable table with a single entry using the 'of' method\n        /* write */ ImmutableTable<String, String, Integer> table = ImmutableTable.of(\"row1\", \"column1\", 42);\n\n        // Create a HashMap and populate it with some data\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"key1\", 100);\n        hashMap.put(\"key2\", 200);\n\n        // Create an ImmutableMap from the HashMap\n        ImmutableMap<String, Integer> immutableMap = ImmutableMap.copyOf(hashMap);\n\n        // Perform some operations on the ImmutableMap\n        int mapValue1 = immutableMap.get(\"key1\");\n        System.out.println(\"Map Value for key1: \" + mapValue1);\n\n        int mapValue2 = immutableMap.get(\"key2\");\n        System.out.println(\"Map Value for key2: \" + mapValue2);\n\n        // Additional logic to make the program more complex\n        int sum = 0;\n        for (String key : immutableMap.keySet()) {\n            sum += immutableMap.get(key);\n        }\n        System.out.println(\"Sum of all values in the map: \" + sum);\n\n        // Read the value from the table using the 'get' method\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        // Print the value from the table\n        System.out.println(\"Table Value: \" + value);\n\n        // Further operations to increase complexity\n        if (value > 40) {\n            System.out.println(\"The value is greater than 40\");\n        } else {\n            System.out.println(\"The value is 40 or less\");\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an immutable table with a single entry using the 'of' method\n        /* write */ ImmutableTable<String, String, Integer> table = ImmutableTable.of(\"row1\", \"column1\", 42);\n\n        // Read the value from the table using the 'get' method\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        // Print the value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    }
}