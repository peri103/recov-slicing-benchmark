{
    "java_code": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize builder to construct ImmutableSortedMultiset\n        ImmutableSortedMultiset.Builder<String> builder = ImmutableSortedMultiset.naturalOrder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<String> multiset = builder.build();\n        \n        // Create an unrelated ImmutableList for demonstration\n        ImmutableList<String> fruits = ImmutableList.of(\"orange\", \"grape\", \"melon\");\n        \n        // Print all elements in the ImmutableList\n        for (String fruit : fruits) {\n            System.out.println(fruit);\n        }\n        \n        // Perform some operations on ImmutableSortedMultiset\n        boolean hasBanana = multiset.contains(\"banana\");\n        System.out.println(\"Contains banana: \" + hasBanana);\n        \n        // Read the count of a specific element\n        /* read */ int appleCount = multiset.count(\"apple\");\n        \n        // Output the count of \"apple\"\n        System.out.println(\"Apple count: \" + appleCount);\n        \n        // Create another ImmutableSortedMultiset for demonstration\n        ImmutableSortedMultiset.Builder<String> anotherBuilder = ImmutableSortedMultiset.naturalOrder();\n        anotherBuilder.add(\"kiwi\").add(\"kiwi\").add(\"pear\");\n        ImmutableSortedMultiset<String> anotherMultiset = anotherBuilder.build();\n        \n        // Print all elements in another ImmutableSortedMultiset\n        for (String fruit : anotherMultiset.elementSet()) {\n            System.out.println(fruit + \": \" + anotherMultiset.count(fruit));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize builder to construct ImmutableSortedMultiset\n        ImmutableSortedMultiset.Builder<String> builder = ImmutableSortedMultiset.naturalOrder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<String> multiset = builder.build();\n        \n        // Read the count of a specific element\n        /* read */ int appleCount = multiset.count(\"apple\");\n        \n        // Output the count of \"apple\"\n        System.out.println(appleCount);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedMultiset",
        "read_method": "count"
    }
}