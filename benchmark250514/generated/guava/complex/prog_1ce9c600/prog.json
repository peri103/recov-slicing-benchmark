{
    "java_code": "import com.google.common.collect.ImmutableMap;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableMap\n        ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();\n        \n        // Add a key-value pair using the builder\n        /* write */ builder.put(\"key\", \"value\");\n        \n        // Create another ImmutableMap for demonstration\n        ImmutableMap<String, Integer> anotherMap = ImmutableMap.of(\"one\", 1, \"two\", 2, \"three\", 3);\n        \n        // Use another collection type to add complexity\n        ImmutableList.Builder<Integer> listBuilder = ImmutableList.builder();\n        for (int i = 0; i < 5; i++) {\n            listBuilder.add(i * 10);\n        }\n        ImmutableList<Integer> numberList = listBuilder.build();\n        \n        // Perform some operations with the numberList\n        int sum = 0;\n        for (int num : numberList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numberList: \" + sum);\n        \n        // Build the original ImmutableMap\n        ImmutableMap<String, String> map = builder.build();\n        \n        // Read the value associated with the key\n        /* read */ String value = map.get(\"key\");\n        \n        // Print the value to ensure it's read correctly\n        System.out.println(\"Value from map: \" + value);\n        \n        // Further operations using anotherMap\n        if (anotherMap.containsKey(\"two\")) {\n            System.out.println(\"Value for 'two': \" + anotherMap.get(\"two\"));\n        }\n        \n        // Manipulate and display data from anotherMap\n        for (String key : anotherMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + anotherMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableMap\n        ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();\n        \n        // Add a key-value pair using the builder\n        /* write */ builder.put(\"key\", \"value\");\n        \n        // Build the ImmutableMap\n        ImmutableMap<String, String> map = builder.build();\n        \n        // Read the value associated with the key\n        /* read */ String value = map.get(\"key\");\n        \n        // Print the value to ensure it's read correctly\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableMap",
        "read_method": "get"
    }
}