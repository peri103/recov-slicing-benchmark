{
    "java_code": "import com.google.common.collect.ImmutableBiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        // Add a key-value pair to the builder\n        /* write */ builder.put(\"one\", 1);\n        \n        // Additional unrelated code to make the program more complex\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"apple\", \"fruit\");\n        hashMap.put(\"carrot\", \"vegetable\");\n        \n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \" is a \" + entry.getValue());\n        }\n        \n        // Build the ImmutableBiMap\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        // Additional code using similar API pairs\n        ImmutableBiMap.Builder<String, String> stringBuilder = ImmutableBiMap.builder();\n        stringBuilder.put(\"hello\", \"world\");\n        ImmutableBiMap<String, String> stringBiMap = stringBuilder.build();\n        \n        String greeting = stringBiMap.get(\"hello\");\n        System.out.println(\"Greeting: \" + greeting);\n        \n        // Read the value associated with the key \"one\"\n        /* read */ Integer value = biMap.get(\"one\");\n        \n        // Print the value to verify\n        System.out.println(\"Value associated with 'one': \" + value);\n        \n        // More unrelated code for complexity\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        // Add a key-value pair to the builder\n        /* write */ builder.put(\"one\", 1);\n        \n        // Build the ImmutableBiMap\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        // Read the value associated with the key \"one\"\n        /* read */ Integer value = biMap.get(\"one\");\n        \n        // Print the value to verify\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    }
}