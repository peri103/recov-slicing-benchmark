{
    "java_code": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the Cache using CacheBuilder\n        LoadingCache<String, String> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, String>() {\n                    @Override\n                    public String load(String key) {\n                        return \"default\";\n                    }\n                });\n        \n        // Write a value to the cache\n        /* write */ cache.put(\"key1\", \"value1\");\n        \n        // Create a HashMap and populate it with some values\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"a\", 1);\n        map.put(\"b\", 2);\n        map.put(\"c\", 3);\n        \n        // Perform some operations on the HashMap\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n        \n        // Add another value to the cache\n        cache.put(\"key2\", \"value2\");\n        \n        // Perform some unrelated arithmetic operations\n        int result = 5 * 10;\n        result -= 3;\n        System.out.println(\"Result of arithmetic operations: \" + result);\n        \n        // Read the value from the cache\n        try {\n            /* read */ String value = cache.get(\"key1\");\n            System.out.println(value);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        \n        // Further manipulate the HashMap\n        map.put(\"d\", 4);\n        map.remove(\"a\");\n        \n        // Print the final state of the HashMap\n        System.out.println(\"Final state of map: \" + map);\n    }\n}",
    "java_code_simple": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the Cache using CacheBuilder\n        LoadingCache<String, String> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, String>() {\n                    @Override\n                    public String load(String key) {\n                        return \"default\";\n                    }\n                });\n        \n        // Write a value to the cache\n        /* write */ cache.put(\"key1\", \"value1\");\n        \n        // Read the value from the cache\n        try {\n            /* read */ String value = cache.get(\"key1\");\n            System.out.println(value);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.CacheBuilder",
        "write_method": "build",
        "read_class": "com.google.common.cache.Cache",
        "read_method": "get"
    }
}