{
    "java_code": "import com.google.common.collect.SortedMultiset;\nimport com.google.common.collect.TreeMultiset;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMultiset<String> multiset = TreeMultiset.create();\n        \n        // Additional code to make the program more complex\n        Map<String, Integer> fruitMap = new HashMap<>();\n        fruitMap.put(\"banana\", 2);\n        fruitMap.put(\"orange\", 3);\n        \n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            multiset.add(entry.getKey(), entry.getValue());\n        }\n        \n        Set<String> fruits = fruitMap.keySet();\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        /* write */ multiset.add(\"apple\");\n        \n        int totalFruits = 0;\n        for (String fruit : multiset.elementSet()) {\n            totalFruits += multiset.count(fruit);\n        }\n        \n        System.out.println(\"Total fruits in multiset: \" + totalFruits);\n        \n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(count);\n        \n        // Further complexity\n        for (String fruit : multiset.elementSet()) {\n            System.out.println(\"Count of \" + fruit + \": \" + multiset.count(fruit));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.SortedMultiset;\nimport com.google.common.collect.TreeMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMultiset<String> multiset = TreeMultiset.create();\n        /* write */ multiset.add(\"apple\");\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.SortedMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.SortedMultiset",
        "read_method": "count"
    }
}