{
    "java_code": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        ImmutableTable.Builder<String, String, Integer> builder = ImmutableTable.builder();\n\n        // Use the builder to construct the table\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Create a HashBasedTable and populate it\n        Table<String, String, String> hashTable = HashBasedTable.create();\n        hashTable.put(\"row1\", \"column1\", \"value1\");\n        hashTable.put(\"row2\", \"column2\", \"value2\");\n\n        // Perform operations on the HashBasedTable\n        if (hashTable.contains(\"row1\", \"column1\")) {\n            System.out.println(\"HashTable contains row1 and column1\");\n        }\n\n        // Build the immutable table\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Create a list and populate it\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Perform operations on the list\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"List item: \" + list.get(i));\n        }\n\n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        // Print the value\n        System.out.println(value);\n\n        // Additional operations on the HashBasedTable\n        hashTable.put(\"row3\", \"column3\", \"value3\");\n        System.out.println(\"Value at row3, column3: \" + hashTable.get(\"row3\", \"column3\"));\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        ImmutableTable.Builder<String, String, Integer> builder = ImmutableTable.builder();\n\n        // Use the builder to construct the table\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Build the immutable table\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        // Print the value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    }
}