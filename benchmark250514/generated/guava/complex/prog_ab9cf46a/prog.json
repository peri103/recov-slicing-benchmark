{
    "java_code": "import com.google.common.collect.HashBiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> biMap = HashBiMap.create();\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        // Initialize some data in the HashMap\n        hashMap.put(\"A\", 10);\n        hashMap.put(\"B\", 20);\n        hashMap.put(\"C\", 30);\n\n        // Transfer data from hashMap to biMap\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            biMap.put(entry.getKey(), entry.getValue());\n        }\n\n        // Add additional data to biMap\n        /* write */ biMap.put(\"key\", 42);\n\n        // Perform some operations on hashMap\n        int sum = 0;\n        for (Integer value : hashMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in hashMap: \" + sum);\n\n        // Use another HashBiMap to demonstrate more complexity\n        HashBiMap<Integer, String> reverseMap = HashBiMap.create();\n        reverseMap.put(1, \"One\");\n        reverseMap.put(2, \"Two\");\n        reverseMap.put(3, \"Three\");\n\n        // Access and print values from reverseMap\n        for (int i = 1; i <= 3; i++) {\n            System.out.println(\"ReverseMap value for \" + i + \": \" + reverseMap.get(i));\n        }\n\n        // Retrieve and print the value from biMap\n        /* read */ int value = biMap.get(\"key\");\n        System.out.println(\"Retrieved value from biMap: \" + value);\n\n        // Additional operations on reverseMap\n        reverseMap.inverse().put(\"Four\", 4);\n        System.out.println(\"ReverseMap size after adding 'Four': \" + reverseMap.size());\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> biMap = HashBiMap.create();\n        /* write */ biMap.put(\"key\", 42);\n        /* read */ int value = biMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.HashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.HashBiMap",
        "read_method": "get"
    }
}