{
    "java_code": "import com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        /* write */ ImmutableMap<String, Integer> map = ImmutableMap.of(\"key1\", 1);\n        \n        // Additional complex code\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"key2\", 2);\n        hashMap.put(\"key3\", 3);\n\n        int sum = 0;\n        for (Integer value : hashMap.values()) {\n            sum += value;\n        }\n\n        Map<String, Integer> combinedMap = new HashMap<>(hashMap);\n        combinedMap.putAll(map);\n\n        for (String key : combinedMap.keySet()) {\n            System.out.println(key + \": \" + combinedMap.get(key));\n        }\n\n        // Further operations on combinedMap\n        if (combinedMap.containsKey(\"key2\")) {\n            combinedMap.put(\"key4\", combinedMap.get(\"key2\") + 10);\n        }\n\n        int totalSum = 0;\n        for (Integer value : combinedMap.values()) {\n            totalSum += value;\n        }\n        System.out.println(\"Total sum: \" + totalSum);\n\n        // More complex operations\n        Map<String, Integer> filteredMap = new HashMap<>();\n        for (Map.Entry<String, Integer> entry : combinedMap.entrySet()) {\n            if (entry.getValue() > 2) {\n                filteredMap.put(entry.getKey(), entry.getValue());\n            }\n        }\n\n        for (String key : filteredMap.keySet()) {\n            System.out.println(\"Filtered - \" + key + \": \" + filteredMap.get(key));\n        }\n\n        /* read */ boolean containsKey = map.containsKey(\"key1\");\n        System.out.println(\"Map contains 'key1': \" + containsKey);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        /* write */ ImmutableMap<String, Integer> map = ImmutableMap.of(\"key1\", 1);\n        /* read */ boolean containsKey = map.containsKey(\"key1\");\n        System.out.println(containsKey);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMap",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableMap",
        "read_method": "containsKey"
    }
}