{
    "java_code": "import com.google.common.collect.MinMaxPriorityQueue;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        MinMaxPriorityQueue<Integer> queue = MinMaxPriorityQueue.create();\n        HashMap<String, Integer> map = new HashMap<>();\n        \n        // Insert some values into the map\n        map.put(\"A\", 10);\n        map.put(\"B\", 20);\n        map.put(\"C\", 30);\n        \n        // Perform some operations on the map\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n        \n        /* write */ queue.offer(42);\n        \n        // Perform some calculations\n        int calculationResult = sum * 2;\n        System.out.println(\"Result of calculation: \" + calculationResult);\n        \n        // Create another MinMaxPriorityQueue and perform operations\n        MinMaxPriorityQueue<Integer> anotherQueue = MinMaxPriorityQueue.create();\n        anotherQueue.offer(15);\n        anotherQueue.offer(25);\n        anotherQueue.offer(35);\n        \n        int anotherQueuePeek = anotherQueue.peek();\n        System.out.println(\"Peek value from anotherQueue: \" + anotherQueuePeek);\n        \n        // Perform more operations\n        int maxValue = Math.max(anotherQueuePeek, calculationResult);\n        System.out.println(\"Max value between anotherQueuePeek and calculationResult: \" + maxValue);\n        \n        /* read */ Integer value = queue.peek();\n        System.out.println(\"Peek value from original queue: \" + value);\n        \n        // Further operations on the original queue\n        queue.offer(55);\n        queue.offer(65);\n        \n        while (!queue.isEmpty()) {\n            System.out.println(\"Polling from queue: \" + queue.poll());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.MinMaxPriorityQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        MinMaxPriorityQueue<Integer> queue = MinMaxPriorityQueue.create();\n        /* write */ queue.offer(42);\n        /* read */ Integer value = queue.peek();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.MinMaxPriorityQueue",
        "write_method": "offer",
        "read_class": "com.google.common.collect.MinMaxPriorityQueue",
        "read_method": "peek"
    }
}