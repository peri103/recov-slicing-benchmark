{
    "java_code": "import com.google.common.collect.LinkedHashMultimap;\nimport com.google.common.collect.Multimap;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        Multimap<String, Integer> multimap = LinkedHashMultimap.create();\n\n        // Additional data structures\n        HashMap<String, String> map = new HashMap<>();\n        map.put(\"name\", \"Guava\");\n        map.put(\"version\", \"30.1\");\n\n        // Additional write-read pair using HashMap\n        map.put(\"author\", \"Google\");\n        String author = map.get(\"author\");\n        System.out.println(\"Author: \" + author);\n\n        // Some processing\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n\n        // Writing to the multimap\n        /* write */ multimap.put(\"key\", 42);\n\n        // More unrelated processing\n        int product = 1;\n        for (int i = 1; i <= 3; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 3: \" + product);\n\n        // Reading from the multimap\n        /* read */ Collection<Integer> values = multimap.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n\n        // Another unrelated data structure\n        Multimap<String, String> stringMultimap = LinkedHashMultimap.create();\n        stringMultimap.put(\"fruit\", \"apple\");\n        stringMultimap.put(\"fruit\", \"banana\");\n        Collection<String> fruits = stringMultimap.get(\"fruit\");\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.LinkedHashMultimap;\nimport com.google.common.collect.Multimap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multimap<String, Integer> multimap = LinkedHashMultimap.create();\n\n        /* write */ multimap.put(\"key\", 42);\n\n        /* read */ Collection<Integer> values = multimap.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedHashMultimap",
        "read_method": "get"
    }
}