{
    "java_code": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Create an ImmutableList\n        ImmutableList<String> list = ImmutableList.of(\"orange\", \"grape\", \"apple\");\n        \n        // Create an ImmutableMap\n        ImmutableMap<String, Integer> map = ImmutableMap.of(\"apple\", 2, \"banana\", 3, \"orange\", 1);\n        \n        // Perform some operations on the list and map\n        int listSize = list.size();\n        int mapSize = map.size();\n        \n        // Print sizes\n        System.out.println(\"List size: \" + listSize);\n        System.out.println(\"Map size: \" + mapSize);\n        \n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n        \n        // Perform some operations on the multiset\n        int bananaCount = multiset.count(\"banana\");\n        System.out.println(\"Banana count: \" + bananaCount);\n        \n        // Read the count of a specific element\n        /* read */ int appleCount = multiset.count(\"apple\");\n        \n        // Print the count of 'apple'\n        System.out.println(\"Apple count: \" + appleCount);\n        \n        // Additional operations\n        for (String fruit : list) {\n            System.out.println(\"Fruit in list: \" + fruit);\n        }\n        \n        for (String key : map.keySet()) {\n            System.out.println(\"Key in map: \" + key + \", Value: \" + map.get(key));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n        \n        // Read the count of a specific element\n        /* read */ int appleCount = multiset.count(\"apple\");\n        \n        // Print the count of 'apple'\n        System.out.println(appleCount);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableMultiset",
        "read_method": "count"
    }
}