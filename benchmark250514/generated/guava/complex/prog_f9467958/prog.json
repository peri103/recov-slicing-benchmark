{
    "java_code": "import com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableSet.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer> builder = ImmutableSet.builder();\n        Map<String, Integer> map = new HashMap<>();\n        \n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n        \n        /* write */ builder.add(10);\n        \n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n            builder.add(entry.getValue());\n        }\n        \n        ImmutableSet<Integer> set = builder.build();\n        \n        int sum = 0;\n        for (Integer num : set) {\n            sum += num;\n        }\n        \n        System.out.println(\"Sum of all elements in the set: \" + sum);\n        \n        /* read */ boolean containsValue = set.contains(10);\n        \n        System.out.println(\"Does the set contain the value 10? \" + containsValue);\n        \n        int max = Integer.MIN_VALUE;\n        for (Integer num : set) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        \n        System.out.println(\"Maximum value in the set: \" + max);\n        \n        int min = Integer.MAX_VALUE;\n        for (Integer num : set) {\n            if (num < min) {\n                min = num;\n            }\n        }\n        \n        System.out.println(\"Minimum value in the set: \" + min);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableSet.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer> builder = ImmutableSet.builder();\n        /* write */ builder.add(10);\n        ImmutableSet<Integer> set = builder.build();\n        /* read */ boolean containsValue = set.contains(10);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableSet",
        "read_method": "contains"
    }
}