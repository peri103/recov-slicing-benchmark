{
    "java_code": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        Map<Integer, String> anotherMap = new HashMap<>();\n        anotherMap.put(1, \"One\");\n        anotherMap.put(2, \"Two\");\n        anotherMap.put(3, \"Three\");\n\n        // Performing some operations on anotherMap\n        for (Map.Entry<Integer, String> entry : anotherMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        /* write */ map.putInstance(String.class, \"Hello, World!\");\n\n        // Adding more complexity with additional data structures\n        Map<String, Integer> reverseMap = new HashMap<>();\n        for (Map.Entry<Integer, String> entry : anotherMap.entrySet()) {\n            reverseMap.put(entry.getValue(), entry.getKey());\n        }\n\n        // Performing some operations on reverseMap\n        for (Map.Entry<String, Integer> entry : reverseMap.entrySet()) {\n            System.out.println(\"Reverse Key: \" + entry.getKey() + \", Reverse Value: \" + entry.getValue());\n        }\n\n        // More operations on anotherMap\n        if (anotherMap.containsKey(2)) {\n            System.out.println(\"AnotherMap contains key 2\");\n        }\n\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n\n        // Additional operations on reverseMap\n        if (reverseMap.containsKey(\"Three\")) {\n            System.out.println(\"ReverseMap contains key 'Three'\");\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        /* write */ map.putInstance(String.class, \"Hello, World!\");\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ClassToInstanceMap",
        "read_method": "getInstance"
    }
}