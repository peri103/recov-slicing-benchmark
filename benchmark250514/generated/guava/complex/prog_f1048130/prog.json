{
    "java_code": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeBasedTable<Integer, Integer, String> treeTable = TreeBasedTable.create();\n        HashBasedTable<Integer, Integer, String> hashTable = HashBasedTable.create();\n        \n        // Initialize some values in hashTable\n        hashTable.put(2, 2, \"Guava\");\n        hashTable.put(3, 3, \"Library\");\n        \n        // Add more values to hashTable\n        for (int i = 4; i <= 6; i++) {\n            hashTable.put(i, i, \"Value \" + i);\n        }\n\n        // Print values from hashTable\n        for (Table.Cell<Integer, Integer, String> cell : hashTable.cellSet()) {\n            System.out.println(\"HashTable: (\" + cell.getRowKey() + \", \" + cell.getColumnKey() + \") = \" + cell.getValue());\n        }\n\n        /* write */ treeTable.put(1, 1, \"Hello, World!\");\n        \n        // Manipulate treeTable with additional values\n        for (int i = 2; i <= 5; i++) {\n            treeTable.put(i, i, \"Row \" + i);\n        }\n\n        // Print values from treeTable\n        for (Table.Cell<Integer, Integer, String> cell : treeTable.cellSet()) {\n            System.out.println(\"TreeTable: (\" + cell.getRowKey() + \", \" + cell.getColumnKey() + \") = \" + cell.getValue());\n        }\n\n        // Retrieve and print the original value\n        /* read */ String value = treeTable.get(1, 1);\n        System.out.println(\"Retrieved Value: \" + value);\n        \n        // Additional operations with treeTable\n        treeTable.put(6, 6, \"End\");\n        System.out.println(\"TreeTable size: \" + treeTable.size());\n        System.out.println(\"Contains (1,1): \" + treeTable.contains(1, 1));\n    }\n}",
    "java_code_simple": "import com.google.common.collect.TreeBasedTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeBasedTable<Integer, Integer, String> table = TreeBasedTable.create();\n        /* write */ table.put(1, 1, \"Hello, World!\");\n        /* read */ String value = table.get(1, 1);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.TreeBasedTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.TreeBasedTable",
        "read_method": "get"
    }
}