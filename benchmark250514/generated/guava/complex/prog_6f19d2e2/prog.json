{
    "java_code": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedMultiset\n        ImmutableSortedMultiset.Builder<String> builder = ImmutableSortedMultiset.naturalOrder();\n\n        // Add elements using the builder\n        /* write */ builder.add(\"apple\");\n\n        // Perform some unrelated operations\n        Map<String, Integer> fruitMap = new HashMap<>();\n        fruitMap.put(\"banana\", 2);\n        fruitMap.put(\"orange\", 3);\n\n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            System.out.println(\"Fruit: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n\n        // Create an ImmutableList and perform operations\n        ImmutableList<String> fruits = ImmutableList.of(\"apple\", \"banana\", \"orange\");\n        for (String fruit : fruits) {\n            System.out.println(\"ImmutableList contains: \" + fruit);\n        }\n\n        // More complex operations using ImmutableList\n        ImmutableList<String> sortedFruits = fruits.stream().sorted().collect(ImmutableList.toImmutableList());\n        System.out.println(\"Sorted fruits: \" + sortedFruits);\n\n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<String> multiset = builder.build();\n\n        // Read the count of the element \"apple\"\n        /* read */ int count = multiset.count(\"apple\");\n\n        // Print the count\n        System.out.println(\"Count of apple in multiset: \" + count);\n\n        // Additional operations to make the program more complex\n        fruitMap.put(\"apple\", count);\n        for (String fruit : sortedFruits) {\n            if (fruitMap.containsKey(fruit)) {\n                System.out.println(\"Final count of \" + fruit + \": \" + fruitMap.get(fruit));\n            }\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedMultiset\n        ImmutableSortedMultiset.Builder<String> builder = ImmutableSortedMultiset.naturalOrder();\n\n        // Add elements using the builder\n        /* write */ builder.add(\"apple\");\n        \n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<String> multiset = builder.build();\n        \n        // Read the count of the element \"apple\"\n        /* read */ int count = multiset.count(\"apple\");\n        \n        // Print the count\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedMultiset",
        "read_method": "count"
    }
}