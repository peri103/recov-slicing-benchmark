{
    "java_code": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.ImmutableRangeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a RangeSet using TreeRangeSet implementation\n        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n        \n        // Define a Range to be added to the RangeSet\n        Range<Integer> range = Range.closed(1, 10);\n        \n        // Initialize another RangeSet using ImmutableRangeSet\n        RangeSet<Integer> immutableRangeSet = ImmutableRangeSet.of(Range.closed(5, 15));\n        \n        // Perform some operations on the immutableRangeSet\n        boolean containsInImmutable = immutableRangeSet.contains(8);\n        System.out.println(\"Immutable RangeSet contains 8: \" + containsInImmutable);\n        \n        // Add the range to the mutable rangeSet\n        /* write */ rangeSet.add(range);\n        \n        // Perform some other operations on rangeSet\n        Range<Integer> anotherRange = Range.open(10, 20);\n        rangeSet.add(anotherRange);\n        \n        // Check if a specific value is within the range added to the RangeSet\n        boolean containsValueInAnotherRange = rangeSet.contains(15);\n        System.out.println(\"RangeSet contains 15: \" + containsValueInAnotherRange);\n        \n        // Perform unrelated operations to make the program more complex\n        for (int i = 0; i < 5; i++) {\n            int square = i * i;\n            System.out.println(\"Square of \" + i + \" is: \" + square);\n        }\n        \n        // Output the result of the original read operation\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(\"RangeSet contains 5: \" + containsValue);\n        \n        // Further operations on rangeSet\n        RangeSet<Integer> intersectionRangeSet = rangeSet.subRangeSet(Range.closed(0, 25));\n        System.out.println(\"Intersection RangeSet contains 10: \" + intersectionRangeSet.contains(10));\n    }\n}",
    "java_code_simple": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a RangeSet using TreeRangeSet implementation\n        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n        \n        // Define a Range to be added to the RangeSet\n        Range<Integer> range = Range.closed(1, 10);\n        \n        /* write */ rangeSet.add(range);\n        \n        // Check if a specific value is within the range added to the RangeSet\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        \n        // Output the result\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.RangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.RangeSet",
        "read_method": "contains"
    }
}