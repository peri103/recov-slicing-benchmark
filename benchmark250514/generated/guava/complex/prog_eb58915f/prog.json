{
    "java_code": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the ClassToInstanceMap\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n\n        // Use the write method to put an instance into the map\n        /* write */ map.putInstance(String.class, \"Hello World\");\n\n        // Create a HashMap to store additional data\n        Map<Integer, String> additionalData = new HashMap<>();\n        additionalData.put(1, \"One\");\n        additionalData.put(2, \"Two\");\n        additionalData.put(3, \"Three\");\n\n        // Perform operations on the HashMap\n        for (Map.Entry<Integer, String> entry : additionalData.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Manipulate the map further\n        map.putInstance(Integer.class, 42);\n        Integer intValue = map.getInstance(Integer.class);\n        System.out.println(\"Integer value from map: \" + intValue);\n\n        // Use the read method to get the instance from the map\n        /* read */ String value = map.getInstance(String.class);\n\n        // Print the retrieved value\n        System.out.println(value);\n\n        // Add complexity with additional operations\n        additionalData.put(4, \"Four\");\n        additionalData.remove(2);\n\n        for (Integer key : additionalData.keySet()) {\n            System.out.println(\"Updated Key: \" + key + \", Value: \" + additionalData.get(key));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the ClassToInstanceMap\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n\n        // Use the write method to put an instance into the map\n        /* write */ map.putInstance(String.class, \"Hello World\");\n\n        // Use the read method to get the instance from the map\n        /* read */ String value = map.getInstance(String.class);\n\n        // Print the retrieved value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ClassToInstanceMap",
        "read_method": "getInstance"
    }
}