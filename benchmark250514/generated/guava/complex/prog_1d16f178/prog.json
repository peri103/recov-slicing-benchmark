{
    "java_code": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Map<String, Integer> baseMap = new HashMap<>();\n        ForwardingMap<String, Integer> map = new ForwardingMap<String, Integer>() {\n            @Override\n            protected Map<String, Integer> delegate() {\n                return baseMap;\n            }\n        };\n\n        ArrayList<String> keys = new ArrayList<>();\n        keys.add(\"key\");\n        keys.add(\"anotherKey\");\n\n        // Insert some unrelated complex logic\n        Map<String, Integer> anotherMap = new HashMap<>();\n        anotherMap.put(\"anotherKey\", 100);\n        int sum = 0;\n        for (String key : keys) {\n            if (anotherMap.containsKey(key)) {\n                sum += anotherMap.get(key);\n            }\n        }\n        System.out.println(\"Sum of values in anotherMap: \" + sum);\n\n        /* write */ map.put(\"key\", 42);\n\n        // More unrelated logic\n        Map<String, Integer> yetAnotherMap = new HashMap<>();\n        yetAnotherMap.put(\"yetAnotherKey\", 200);\n        yetAnotherMap.put(\"key\", 84); // Different value for the same key\n        for (Map.Entry<String, Integer> entry : yetAnotherMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // A complex calculation\n        int complexResult = 0;\n        for (int i = 0; i < 10; i++) {\n            complexResult += i * i;\n        }\n        System.out.println(\"Complex calculation result: \" + complexResult);\n\n        /* read */ int value = map.get(\"key\");\n        System.out.println(\"Value from map: \" + value);\n\n        // Final unrelated logic\n        int finalSum = 0;\n        for (int i = 1; i <= 5; i++) {\n            finalSum += i;\n        }\n        System.out.println(\"Final sum: \" + finalSum);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Map<String, Integer> baseMap = new HashMap<>();\n        ForwardingMap<String, Integer> map = new ForwardingMap<String, Integer>() {\n            @Override\n            protected Map<String, Integer> delegate() {\n                return baseMap;\n            }\n        };\n\n        /* write */ map.put(\"key\", 42);\n        /* read */ int value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingMap",
        "read_method": "get"
    }
}