{
    "java_code": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader.InvalidCacheLoadException;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        LoadingCache<String, String> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, String>() {\n                    public String load(String key) {\n                        return \"default\";\n                    }\n                });\n\n        // Additional unrelated code to make the program more complex\n        Map<String, Integer> exampleMap = new HashMap<>();\n        exampleMap.put(\"one\", 1);\n        exampleMap.put(\"two\", 2);\n        exampleMap.put(\"three\", 3);\n\n        // Iterate over the map and print values\n        for (Map.Entry<String, Integer> entry : exampleMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        /* write */ cache.put(\"key\", \"value\");\n\n        // Perform some operations with the map\n        if (exampleMap.containsKey(\"two\")) {\n            exampleMap.put(\"two\", exampleMap.get(\"two\") + 2);\n        }\n\n        // Print updated map values\n        for (Map.Entry<String, Integer> entry : exampleMap.entrySet()) {\n            System.out.println(\"Updated Key: \" + entry.getKey() + \", Updated Value: \" + entry.getValue());\n        }\n\n        // Additional CacheBuilder usage\n        Cache<String, Integer> anotherCache = CacheBuilder.newBuilder().maximumSize(100).build();\n        anotherCache.put(\"number\", 42);\n\n        try {\n            /* read */ String value = cache.get(\"key\");\n            System.out.println(\"Cache value: \" + value);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        // Retrieve and print value from another cache\n        Integer number = anotherCache.getIfPresent(\"number\");\n        System.out.println(\"Another cache number: \" + (number != null ? number : \"not found\"));\n    }\n}",
    "java_code_simple": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader.InvalidCacheLoadException;\n\npublic class Main {\n    public static void main(String[] args) {\n        LoadingCache<String, String> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, String>() {\n                    public String load(String key) {\n                        return \"default\";\n                    }\n                });\n\n        /* write */ cache.put(\"key\", \"value\");\n        try {\n            /* read */ String value = cache.get(\"key\");\n            System.out.println(value);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.CacheBuilder",
        "write_method": "build",
        "read_class": "com.google.common.cache.Cache",
        "read_method": "get"
    }
}