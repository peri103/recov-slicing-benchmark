{
    "java_code": "import com.google.common.collect.ArrayListMultimap;\nimport com.google.common.collect.ForwardingMultimap;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ForwardingMultimap<String, Integer> multimap = new ForwardingMultimap<String, Integer>() {\n            private final ArrayListMultimap<String, Integer> delegate = ArrayListMultimap.create();\n\n            @Override\n            protected ArrayListMultimap<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        // Another map to store additional information\n        Map<String, String> infoMap = new HashMap<>();\n        infoMap.put(\"description\", \"This is a test multimap\");\n\n        // Some unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Adding more elements to the multimap\n        multimap.put(\"key\", 100);\n        multimap.put(\"key\", 200);\n        multimap.put(\"anotherKey\", 300);\n\n        // Operations on infoMap\n        if (infoMap.containsKey(\"description\")) {\n            System.out.println(infoMap.get(\"description\"));\n        }\n\n        /* write */ multimap.put(\"key\", 42);\n\n        // More complex operations\n        Map<String, Collection<Integer>> allValues = new HashMap<>();\n        allValues.put(\"key\", multimap.get(\"key\"));\n        allValues.put(\"anotherKey\", multimap.get(\"anotherKey\"));\n\n        // Processing all values\n        for (Map.Entry<String, Collection<Integer>> entry : allValues.entrySet()) {\n            System.out.println(\"Values for \" + entry.getKey() + \": \" + entry.getValue());\n        }\n\n        /* read */ Collection<Integer> values = multimap.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n\n        // Further processing\n        int total = 0;\n        for (Integer value : values) {\n            total += value;\n        }\n        System.out.println(\"Total sum of values for 'key': \" + total);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ArrayListMultimap;\nimport com.google.common.collect.ForwardingMultimap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        ForwardingMultimap<String, Integer> multimap = new ForwardingMultimap<String, Integer>() {\n            private final ArrayListMultimap<String, Integer> delegate = ArrayListMultimap.create();\n\n            @Override\n            protected ArrayListMultimap<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ multimap.put(\"key\", 42);\n        /* read */ Collection<Integer> values = multimap.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingMultimap",
        "read_method": "get"
    }
}