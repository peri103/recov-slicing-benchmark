{
    "java_code": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableSortedMultiset\n        ImmutableSortedMultiset.Builder<Integer> builder = ImmutableSortedMultiset.<Integer>naturalOrder();\n        \n        // Some unrelated complex operations\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"apple\", 3);\n        map.put(\"banana\", 2);\n        map.put(\"orange\", 5);\n\n        ImmutableList<String> keys = ImmutableList.copyOf(map.keySet());\n        for (String key : keys) {\n            System.out.println(\"Fruit: \" + key + \", Quantity: \" + map.get(key));\n        }\n\n        // Another unrelated operation\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n        \n        /* write */ builder.add(1);\n        \n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<Integer> multiset = builder.build();\n        \n        // More unrelated operations\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Counting: \" + i);\n        }\n        \n        /* read */ int count = multiset.count(1);\n        System.out.println(\"Count of 1 in multiset: \" + count);\n        \n        // Final unrelated operation\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Hello, \");\n        sb.append(\"World!\");\n        System.out.println(sb.toString());\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableSortedMultiset\n        ImmutableSortedMultiset.Builder<Integer> builder = ImmutableSortedMultiset.<Integer>naturalOrder();\n        /* write */ builder.add(1);\n        \n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<Integer> multiset = builder.build();\n        \n        /* read */ int count = multiset.count(1);\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedMultiset",
        "read_method": "count"
    }
}