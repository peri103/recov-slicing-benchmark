{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(1);\n        \n        // Create another ImmutableSortedSet for demonstration\n        ImmutableSortedSet.Builder<Integer> anotherBuilder = ImmutableSortedSet.naturalOrder();\n        anotherBuilder.add(2).add(3).add(4);\n        ImmutableSortedSet<Integer> anotherSortedSet = anotherBuilder.build();\n\n        // Perform some operations on anotherSortedSet\n        boolean containsTwo = anotherSortedSet.contains(2);\n        System.out.println(\"Does anotherSortedSet contain 2? \" + containsTwo);\n\n        // Build the original ImmutableSortedSet\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        \n        // Use ImmutableList for additional complexity\n        ImmutableList<Integer> immutableList = ImmutableList.of(5, 6, 7, 8, 9);\n        for (Integer number : immutableList) {\n            System.out.println(\"ImmutableList element: \" + number);\n        }\n\n        // Perform some operations with a loop\n        int sum = 0;\n        for (Integer number : sortedSet) {\n            sum += number;\n        }\n        System.out.println(\"Sum of elements in sortedSet: \" + sum);\n\n        // Check if the set contains the element 1\n        /* read */ boolean containsValue = sortedSet.contains(1);\n        \n        // Print the result\n        System.out.println(\"Does sortedSet contain 1? \" + containsValue);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(1);\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        \n        // Check if the set contains the element 1\n        /* read */ boolean containsValue = sortedSet.contains(1);\n        \n        // Print the result\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}