{
    "java_code": "import com.google.common.collect.LinkedHashMultimap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashMultimap<String, Integer> multimap = LinkedHashMultimap.create();\n        Set<String> keySet = new HashSet<>();\n        \n        // Add keys to the set\n        keySet.add(\"key\");\n        keySet.add(\"anotherKey\");\n\n        // Add values to the multimap\n        multimap.put(\"anotherKey\", 99);\n        multimap.put(\"anotherKey\", 100);\n        \n        // Iterate over keys\n        for (String key : keySet) {\n            if (key.equals(\"key\")) {\n                /* write */ multimap.put(\"key\", 42);\n            }\n        }\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Iterate over the multimap values for \"anotherKey\"\n        Iterator<Integer> iterator = multimap.get(\"anotherKey\").iterator();\n        while (iterator.hasNext()) {\n            int val = iterator.next();\n            System.out.println(\"Value for 'anotherKey': \" + val);\n        }\n        \n        // Read the value from the multimap for \"key\"\n        /* read */ Integer value = multimap.get(\"key\").iterator().next();\n        System.out.println(\"Value for 'key': \" + value);\n        \n        // More unrelated operations\n        Set<Integer> numberSet = new HashSet<>();\n        for (int i = 0; i < 5; i++) {\n            numberSet.add(i * 5);\n        }\n        \n        for (Integer num : numberSet) {\n            System.out.println(\"Number in set: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.LinkedHashMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashMultimap<String, Integer> multimap = LinkedHashMultimap.create();\n        /* write */ multimap.put(\"key\", 42);\n        /* read */ Integer value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedHashMultimap",
        "read_method": "get"
    }
}