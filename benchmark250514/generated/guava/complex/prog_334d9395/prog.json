{
    "java_code": "import com.google.common.collect.LinkedListMultimap;\nimport java.util.List;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedListMultimap<String, Integer> multimap = LinkedListMultimap.create();\n        \n        /* write */ multimap.put(\"key\", 42);\n        \n        // Additional code using HashMap\n        HashMap<String, String> map = new HashMap<>();\n        map.put(\"name\", \"Alice\");\n        map.put(\"age\", \"30\");\n        \n        // Perform operations on the HashMap\n        if (map.containsKey(\"name\")) {\n            System.out.println(\"Name: \" + map.get(\"name\"));\n        }\n        \n        map.put(\"location\", \"Wonderland\");\n        System.out.println(\"Location: \" + map.get(\"location\"));\n        \n        // More operations on the multimap\n        multimap.put(\"key\", 100);\n        multimap.put(\"anotherKey\", 200);\n        \n        // Iterate over the multimap values\n        for (String key : multimap.keySet()) {\n            List<Integer> values = multimap.get(key);\n            System.out.println(\"Values for \" + key + \": \" + values);\n        }\n        \n        // Perform operations unrelated to multimap\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n        \n        // Read operation from the original write-read pair\n        /* read */ List<Integer> values = multimap.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(\"Read Value: \" + value);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.LinkedListMultimap;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedListMultimap<String, Integer> multimap = LinkedListMultimap.create();\n        \n        /* write */ multimap.put(\"key\", 42);\n        \n        /* read */ List<Integer> values = multimap.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.LinkedListMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedListMultimap",
        "read_method": "get"
    }
}