{
    "java_code": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableRangeMap\n        ImmutableRangeMap.Builder<Integer, String> builder = ImmutableRangeMap.builder();\n\n        // Add a range and its associated value\n        /* write */ builder.put(Range.closed(1, 10), \"Value\");\n\n        // Additional unrelated code to increase complexity\n        Map<String, Integer> someMap = new HashMap<>();\n        someMap.put(\"A\", 100);\n        someMap.put(\"B\", 200);\n        someMap.put(\"C\", 300);\n\n        for (Map.Entry<String, Integer> entry : someMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Build the ImmutableRangeMap\n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n\n        // More unrelated code\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Read the value for a specific key within the range\n        /* read */ String value = rangeMap.get(5);\n\n        // Output the read value\n        System.out.println(value);\n\n        // Even more unrelated code\n        int[] numbers = {5, 10, 15, 20, 25};\n        for (int num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n\n        someMap.put(\"D\", 400);\n        System.out.println(\"Updated Map: \" + someMap);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableRangeMap\n        ImmutableRangeMap.Builder<Integer, String> builder = ImmutableRangeMap.builder();\n\n        // Add a range and its associated value\n        /* write */ builder.put(Range.closed(1, 10), \"Value\");\n\n        // Build the ImmutableRangeMap\n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n\n        // Read the value for a specific key within the range\n        /* read */ String value = rangeMap.get(5);\n\n        // Output the read value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableRangeMap",
        "read_method": "get"
    }
}