{
    "java_code": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Cache<String, Integer> cache = CacheBuilder.newBuilder().build();\n        \n        Map<String, String> map = new HashMap<>();\n        map.put(\"A\", \"Apple\");\n        map.put(\"B\", \"Banana\");\n\n        /* write */ cache.put(\"key\", 42);\n\n        for (Map.Entry<String, String> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 numbers: \" + sum);\n\n        /* read */ Integer value = cache.getIfPresent(\"key\");\n\n        if (value != null) {\n            System.out.println(\"Cache value for 'key': \" + value);\n        } else {\n            System.out.println(\"No value found in cache for 'key'\");\n        }\n\n        for (int i = 1; i <= 3; i++) {\n            System.out.println(\"Square of \" + i + \" is \" + (i * i));\n        }\n\n        Map<Integer, String> numberMap = new HashMap<>();\n        numberMap.put(1, \"One\");\n        numberMap.put(2, \"Two\");\n        numberMap.put(3, \"Three\");\n\n        for (Map.Entry<Integer, String> entry : numberMap.entrySet()) {\n            System.out.println(\"Number: \" + entry.getKey() + \", Word: \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Cache<String, Integer> cache = CacheBuilder.newBuilder().build();\n        \n        /* write */ cache.put(\"key\", 42);\n        \n        /* read */ Integer value = cache.getIfPresent(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.Cache",
        "write_method": "put",
        "read_class": "com.google.common.cache.Cache",
        "read_method": "getIfPresent"
    }
}