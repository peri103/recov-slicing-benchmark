{
    "java_code": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Unrelated code: Working with another map\n        ImmutableMap<String, String> stringMap = ImmutableMap.<String, String>builder()\n            .put(\"apple\", \"fruit\")\n            .put(\"carrot\", \"vegetable\")\n            .put(\"banana\", \"fruit\")\n            .build();\n        \n        // Print all entries in the stringMap\n        for (String key : stringMap.keySet()) {\n            System.out.println(key + \": \" + stringMap.get(key));\n        }\n        \n        // Original write-read pair\n        ImmutableBiMap<String, Integer> map = ImmutableBiMap.<String, Integer>builder()\n            /* write */ .put(\"one\", 1)\n            .put(\"two\", 2)\n            .put(\"three\", 3)\n            .build();\n\n        // More unrelated code: Perform some calculations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Using a different BiMap\n        ImmutableBiMap<String, String> capitalMap = ImmutableBiMap.<String, String>builder()\n            .put(\"USA\", \"Washington D.C.\")\n            .put(\"France\", \"Paris\")\n            .put(\"Japan\", \"Tokyo\")\n            .build();\n        \n        // Print the capital of France\n        System.out.println(\"Capital of France: \" + capitalMap.get(\"France\"));\n\n        // Back to original map\n        /* read */ Integer value = map.get(\"one\");\n        System.out.println(\"Value for 'one': \" + value);\n\n        // Unrelated loop to print numbers\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Number: \" + i);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableBiMap<String, Integer> map = ImmutableBiMap.<String, Integer>builder()\n            /* write */ .put(\"one\", 1)\n            .put(\"two\", 2)\n            .put(\"three\", 3)\n            .build();\n        \n        /* read */ Integer value = map.get(\"one\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    }
}