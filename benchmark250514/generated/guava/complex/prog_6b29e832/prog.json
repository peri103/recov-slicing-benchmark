{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        // Add some elements to the builder\n        /* write */ builder.add(1);\n        builder.add(2);\n        builder.add(3);\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> set = builder.build();\n        \n        // Initialize an ImmutableList with some values\n        ImmutableList<String> list = ImmutableList.of(\"apple\", \"banana\", \"cherry\");\n        \n        // Create a HashMap to store fruit names and their quantities\n        Map<String, Integer> fruitMap = new HashMap<>();\n        fruitMap.put(\"apple\", 10);\n        fruitMap.put(\"banana\", 20);\n        fruitMap.put(\"cherry\", 30);\n        \n        // Perform some operations on the HashMap\n        for (String fruit : list) {\n            System.out.println(fruit + \": \" + fruitMap.get(fruit));\n        }\n        \n        // Check if the ImmutableSortedSet contains a specific element\n        /* read */ boolean contains = set.contains(1);\n        \n        // Print the result of the contains check\n        System.out.println(\"Set contains 1: \" + contains);\n        \n        // Additional complex logic: calculate the sum of values in the HashMap\n        int sum = 0;\n        for (Integer quantity : fruitMap.values()) {\n            sum += quantity;\n        }\n        System.out.println(\"Total fruit quantity: \" + sum);\n        \n        // Perform some operations on the ImmutableList\n        for (String fruit : list) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        /* write */ builder.add(1);\n        ImmutableSortedSet<Integer> set = builder.build();\n        /* read */ boolean contains = set.contains(1);\n        System.out.println(contains);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}