{
    "java_code": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create and populate a HashMap\n        Map<String, Integer> fruitMap = new HashMap<>();\n        fruitMap.put(\"apple\", 3);\n        fruitMap.put(\"banana\", 2);\n        fruitMap.put(\"cherry\", 5);\n\n        // Use ImmutableSet for another collection\n        ImmutableSet<String> fruitSet = ImmutableSet.of(\"apple\", \"banana\", \"cherry\");\n\n        // Use the original ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        /* write */ builder.add(\"apple\");\n        \n        // Add more elements to the multiset builder\n        for (String fruit : fruitSet) {\n            builder.addCopies(fruit, fruitMap.get(fruit));\n        }\n\n        // Build the multiset\n        ImmutableMultiset<String> multiset = builder.build();\n\n        // Perform some operations with fruitMap\n        int totalFruits = 0;\n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            totalFruits += entry.getValue();\n        }\n        System.out.println(\"Total fruits in map: \" + totalFruits);\n\n        // Perform some operations with fruitSet\n        for (String fruit : fruitSet) {\n            System.out.println(\"Fruit in set: \" + fruit);\n        }\n\n        // Read from the multiset\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(\"Count of 'apple' in multiset: \" + count);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        /* write */ builder.add(\"apple\");\n        ImmutableMultiset<String> multiset = builder.build();\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableMultiset",
        "read_method": "count"
    }
}