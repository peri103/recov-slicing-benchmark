{
    "java_code": "import com.google.common.collect.EnumMultiset;\nimport java.util.EnumSet;\n\nenum ExampleEnum {\n    ONE, TWO, THREE\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        EnumMultiset<ExampleEnum> multiset = EnumMultiset.create(EnumSet.allOf(ExampleEnum.class));\n        \n        /* write */ multiset.add(ExampleEnum.ONE);\n        \n        // Adding more elements to the multiset\n        multiset.add(ExampleEnum.TWO);\n        multiset.add(ExampleEnum.THREE);\n        multiset.add(ExampleEnum.TWO);\n        \n        // Performing operations on the multiset\n        int countTwo = multiset.count(ExampleEnum.TWO);\n        System.out.println(\"Count of TWO: \" + countTwo);\n        \n        // Adding more unrelated code\n        int sum = 0;\n        for (ExampleEnum value : ExampleEnum.values()) {\n            sum += multiset.count(value);\n        }\n        System.out.println(\"Total count of all elements: \" + sum);\n        \n        // More complex operations\n        EnumMultiset<ExampleEnum> anotherMultiset = EnumMultiset.create(EnumSet.allOf(ExampleEnum.class));\n        anotherMultiset.add(ExampleEnum.THREE);\n        anotherMultiset.add(ExampleEnum.THREE);\n        \n        int countThreeInAnother = anotherMultiset.count(ExampleEnum.THREE);\n        System.out.println(\"Count of THREE in anotherMultiset: \" + countThreeInAnother);\n        \n        /* read */ int count = multiset.count(ExampleEnum.ONE);\n        \n        System.out.println(\"Count of ONE: \" + count);\n        \n        // Final operations\n        multiset.add(ExampleEnum.THREE);\n        int finalCountThree = multiset.count(ExampleEnum.THREE);\n        System.out.println(\"Final count of THREE: \" + finalCountThree);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.EnumMultiset;\nimport java.util.EnumSet;\n\nenum ExampleEnum {\n    ONE, TWO, THREE\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        EnumMultiset<ExampleEnum> multiset = EnumMultiset.create(EnumSet.allOf(ExampleEnum.class));\n        \n        /* write */ multiset.add(ExampleEnum.ONE);\n        \n        /* read */ int count = multiset.count(ExampleEnum.ONE);\n        \n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.EnumMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.EnumMultiset",
        "read_method": "count"
    }
}