{
    "java_code": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.SortedMap;\nimport java.util.TreeMap;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMap<String, Integer> sortedMap = new TreeMap<>();\n        ForwardingSortedMap<String, Integer> forwardingSortedMap = new ForwardingSortedMap<String, Integer>() {\n            @Override\n            protected SortedMap<String, Integer> delegate() {\n                return sortedMap;\n            }\n        };\n\n        // Unrelated code to make the program more complex\n        ArrayList<String> list = new ArrayList<>();\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        list.add(\"apple\");\n        list.add(\"banana\");\n        hashMap.put(\"fruit\", 2);\n\n        // Another write-read pair\n        forwardingSortedMap.put(\"key2\", 200);\n        int anotherValue = forwardingSortedMap.get(\"key2\");\n        System.out.println(\"Another value: \" + anotherValue);\n\n        // Some operations with list and hashMap\n        for (String item : list) {\n            hashMap.put(item, item.length());\n        }\n\n        /* write */ forwardingSortedMap.put(\"key1\", 100);\n\n        // Complex operations\n        for (String key : hashMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Length: \" + hashMap.get(key));\n        }\n\n        // Unrelated loop\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"List item: \" + list.get(i));\n        }\n\n        /* read */ int value = forwardingSortedMap.get(\"key1\");\n        System.out.println(\"Read value: \" + value);\n\n        // More unrelated operations\n        int sum = 0;\n        for (int val : hashMap.values()) {\n            sum += val;\n        }\n        System.out.println(\"Sum of lengths: \" + sum);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.SortedMap;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMap<String, Integer> sortedMap = new TreeMap<>();\n        ForwardingSortedMap<String, Integer> forwardingSortedMap = new ForwardingSortedMap<String, Integer>() {\n            @Override\n            protected SortedMap<String, Integer> delegate() {\n                return sortedMap;\n            }\n        };\n\n        /* write */ forwardingSortedMap.put(\"key1\", 100);\n        /* read */ int value = forwardingSortedMap.get(\"key1\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSortedMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingSortedMap",
        "read_method": "get"
    }
}