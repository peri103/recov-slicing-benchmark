{
    "java_code": "import com.google.common.collect.ImmutableMap;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Step 1: Create an ImmutableMap using ImmutableMap.Builder\n        ImmutableMap.Builder<String, Integer> builder = ImmutableMap.builder();\n        /* write */ builder.put(\"key\", 42);\n        \n        // Step 2: Create another collection for additional operations\n        ImmutableList.Builder<String> listBuilder = ImmutableList.builder();\n        listBuilder.add(\"value1\");\n        listBuilder.add(\"value2\");\n        ImmutableList<String> list = listBuilder.build();\n        \n        // Step 3: Perform operations on a HashMap\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n        \n        // Step 4: Iterate over the list and print values\n        for (String item : list) {\n            System.out.println(\"List item: \" + item);\n        }\n        \n        // Step 5: Access the ImmutableMap and perform a read operation\n        ImmutableMap<String, Integer> map = builder.build();\n        /* read */ Integer value = map.get(\"key\");\n        \n        // Step 6: Print the value obtained from the ImmutableMap\n        System.out.println(\"Value from ImmutableMap: \" + value);\n        \n        // Step 7: Iterate over the HashMap and print key-value pairs\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(\"HashMap entry: \" + entry.getKey() + \" -> \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // ImmutableMap does not support put operation directly as it is immutable.\n        // Instead, we use ImmutableMap.Builder to construct the map.\n        ImmutableMap.Builder<String, Integer> builder = ImmutableMap.builder();\n        /* write */ builder.put(\"key\", 42);\n        \n        ImmutableMap<String, Integer> map = builder.build();\n        /* read */ Integer value = map.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableMap",
        "read_method": "get"
    }
}