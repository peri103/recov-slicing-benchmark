{
    "java_code": "import com.google.common.collect.ForwardingMultimap;\nimport com.google.common.collect.HashMultimap;\nimport com.google.common.collect.Multimap;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a HashMultimap instance as a concrete implementation of ForwardingMultimap\n        ForwardingMultimap<String, Integer> multimap = new ForwardingMultimap<String, Integer>() {\n            private final HashMultimap<String, Integer> delegate = HashMultimap.create();\n\n            @Override\n            protected HashMultimap<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        // Additional Multimap operations for complexity\n        Multimap<String, String> stringMultimap = HashMultimap.create();\n        stringMultimap.put(\"fruit\", \"apple\");\n        stringMultimap.put(\"fruit\", \"banana\");\n\n        Map<String, String> simpleMap = new HashMap<>();\n        simpleMap.put(\"name\", \"John\");\n        simpleMap.put(\"city\", \"New York\");\n\n        // Write operation: put a value into the ForwardingMultimap\n        /* write */ multimap.put(\"key1\", 100);\n\n        // Perform operations on simpleMap\n        for (Map.Entry<String, String> entry : simpleMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Perform operations on stringMultimap\n        Collection<String> fruits = stringMultimap.get(\"fruit\");\n        System.out.println(\"Fruits:\");\n        for (String fruit : fruits) {\n            System.out.println(fruit);\n        }\n\n        // Read operation: get the value from the ForwardingMultimap\n        /* read */ Collection<Integer> values = multimap.get(\"key1\");\n\n        // Print the values retrieved\n        for (Integer value : values) {\n            System.out.println(\"Retrieved value from multimap: \" + value);\n        }\n\n        // Additional logic to increase complexity\n        int sum = 0;\n        for (Integer value : values) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingMultimap;\nimport com.google.common.collect.HashMultimap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a HashMultimap instance as a concrete implementation of ForwardingMultimap\n        ForwardingMultimap<String, Integer> multimap = new ForwardingMultimap<String, Integer>() {\n            private final HashMultimap<String, Integer> delegate = HashMultimap.create();\n\n            @Override\n            protected HashMultimap<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        // Write operation: put a value into the ForwardingMultimap\n        /* write */ multimap.put(\"key1\", 100);\n\n        // Read operation: get the value from the ForwardingMultimap\n        /* read */ Collection<Integer> values = multimap.get(\"key1\");\n\n        // Print the values retrieved\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingMultimap",
        "read_method": "get"
    }
}