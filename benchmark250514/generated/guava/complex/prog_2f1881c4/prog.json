{
    "java_code": "import com.google.common.collect.ImmutableSortedMap;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a builder for ImmutableSortedMap\n        ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n        \n        // Use the builder to add an entry to the map\n        /* write */ builder.put(\"key\", 42);\n        \n        // Build the ImmutableSortedMap\n        ImmutableSortedMap<String, Integer> map = builder.build();\n        \n        // Initialize an ImmutableList and ImmutableSet\n        ImmutableList<String> list = ImmutableList.of(\"apple\", \"banana\", \"cherry\");\n        ImmutableSet<Integer> set = ImmutableSet.of(1, 2, 3, 4, 5);\n        \n        // Perform some operations with the list and set\n        System.out.println(\"List contains 'banana': \" + list.contains(\"banana\"));\n        System.out.println(\"Set contains 3: \" + set.contains(3));\n        \n        // Calculate the sum of elements in the set\n        int sum = 0;\n        for (Integer num : set) {\n            sum += num;\n        }\n        System.out.println(\"Sum of set elements: \" + sum);\n        \n        // Retrieve the value associated with the key\n        /* read */ Integer value = map.get(\"key\");\n        \n        // Print the value to ensure the read operation was successful\n        System.out.println(\"Value from map: \" + value);\n        \n        // Additional operations with ImmutableList\n        for (String fruit : list) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        // More complex operations\n        ImmutableSortedMap.Builder<String, Integer> anotherBuilder = ImmutableSortedMap.naturalOrder();\n        anotherBuilder.put(\"anotherKey\", 100);\n        ImmutableSortedMap<String, Integer> anotherMap = anotherBuilder.build();\n        \n        // Use the anotherMap to demonstrate complexity\n        for (String key : anotherMap.keySet()) {\n            System.out.println(\"Another map key: \" + key + \", value: \" + anotherMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a builder for ImmutableSortedMap\n        ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n        \n        // Use the builder to add an entry to the map\n        /* write */ builder.put(\"key\", 42);\n        \n        // Build the ImmutableSortedMap\n        ImmutableSortedMap<String, Integer> map = builder.build();\n        \n        // Retrieve the value associated with the key\n        /* read */ Integer value = map.get(\"key\");\n        \n        // Print the value to ensure the read operation was successful\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableSortedMap",
        "read_method": "get"
    }
}