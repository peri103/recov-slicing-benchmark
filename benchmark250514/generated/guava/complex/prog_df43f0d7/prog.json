{
    "java_code": "import com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableSet.Builder;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String> builder = ImmutableSet.builder();\n        /* write */ builder.add(\"testValue\");\n\n        // Additional complex code\n        Set<Integer> integerSet = new HashSet<>();\n        for (int i = 0; i < 10; i++) {\n            integerSet.add(i);\n        }\n\n        for (Integer num : integerSet) {\n            System.out.println(\"Number: \" + num);\n        }\n\n        Set<String> stringSet = new HashSet<>();\n        stringSet.add(\"Hello\");\n        stringSet.add(\"World\");\n\n        for (String str : stringSet) {\n            System.out.println(\"String: \" + str);\n        }\n\n        ImmutableSet<String> set = builder.build();\n        // More complex code before reading the value\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n\n        /* read */ boolean containsValue = set.contains(\"testValue\");\n        System.out.println(containsValue);\n\n        // Additional complex code\n        Set<Double> doubleSet = new HashSet<>();\n        for (double d = 0.0; d < 5.0; d += 0.5) {\n            doubleSet.add(d);\n        }\n\n        for (Double d : doubleSet) {\n            System.out.println(\"Double: \" + d);\n        }\n\n        int product = 1;\n        for (int i = 1; i <= 3; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableSet.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String> builder = ImmutableSet.builder();\n        /* write */ builder.add(\"testValue\");\n        ImmutableSet<String> set = builder.build();\n        /* read */ boolean containsValue = set.contains(\"testValue\");\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableSet",
        "read_method": "contains"
    }
}