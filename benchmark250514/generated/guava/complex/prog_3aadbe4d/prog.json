{
    "java_code": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader;\nimport java.util.concurrent.ExecutionException;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n            .maximumSize(100)\n            .build(new CacheLoader<String, Integer>() {\n                public Integer load(String key) {\n                    return -1; // default value if key not found\n                }\n            });\n        \n        HashMap<String, String> map = new HashMap<>();\n        map.put(\"A\", \"Apple\");\n        map.put(\"B\", \"Banana\");\n\n        /* write */ cache.put(\"key1\", 42);\n        \n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        \n        try {\n            for (String key : map.keySet()) {\n                System.out.println(\"Map value: \" + map.get(key));\n            }\n            /* read */ int value = cache.get(\"key1\");\n            System.out.println(\"Cache value: \" + value);\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n\n        LoadingCache<String, String> stringCache = CacheBuilder.newBuilder()\n            .maximumSize(50)\n            .build(new CacheLoader<String, String>() {\n                public String load(String key) {\n                    return \"Unknown\"; // default value if key not found\n                }\n            });\n\n        stringCache.put(\"fruit\", \"Mango\");\n        \n        try {\n            String fruitValue = stringCache.get(\"fruit\");\n            System.out.println(\"String Cache value: \" + fruitValue);\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader;\nimport java.util.concurrent.ExecutionException;\n\npublic class Main {\n    public static void main(String[] args) {\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n            .maximumSize(100)\n            .build(new CacheLoader<String, Integer>() {\n                public Integer load(String key) {\n                    return -1; // default value if key not found\n                }\n            });\n\n        /* write */ cache.put(\"key1\", 42);\n        \n        try {\n            /* read */ int value = cache.get(\"key1\");\n            System.out.println(value);\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.LoadingCache",
        "write_method": "put",
        "read_class": "com.google.common.cache.LoadingCache",
        "read_method": "get"
    }
}