{
    "java_code": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.SortedMap;\nimport java.util.TreeMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMap<String, Integer> baseMap = new TreeMap<>();\n        ForwardingSortedMap<String, Integer> map = new ForwardingSortedMap<String, Integer>() {\n            @Override\n            protected SortedMap<String, Integer> delegate() {\n                return baseMap;\n            }\n        };\n        \n        /* write */ map.put(\"key\", 42);\n\n        // Additional unrelated code for complexity\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"name\", \"John\");\n        hashMap.put(\"age\", \"30\");\n        \n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        SortedMap<String, String> anotherMap = new TreeMap<>();\n        anotherMap.put(\"apple\", \"fruit\");\n        anotherMap.put(\"carrot\", \"vegetable\");\n        \n        for (Map.Entry<String, String> entry : anotherMap.entrySet()) {\n            System.out.println(entry.getKey() + \" is a \" + entry.getValue());\n        }\n\n        // Operations on the original map\n        map.put(\"anotherKey\", 100);\n        int anotherValue = map.get(\"anotherKey\");\n        System.out.println(\"Another value: \" + anotherValue);\n\n        /* read */ int value = map.get(\"key\");\n        \n        System.out.println(\"Original value: \" + value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.SortedMap;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMap<String, Integer> baseMap = new TreeMap<>();\n        ForwardingSortedMap<String, Integer> map = new ForwardingSortedMap<String, Integer>() {\n            @Override\n            protected SortedMap<String, Integer> delegate() {\n                return baseMap;\n            }\n        };\n        \n        /* write */ map.put(\"key\", 42);\n        /* read */ int value = map.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSortedMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingSortedMap",
        "read_method": "get"
    }
}