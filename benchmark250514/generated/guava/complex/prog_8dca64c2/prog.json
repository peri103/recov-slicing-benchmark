{
    "java_code": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableTable.Builder;\nimport com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n\n        // Use the write method to put a value\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Create a HashBasedTable for additional operations\n        Table<String, String, Integer> hashTable = HashBasedTable.create();\n        hashTable.put(\"row2\", \"column2\", 100);\n        hashTable.put(\"row3\", \"column3\", 200);\n\n        // Perform some operations on hashTable\n        for (Table.Cell<String, String, Integer> cell : hashTable.cellSet()) {\n            System.out.println(\"HashTable Value: \" + cell.getValue());\n        }\n\n        // Build the ImmutableTable\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Use the read method to get the value\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        // Print the value\n        System.out.println(\"ImmutableTable Value: \" + value);\n\n        // Further operations on hashTable\n        hashTable.put(\"row4\", \"column4\", 300);\n        hashTable.put(\"row5\", \"column5\", 400);\n\n        // Print updated hashTable values\n        for (Table.Cell<String, String, Integer> cell : hashTable.cellSet()) {\n            System.out.println(\"Updated HashTable Value: \" + cell.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableTable.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n\n        // Use the write method to put a value\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Build the ImmutableTable\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Use the read method to get the value\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        // Print the value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    }
}