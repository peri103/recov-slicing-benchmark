{
    "java_code": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.RangeMap;\nimport com.google.common.collect.TreeRangeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original ImmutableRangeMap write-read pair\n        ImmutableRangeMap.Builder<Integer, String> builder = new ImmutableRangeMap.Builder<>();\n        \n        /* write */ builder.put(Range.closed(1, 10), \"Value1\");\n        \n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n\n        // Additional complex operations using TreeRangeMap\n        RangeMap<Integer, String> treeRangeMap = TreeRangeMap.create();\n        treeRangeMap.put(Range.closedOpen(10, 20), \"Value2\");\n        treeRangeMap.put(Range.closedOpen(20, 30), \"Value3\");\n\n        // Performing some unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 natural numbers: \" + sum);\n\n        // More operations using TreeRangeMap\n        String treeValue = treeRangeMap.get(15);\n        System.out.println(\"TreeRangeMap value for key 15: \" + treeValue);\n\n        // Final read operation from ImmutableRangeMap\n        /* read */ String value = rangeMap.get(5);\n        \n        System.out.println(\"ImmutableRangeMap value for key 5: \" + value);\n\n        // Additional unrelated operations\n        for (int i = 30; i < 35; i++) {\n            treeRangeMap.put(Range.singleton(i), \"ExtraValue\" + i);\n        }\n\n        for (int i = 30; i < 35; i++) {\n            System.out.println(\"TreeRangeMap value for key \" + i + \": \" + treeRangeMap.get(i));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableRangeMap.Builder<Integer, String> builder = new ImmutableRangeMap.Builder<>();\n        \n        /* write */ builder.put(Range.closed(1, 10), \"Value1\");\n        \n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n        \n        /* read */ String value = rangeMap.get(5);\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableRangeMap",
        "read_method": "get"
    }
}