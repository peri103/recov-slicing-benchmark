{
    "java_code": "import com.google.common.collect.ConcurrentHashMultiset;\nimport com.google.common.collect.HashMultiset;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentHashMultiset<String> multiset = ConcurrentHashMultiset.create();\n        HashMultiset<String> hashMultiset = HashMultiset.create();\n        HashMap<String, Integer> map = new HashMap<>();\n\n        // Adding some elements to hashMultiset\n        hashMultiset.add(\"banana\");\n        hashMultiset.add(\"orange\", 2);\n\n        // Adding elements to map\n        map.put(\"apple\", 5);\n        map.put(\"banana\", 3);\n\n        /* write */ multiset.add(\"apple\");\n\n        // Performing operations on hashMultiset\n        hashMultiset.add(\"apple\", 2);\n        hashMultiset.remove(\"orange\");\n\n        // Performing operations on map\n        int appleCount = map.get(\"apple\");\n        map.put(\"apple\", appleCount + 1);\n\n        // Iterating over hashMultiset\n        for (String fruit : hashMultiset.elementSet()) {\n            System.out.println(fruit + \": \" + hashMultiset.count(fruit));\n        }\n\n        // Iterating over map\n        for (String fruit : map.keySet()) {\n            System.out.println(fruit + \": \" + map.get(fruit));\n        }\n\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(\"Count of 'apple' in ConcurrentHashMultiset: \" + count);\n\n        // Performing additional operations on multiset\n        multiset.add(\"banana\", 3);\n        multiset.remove(\"apple\");\n\n        // Final iteration over multiset\n        for (String fruit : multiset.elementSet()) {\n            System.out.println(fruit + \": \" + multiset.count(fruit));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ConcurrentHashMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentHashMultiset<String> multiset = ConcurrentHashMultiset.create();\n        /* write */ multiset.add(\"apple\");\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(\"Count of 'apple': \" + count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ConcurrentHashMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.ConcurrentHashMultiset",
        "read_method": "count"
    }
}