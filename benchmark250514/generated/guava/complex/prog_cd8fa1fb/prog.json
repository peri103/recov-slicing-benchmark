{
    "java_code": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader.InvalidCacheLoadException;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LoadingCache instance\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n            .build(new CacheLoader<String, Integer>() {\n                public Integer load(String key) {\n                    return null; // Default behavior for non-existing keys\n                }\n            });\n\n        // Create a HashMap for additional complexity\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key2\", 200);\n        map.put(\"key3\", 300);\n\n        // Perform operations on HashMap\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        // Use the write method to put a value into the cache\n        /* write */ cache.put(\"key1\", 100);\n\n        // Perform more operations before reading from the cache\n        int product = 1;\n        for (Integer value : map.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of values in map: \" + product);\n\n        // Use the read method to get the value from the cache\n        try {\n            /* read */ int value = cache.get(\"key1\");\n            System.out.println(\"Value from cache: \" + value);\n        } catch (InvalidCacheLoadException e) {\n            System.out.println(\"Value not found in cache.\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        // Additional operations after reading from cache\n        map.put(\"key4\", 400);\n        map.put(\"key5\", 500);\n        int total = 0;\n        for (Integer value : map.values()) {\n            total += value;\n        }\n        System.out.println(\"Total of all values in map: \" + total);\n    }\n}",
    "java_code_simple": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader.InvalidCacheLoadException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LoadingCache instance\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n            .build(new CacheLoader<String, Integer>() {\n                public Integer load(String key) {\n                    return null; // Default behavior for non-existing keys\n                }\n            });\n\n        // Use the write method to put a value into the cache\n        /* write */ cache.put(\"key1\", 100);\n\n        // Use the read method to get the value from the cache\n        try {\n            /* read */ int value = cache.get(\"key1\");\n            System.out.println(value);\n        } catch (InvalidCacheLoadException e) {\n            System.out.println(\"Value not found in cache.\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.LoadingCache",
        "write_method": "put",
        "read_class": "com.google.common.cache.LoadingCache",
        "read_method": "get"
    }
}