{
    "java_code": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an anonymous subclass of ForwardingMap to use the write and read methods\n        ForwardingMap<String, String> map = new ForwardingMap<String, String>() {\n            private final Map<String, String> delegate = new HashMap<>();\n\n            @Override\n            protected Map<String, String> delegate() {\n                return delegate;\n            }\n        };\n\n        // Use another map to demonstrate more complexity\n        Map<String, Integer> anotherMap = new HashMap<>();\n        anotherMap.put(\"one\", 1);\n        anotherMap.put(\"two\", 2);\n        anotherMap.put(\"three\", 3);\n\n        // Use a list to store keys of another map\n        List<String> keys = new ArrayList<>(anotherMap.keySet());\n\n        // Iterate over the keys and print values from anotherMap\n        for (String key : keys) {\n            System.out.println(\"Value for key \" + key + \" is \" + anotherMap.get(key));\n        }\n\n        // Perform operations on the original map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Additional operations to add complexity\n        map.put(\"anotherKey\", \"anotherValue\");\n        map.put(\"yetAnotherKey\", \"yetAnotherValue\");\n\n        // Simulate some processing\n        int sum = 0;\n        for (int value : anotherMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in anotherMap: \" + sum);\n\n        // More operations on the original map\n        String removedValue = map.remove(\"anotherKey\");\n        System.out.println(\"Removed value: \" + removedValue);\n\n        // Final read operation\n        /* read */ String value = map.get(\"key\");\n        System.out.println(\"Final read value: \" + value);\n\n        // Additional list operations\n        List<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numberList.add(i * 10);\n        }\n        for (int num : numberList) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an anonymous subclass of ForwardingMap to use the write and read methods\n        ForwardingMap<String, String> map = new ForwardingMap<String, String>() {\n            private final Map<String, String> delegate = new HashMap<>();\n\n            @Override\n            protected Map<String, String> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ map.put(\"key\", \"value\");\n        /* read */ String value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingMap",
        "read_method": "get"
    }
}