{
    "java_code": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize builder for ImmutableRangeSet\n        ImmutableRangeSet.Builder<Integer> builder = new ImmutableRangeSet.Builder<>();\n        \n        // Add range to the builder\n        /* write */ builder.add(Range.closed(1, 10));\n        \n        // Build the ImmutableRangeSet\n        ImmutableRangeSet<Integer> rangeSet = builder.build();\n        \n        // Create an ArrayList and add some values\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 20; i++) {\n            numbers.add(i);\n        }\n        \n        // Process each number in the ArrayList\n        for (Integer number : numbers) {\n            if (rangeSet.contains(number)) {\n                System.out.println(\"Number \" + number + \" is within the range.\");\n            } else {\n                System.out.println(\"Number \" + number + \" is outside the range.\");\n            }\n        }\n        \n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n        \n        // Check if a specific value is within the range\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(\"Does the range contain 5? \" + containsValue); // Should print true\n        \n        // Create another range and check overlap\n        Range<Integer> anotherRange = Range.closed(5, 15);\n        boolean overlaps = rangeSet.intersects(anotherRange);\n        System.out.println(\"Does the range overlap with [5, 15]? \" + overlaps);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableRangeSet.Builder<Integer> builder = new ImmutableRangeSet.Builder<>();\n        /* write */ builder.add(Range.closed(1, 10));\n        ImmutableRangeSet<Integer> rangeSet = builder.build();\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(containsValue); // Should print true\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableRangeSet",
        "read_method": "contains"
    }
}