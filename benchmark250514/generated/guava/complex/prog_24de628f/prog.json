{
    "java_code": "import com.google.common.collect.LinkedHashMultiset;\nimport com.google.common.collect.HashMultiset;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashMultiset<String> multiset = LinkedHashMultiset.create();\n        HashMultiset<String> anotherMultiset = HashMultiset.create();\n        Map<String, Integer> map = new HashMap<>();\n\n        // Adding elements to the map\n        map.put(\"banana\", 2);\n        map.put(\"orange\", 3);\n\n        // Adding elements to anotherMultiset\n        anotherMultiset.add(\"banana\");\n        anotherMultiset.add(\"orange\", 2);\n\n        /* write */ multiset.add(\"apple\");\n\n        // Performing operations on map\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            anotherMultiset.add(entry.getKey(), entry.getValue());\n        }\n\n        // Printing counts from anotherMultiset\n        System.out.println(\"Banana count: \" + anotherMultiset.count(\"banana\"));\n        System.out.println(\"Orange count: \" + anotherMultiset.count(\"orange\"));\n\n        // Adding more elements to multiset\n        multiset.add(\"banana\");\n        multiset.add(\"banana\");\n\n        // Performing some calculations\n        int totalFruitCount = anotherMultiset.size() + multiset.size();\n        System.out.println(\"Total fruit count: \" + totalFruitCount);\n\n        /* read */ int appleCount = multiset.count(\"apple\");\n        System.out.println(\"Apple count: \" + appleCount);\n\n        // Adding elements based on conditions\n        if (appleCount > 0) {\n            multiset.add(\"grape\", 3);\n        }\n\n        // Final operations\n        System.out.println(\"Grape count: \" + multiset.count(\"grape\"));\n    }\n}",
    "java_code_simple": "import com.google.common.collect.LinkedHashMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashMultiset<String> multiset = LinkedHashMultiset.create();\n        /* write */ multiset.add(\"apple\");\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.LinkedHashMultiset",
        "read_method": "count"
    }
}