{
    "java_code": "import com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeRangeSet<Integer> rangeSet = TreeRangeSet.create();\n        ImmutableList<Integer> list = ImmutableList.of(1, 2, 3, 4, 5);\n        \n        // Create a map to store some key-value pairs\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n        \n        // Perform some calculations\n        int sum = 0;\n        for (Integer number : list) {\n            sum += number;\n        }\n        \n        // Output the sum of the list\n        System.out.println(\"Sum of list: \" + sum);\n        \n        // Add a range to the rangeSet\n        /* write */ rangeSet.add(Range.closed(1, 10));\n        \n        // Perform some operations on the map\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Check if a value is contained within the rangeSet\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(\"RangeSet contains 5: \" + containsValue);\n        \n        // Additional operations\n        rangeSet.add(Range.closed(11, 20));\n        boolean containsAnotherValue = rangeSet.contains(15);\n        System.out.println(\"RangeSet contains 15: \" + containsAnotherValue);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeRangeSet<Integer> rangeSet = TreeRangeSet.create();\n        /* write */ rangeSet.add(Range.closed(1, 10));\n        /* read */ boolean containsValue = rangeSet.contains(5);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.TreeRangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.TreeRangeSet",
        "read_method": "contains"
    }
}