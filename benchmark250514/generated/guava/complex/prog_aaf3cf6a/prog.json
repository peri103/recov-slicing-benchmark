{
    "java_code": "import com.google.common.collect.ClassToInstanceMap;\nimport com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableMap;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original ClassToInstanceMap usage\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        /* write */ map.putInstance(Integer.class, 42);\n\n        // Additional unrelated code to make the program more complex\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"key1\", \"value1\");\n        stringMap.put(\"key2\", \"value2\");\n\n        ImmutableMap<String, String> immutableStringMap = ImmutableMap.copyOf(stringMap);\n        System.out.println(\"Immutable Map: \" + immutableStringMap);\n\n        // Simulating additional operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // More map operations\n        Map<String, Integer> numberMap = new HashMap<>();\n        numberMap.put(\"one\", 1);\n        numberMap.put(\"two\", 2);\n        numberMap.put(\"three\", 3);\n\n        for (Map.Entry<String, Integer> entry : numberMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Reading from the original ClassToInstanceMap\n        /* read */ Integer value = map.getInstance(Integer.class);\n        System.out.println(value);\n\n        // Additional unrelated logic\n        int factorial = 1;\n        for (int i = 1; i <= 5; i++) {\n            factorial *= i;\n        }\n        System.out.println(\"Factorial of 5: \" + factorial);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ClassToInstanceMap;\nimport com.google.common.collect.MutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        /* write */ map.putInstance(Integer.class, 42);\n        /* read */ Integer value = map.getInstance(Integer.class);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.ClassToInstanceMap",
        "read_method": "getInstance"
    }
}