{
    "java_code": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing an ImmutableBiMap builder\n        ImmutableBiMap.Builder<String, String> builder = new ImmutableBiMap.Builder<>();\n\n        // Adding some unrelated complex logic\n        Map<String, Integer> countMap = new HashMap<>();\n        countMap.put(\"apple\", 3);\n        countMap.put(\"banana\", 2);\n        countMap.put(\"orange\", 5);\n\n        int totalFruits = 0;\n        for (Map.Entry<String, Integer> entry : countMap.entrySet()) {\n            totalFruits += entry.getValue();\n        }\n        System.out.println(\"Total number of fruits: \" + totalFruits);\n\n        // Using the builder to add a key-value pair\n        /* write */ builder.put(\"key\", \"value\");\n\n        // More unrelated logic\n        ImmutableMap<String, Integer> priceMap = ImmutableMap.of(\n            \"apple\", 100,\n            \"banana\", 50,\n            \"orange\", 80\n        );\n\n        int totalPrice = 0;\n        for (String fruit : countMap.keySet()) {\n            totalPrice += countMap.get(fruit) * priceMap.get(fruit);\n        }\n        System.out.println(\"Total price of fruits: \" + totalPrice);\n\n        // Building the ImmutableBiMap\n        ImmutableBiMap<String, String> biMap = builder.build();\n\n        // Further unrelated complex logic\n        Map<String, String> reverseMap = new HashMap<>();\n        for (Map.Entry<String, String> entry : biMap.entrySet()) {\n            reverseMap.put(entry.getValue(), entry.getKey());\n        }\n\n        System.out.println(\"Reverse map: \" + reverseMap);\n\n        // Retrieving the value using the key\n        /* read */ String value = biMap.get(\"key\");\n        System.out.println(\"Retrieved value: \" + value);\n\n        // Additional logic to ensure complexity\n        if (reverseMap.containsKey(\"value\")) {\n            System.out.println(\"Reverse map contains 'value' with key: \" + reverseMap.get(\"value\"));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableBiMap.Builder<String, String> builder = new ImmutableBiMap.Builder<>();\n        /* write */ builder.put(\"key\", \"value\");\n        ImmutableBiMap<String, String> biMap = builder.build();\n        /* read */ String value = biMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    }
}