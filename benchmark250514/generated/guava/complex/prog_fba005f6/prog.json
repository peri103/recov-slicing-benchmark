{
    "java_code": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\nimport com.google.common.collect.ImmutableRangeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n        RangeSet<Integer> anotherRangeSet = TreeRangeSet.create();\n        \n        /* write */ rangeSet.add(Range.closed(1, 10));\n        \n        anotherRangeSet.add(Range.closedOpen(15, 20));\n        anotherRangeSet.add(Range.openClosed(25, 30));\n        \n        boolean containsInAnother = anotherRangeSet.contains(18);\n        System.out.println(\"Another RangeSet contains 18: \" + containsInAnother);\n        \n        RangeSet<Integer> immutableRangeSet = ImmutableRangeSet.copyOf(rangeSet);\n        boolean containsInImmutable = immutableRangeSet.contains(7);\n        System.out.println(\"Immutable RangeSet contains 7: \" + containsInImmutable);\n        \n        for (int i = 0; i <= 35; i += 5) {\n            boolean contains = rangeSet.contains(i);\n            System.out.println(\"RangeSet contains \" + i + \": \" + contains);\n        }\n        \n        /* read */ boolean contains = rangeSet.contains(5);\n        System.out.println(\"Original RangeSet contains 5: \" + contains);\n        \n        RangeSet<Integer> mergedRangeSet = TreeRangeSet.create();\n        mergedRangeSet.addAll(rangeSet);\n        mergedRangeSet.addAll(anotherRangeSet);\n        \n        for (int i = 0; i <= 35; i += 5) {\n            boolean containsInMerged = mergedRangeSet.contains(i);\n            System.out.println(\"Merged RangeSet contains \" + i + \": \" + containsInMerged);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.Range;\nimport com.google.common.collect.RangeSet;\nimport com.google.common.collect.TreeRangeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n        /* write */ rangeSet.add(Range.closed(1, 10));\n        /* read */ boolean contains = rangeSet.contains(5);\n        System.out.println(contains);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.RangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.RangeSet",
        "read_method": "contains"
    }
}