{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the ImmutableSortedSet using its builder\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.builder();\n        \n        /* write */ builder.add(1);\n        \n        // Additional code to make the program more complex\n        ImmutableList.Builder<String> listBuilder = ImmutableList.builder();\n        listBuilder.add(\"apple\").add(\"banana\").add(\"cherry\");\n        ImmutableList<String> fruitList = listBuilder.build();\n        \n        Map<String, Integer> fruitPrices = new HashMap<>();\n        fruitPrices.put(\"apple\", 100);\n        fruitPrices.put(\"banana\", 50);\n        fruitPrices.put(\"cherry\", 75);\n        \n        for (String fruit : fruitList) {\n            System.out.println(\"Fruit: \" + fruit + \", Price: \" + fruitPrices.get(fruit));\n        }\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> set = builder.build();\n        \n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n        \n        /* read */ boolean containsValue = set.contains(1);\n        \n        System.out.println(containsValue); // This should print true\n        \n        // More unrelated operations\n        for (int i = 0; i < fruitList.size(); i++) {\n            System.out.println(\"Index \" + i + \": \" + fruitList.get(i));\n        }\n        \n        // Final operations\n        fruitPrices.forEach((key, value) -> {\n            System.out.println(\"Fruit: \" + key + \", Value: \" + value);\n        });\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the ImmutableSortedSet using its builder\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.builder();\n        \n        /* write */ builder.add(1);\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> set = builder.build();\n        \n        /* read */ boolean containsValue = set.contains(1);\n        \n        System.out.println(containsValue); // This should print true\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}