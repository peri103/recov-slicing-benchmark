{
    "java_code": "import com.google.common.collect.ImmutableSortedMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a simple HashMap and populate it with data\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n        hashMap.put(\"C\", \"Cherry\");\n\n        // Print all elements in the HashMap\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Create an ImmutableSortedMap using the 'of' method\n        /* write */ ImmutableSortedMap<String, Integer> map = ImmutableSortedMap.of(\"key1\", 100, \"key2\", 200);\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Create another ImmutableSortedMap for demonstration\n        ImmutableSortedMap<String, Integer> anotherMap = ImmutableSortedMap.of(\"keyA\", 300, \"keyB\", 400);\n\n        // Print values from the new map\n        System.out.println(\"Value for keyA: \" + anotherMap.get(\"keyA\"));\n        System.out.println(\"Value for keyB: \" + anotherMap.get(\"keyB\"));\n\n        // Read a value from the original map using the 'get' method\n        /* read */ Integer value = map.get(\"key1\");\n        \n        // Print the value to verify the read operation\n        System.out.println(value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an ImmutableSortedMap using the 'of' method\n        /* write */ ImmutableSortedMap<String, Integer> map = ImmutableSortedMap.of(\"key1\", 100, \"key2\", 200);\n\n        // Read a value from the map using the 'get' method\n        /* read */ Integer value = map.get(\"key1\");\n        \n        // Print the value to verify the read operation\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMap",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableSortedMap",
        "read_method": "get"
    }
}