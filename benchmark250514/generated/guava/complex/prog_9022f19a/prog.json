{
    "java_code": "import com.google.common.collect.HashBiMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a HashBiMap for the main task\n        HashBiMap<String, Integer> biMap = HashBiMap.create();\n\n        // Initialize a HashMap for additional complexity\n        HashMap<String, String> hashMap = new HashMap<>();\n\n        // Populate the HashMap with some data\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n        hashMap.put(\"C\", \"Cherry\");\n\n        // Perform some operations on the HashMap\n        for (String key : hashMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + hashMap.get(key));\n        }\n\n        // More operations on the HashMap\n        String removedValue = hashMap.remove(\"B\");\n        System.out.println(\"Removed value: \" + removedValue);\n\n        // Add more entries to HashBiMap\n        biMap.put(\"key2\", 200);\n        biMap.put(\"key3\", 300);\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int num : biMap.values()) {\n            sum += num;\n        }\n        System.out.println(\"Sum of values in biMap: \" + sum);\n\n        // Write operation on the HashBiMap\n        /* write */ biMap.put(\"key1\", 100);\n\n        // Perform some unrelated logic\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 numbers: \" + product);\n\n        // Read operation on the HashBiMap\n        /* read */ Integer value = biMap.get(\"key1\");\n        System.out.println(\"Value for 'key1': \" + value);\n\n        // Additional operations for complexity\n        for (String key : biMap.keySet()) {\n            System.out.println(\"BiMap Key: \" + key + \", Value: \" + biMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> biMap = HashBiMap.create();\n        /* write */ biMap.put(\"key1\", 100);\n        /* read */ Integer value = biMap.get(\"key1\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.HashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.HashBiMap",
        "read_method": "get"
    }
}