{
    "java_code": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        /* write */ builder.put(\"one\", 1);\n        \n        // Create a HashMap and populate it with some values\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"apple\", \"fruit\");\n        hashMap.put(\"carrot\", \"vegetable\");\n        \n        // Create an ImmutableMap from the HashMap\n        ImmutableMap<String, String> immutableMap = ImmutableMap.copyOf(hashMap);\n        \n        // Retrieve and print values from the ImmutableMap\n        System.out.println(\"apple is a \" + immutableMap.get(\"apple\"));\n        System.out.println(\"carrot is a \" + immutableMap.get(\"carrot\"));\n        \n        // Perform some operations on the HashMap\n        hashMap.put(\"banana\", \"fruit\");\n        hashMap.remove(\"carrot\");\n        \n        // Build the ImmutableBiMap\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        // Perform some unrelated operations\n        int sum = 0;\n        for (Integer value : biMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in biMap: \" + sum);\n        \n        /* read */ Integer value = biMap.get(\"one\");\n        \n        // Output the value retrieved\n        System.out.println(value);\n        \n        // Further manipulate the HashMap\n        hashMap.put(\"potato\", \"vegetable\");\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \" is a \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        /* write */ builder.put(\"one\", 1);\n        \n        // Build the ImmutableBiMap\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        /* read */ Integer value = biMap.get(\"one\");\n        \n        // Output the value retrieved\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    }
}