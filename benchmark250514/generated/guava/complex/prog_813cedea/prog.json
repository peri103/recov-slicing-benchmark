{
    "java_code": "import com.google.common.collect.ImmutableMap;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an immutable map with a key-value pair\n        /* write */ ImmutableMap<String, Integer> map = ImmutableMap.of(\"key1\", 1);\n\n        // Create an immutable list\n        ImmutableList<String> list = ImmutableList.of(\"item1\", \"item2\", \"item3\");\n\n        // Perform some operations on the list\n        for (String item : list) {\n            System.out.println(\"List item: \" + item);\n        }\n\n        // Perform an unrelated calculation\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Check if the map contains the key \"key1\"\n        /* read */ boolean containsKey = map.containsKey(\"key1\");\n        \n        System.out.println(\"Map contains 'key1': \" + containsKey);\n\n        // Create another immutable map\n        ImmutableMap<String, String> anotherMap = ImmutableMap.of(\"keyA\", \"valueA\", \"keyB\", \"valueB\");\n\n        // Perform operations on the new map\n        for (String key : anotherMap.keySet()) {\n            System.out.println(\"Another map key: \" + key + \", value: \" + anotherMap.get(key));\n        }\n\n        // Perform a different calculation\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an immutable map with a key-value pair\n        /* write */ ImmutableMap<String, Integer> map = ImmutableMap.of(\"key1\", 1);\n\n        // Check if the map contains the key \"key1\"\n        /* read */ boolean containsKey = map.containsKey(\"key1\");\n        \n        System.out.println(containsKey);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMap",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableMap",
        "read_method": "containsKey"
    }
}