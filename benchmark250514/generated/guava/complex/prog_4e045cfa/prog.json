{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.builder();\n        ImmutableList.Builder<String> stringBuilder = ImmutableList.builder();\n        \n        // Adding elements to the ImmutableSortedSet builder\n        builder.add(42);\n        builder.add(100);\n        builder.add(5);\n        \n        // Adding elements to the ImmutableList builder\n        stringBuilder.add(\"Hello\");\n        stringBuilder.add(\"World\");\n        \n        // Building the ImmutableList\n        ImmutableList<String> stringList = stringBuilder.build();\n        \n        // Using the ImmutableList\n        for (String str : stringList) {\n            System.out.println(str);\n        }\n        \n        // Building the ImmutableSortedSet\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        \n        // Performing operations on the ImmutableSortedSet\n        for (Integer num : sortedSet) {\n            System.out.println(\"Number: \" + num);\n        }\n        \n        // Some unrelated computation\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers 0 to 9: \" + sum);\n        \n        // More complex logic\n        int max = Integer.MIN_VALUE;\n        for (int num : sortedSet) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        System.out.println(\"Max number in the set: \" + max);\n        \n        // Check if the set contains a specific value\n        /* read */ boolean containsValue = sortedSet.contains(42);\n        System.out.println(\"Does the set contain 42? \" + containsValue);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.builder();\n        /* write */ builder.add(42);\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        /* read */ boolean containsValue = sortedSet.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}