{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an ImmutableSortedSet\n        ImmutableSortedSet<Integer> set = ImmutableSortedSet.of(1, 2, 3, 4, 5); // /* write */\n\n        // Perform some unrelated operations\n        ImmutableList<String> names = ImmutableList.of(\"Alice\", \"Bob\", \"Charlie\");\n        for (String name : names) {\n            System.out.println(\"Name: \" + name);\n        }\n\n        // Create another ImmutableSortedSet\n        ImmutableSortedSet<String> stringSet = ImmutableSortedSet.of(\"apple\", \"banana\", \"cherry\");\n        if (stringSet.contains(\"banana\")) {\n            System.out.println(\"StringSet contains banana\");\n        }\n\n        // More unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Check if the original set contains a specific value\n        boolean containsValue = set.contains(3); // /* read */\n        System.out.println(\"Original set contains 3: \" + containsValue);\n\n        // Additional unrelated operations\n        ImmutableList<Integer> numbers = ImmutableList.of(10, 20, 30, 40, 50);\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n\n        // Final operation\n        if (set.contains(5)) {\n            System.out.println(\"Original set contains 5\");\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableSortedSet<Integer> set = ImmutableSortedSet.of(1, 2, 3, 4, 5); // /* write */\n        boolean containsValue = set.contains(3); // /* read */\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}