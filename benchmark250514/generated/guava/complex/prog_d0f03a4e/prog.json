{
    "java_code": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        ImmutableMap<Class<?>, Object> additionalMap = ImmutableMap.of(Integer.class, 42, Double.class, 3.14);\n\n        // Insert some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Use another ImmutableClassToInstanceMap\n        Builder<Object> anotherBuilder = ImmutableClassToInstanceMap.builder();\n        anotherBuilder.putAll(additionalMap);\n        ImmutableClassToInstanceMap<Object> anotherMap = anotherBuilder.build();\n\n        // Perform operations with the new map\n        Integer intValue = anotherMap.getInstance(Integer.class);\n        Double doubleValue = anotherMap.getInstance(Double.class);\n        System.out.println(\"Integer value: \" + intValue);\n        System.out.println(\"Double value: \" + doubleValue);\n\n        // Continue with original write-read pair\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.put(String.class, \"Hello, World!\").build();\n\n        // More unrelated operations\n        String[] words = {\"Java\", \"Guava\", \"Immutable\"};\n        for (String word : words) {\n            System.out.println(\"Word: \" + word);\n        }\n\n        // Final read operation\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableClassToInstanceMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        /* write */ ImmutableClassToInstanceMap<Object> map = builder.put(String.class, \"Hello, World!\").build();\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}