{
    "java_code": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.reflect.TypeToken;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        Map<String, Integer> additionalMap = new HashMap<>();\n        additionalMap.put(\"One\", 1);\n        additionalMap.put(\"Two\", 2);\n\n        // Complex operation on additionalMap\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : additionalMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in additionalMap: \" + sum);\n\n        /* write */ map.putInstance(String.class, \"Hello, World!\");\n\n        // More complex operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n\n        // Use another MutableClassToInstanceMap for different data types\n        MutableClassToInstanceMap<Object> anotherMap = MutableClassToInstanceMap.create();\n        anotherMap.putInstance(Integer.class, 42);\n        anotherMap.putInstance(Double.class, 3.14);\n\n        // Retrieve and print values from anotherMap\n        Integer intValue = anotherMap.getInstance(Integer.class);\n        Double doubleValue = anotherMap.getInstance(Double.class);\n        System.out.println(\"Integer value from anotherMap: \" + intValue);\n        System.out.println(\"Double value from anotherMap: \" + doubleValue);\n\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.reflect.TypeToken;\n\npublic class Main {\n    public static void main(String[] args) {\n        MutableClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        /* write */ map.putInstance(String.class, \"Hello, World!\");\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.MutableClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.MutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}