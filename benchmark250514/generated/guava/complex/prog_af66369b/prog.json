{
    "java_code": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader;\nimport java.util.concurrent.ExecutionException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LoadingCache instance\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, Integer>() {\n                    public Integer load(String key) {\n                        return -1; // Default behavior if key is not found\n                    }\n                });\n\n        // Create a HashMap to store additional data\n        Map<String, String> additionalData = new HashMap<>();\n        additionalData.put(\"name\", \"Alice\");\n        additionalData.put(\"city\", \"Wonderland\");\n\n        // Perform some operations on the HashMap\n        if (additionalData.containsKey(\"name\")) {\n            System.out.println(\"Name found: \" + additionalData.get(\"name\"));\n        }\n        \n        // Put a value in the cache\n        /* write */ cache.put(\"key\", 42);\n\n        // Perform more operations on the HashMap\n        additionalData.put(\"occupation\", \"Explorer\");\n        if (additionalData.containsKey(\"city\")) {\n            System.out.println(\"City found: \" + additionalData.get(\"city\"));\n        }\n\n        // Retrieve the value from the cache\n        try {\n            /* read */ Integer value = cache.get(\"key\");\n            System.out.println(\"Value from cache: \" + value);\n        } catch (ExecutionException e) {\n            System.out.println(\"Error reading from cache: \" + e.getMessage());\n        }\n\n        // Further operations on the HashMap\n        additionalData.remove(\"occupation\");\n        System.out.println(\"Final data in HashMap: \" + additionalData);\n    }\n}",
    "java_code_simple": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader;\nimport java.util.concurrent.ExecutionException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LoadingCache instance\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, Integer>() {\n                    public Integer load(String key) {\n                        return null; // Default behavior if key is not found\n                    }\n                });\n\n        // Put a value in the cache\n        /* write */ cache.put(\"key\", 42);\n\n        try {\n            // Retrieve the value from the cache\n            /* read */ Integer value = cache.get(\"key\");\n            System.out.println(value);\n        } catch (ExecutionException e) {\n            System.out.println(\"Error reading from cache: \" + e.getMessage());\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.LoadingCache",
        "write_method": "put",
        "read_class": "com.google.common.cache.LoadingCache",
        "read_method": "get"
    }
}