{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        ImmutableSortedSet.Builder<Integer> anotherBuilder = ImmutableSortedSet.naturalOrder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(5);\n        \n        // Add more elements to another builder\n        anotherBuilder.add(10).add(20).add(30);\n        \n        // Build the ImmutableSortedSets\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        ImmutableSortedSet<Integer> anotherSortedSet = anotherBuilder.build();\n        \n        // Unrelated operations\n        int sum = 0;\n        for (Integer num : anotherSortedSet) {\n            sum += num;\n        }\n        System.out.println(\"Sum of elements in anotherSortedSet: \" + sum);\n        \n        // More unrelated operations\n        ImmutableSet<String> stringSet = ImmutableSet.of(\"apple\", \"banana\", \"cherry\");\n        for (String fruit : stringSet) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        // Check if the set contains the element\n        /* read */ boolean contains = sortedSet.contains(5);\n        \n        // Print the result\n        System.out.println(\"Does sortedSet contain 5? \" + contains);\n        \n        // Further unrelated operations\n        ImmutableSortedSet<Integer> combinedSet = ImmutableSortedSet.<Integer>naturalOrder()\n                .addAll(sortedSet)\n                .addAll(anotherSortedSet)\n                .build();\n        \n        System.out.println(\"Combined Set: \" + combinedSet);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(5);\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        \n        // Check if the set contains the element\n        /* read */ boolean contains = sortedSet.contains(5);\n        \n        // Print the result\n        System.out.println(contains);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}