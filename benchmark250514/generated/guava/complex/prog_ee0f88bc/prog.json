{
    "java_code": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map using MutableClassToInstanceMap\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        \n        // Initialize a HashMap for additional complexity\n        Map<Integer, String> hashMap = new HashMap<>();\n        \n        // Populate the HashMap with some values\n        hashMap.put(1, \"One\");\n        hashMap.put(2, \"Two\");\n        hashMap.put(3, \"Three\");\n        \n        // Perform operations on the HashMap\n        for (Map.Entry<Integer, String> entry : hashMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Use the write method to store a value in the MutableClassToInstanceMap\n        /* write */ map.putInstance(String.class, \"Hello, World!\");\n        \n        // Perform additional operations to increase complexity\n        int sumKeys = 0;\n        for (Integer key : hashMap.keySet()) {\n            sumKeys += key;\n        }\n        System.out.println(\"Sum of keys: \" + sumKeys);\n        \n        // Use the read method to retrieve the stored value\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n        \n        // Further operations with HashMap\n        hashMap.put(4, \"Four\");\n        hashMap.remove(2);\n        \n        // Display updated HashMap\n        for (Map.Entry<Integer, String> entry : hashMap.entrySet()) {\n            System.out.println(\"Updated Key: \" + entry.getKey() + \", Updated Value: \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.MutableClassToInstanceMap;\nimport com.google.common.collect.ClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ClassToInstanceMap<Object> map = MutableClassToInstanceMap.create();\n        /* write */ map.putInstance(String.class, \"Hello, World!\");\n        /* read */ String value = map.getInstance(String.class);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.MutableClassToInstanceMap",
        "write_method": "putInstance",
        "read_class": "com.google.common.collect.MutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}