{
    "java_code": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableSortedMultiset.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedMultiset\n        Builder<String> builder = ImmutableSortedMultiset.builder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Create a HashMap to store some data\n        Map<String, Integer> fruitMap = new HashMap<>();\n        fruitMap.put(\"apple\", 10);\n        fruitMap.put(\"banana\", 5);\n        fruitMap.put(\"cherry\", 7);\n        \n        // Perform some operations on the HashMap\n        fruitMap.put(\"banana\", fruitMap.get(\"banana\") + 2);\n        fruitMap.put(\"cherry\", fruitMap.get(\"cherry\") - 1);\n        \n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<String> multiset = builder.build();\n        \n        // Perform some unrelated logic\n        int totalFruits = 0;\n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            totalFruits += entry.getValue();\n        }\n        \n        // Print the total number of fruits\n        System.out.println(\"Total fruits: \" + totalFruits);\n        \n        // Read the count of a specific element\n        /* read */ int count = multiset.count(\"apple\");\n        \n        // Print the count\n        System.out.println(\"Count of apples in multiset: \" + count);\n        \n        // Perform additional operations on the HashMap\n        fruitMap.put(\"apple\", fruitMap.get(\"apple\") + count);\n        fruitMap.put(\"banana\", fruitMap.get(\"banana\") + 1);\n        \n        // Print the updated map\n        System.out.println(\"Updated fruit map: \" + fruitMap);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableSortedMultiset.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedMultiset\n        Builder<String> builder = ImmutableSortedMultiset.builder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<String> multiset = builder.build();\n        \n        // Read the count of a specific element\n        /* read */ int count = multiset.count(\"apple\");\n        \n        // Print the count\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedMultiset",
        "read_method": "count"
    }
}