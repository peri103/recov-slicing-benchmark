{
    "java_code": "import com.google.common.collect.ImmutableListMultimap;\nimport com.google.common.collect.ImmutableSetMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        ImmutableListMultimap.Builder<String, String> builder = ImmutableListMultimap.builder();\n        \n        // Additional code using ImmutableSetMultimap\n        ImmutableSetMultimap.Builder<String, Integer> setBuilder = ImmutableSetMultimap.builder();\n        setBuilder.put(\"numbers\", 1);\n        setBuilder.put(\"numbers\", 2);\n        ImmutableSetMultimap<String, Integer> setMultimap = setBuilder.build();\n        System.out.println(\"SetMultimap values for 'numbers': \" + setMultimap.get(\"numbers\"));\n\n        // More complex operations\n        for (int i = 0; i < 5; i++) {\n            setBuilder.put(\"numbers\", i * 10);\n        }\n        ImmutableSetMultimap<String, Integer> updatedSetMultimap = setBuilder.build();\n        System.out.println(\"Updated SetMultimap values for 'numbers': \" + updatedSetMultimap.get(\"numbers\"));\n\n        /* write */ builder.put(\"key\", \"value\");\n        ImmutableListMultimap<String, String> multimap = builder.build();\n\n        // Additional unrelated logic\n        int sum = 0;\n        for (Integer number : updatedSetMultimap.get(\"numbers\")) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        /* read */ String value = multimap.get(\"key\").get(0);\n        System.out.println(\"Value from ListMultimap: \" + value);\n\n        // Further unrelated logic\n        int product = 1;\n        for (Integer number : setMultimap.get(\"numbers\")) {\n            product *= number;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableListMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableListMultimap.Builder<String, String> builder = ImmutableListMultimap.builder();\n        /* write */ builder.put(\"key\", \"value\");\n        ImmutableListMultimap<String, String> multimap = builder.build();\n        /* read */ String value = multimap.get(\"key\").get(0);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableListMultimap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableListMultimap",
        "read_method": "get"
    }
}