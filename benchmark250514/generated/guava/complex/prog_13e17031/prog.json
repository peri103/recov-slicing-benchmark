{
    "java_code": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a concrete implementation of ForwardingMap\n        ForwardingMap<String, Integer> map = new ForwardingMap<String, Integer>() {\n            private final Map<String, Integer> delegate = new HashMap<>();\n\n            @Override\n            protected Map<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        // Use the write method to add an element to the map\n        /* write */ map.put(\"key\", 42);\n\n        // Create another map and perform some operations\n        Map<String, String> anotherMap = new HashMap<>();\n        anotherMap.put(\"name\", \"Alice\");\n        anotherMap.put(\"city\", \"Wonderland\");\n\n        // Perform some operations on the anotherMap\n        String name = anotherMap.get(\"name\");\n        System.out.println(\"Name: \" + name);\n\n        // Create a list and add elements to it\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Print elements of the list\n        for (Integer num : list) {\n            System.out.println(\"List element: \" + num);\n        }\n\n        // Perform some complex operations\n        int sum = 0;\n        for (Integer num : list) {\n            sum += num;\n        }\n        System.out.println(\"Sum of list elements: \" + sum);\n\n        // Use the read method to retrieve the element from the map\n        /* read */ Integer value = map.get(\"key\");\n\n        // Print the value to ensure it was correctly read\n        System.out.println(\"Value from map: \" + value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a concrete implementation of ForwardingMap\n        ForwardingMap<String, Integer> map = new ForwardingMap<String, Integer>() {\n            private final Map<String, Integer> delegate = new HashMap<>();\n\n            @Override\n            protected Map<String, Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        // Use the write method to add an element to the map\n        /* write */ map.put(\"key\", 42);\n\n        // Use the read method to retrieve the element from the map\n        /* read */ Integer value = map.get(\"key\");\n\n        // Print the value to ensure it was correctly read\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingMap",
        "read_method": "get"
    }
}