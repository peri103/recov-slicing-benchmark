{
    "java_code": "import com.google.common.collect.ImmutableSortedMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing a builder for ImmutableSortedMap\n        ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n        \n        // Adding a key-value pair using the write method\n        /* write */ builder.put(\"key\", 1);\n        \n        // Adding more elements to a regular HashMap\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"alpha\", 100);\n        hashMap.put(\"beta\", 200);\n        \n        // Performing operations on the HashMap\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in HashMap: \" + sum);\n        \n        // Building the ImmutableSortedMap\n        ImmutableSortedMap<String, Integer> map = builder.build();\n        \n        // Performing additional operations before reading\n        int maxValue = Integer.MIN_VALUE;\n        for (Integer value : hashMap.values()) {\n            if (value > maxValue) {\n                maxValue = value;\n            }\n        }\n        System.out.println(\"Maximum value in HashMap: \" + maxValue);\n        \n        // Reading the value using the read method\n        /* read */ int value = map.get(\"key\");\n        \n        // Outputting the result\n        System.out.println(\"Value from ImmutableSortedMap: \" + value);\n        \n        // Additional operations with arrays\n        int[] numbers = {5, 10, 15, 20};\n        int total = 0;\n        for (int number : numbers) {\n            total += number;\n        }\n        System.out.println(\"Total sum of array elements: \" + total);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n        /* write */ builder.put(\"key\", 1);\n        \n        ImmutableSortedMap<String, Integer> map = builder.build();\n        /* read */ int value = map.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableSortedMap",
        "read_method": "get"
    }
}