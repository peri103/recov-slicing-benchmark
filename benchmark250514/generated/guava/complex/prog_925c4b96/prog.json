{
    "java_code": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader;\nimport java.util.concurrent.ExecutionException;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CacheLoader to provide default values when keys are not present\n        CacheLoader<String, Integer> loader = new CacheLoader<>() {\n            public Integer load(String key) {\n                return null; // Return null for missing keys\n            }\n        };\n\n        // Initialize the LoadingCache with the CacheLoader\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n                .build(loader);\n\n        // Create a HashMap for additional complexity\n        HashMap<String, String> map = new HashMap<>();\n        map.put(\"name\", \"John Doe\");\n        map.put(\"occupation\", \"Developer\");\n\n        // Perform operations on HashMap\n        String name = map.get(\"name\");\n        System.out.println(\"Name: \" + name);\n        map.put(\"name\", \"Jane Doe\");\n        String occupation = map.get(\"occupation\");\n        System.out.println(\"Occupation: \" + occupation);\n\n        // Write a value to the cache\n        /* write */ cache.put(\"key1\", 123);\n\n        // Perform more operations on HashMap\n        map.put(\"location\", \"New York\");\n        String location = map.get(\"location\");\n        System.out.println(\"Location: \" + location);\n        map.remove(\"occupation\");\n        map.put(\"occupation\", \"Engineer\");\n        System.out.println(\"Updated Occupation: \" + map.get(\"occupation\"));\n\n        // Read the value from the cache\n        try {\n            /* read */ Integer value = cache.get(\"key1\");\n            System.out.println(\"Cache Value: \" + value);\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n\n        // Further operations on HashMap\n        map.put(\"project\", \"Guava Cache\");\n        System.out.println(\"Project: \" + map.get(\"project\"));\n        map.put(\"status\", \"Active\");\n        System.out.println(\"Status: \" + map.get(\"status\"));\n    }\n}",
    "java_code_simple": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader;\nimport java.util.concurrent.ExecutionException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CacheLoader to provide default values when keys are not present\n        CacheLoader<String, Integer> loader = new CacheLoader<>() {\n            public Integer load(String key) {\n                return null; // Return null for missing keys\n            }\n        };\n\n        // Initialize the LoadingCache with the CacheLoader\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n                .build(loader);\n\n        // Write a value to the cache\n        /* write */ cache.put(\"key1\", 123);\n\n        // Read the value from the cache\n        try {\n            /* read */ Integer value = cache.get(\"key1\");\n            System.out.println(value);\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.LoadingCache",
        "write_method": "put",
        "read_class": "com.google.common.cache.LoadingCache",
        "read_method": "get"
    }
}