{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a map and a TreeSet\n        Map<String, Integer> map = new HashMap<>();\n        TreeSet<String> treeSet = new TreeSet<>();\n\n        // Add elements to the map\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n\n        // Add elements to the TreeSet\n        treeSet.add(\"Alpha\");\n        treeSet.add(\"Beta\");\n\n        // Perform operations on map\n        if (map.containsKey(\"Two\")) {\n            System.out.println(\"Map contains key 'Two'\");\n        }\n\n        // Perform operations on TreeSet\n        if (treeSet.contains(\"Alpha\")) {\n            System.out.println(\"TreeSet contains 'Alpha'\");\n        }\n\n        // Create an ImmutableSortedSet builder\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        /* write */ builder.add(1);\n\n        // Perform more operations on map\n        map.put(\"Four\", 4);\n        map.remove(\"One\");\n\n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> set = builder.build();\n\n        // Perform more operations on TreeSet\n        treeSet.add(\"Gamma\");\n        treeSet.remove(\"Beta\");\n\n        // Check if the set contains the value written earlier\n        /* read */ boolean containsValue = set.contains(1);\n        System.out.println(containsValue);\n\n        // Iterate and print map values\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Iterate and print TreeSet values\n        for (String value : treeSet) {\n            System.out.println(\"TreeSet value: \" + value);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        /* write */ builder.add(1);\n        ImmutableSortedSet<Integer> set = builder.build();\n        /* read */ boolean containsValue = set.contains(1);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}