{
    "java_code": "import com.google.common.collect.ForwardingSortedSet;\nimport java.util.TreeSet;\nimport java.util.HashSet;\nimport java.util.Iterator;\n\npublic class Main {\n    public static void main(String[] args) {\n        ForwardingSortedSet<Integer> set = new ForwardingSortedSet<>() {\n            private final TreeSet<Integer> delegate = new TreeSet<>();\n\n            @Override\n            protected TreeSet<Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        HashSet<Integer> auxiliarySet = new HashSet<>();\n        auxiliarySet.add(100);\n        auxiliarySet.add(200);\n        auxiliarySet.add(300);\n\n        Iterator<Integer> iterator = auxiliarySet.iterator();\n        while (iterator.hasNext()) {\n            set.add(iterator.next() * 2);\n        }\n\n        /* write */ set.add(42);\n\n        int sum = 0;\n        for (Integer num : set) {\n            sum += num;\n        }\n        System.out.println(\"Sum of elements in set: \" + sum);\n\n        boolean isPresent = false;\n        for (Integer num : auxiliarySet) {\n            if (set.contains(num)) {\n                isPresent = true;\n                break;\n            }\n        }\n        \n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"Set contains 42: \" + containsValue);\n\n        System.out.println(\"Auxiliary set contains a value from the main set: \" + isPresent);\n\n        for (Integer num : set) {\n            System.out.println(\"Value in set: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingSortedSet;\nimport java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ForwardingSortedSet<Integer> set = new ForwardingSortedSet<>() {\n            private final TreeSet<Integer> delegate = new TreeSet<>();\n\n            @Override\n            protected TreeSet<Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ set.add(42);\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSortedSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingSortedSet",
        "read_method": "contains"
    }
}