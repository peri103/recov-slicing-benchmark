{
    "java_code": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\nimport com.google.common.collect.HashBasedTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        Table<Integer, Integer, String> table = TreeBasedTable.create();\n        Table<Integer, Integer, String> anotherTable = HashBasedTable.create();\n        \n        // Initializing values in anotherTable\n        anotherTable.put(2, 2, \"World\");\n        anotherTable.put(3, 3, \"Java\");\n        \n        // Adding more complexity with operations on anotherTable\n        String anotherValue = anotherTable.get(2, 2);\n        System.out.println(\"Value from anotherTable: \" + anotherValue);\n        \n        for (int i = 0; i < 5; i++) {\n            anotherTable.put(i, i, \"Value \" + i);\n        }\n\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"AnotherTable value at (\" + i + \",\" + i + \"): \" + anotherTable.get(i, i));\n        }\n        \n        // Operations on the original table\n        /* write */ table.put(1, 1, \"Hello\");\n        \n        // Performing unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n        \n        // Further operations on anotherTable\n        anotherTable.put(4, 4, \"Complexity\");\n        System.out.println(\"AnotherTable value at (4,4): \" + anotherTable.get(4, 4));\n        \n        /* read */ String value = table.get(1, 1);\n        System.out.println(value);\n        \n        // Additional unrelated complexity\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        Table<Integer, Integer, String> table = TreeBasedTable.create();\n        /* write */ table.put(1, 1, \"Hello\");\n        /* read */ String value = table.get(1, 1);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.TreeBasedTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.TreeBasedTable",
        "read_method": "get"
    }
}