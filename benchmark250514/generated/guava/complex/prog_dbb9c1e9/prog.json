{
    "java_code": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of ImmutableClassToInstanceMap with a mapping\n        ImmutableClassToInstanceMap<String> map = /* write */ ImmutableClassToInstanceMap.of(String.class, \"Hello, World!\");\n\n        // Create a HashMap to store integer mappings\n        Map<Integer, String> integerMap = new HashMap<>();\n        integerMap.put(1, \"One\");\n        integerMap.put(2, \"Two\");\n\n        // Create an ImmutableMap from the HashMap\n        ImmutableMap<Integer, String> immutableIntegerMap = ImmutableMap.copyOf(integerMap);\n\n        // Perform operations on the immutable map\n        for (Integer key : immutableIntegerMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + immutableIntegerMap.get(key));\n        }\n\n        // Perform some unrelated operations\n        int number = 42;\n        double result = Math.sqrt(number);\n        System.out.println(\"Square root of \" + number + \" is \" + result);\n\n        // Retrieve the value using getInstance method\n        /* read */ String value = map.getInstance(String.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n\n        // More unrelated operations\n        Map<Double, Double> squareMap = new HashMap<>();\n        for (double i = 1.0; i <= 5.0; i++) {\n            squareMap.put(i, i * i);\n        }\n\n        for (Double key : squareMap.keySet()) {\n            System.out.println(\"Number: \" + key + \", Square: \" + squareMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of ImmutableClassToInstanceMap with a mapping\n        ImmutableClassToInstanceMap<String> map = /* write */ ImmutableClassToInstanceMap.of(String.class, \"Hello, World!\");\n\n        // Retrieve the value using getInstance method\n        /* read */ String value = map.getInstance(String.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}