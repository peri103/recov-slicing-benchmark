{
    "java_code": "import com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableSet.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer> builder = ImmutableSet.builder();\n        Map<String, Integer> map = new HashMap<>();\n        Random random = new Random();\n        \n        // Adding random values to the map\n        for (int i = 0; i < 10; i++) {\n            map.put(\"key\" + i, random.nextInt(100));\n        }\n\n        // Iterating over the map and adding values to the builder\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            builder.add(entry.getValue());\n        }\n\n        /* write */ builder.add(1);\n        ImmutableSet<Integer> immutableSet = builder.build();\n\n        // Performing some operations on the set\n        int sum = 0;\n        for (Integer value : immutableSet) {\n            sum += value;\n        }\n        System.out.println(\"Sum of elements in the set: \" + sum);\n\n        // Checking if a specific value is present in the set\n        /* read */ boolean containsValue = immutableSet.contains(1);\n        System.out.println(containsValue);\n\n        // Further operations on the map\n        for (String key : map.keySet()) {\n            Integer val = map.get(key);\n            System.out.println(\"Key: \" + key + \", Value: \" + val);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableSet.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<Integer> builder = ImmutableSet.builder();\n        /* write */ builder.add(1);\n        ImmutableSet<Integer> immutableSet = builder.build();\n        /* read */ boolean containsValue = immutableSet.contains(1);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableSet",
        "read_method": "contains"
    }
}