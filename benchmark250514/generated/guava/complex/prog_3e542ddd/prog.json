{
    "java_code": "import com.google.common.collect.ForwardingList;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        List<Integer> backingList = new ArrayList<>();\n        ForwardingList<Integer> forwardingList = new ForwardingList<Integer>() {\n            @Override\n            protected List<Integer> delegate() {\n                return backingList;\n            }\n        };\n\n        LinkedList<Integer> linkedList = new LinkedList<>();\n        linkedList.add(100);\n        linkedList.add(200);\n\n        for (int i = 0; i < linkedList.size(); i++) {\n            System.out.println(\"LinkedList element: \" + linkedList.get(i));\n        }\n\n        /* write */ forwardingList.add(42);\n\n        List<Integer> anotherBackingList = new ArrayList<>();\n        ForwardingList<Integer> anotherForwardingList = new ForwardingList<Integer>() {\n            @Override\n            protected List<Integer> delegate() {\n                return anotherBackingList;\n            }\n        };\n\n        for (int i = 0; i < 5; i++) {\n            anotherForwardingList.add(i * 10);\n        }\n\n        for (int i = 0; i < anotherForwardingList.size(); i++) {\n            System.out.println(\"Another ForwardingList element: \" + anotherForwardingList.get(i));\n        }\n\n        /* read */ int value = forwardingList.get(0);\n\n        System.out.println(\"Value from ForwardingList: \" + value);\n\n        List<Integer> combinedList = new ArrayList<>(forwardingList);\n        combinedList.addAll(linkedList);\n        combinedList.addAll(anotherForwardingList);\n\n        for (int element : combinedList) {\n            System.out.println(\"Combined List element: \" + element);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingList;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        List<Integer> backingList = new ArrayList<>();\n        ForwardingList<Integer> forwardingList = new ForwardingList<Integer>() {\n            @Override\n            protected List<Integer> delegate() {\n                return backingList;\n            }\n        };\n\n        /* write */ forwardingList.add(42);\n        /* read */ int value = forwardingList.get(0);\n\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingList",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingList",
        "read_method": "get"
    }
}