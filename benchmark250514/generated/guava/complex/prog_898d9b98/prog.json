{
    "java_code": "import com.google.common.collect.ImmutableSortedMap;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Using ImmutableSortedMap\n        ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n        /* write */ builder.put(\"key1\", 100);\n        ImmutableSortedMap<String, Integer> map = builder.build();\n\n        // Additional operations with other collections\n        HashMap<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"name\", \"Alice\");\n        hashMap.put(\"city\", \"Wonderland\");\n\n        ArrayList<Integer> arrayList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            arrayList.add(i * 10);\n        }\n\n        // Processing the ArrayList\n        int sum = 0;\n        for (Integer num : arrayList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of ArrayList elements: \" + sum);\n\n        // Using ImmutableList\n        ImmutableList<String> immutableList = ImmutableList.of(\"apple\", \"banana\", \"cherry\");\n        for (String fruit : immutableList) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n\n        // Accessing the value from the original write-read pair\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(\"Value from ImmutableSortedMap: \" + value);\n\n        // More complex operations\n        hashMap.put(\"country\", \"Fantasy Land\");\n        for (String key : hashMap.keySet()) {\n            System.out.println(key + \": \" + hashMap.get(key));\n        }\n\n        // Modifying the ArrayList\n        arrayList.add(50);\n        arrayList.remove(0);\n        System.out.println(\"Modified ArrayList: \" + arrayList);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableSortedMap.Builder<String, Integer> builder = ImmutableSortedMap.naturalOrder();\n        /* write */ builder.put(\"key1\", 100);\n        ImmutableSortedMap<String, Integer> map = builder.build();\n        /* read */ Integer value = map.get(\"key1\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedMap",
        "read_method": "get"
    }
}