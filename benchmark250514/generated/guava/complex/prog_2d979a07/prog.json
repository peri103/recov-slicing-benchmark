{
    "java_code": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\nimport com.google.common.collect.HashBasedTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the TreeBasedTable\n        Table<Integer, Integer, String> treeTable = TreeBasedTable.create();\n\n        // Initialize another table for additional complexity\n        Table<String, String, Integer> hashTable = HashBasedTable.create();\n\n        // Insert values into hashTable\n        hashTable.put(\"Row1\", \"Column1\", 100);\n        hashTable.put(\"Row2\", \"Column2\", 200);\n\n        // Perform operations on hashTable\n        int sum = 0;\n        for (Table.Cell<String, String, Integer> cell : hashTable.cellSet()) {\n            sum += cell.getValue();\n        }\n        System.out.println(\"Sum of values in hashTable: \" + sum);\n\n        // Write a value into the treeTable\n        /* write */ treeTable.put(1, 1, \"Hello World\");\n\n        // Perform unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n\n        // Read the value from the treeTable\n        /* read */ String value = treeTable.get(1, 1);\n        \n        // Print the value\n        System.out.println(value);\n\n        // Further manipulate hashTable for complexity\n        hashTable.put(\"Row3\", \"Column3\", 300);\n        int maxValue = Integer.MIN_VALUE;\n        for (Table.Cell<String, String, Integer> cell : hashTable.cellSet()) {\n            if (cell.getValue() > maxValue) {\n                maxValue = cell.getValue();\n            }\n        }\n        System.out.println(\"Maximum value in hashTable: \" + maxValue);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the TreeBasedTable\n        Table<Integer, Integer, String> table = TreeBasedTable.create();\n        \n        // Write a value into the table\n        /* write */ table.put(1, 1, \"Hello World\");\n        \n        // Read the value from the table\n        /* read */ String value = table.get(1, 1);\n        \n        // Print the value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.TreeBasedTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.TreeBasedTable",
        "read_method": "get"
    }
}