{
    "java_code": "import com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Table<String, String, Integer> table = HashBasedTable.create();\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n\n        /* write */ table.put(\"row1\", \"column1\", 42);\n\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Map Entry: \" + entry.getKey() + \" = \" + entry.getValue());\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Add more entries to the table\n        table.put(\"row2\", \"column1\", 84);\n        table.put(\"row1\", \"column2\", 126);\n\n        // Retrieve and print values from the table\n        Integer value1 = table.get(\"row2\", \"column1\");\n        Integer value2 = table.get(\"row1\", \"column2\");\n        System.out.println(\"Value at (row2, column1): \" + value1);\n        System.out.println(\"Value at (row1, column2): \" + value2);\n\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        System.out.println(\"Value at (row1, column1): \" + value);\n\n        // Add more complex operations\n        for (String rowKey : table.rowKeySet()) {\n            Map<String, Integer> row = table.row(rowKey);\n            for (Map.Entry<String, Integer> cell : row.entrySet()) {\n                System.out.println(\"Table Entry: (\" + rowKey + \", \" + cell.getKey() + \") = \" + cell.getValue());\n            }\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        Table<String, String, Integer> table = HashBasedTable.create();\n\n        /* write */ table.put(\"row1\", \"column1\", 42);\n\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.HashBasedTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.HashBasedTable",
        "read_method": "get"
    }
}