{
    "java_code": "import com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Multiset;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multiset<String> multiset = HashMultiset.create();\n        Map<String, Integer> fruitMap = new HashMap<>();\n        \n        // Add some initial fruits to the map\n        fruitMap.put(\"banana\", 2);\n        fruitMap.put(\"orange\", 3);\n\n        // Add more fruits to the multiset\n        multiset.add(\"banana\");\n        multiset.add(\"orange\");\n        multiset.add(\"grape\");\n\n        // Add an apple to the multiset\n        /* write */ multiset.add(\"apple\");\n\n        // Process the fruit map\n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            System.out.println(\"Fruit: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n\n        // Calculate total fruit count in multiset\n        int totalFruits = multiset.size();\n        System.out.println(\"Total fruits in multiset: \" + totalFruits);\n\n        // Check the count of apple in the multiset\n        /* read */ int appleCount = multiset.count(\"apple\");\n        System.out.println(\"Count of apples: \" + appleCount);\n\n        // Add more fruits to the map\n        fruitMap.put(\"apple\", appleCount);\n        fruitMap.put(\"grape\", multiset.count(\"grape\"));\n\n        // Print the updated fruit map\n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            System.out.println(\"Updated Fruit: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Multiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multiset<String> multiset = HashMultiset.create();\n        /* write */ multiset.add(\"apple\");\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.Multiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.Multiset",
        "read_method": "count"
    }
}