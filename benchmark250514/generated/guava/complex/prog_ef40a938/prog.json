{
    "java_code": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Creating an ImmutableSortedMultiset instance with some elements\n        /* write */ ImmutableSortedMultiset<String> multiset = ImmutableSortedMultiset.of(\"apple\", \"banana\", \"apple\");\n\n        // Creating additional collections and performing operations\n        ImmutableList<String> fruits = ImmutableList.of(\"apple\", \"banana\", \"cherry\");\n        Map<String, Integer> fruitMap = new HashMap<>();\n        \n        for (String fruit : fruits) {\n            fruitMap.put(fruit, multiset.count(fruit));\n        }\n\n        System.out.println(\"Fruit counts in multiset:\");\n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Performing some unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i * i;\n        }\n        System.out.println(\"Sum of squares from 1 to 10: \" + sum);\n\n        // Reading the count of a specific element\n        /* read */ int count = multiset.count(\"apple\");\n\n        // Output the count\n        System.out.println(\"Count of 'apple' in multiset: \" + count);\n\n        // Additional complex operations\n        Map<String, Integer> squaredMap = new HashMap<>();\n        for (String fruit : fruits) {\n            int squaredValue = fruit.length() * fruit.length();\n            squaredMap.put(fruit, squaredValue);\n        }\n\n        System.out.println(\"Squared length of fruit names:\");\n        for (Map.Entry<String, Integer> entry : squaredMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Creating an ImmutableSortedMultiset instance with some elements\n        /* write */ ImmutableSortedMultiset<String> multiset = ImmutableSortedMultiset.of(\"apple\", \"banana\", \"apple\");\n\n        // Reading the count of a specific element\n        /* read */ int count = multiset.count(\"apple\");\n\n        // Output the count\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMultiset",
        "write_method": "of",
        "read_class": "com.google.common.collect.ImmutableSortedMultiset",
        "read_method": "count"
    }
}