{
    "java_code": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        \n        // Use the write method to add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n        \n        // Initialize another builder for ImmutableSet\n        ImmutableSet.Builder<String> setBuilder = ImmutableSet.builder();\n        \n        // Add elements to the setBuilder\n        setBuilder.add(\"orange\").add(\"grape\").add(\"banana\");\n        \n        // Build the ImmutableSet\n        ImmutableSet<String> fruitSet = setBuilder.build();\n        \n        // Perform some operations on fruitSet\n        System.out.println(\"ImmutableSet contains 'banana': \" + fruitSet.contains(\"banana\"));\n        System.out.println(\"ImmutableSet size: \" + fruitSet.size());\n\n        // Introduce some unrelated logic\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Perform some operations on multiset\n        System.out.println(\"Multiset size: \" + multiset.size());\n        \n        // Use the read method to count the occurrences of \"apple\"\n        /* read */ int count = multiset.count(\"apple\");\n        \n        // Print the count of \"apple\"\n        System.out.println(\"Count of 'apple' in multiset: \" + count);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the builder for ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        \n        // Use the write method to add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n        \n        // Use the read method to count the occurrences of \"apple\"\n        /* read */ int count = multiset.count(\"apple\");\n        \n        // Print the count of \"apple\"\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableMultiset",
        "read_method": "count"
    }
}