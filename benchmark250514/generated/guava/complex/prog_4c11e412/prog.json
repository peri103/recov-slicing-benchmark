{
    "java_code": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableSortedMultiset.Builder;\nimport com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedMultiset\n        Builder<String> builder = ImmutableSortedMultiset.builder();\n\n        // Use the write method to add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n\n        // Create an ImmutableSet and ImmutableMap for demonstration\n        ImmutableSet<String> fruitSet = ImmutableSet.of(\"apple\", \"banana\", \"cherry\");\n        ImmutableMap<String, Integer> fruitMap = ImmutableMap.of(\"apple\", 2, \"banana\", 3, \"cherry\", 1);\n\n        // Perform some operations on the ImmutableSet\n        if (fruitSet.contains(\"banana\")) {\n            System.out.println(\"Banana is in the set.\");\n        }\n\n        // Use the ImmutableMap to get values\n        int bananaCount = fruitMap.get(\"banana\");\n        System.out.println(\"Banana count from map: \" + bananaCount);\n\n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<String> multiset = builder.build();\n\n        // Perform some operations on the multiset\n        System.out.println(\"Multiset elements: \" + multiset.elementSet());\n        System.out.println(\"Total distinct elements: \" + multiset.elementSet().size());\n\n        // Use the read method to count occurrences of \"apple\"\n        /* read */ int count = multiset.count(\"apple\");\n\n        // Print the count\n        System.out.println(\"Apple count from multiset: \" + count);\n\n        // Additional operations to increase complexity\n        for (String fruit : fruitSet) {\n            int mapCount = fruitMap.get(fruit);\n            int multisetCount = multiset.count(fruit);\n            System.out.println(fruit + \": Map count = \" + mapCount + \", Multiset count = \" + multisetCount);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedMultiset;\nimport com.google.common.collect.ImmutableSortedMultiset.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedMultiset\n        Builder<String> builder = ImmutableSortedMultiset.builder();\n\n        // Use the write method to add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n\n        // Build the ImmutableSortedMultiset\n        ImmutableSortedMultiset<String> multiset = builder.build();\n\n        // Use the read method to count occurrences of \"apple\"\n        /* read */ int count = multiset.count(\"apple\");\n\n        // Print the count\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedMultiset",
        "read_method": "count"
    }
}