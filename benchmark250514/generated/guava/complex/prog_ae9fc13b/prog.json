{
    "java_code": "import com.google.common.collect.ForwardingList;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a ForwardingList instance using an ArrayList as the delegate\n        ForwardingList<Integer> list = new ForwardingList<Integer>() {\n            private final List<Integer> delegate = new ArrayList<>();\n\n            @Override\n            protected List<Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        // Add some unrelated complexity\n        List<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n        stringList.add(\"!\");\n\n        for (String str : stringList) {\n            System.out.print(str + \" \");\n        }\n        System.out.println();\n\n        // Another ForwardingList to demonstrate more complexity\n        ForwardingList<Double> doubleList = new ForwardingList<Double>() {\n            private final List<Double> delegate = new ArrayList<>();\n\n            @Override\n            protected List<Double> delegate() {\n                return delegate;\n            }\n        };\n\n        doubleList.add(3.14);\n        doubleList.add(2.718);\n        \n        double sum = 0;\n        for (Double d : doubleList) {\n            sum += d;\n        }\n        System.out.println(\"Sum of doubles: \" + sum);\n\n        /* write */ list.add(42); // Write a value to the list\n\n        // More unrelated operations\n        List<Character> charList = new ArrayList<>();\n        charList.add('A');\n        charList.add('B');\n        charList.add('C');\n\n        StringBuilder sb = new StringBuilder();\n        for (Character ch : charList) {\n            sb.append(ch);\n        }\n        System.out.println(\"Characters: \" + sb.toString());\n\n        /* read */ int value = list.get(0); // Read the value from the list\n        System.out.println(\"Read integer: \" + value); // Output the read value\n\n        // Further operations\n        List<Boolean> boolList = new ArrayList<>();\n        boolList.add(true);\n        boolList.add(false);\n        boolList.add(true);\n\n        int trueCount = 0;\n        for (Boolean b : boolList) {\n            if (b) {\n                trueCount++;\n            }\n        }\n        System.out.println(\"Number of true values: \" + trueCount);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingList;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a ForwardingList instance using an ArrayList as the delegate\n        ForwardingList<Integer> list = new ForwardingList<Integer>() {\n            private final List<Integer> delegate = new ArrayList<>();\n\n            @Override\n            protected List<Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ list.add(42); // Write a value to the list\n        /* read */ int value = list.get(0); // Read the value from the list\n        System.out.println(value); // Output the read value\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingList",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingList",
        "read_method": "get"
    }
}