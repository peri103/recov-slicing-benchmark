{
    "java_code": "import com.google.common.collect.HashBiMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> biMap = HashBiMap.create();\n        Map<String, String> stringMap = new HashMap<>();\n        Map<Integer, Double> doubleMap = new HashMap<>();\n\n        // Adding elements to the stringMap\n        stringMap.put(\"name\", \"Alice\");\n        stringMap.put(\"city\", \"Wonderland\");\n\n        // Adding elements to the doubleMap\n        doubleMap.put(1, 3.14);\n        doubleMap.put(2, 2.71);\n\n        // Perform operations on the stringMap\n        for (Map.Entry<String, String> entry : stringMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Perform operations on the doubleMap\n        double sum = 0;\n        for (Double value : doubleMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in doubleMap: \" + sum);\n\n        // Original write-read pair\n        /* write */ biMap.put(\"key\", 42);\n\n        // Perform additional operations\n        biMap.put(\"anotherKey\", 84);\n        biMap.put(\"thirdKey\", 126);\n        \n        // Perform a check on biMap\n        if (biMap.containsKey(\"anotherKey\")) {\n            System.out.println(\"anotherKey exists in biMap.\");\n        }\n\n        // More unrelated code\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n\n        // Original read operation\n        /* read */ Integer value = biMap.get(\"key\");\n        System.out.println(\"Value associated with 'key': \" + value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashBiMap<String, Integer> biMap = HashBiMap.create();\n        /* write */ biMap.put(\"key\", 42);\n        /* read */ Integer value = biMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.HashBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.HashBiMap",
        "read_method": "get"
    }
}