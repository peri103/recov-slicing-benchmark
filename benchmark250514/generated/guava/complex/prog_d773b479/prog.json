{
    "java_code": "import com.google.common.collect.ForwardingMultimap;\nimport com.google.common.collect.ArrayListMultimap;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing the ForwardingMultimap\n        ForwardingMultimap<String, String> multimap = new ForwardingMultimap<String, String>() {\n            private final ArrayListMultimap<String, String> delegate = ArrayListMultimap.create();\n\n            @Override\n            protected ArrayListMultimap<String, String> delegate() {\n                return delegate;\n            }\n        };\n\n        // Using a HashMap to add complexity\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n\n        // Iterating and printing values from the map\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Performing some operations before the write\n        int sum = 0;\n        for (int value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in the map: \" + sum);\n\n        // Writing to the multimap\n        /* write */ multimap.put(\"key\", \"value\");\n\n        // Additional operations on the map\n        if (map.containsKey(\"two\")) {\n            map.put(\"two\", map.get(\"two\") + 10);\n        }\n\n        // Printing updated map values\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Updated Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Performing some unrelated operations\n        int product = 1;\n        for (int value : map.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of values in the map: \" + product);\n\n        // Reading from the multimap\n        /* read */ Collection<String> values = multimap.get(\"key\");\n        for (String value : values) {\n            System.out.println(\"Value from multimap: \" + value);\n        }\n\n        // More operations after read\n        map.remove(\"three\");\n        System.out.println(\"Map size after removal: \" + map.size());\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingMultimap;\nimport com.google.common.collect.ArrayListMultimap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        ForwardingMultimap<String, String> multimap = new ForwardingMultimap<String, String>() {\n            private final ArrayListMultimap<String, String> delegate = ArrayListMultimap.create();\n\n            @Override\n            protected ArrayListMultimap<String, String> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ multimap.put(\"key\", \"value\");\n        /* read */ Collection<String> values = multimap.get(\"key\");\n        for (String value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingMultimap",
        "read_method": "get"
    }
}