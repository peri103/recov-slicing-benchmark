{
    "java_code": "import com.google.common.collect.LinkedHashMultimap;\nimport com.google.common.collect.Multimap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multimap<String, Integer> multimap = LinkedHashMultimap.create();\n        Map<String, String> simpleMap = new HashMap<>();\n        \n        // Initialize and populate the simpleMap\n        simpleMap.put(\"first\", \"apple\");\n        simpleMap.put(\"second\", \"banana\");\n        simpleMap.put(\"third\", \"cherry\");\n        \n        // Iterate over the simpleMap and print keys and values\n        for (Map.Entry<String, String> entry : simpleMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        /* write */ multimap.put(\"key\", 42);\n        \n        // Perform some operations with multimap\n        multimap.put(\"key\", 84);\n        multimap.put(\"anotherKey\", 21);\n        \n        // Calculate the sum of all values associated with \"key\"\n        int sum = 0;\n        for (Integer num : multimap.get(\"key\")) {\n            sum += num;\n        }\n        System.out.println(\"Sum of values for 'key': \" + sum);\n        \n        // Retrieve and print all keys in the multimap\n        Set<String> keys = multimap.keySet();\n        System.out.println(\"Keys in multimap: \" + keys);\n        \n        // More unrelated operations\n        int totalValues = 0;\n        for (String key : keys) {\n            totalValues += multimap.get(key).size();\n        }\n        System.out.println(\"Total number of values in multimap: \" + totalValues);\n        \n        /* read */ Integer value = multimap.get(\"key\").iterator().next();\n        System.out.println(\"First value for 'key': \" + value);\n        \n        // Additional logic to demonstrate complexity\n        int maxValue = Integer.MIN_VALUE;\n        for (String key : multimap.keySet()) {\n            for (Integer num : multimap.get(key)) {\n                if (num > maxValue) {\n                    maxValue = num;\n                }\n            }\n        }\n        System.out.println(\"Maximum value in multimap: \" + maxValue);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.LinkedHashMultimap;\nimport com.google.common.collect.Multimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multimap<String, Integer> multimap = LinkedHashMultimap.create();\n        /* write */ multimap.put(\"key\", 42);\n        /* read */ Integer value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.LinkedHashMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedHashMultimap",
        "read_method": "get"
    }
}