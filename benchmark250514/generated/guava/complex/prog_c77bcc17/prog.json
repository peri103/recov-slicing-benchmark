{
    "java_code": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeBasedTable<Integer, Integer, String> table = TreeBasedTable.create();\n        Map<String, Integer> map = new HashMap<>();\n        \n        /* write */ table.put(1, 1, \"Hello, World!\");\n        \n        // Adding elements to the map for additional complexity\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n        \n        // Performing operations on the map\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Additional operations on the table\n        table.put(2, 2, \"Goodbye, World!\");\n        table.put(3, 3, \"Welcome, World!\");\n        \n        // Iterating over the table\n        for (Table.Cell<Integer, Integer, String> cell : table.cellSet()) {\n            System.out.println(\"Row: \" + cell.getRowKey() + \", Column: \" + cell.getColumnKey() + \", Value: \" + cell.getValue());\n        }\n        \n        /* read */ String value = table.get(1, 1);\n        \n        System.out.println(value);\n        \n        // Further operations unrelated to the table\n        int sum = 0;\n        for (Integer val : map.values()) {\n            sum += val;\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n        \n        // Final operations on the table\n        table.put(4, 4, \"End, World!\");\n        System.out.println(\"Final Table Size: \" + table.size());\n    }\n}",
    "java_code_simple": "import com.google.common.collect.TreeBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeBasedTable<Integer, Integer, String> table = TreeBasedTable.create();\n        \n        /* write */ table.put(1, 1, \"Hello, World!\");\n        \n        /* read */ String value = table.get(1, 1);\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.TreeBasedTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.TreeBasedTable",
        "read_method": "get"
    }
}