{
    "java_code": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.SortedMap;\nimport java.util.TreeMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMap<String, Integer> sortedMap = new TreeMap<>();\n        ForwardingSortedMap<String, Integer> forwardingSortedMap = new ForwardingSortedMap<String, Integer>() {\n            @Override\n            protected SortedMap<String, Integer> delegate() {\n                return sortedMap;\n            }\n        };\n\n        Map<String, String> anotherMap = new HashMap<>();\n        anotherMap.put(\"A\", \"Apple\");\n        anotherMap.put(\"B\", \"Banana\");\n        anotherMap.put(\"C\", \"Cherry\");\n\n        for (Map.Entry<String, String> entry : anotherMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        /* write */ forwardingSortedMap.put(\"key\", 100);\n\n        anotherMap.put(\"D\", \"Date\");\n        anotherMap.remove(\"B\");\n\n        for (String key : anotherMap.keySet()) {\n            System.out.println(\"Fruit: \" + anotherMap.get(key));\n        }\n\n        Integer sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        /* read */ Integer value = forwardingSortedMap.get(\"key\");\n        System.out.println(\"Value from ForwardingSortedMap: \" + value);\n\n        double factorial = 1;\n        for (int i = 1; i <= 5; i++) {\n            factorial *= i;\n        }\n        System.out.println(\"Factorial of 5: \" + factorial);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingSortedMap;\nimport java.util.SortedMap;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMap<String, Integer> sortedMap = new TreeMap<>();\n        ForwardingSortedMap<String, Integer> forwardingSortedMap = new ForwardingSortedMap<String, Integer>() {\n            @Override\n            protected SortedMap<String, Integer> delegate() {\n                return sortedMap;\n            }\n        };\n\n        /* write */ forwardingSortedMap.put(\"key\", 100);\n        /* read */ Integer value = forwardingSortedMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSortedMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ForwardingSortedMap",
        "read_method": "get"
    }
}