{
    "java_code": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LoadingCache instance\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, Integer>() {\n                    public Integer load(String key) {\n                        return null; // Default loading behavior, not used in this example\n                    }\n                });\n\n        // Create a HashMap to use additional write-read pair\n        Map<String, String> map = new HashMap<>();\n        map.put(\"name\", \"John Doe\");\n        map.put(\"age\", \"30\");\n\n        // Write to the cache\n        /* write */ cache.put(\"key1\", 42);\n\n        // Perform some operations with the HashMap\n        String name = map.get(\"name\");\n        String age = map.get(\"age\");\n        System.out.println(\"Name: \" + name + \", Age: \" + age);\n\n        // Perform calculations and store results in the cache\n        int calculatedValue = 7 * 6;\n        cache.put(\"calculatedKey\", calculatedValue);\n\n        // Perform more operations\n        int doubledValue = calculatedValue * 2;\n        cache.put(\"doubledKey\", doubledValue);\n\n        // Read from the cache\n        try {\n            /* read */ int value = cache.get(\"key1\");\n            System.out.println(\"Read value from cache: \" + value);\n        } catch (Exception e) {\n            System.out.println(\"Error reading from cache: \" + e.getMessage());\n        }\n\n        // Read other values from cache\n        try {\n            int calculatedResult = cache.get(\"calculatedKey\");\n            int doubledResult = cache.get(\"doubledKey\");\n            System.out.println(\"Calculated value: \" + calculatedResult);\n            System.out.println(\"Doubled value: \" + doubledResult);\n        } catch (Exception e) {\n            System.out.println(\"Error reading calculated values from cache: \" + e.getMessage());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LoadingCache instance\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, Integer>() {\n                    public Integer load(String key) {\n                        return null; // Default loading behavior, not used in this example\n                    }\n                });\n\n        // Write to the cache\n        /* write */ cache.put(\"key1\", 42);\n\n        // Read from the cache\n        try {\n            /* read */ int value = cache.get(\"key1\");\n            System.out.println(value);\n        } catch (Exception e) {\n            System.out.println(\"Error reading from cache: \" + e.getMessage());\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.LoadingCache",
        "write_method": "put",
        "read_class": "com.google.common.cache.LoadingCache",
        "read_method": "get"
    }
}