{
    "java_code": "import com.google.common.collect.HashMultimap;\nimport com.google.common.collect.ArrayListMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashMultimap<String, Integer> multimap = HashMultimap.create();\n        ArrayListMultimap<String, String> multimap2 = ArrayListMultimap.create();\n\n        // Add some initial data to the secondary multimap\n        multimap2.put(\"fruit\", \"apple\");\n        multimap2.put(\"fruit\", \"banana\");\n        multimap2.put(\"vegetable\", \"carrot\");\n\n        // Work with the secondary multimap\n        for (String key : multimap2.keySet()) {\n            System.out.println(\"Key: \" + key + \", Values: \" + multimap2.get(key));\n        }\n\n        // Perform operations on the primary multimap\n        /* write */ multimap.put(\"key\", 42);\n        multimap.put(\"anotherKey\", 100);\n        multimap.put(\"key\", 84);\n\n        // Add more complex operations\n        int sum = 0;\n        for (Integer number : multimap.get(\"key\")) {\n            sum += number;\n        }\n        System.out.println(\"Sum of values for 'key': \" + sum);\n\n        // Perform some unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n\n        // Continue working with the primary multimap\n        if (multimap.containsKey(\"anotherKey\")) {\n            System.out.println(\"'anotherKey' is present in the multimap.\");\n        }\n\n        // Final read operation\n        /* read */ int value = multimap.get(\"key\").iterator().next();\n        System.out.println(\"First value for 'key': \" + value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashMultimap<String, Integer> multimap = HashMultimap.create();\n        /* write */ multimap.put(\"key\", 42);\n        /* read */ int value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.HashMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.HashMultimap",
        "read_method": "get"
    }
}