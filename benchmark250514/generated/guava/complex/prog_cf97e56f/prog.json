{
    "java_code": "import com.google.common.collect.MinMaxPriorityQueue;\nimport java.util.PriorityQueue;\nimport java.util.Stack;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original MinMaxPriorityQueue\n        MinMaxPriorityQueue<Integer> queue = MinMaxPriorityQueue.create();\n        /* write */ queue.add(10);\n\n        // Additional PriorityQueue\n        PriorityQueue<Integer> priorityQueue = new PriorityQueue<>();\n        priorityQueue.add(20);\n        priorityQueue.add(5);\n        priorityQueue.add(15);\n\n        // Stack operations\n        Stack<Integer> stack = new Stack<>();\n        stack.push(100);\n        stack.push(200);\n        stack.push(300);\n        stack.pop(); // remove top element\n\n        // ArrayList operations\n        List<String> list = new ArrayList<>();\n        list.add(\"apple\");\n        list.add(\"banana\");\n        list.add(\"cherry\");\n        for (String fruit : list) {\n            System.out.println(fruit);\n        }\n\n        // Some calculations\n        int sum = 0;\n        for (int num : priorityQueue) {\n            sum += num;\n        }\n        System.out.println(\"Sum of PriorityQueue elements: \" + sum);\n\n        // Original MinMaxPriorityQueue read\n        /* read */ Integer value = queue.peek();\n        System.out.println(\"Peek value from MinMaxPriorityQueue: \" + value);\n\n        // More stack operations\n        while (!stack.isEmpty()) {\n            System.out.println(\"Stack pop: \" + stack.pop());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.MinMaxPriorityQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        MinMaxPriorityQueue<Integer> queue = MinMaxPriorityQueue.create();\n        /* write */ queue.add(10);\n        /* read */ Integer value = queue.peek();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.MinMaxPriorityQueue",
        "write_method": "add",
        "read_class": "com.google.common.collect.MinMaxPriorityQueue",
        "read_method": "peek"
    }
}