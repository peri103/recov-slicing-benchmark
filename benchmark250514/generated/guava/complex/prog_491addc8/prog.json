{
    "java_code": "import com.google.common.collect.HashMultimap;\nimport com.google.common.collect.SetMultimap;\nimport java.util.Set;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize SetMultimap and HashMap\n        SetMultimap<String, Integer> multimap = HashMultimap.create();\n        Map<String, String> hashMap = new HashMap<>();\n\n        // Adding key-value pairs to HashMap\n        hashMap.put(\"name\", \"Alice\");\n        hashMap.put(\"city\", \"Wonderland\");\n\n        // Process data in HashMap\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Add a value to the multimap\n        /* write */ multimap.put(\"key1\", 42);\n\n        // Perform operations unrelated to multimap\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Further manipulation of HashMap\n        hashMap.put(\"occupation\", \"Explorer\");\n        if (hashMap.containsKey(\"occupation\")) {\n            System.out.println(\"Occupation: \" + hashMap.get(\"occupation\"));\n        }\n\n        // Read the value from the multimap\n        /* read */ Set<Integer> values = multimap.get(\"key1\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n\n        // Additional operations with HashMap\n        hashMap.put(\"status\", \"Active\");\n        if (hashMap.containsValue(\"Active\")) {\n            System.out.println(\"Status is Active\");\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashMultimap;\nimport com.google.common.collect.SetMultimap;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        SetMultimap<String, Integer> multimap = HashMultimap.create();\n        \n        /* write */ multimap.put(\"key1\", 42);\n        \n        /* read */ Set<Integer> values = multimap.get(\"key1\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.SetMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.SetMultimap",
        "read_method": "get"
    }
}