{
    "java_code": "import com.google.common.collect.ImmutableClassToInstanceMap;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap.Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Add a value to the builder\n        /* write */ builder.put(String.class, \"Hello, World!\");\n        \n        // Create an unrelated ImmutableMap with some values\n        ImmutableMap<String, Integer> immutableMap = ImmutableMap.of(\n            \"one\", 1,\n            \"two\", 2,\n            \"three\", 3\n        );\n        \n        // Iterate over the ImmutableMap and print its values\n        for (String key : immutableMap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + immutableMap.get(key));\n        }\n        \n        // Perform some calculations\n        int sum = 0;\n        for (Integer value : immutableMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n        \n        // Build the ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n        \n        // Retrieve the value using getInstance\n        /* read */ String value = map.getInstance(String.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n        \n        // Create another ImmutableClassToInstanceMap with different types\n        ImmutableClassToInstanceMap.Builder<Object> anotherBuilder = ImmutableClassToInstanceMap.builder();\n        anotherBuilder.put(Integer.class, 42);\n        anotherBuilder.put(Double.class, 3.14);\n        ImmutableClassToInstanceMap<Object> anotherMap = anotherBuilder.build();\n        \n        // Retrieve and print values from the anotherMap\n        Integer intValue = anotherMap.getInstance(Integer.class);\n        Double doubleValue = anotherMap.getInstance(Double.class);\n        System.out.println(\"Integer value: \" + intValue);\n        System.out.println(\"Double value: \" + doubleValue);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableClassToInstanceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap.Builder<Object> builder = ImmutableClassToInstanceMap.builder();\n        \n        // Add a value to the builder\n        /* write */ builder.put(String.class, \"Hello, World!\");\n        \n        // Build the ImmutableClassToInstanceMap\n        ImmutableClassToInstanceMap<Object> map = builder.build();\n        \n        // Retrieve the value using getInstance\n        /* read */ String value = map.getInstance(String.class);\n        \n        // Print the retrieved value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableClassToInstanceMap",
        "read_method": "getInstance"
    }
}