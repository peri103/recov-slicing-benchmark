{
    "java_code": "import com.google.common.collect.HashMultimap;\nimport com.google.common.collect.SetMultimap;\nimport java.util.Set;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original SetMultimap write-read pair\n        SetMultimap<String, Integer> multimap = HashMultimap.create();\n        /* write */ multimap.put(\"key\", 42);\n\n        // Adding complexity with HashMap\n        Map<String, String> map = new HashMap<>();\n        map.put(\"first\", \"Hello\");\n        map.put(\"second\", \"World\");\n        \n        // Iterating over the HashMap\n        for (Map.Entry<String, String> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Adding more complexity with another SetMultimap pair\n        SetMultimap<String, String> stringMultimap = HashMultimap.create();\n        stringMultimap.put(\"greeting\", \"Hi\");\n        stringMultimap.put(\"greeting\", \"Hello\");\n        \n        // Iterating over the SetMultimap\n        Set<String> greetings = stringMultimap.get(\"greeting\");\n        for (String greeting : greetings) {\n            System.out.println(greeting);\n        }\n\n        // Unrelated computation\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Final read operation for the original SetMultimap\n        /* read */ Set<Integer> values = multimap.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashMultimap;\nimport com.google.common.collect.SetMultimap;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        SetMultimap<String, Integer> multimap = HashMultimap.create();\n        /* write */ multimap.put(\"key\", 42);\n        /* read */ Set<Integer> values = multimap.get(\"key\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.SetMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.SetMultimap",
        "read_method": "get"
    }
}