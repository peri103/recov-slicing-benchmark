{
    "java_code": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n\n        // Write a key-value pair to the builder\n        /* write */ builder.put(\"key1\", 100);\n\n        // Create a HashMap and populate it with some data\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n\n        // Create another ImmutableBiMap using a different builder\n        ImmutableBiMap.Builder<String, String> builder2 = ImmutableBiMap.builder();\n        builder2.put(\"X\", \"Xylophone\");\n        builder2.put(\"Y\", \"Yacht\");\n        ImmutableBiMap<String, String> biMap2 = builder2.build();\n\n        // Perform some operations on the HashMap\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(\"HashMap Entry: \" + entry.getKey() + \" -> \" + entry.getValue());\n        }\n\n        // Build the ImmutableBiMap from the original builder\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n\n        // Read the value using the key from the ImmutableBiMap\n        /* read */ Integer value = biMap.get(\"key1\");\n\n        // Print the read value\n        System.out.println(\"Read value from ImmutableBiMap: \" + value);\n\n        // Use the second ImmutableBiMap\n        for (String key : biMap2.keySet()) {\n            System.out.println(\"ImmutableBiMap2 Entry: \" + key + \" -> \" + biMap2.get(key));\n        }\n\n        // Create an ImmutableMap to demonstrate additional complexity\n        ImmutableMap<String, Double> immutableMap = ImmutableMap.of(\"PI\", 3.14159, \"e\", 2.71828);\n        for (Map.Entry<String, Double> entry : immutableMap.entrySet()) {\n            System.out.println(\"ImmutableMap Entry: \" + entry.getKey() + \" -> \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableBiMap\n        ImmutableBiMap.Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        // Write a key-value pair to the builder\n        /* write */ builder.put(\"key1\", 100);\n        \n        // Build the ImmutableBiMap from the builder\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        // Read the value using the key from the ImmutableBiMap\n        /* read */ Integer value = biMap.get(\"key1\");\n        \n        // Print the read value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    }
}