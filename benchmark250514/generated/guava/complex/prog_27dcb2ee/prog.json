{
    "java_code": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.Table;\nimport com.google.common.collect.HashBasedTable;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        ImmutableTable.Builder<String, String, Integer> builder = ImmutableTable.builder();\n        \n        // Add a value to the table using the builder\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n        \n        // Create another table using HashBasedTable\n        Table<String, String, String> hashTable = HashBasedTable.create();\n        hashTable.put(\"row1\", \"column1\", \"value1\");\n        hashTable.put(\"row2\", \"column2\", \"value2\");\n\n        // Process the hashTable\n        for (Table.Cell<String, String, String> cell : hashTable.cellSet()) {\n            System.out.println(\"HashTable - Row: \" + cell.getRowKey() + \", Column: \" + cell.getColumnKey() + \", Value: \" + cell.getValue());\n        }\n        \n        // Create a simple map for additional complexity\n        Map<String, Integer> simpleMap = new HashMap<>();\n        simpleMap.put(\"key1\", 100);\n        simpleMap.put(\"key2\", 200);\n        \n        // Process the simpleMap\n        for (Map.Entry<String, Integer> entry : simpleMap.entrySet()) {\n            System.out.println(\"Map - Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Build the immutable table\n        ImmutableTable<String, String, Integer> table = builder.build();\n        \n        // Perform some operations with the immutable table\n        System.out.println(\"ImmutableTable contains row1, column1: \" + table.contains(\"row1\", \"column1\"));\n        \n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        \n        // Print the value\n        System.out.println(\"Read value from ImmutableTable: \" + value);\n        \n        // Additional operations\n        for (String rowKey : table.rowKeySet()) {\n            for (String columnKey : table.columnKeySet()) {\n                System.out.println(\"ImmutableTable - Row: \" + rowKey + \", Column: \" + columnKey + \", Value: \" + table.get(rowKey, columnKey));\n            }\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        ImmutableTable.Builder<String, String, Integer> builder = ImmutableTable.builder();\n        \n        // Add a value to the table using the builder\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n        \n        // Build the immutable table\n        ImmutableTable<String, String, Integer> table = builder.build();\n        \n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        \n        // Print the value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    }
}