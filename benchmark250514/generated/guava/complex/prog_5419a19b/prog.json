{
    "java_code": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Create a separate ImmutableSet\n        ImmutableSet<String> fruitSet = ImmutableSet.of(\"apple\", \"banana\", \"cherry\");\n        \n        // Create a HashMap to store fruit counts\n        Map<String, Integer> fruitCountMap = new HashMap<>();\n        for (String fruit : fruitSet) {\n            fruitCountMap.put(fruit, 0);\n        }\n        \n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n        \n        // Update the fruit count map based on the multiset\n        for (String fruit : fruitSet) {\n            int countInMultiset = multiset.count(fruit);\n            fruitCountMap.put(fruit, countInMultiset);\n        }\n        \n        // Perform some operations on the fruit count map\n        int totalFruits = 0;\n        for (Map.Entry<String, Integer> entry : fruitCountMap.entrySet()) {\n            totalFruits += entry.getValue();\n        }\n        System.out.println(\"Total fruits: \" + totalFruits);\n        \n        // Read the count of a specific element\n        /* read */ int count = multiset.count(\"apple\");\n        \n        // Print the count\n        System.out.println(\"Count of apples: \" + count);\n        \n        // Perform more operations with the fruit set\n        if (fruitSet.contains(\"banana\")) {\n            System.out.println(\"Banana is in the set.\");\n        }\n        \n        // Traverse the fruit count map and print each entry\n        for (Map.Entry<String, Integer> entry : fruitCountMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        \n        // Add elements to the builder\n        /* write */ builder.add(\"apple\").add(\"banana\").add(\"apple\");\n        \n        // Build the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n        \n        // Read the count of a specific element\n        /* read */ int count = multiset.count(\"apple\");\n        \n        // Print the count\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultiset",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableMultiset",
        "read_method": "count"
    }
}