{
    "java_code": "import com.google.common.collect.ImmutableSortedSet;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        /* write */ builder.add(10);\n        \n        // Create a map to store some data\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"ten\", 10);\n        \n        // Perform some operations on the map\n        if (map.containsKey(\"ten\")) {\n            map.put(\"ten\", map.get(\"ten\") + 5);\n        }\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        \n        // Create an ImmutableList from the map values\n        ImmutableList<Integer> list = ImmutableList.copyOf(map.values());\n        \n        // Iterate over the list and print values\n        for (Integer value : list) {\n            System.out.println(\"Map value: \" + value);\n        }\n        \n        /* read */ boolean containsValue = sortedSet.contains(10);\n        \n        // Print the result of the read operation\n        System.out.println(\"SortedSet contains 10: \" + containsValue);\n        \n        // Perform additional operations on the sortedSet\n        if (sortedSet.contains(15)) {\n            System.out.println(\"SortedSet contains 15\");\n        } else {\n            System.out.println(\"SortedSet does not contain 15\");\n        }\n        \n        // Print all elements in the sortedSet\n        for (Integer element : sortedSet) {\n            System.out.println(\"SortedSet element: \" + element);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableSortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableSortedSet\n        ImmutableSortedSet.Builder<Integer> builder = ImmutableSortedSet.naturalOrder();\n        \n        /* write */ builder.add(10);\n        \n        // Build the ImmutableSortedSet\n        ImmutableSortedSet<Integer> sortedSet = builder.build();\n        \n        /* read */ boolean containsValue = sortedSet.contains(10);\n        \n        // Print the result\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableSortedSet",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableSortedSet",
        "read_method": "contains"
    }
}