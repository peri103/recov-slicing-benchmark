{
    "java_code": "import com.google.common.collect.ContiguousSet;\nimport com.google.common.collect.DiscreteDomain;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a range of integers\n        Range<Integer> range = Range.closed(1, 10);\n        // Create a ContiguousSet from the range\n        /* write */ ContiguousSet<Integer> set = ContiguousSet.create(range, DiscreteDomain.integers());\n        \n        // Perform operations on a different set\n        Set<Integer> hashSet = new HashSet<>();\n        for (int i = 5; i <= 15; i++) {\n            hashSet.add(i);\n        }\n        \n        // Create an ImmutableSet from the HashSet\n        ImmutableSet<Integer> immutableSet = ImmutableSet.copyOf(hashSet);\n        System.out.println(\"ImmutableSet contains:\");\n        for (Integer num : immutableSet) {\n            System.out.print(num + \" \");\n        }\n        System.out.println();\n        \n        // Check if the original ContiguousSet contains a specific value\n        /* read */ boolean containsValue = set.contains(5);\n        \n        // Perform further operations on another set\n        Set<Integer> combinedSet = new HashSet<>(set);\n        combinedSet.addAll(immutableSet);\n        \n        System.out.println(\"Combined Set contains:\");\n        for (Integer num : combinedSet) {\n            System.out.print(num + \" \");\n        }\n        System.out.println();\n        \n        // Print the result of the original read operation\n        System.out.println(\"Original set contains 5: \" + containsValue);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ContiguousSet;\nimport com.google.common.collect.DiscreteDomain;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a range of integers\n        Range<Integer> range = Range.closed(1, 10);\n        // Create a ContiguousSet from the range\n        /* write */ ContiguousSet<Integer> set = ContiguousSet.create(range, DiscreteDomain.integers());\n        \n        // Check if the set contains a specific value\n        /* read */ boolean containsValue = set.contains(5);\n        \n        // Print the result\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ContiguousSet",
        "write_method": "create",
        "read_class": "com.google.common.collect.ContiguousSet",
        "read_method": "contains"
    }
}