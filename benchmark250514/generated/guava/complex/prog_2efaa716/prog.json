{
    "java_code": "import com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Multiset;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multiset<String> multiset = HashMultiset.create();\n        /* write */ multiset.add(\"apple\");\n\n        // Additional code using Guava and Java collections\n        Multiset<String> anotherMultiset = HashMultiset.create();\n        anotherMultiset.add(\"banana\", 2);\n        anotherMultiset.add(\"orange\", 3);\n\n        List<String> fruits = new ArrayList<>();\n        fruits.add(\"banana\");\n        fruits.add(\"orange\");\n        fruits.add(\"apple\");\n\n        Map<String, Integer> fruitCountMap = new HashMap<>();\n        for (String fruit : fruits) {\n            fruitCountMap.put(fruit, anotherMultiset.count(fruit));\n        }\n\n        for (Map.Entry<String, Integer> entry : fruitCountMap.entrySet()) {\n            System.out.println(\"Count of '\" + entry.getKey() + \"': \" + entry.getValue());\n        }\n\n        // Performing some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 1; i <= 5; i++) {\n            numbers.add(i * 10);\n        }\n\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(\"Count of 'apple': \" + count);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Multiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multiset<String> multiset = HashMultiset.create();\n        /* write */ multiset.add(\"apple\");\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(\"Count of 'apple': \" + count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingMultiset",
        "read_method": "count"
    }
}