{
    "java_code": "import com.google.common.collect.ForwardingList;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        List<Integer> baseList = new ArrayList<>();\n        ForwardingList<Integer> forwardingList = new ForwardingList<Integer>() {\n            @Override\n            protected List<Integer> delegate() {\n                return baseList;\n            }\n        };\n\n        List<Integer> anotherList = new LinkedList<>();\n        anotherList.add(5);\n        anotherList.add(15);\n        anotherList.add(25);\n\n        /* write */ forwardingList.add(42);\n        \n        for (int i = 0; i < anotherList.size(); i++) {\n            forwardingList.add(anotherList.get(i));\n        }\n\n        int sum = 0;\n        for (int i = 0; i < forwardingList.size(); i++) {\n            sum += forwardingList.get(i);\n        }\n        System.out.println(\"Sum of all elements: \" + sum);\n\n        int max = Integer.MIN_VALUE;\n        for (int num : forwardingList) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        System.out.println(\"Max value: \" + max);\n\n        /* read */ int value = forwardingList.get(0);\n        System.out.println(\"First element written: \" + value);\n\n        List<String> stringList = new ArrayList<>();\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n\n        for (String str : stringList) {\n            System.out.println(\"String element: \" + str);\n        }\n\n        List<Double> doubleList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            doubleList.add(i * 1.5);\n        }\n\n        for (Double d : doubleList) {\n            System.out.println(\"Double element: \" + d);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingList;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        List<Integer> baseList = new ArrayList<>();\n        ForwardingList<Integer> forwardingList = new ForwardingList<Integer>() {\n            @Override\n            protected List<Integer> delegate() {\n                return baseList;\n            }\n        };\n\n        /* write */ forwardingList.add(42);\n        /* read */ int value = forwardingList.get(0);\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingList",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingList",
        "read_method": "get"
    }
}