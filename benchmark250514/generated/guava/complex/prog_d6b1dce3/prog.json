{
    "java_code": "import com.google.common.collect.HashMultimap;\nimport com.google.common.collect.Multimap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multimap<String, String> multimap = HashMultimap.create();\n        Map<String, Integer> hashmap = new HashMap<>();\n        \n        // Adding elements to the HashMap\n        hashmap.put(\"one\", 1);\n        hashmap.put(\"two\", 2);\n        hashmap.put(\"three\", 3);\n\n        // Iterating over the HashMap\n        for (Map.Entry<String, Integer> entry : hashmap.entrySet()) {\n            System.out.println(entry.getKey() + \" = \" + entry.getValue());\n        }\n\n        // Adding more entries to the Multimap\n        multimap.put(\"key1\", \"value1\");\n        multimap.put(\"key2\", \"value2\");\n\n        /* write */ multimap.put(\"key\", \"value\");\n\n        // Performing operations on Multimap\n        for (String key : multimap.keySet()) {\n            System.out.println(\"Key: \" + key + \", Values: \" + multimap.get(key));\n        }\n\n        // Adding more logic\n        int sum = 0;\n        for (Integer value : hashmap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in hashmap: \" + sum);\n\n        // Conditional logic\n        if (hashmap.containsKey(\"two\")) {\n            System.out.println(\"HashMap contains key 'two'\");\n        }\n\n        // Performing some calculation\n        int product = 1;\n        for (Integer value : hashmap.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of values in hashmap: \" + product);\n\n        /* read */ String value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashMultimap;\nimport com.google.common.collect.Multimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Multimap<String, String> multimap = HashMultimap.create();\n        /* write */ multimap.put(\"key\", \"value\");\n        /* read */ String value = multimap.get(\"key\").iterator().next();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.HashMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.HashMultimap",
        "read_method": "get"
    }
}