{
    "java_code": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport java.util.concurrent.ExecutionException;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LoadingCache instance\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, Integer>() {\n                    public Integer load(String key) {\n                        return null; // Default implementation, won't be used\n                    }\n                });\n\n        // Use the write method to put a value into the cache\n        /* write */ cache.put(\"key\", 42);\n\n        // Unrelated complex operation: Working with HashMap\n        HashMap<String, String> map = new HashMap<>();\n        map.put(\"A\", \"Apple\");\n        map.put(\"B\", \"Banana\");\n        map.put(\"C\", \"Cherry\");\n\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // Unrelated complex operation: Working with ArrayList\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * i);\n        }\n\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n\n        System.out.println(\"Sum of squares: \" + sum);\n\n        try {\n            // Use the read method to get the value from the cache\n            /* read */ int value = cache.get(\"key\");\n            System.out.println(\"Cached value: \" + value);\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n\n        // Additional unrelated operation: More ArrayList manipulation\n        ArrayList<String> fruits = new ArrayList<>();\n        fruits.add(\"Mango\");\n        fruits.add(\"Peach\");\n        fruits.add(\"Grapes\");\n\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport java.util.concurrent.ExecutionException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a LoadingCache instance\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n                .build(new CacheLoader<String, Integer>() {\n                    public Integer load(String key) {\n                        return null; // Default implementation, won't be used\n                    }\n                });\n\n        // Use the write method to put a value into the cache\n        /* write */ cache.put(\"key\", 42);\n\n        try {\n            // Use the read method to get the value from the cache\n            /* read */ int value = cache.get(\"key\");\n            System.out.println(value);\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.LoadingCache",
        "write_method": "put",
        "read_class": "com.google.common.cache.LoadingCache",
        "read_method": "get"
    }
}