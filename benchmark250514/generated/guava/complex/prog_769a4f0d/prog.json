{
    "java_code": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableBiMap.Builder;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String, Integer> builder = ImmutableBiMap.builder();\n        \n        // Additional unrelated code\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"hello\", \"world\");\n        stringMap.put(\"foo\", \"bar\");\n        \n        for (Map.Entry<String, String> entry : stringMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        // Another similar API pair usage\n        Builder<String, String> stringBuilder = ImmutableBiMap.builder();\n        stringBuilder.put(\"apple\", \"fruit\");\n        stringBuilder.put(\"carrot\", \"vegetable\");\n        \n        ImmutableBiMap<String, String> stringBiMap = stringBuilder.build();\n        System.out.println(stringBiMap.get(\"apple\"));\n        \n        // Complex operations before the original write\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n        \n        /* write */ builder.put(\"key\", 42);\n        \n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        // More complex operations after the original write\n        Map<Integer, String> numberMap = new HashMap<>();\n        numberMap.put(1, \"one\");\n        numberMap.put(2, \"two\");\n        \n        for (Map.Entry<Integer, String> entry : numberMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        /* read */ int value = biMap.get(\"key\");\n        \n        System.out.println(value);\n        \n        // Final additional operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableBiMap.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String, Integer> builder = ImmutableBiMap.builder();\n        /* write */ builder.put(\"key\", 42);\n        \n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        /* read */ int value = biMap.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    }
}