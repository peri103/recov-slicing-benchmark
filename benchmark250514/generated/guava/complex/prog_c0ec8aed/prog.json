{
    "java_code": "import com.google.common.collect.ImmutableMultiset;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Creating a builder for ImmutableMultiset\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n\n        // Adding elements to the builder\n        builder.add(\"banana\");\n        builder.add(\"orange\");\n        \n        // Using a HashMap to store some data\n        Map<String, Integer> fruitCounts = new HashMap<>();\n        fruitCounts.put(\"banana\", 2);\n        fruitCounts.put(\"orange\", 3);\n\n        // Adding more elements to the builder\n        /* write */ builder.add(\"apple\");\n        \n        // Building the ImmutableMultiset\n        ImmutableMultiset<String> multiset = builder.build();\n\n        // Creating an ImmutableSet\n        ImmutableSet<String> fruitSet = ImmutableSet.of(\"apple\", \"banana\", \"orange\");\n\n        // Iterating over the fruit set and printing each fruit\n        for (String fruit : fruitSet) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n\n        // Retrieving and printing the count of \"apple\" from the multiset\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(\"Count of apple: \" + count);\n\n        // Using the fruitCounts map to print the count of each fruit\n        for (Map.Entry<String, Integer> entry : fruitCounts.entrySet()) {\n            System.out.println(\"Fruit: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n\n        // Additional logic to check if a fruit is in the set\n        if (fruitSet.contains(\"apple\")) {\n            System.out.println(\"Apple is in the set.\");\n        } else {\n            System.out.println(\"Apple is not in the set.\");\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableMultiset;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableMultiset.Builder<String> builder = ImmutableMultiset.builder();\n        /* write */ builder.add(\"apple\");\n        ImmutableMultiset<String> multiset = builder.build();\n        /* read */ int count = multiset.count(\"apple\");\n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableMultiset",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableMultiset",
        "read_method": "count"
    }
}