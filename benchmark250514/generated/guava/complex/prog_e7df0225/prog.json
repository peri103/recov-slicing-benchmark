{
    "java_code": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original ImmutableTable usage\n        ImmutableTable.Builder<String, String, Integer> builder = ImmutableTable.builder();\n        \n        /* write */\n        builder.put(\"row1\", \"column1\", 42);\n        \n        ImmutableTable<String, String, Integer> table = builder.build();\n        \n        // Additional code for complexity\n        ImmutableTable.Builder<String, String, String> builder2 = ImmutableTable.builder();\n        builder2.put(\"row2\", \"column2\", \"Hello\");\n        builder2.put(\"row3\", \"column3\", \"World\");\n        ImmutableTable<String, String, String> table2 = builder2.build();\n        \n        // Unrelated operations with ImmutableList\n        ImmutableList.Builder<Integer> listBuilder = ImmutableList.builder();\n        for (int i = 0; i < 5; i++) {\n            listBuilder.add(i * 10);\n        }\n        ImmutableList<Integer> immutableList = listBuilder.build();\n        \n        for (Integer num : immutableList) {\n            System.out.println(num);\n        }\n        \n        // Complex operations with ImmutableTable\n        String message = table2.get(\"row2\", \"column2\") + \" \" + table2.get(\"row3\", \"column3\");\n        System.out.println(message);\n        \n        // Original read operation\n        /* read */\n        Integer value = table.get(\"row1\", \"column1\");\n        \n        System.out.println(value);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableTable.Builder<String, String, Integer> builder = ImmutableTable.builder();\n        \n        /* write */\n        builder.put(\"row1\", \"column1\", 42);\n        \n        ImmutableTable<String, String, Integer> table = builder.build();\n        \n        /* read */\n        Integer value = table.get(\"row1\", \"column1\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    }
}