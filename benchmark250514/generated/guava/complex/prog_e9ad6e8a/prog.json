{
    "java_code": "import com.google.common.collect.ImmutableBiMap;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableBiMap.Builder<String, Integer> builder = new ImmutableBiMap.Builder<>();\n        builder.put(\"anotherKey\", 100);\n        builder.put(\"yetAnotherKey\", 200);\n        \n        ImmutableMap.Builder<String, String> stringBuilder = new ImmutableMap.Builder<>();\n        stringBuilder.put(\"hello\", \"world\");\n        stringBuilder.put(\"foo\", \"bar\");\n        \n        /* write */ builder.put(\"key\", 42);\n        \n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        \n        ImmutableMap<String, String> stringMap = stringBuilder.build();\n        \n        int sum = 0;\n        for (String key : biMap.keySet()) {\n            sum += biMap.get(key);\n        }\n        \n        System.out.println(\"Sum of values in biMap: \" + sum);\n        \n        for (String key : stringMap.keySet()) {\n            System.out.println(key + \" -> \" + stringMap.get(key));\n        }\n        \n        /* read */ Integer value = biMap.get(\"key\");\n        System.out.println(value);\n        \n        int product = 1;\n        for (Integer val : biMap.values()) {\n            product *= val;\n        }\n        \n        System.out.println(\"Product of values in biMap: \" + product);\n        \n        StringBuilder concatenatedKeys = new StringBuilder();\n        for (String key : stringMap.keySet()) {\n            concatenatedKeys.append(key);\n        }\n        \n        System.out.println(\"Concatenated keys in stringMap: \" + concatenatedKeys.toString());\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableBiMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableBiMap.Builder<String, Integer> builder = new ImmutableBiMap.Builder<>();\n        /* write */ builder.put(\"key\", 42);\n        ImmutableBiMap<String, Integer> biMap = builder.build();\n        /* read */ Integer value = biMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableBiMap",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableBiMap",
        "read_method": "get"
    }
}