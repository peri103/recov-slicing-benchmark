{
    "java_code": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\nimport com.google.common.collect.ImmutableList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a builder for ImmutableRangeSet\n        ImmutableRangeSet.Builder<Integer> builder = ImmutableRangeSet.builder();\n\n        // Add a range to the builder\n        /* write */ builder.add(Range.closed(1, 10));\n\n        // Create another ImmutableRangeSet with different ranges\n        ImmutableRangeSet.Builder<Integer> anotherBuilder = ImmutableRangeSet.builder();\n        anotherBuilder.add(Range.closed(20, 30));\n        anotherBuilder.add(Range.closed(40, 50));\n        ImmutableRangeSet<Integer> anotherRangeSet = anotherBuilder.build();\n\n        // Create a complex data structure using ImmutableList and a Map\n        ImmutableList<String> immutableList = ImmutableList.of(\"apple\", \"banana\", \"cherry\");\n        Map<String, Integer> fruitMap = new HashMap<>();\n        for (String fruit : immutableList) {\n            fruitMap.put(fruit, fruit.length());\n        }\n\n        // Output the fruit lengths\n        for (Map.Entry<String, Integer> entry : fruitMap.entrySet()) {\n            System.out.println(\"Fruit: \" + entry.getKey() + \", Length: \" + entry.getValue());\n        }\n\n        // Build the original ImmutableRangeSet\n        ImmutableRangeSet<Integer> rangeSet = builder.build();\n\n        // Perform some operations with anotherRangeSet\n        boolean containsInAnother = anotherRangeSet.contains(25);\n        System.out.println(\"Contains 25 in anotherRangeSet: \" + containsInAnother);\n\n        // Check if the original rangeSet contains a specific value\n        /* read */ boolean contains = rangeSet.contains(5);\n        System.out.println(\"Contains 5 in rangeSet: \" + contains);\n\n        // More complex operations\n        for (int i = 0; i < 100; i += 10) {\n            if (rangeSet.contains(i)) {\n                System.out.println(i + \" is within the original rangeSet.\");\n            } else if (anotherRangeSet.contains(i)) {\n                System.out.println(i + \" is within the anotherRangeSet.\");\n            } else {\n                System.out.println(i + \" is not contained in any rangeSet.\");\n            }\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableRangeSet.Builder<Integer> builder = ImmutableRangeSet.builder();\n        /* write */ builder.add(Range.closed(1, 10));\n        ImmutableRangeSet<Integer> rangeSet = builder.build();\n        /* read */ boolean contains = rangeSet.contains(5);\n        System.out.println(contains);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ImmutableRangeSet",
        "read_method": "contains"
    }
}