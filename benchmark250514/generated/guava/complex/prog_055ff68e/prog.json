{
    "java_code": "import com.google.common.collect.ForwardingSet;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Set<Integer> backingSet = new HashSet<>();\n        ForwardingSet<Integer> forwardingSet = new ForwardingSet<Integer>() {\n            @Override\n            protected Set<Integer> delegate() {\n                return backingSet;\n            }\n        };\n\n        // Additional unrelated code to increase complexity\n        ArrayList<Integer> arrayList = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            arrayList.add(i * 2);\n        }\n\n        // Additional set operations\n        Set<Integer> anotherSet = new HashSet<>();\n        for (int i = 0; i < 5; i++) {\n            anotherSet.add(i);\n        }\n        for (Integer num : anotherSet) {\n            forwardingSet.add(num * 3);\n        }\n\n        // Original write operation\n        /* write */ forwardingSet.add(42);\n\n        // Additional operations with arrayList\n        for (int i = 0; i < arrayList.size(); i++) {\n            System.out.println(\"ArrayList element: \" + arrayList.get(i));\n        }\n\n        // Manipulating anotherSet\n        anotherSet.remove(3);\n        anotherSet.add(15);\n\n        // Original read operation\n        /* read */ boolean containsValue = forwardingSet.contains(42);\n        System.out.println(\"Contains 42: \" + containsValue);\n\n        // Additional logic to interact with forwardingSet\n        for (Integer num : forwardingSet) {\n            System.out.println(\"ForwardingSet element: \" + num);\n        }\n\n        // Check if forwardingSet contains elements from anotherSet\n        for (Integer num : anotherSet) {\n            System.out.println(\"ForwardingSet contains \" + num + \": \" + forwardingSet.contains(num));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingSet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        Set<Integer> backingSet = new HashSet<>();\n        ForwardingSet<Integer> forwardingSet = new ForwardingSet<Integer>() {\n            @Override\n            protected Set<Integer> delegate() {\n                return backingSet;\n            }\n        };\n\n        /* write */ forwardingSet.add(42);\n        /* read */ boolean containsValue = forwardingSet.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingSet",
        "read_method": "contains"
    }
}