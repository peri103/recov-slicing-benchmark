{
    "java_code": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableTable.Builder;\nimport com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for ImmutableTable\n        Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n\n        // Create a HashBasedTable for additional complexity\n        Table<String, String, Integer> hashTable = HashBasedTable.create();\n\n        // Populate the HashBasedTable with some data\n        hashTable.put(\"row2\", \"column2\", 100);\n        hashTable.put(\"row3\", \"column3\", 200);\n\n        // Perform operations on the HashBasedTable\n        int hashTableValue = hashTable.get(\"row2\", \"column2\");\n        System.out.println(\"HashTable Value: \" + hashTableValue);\n\n        // Add more data to ImmutableTable builder\n        builder.put(\"row4\", \"column4\", 300);\n\n        // Insert write operation for ImmutableTable\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Build the ImmutableTable\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Perform some unrelated operations\n        int unrelatedCalculation = hashTableValue * 2;\n        System.out.println(\"Unrelated Calculation: \" + unrelatedCalculation);\n\n        // Insert some more operations before read\n        int anotherValue = hashTable.get(\"row3\", \"column3\");\n        System.out.println(\"Another HashTable Value: \" + anotherValue);\n\n        // Read value from ImmutableTable\n        /* read */ int value = table.get(\"row1\", \"column1\");\n\n        // Print the read value\n        System.out.println(\"ImmutableTable Value: \" + value);\n\n        // Perform additional operations\n        int finalCalculation = value + anotherValue;\n        System.out.println(\"Final Calculation: \" + finalCalculation);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableTable.Builder;\n\npublic class Main {\n    public static void main(String[] args) {\n        Builder<String, String, Integer> builder = new ImmutableTable.Builder<>();\n        \n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        /* read */ int value = table.get(\"row1\", \"column1\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "put",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    }
}