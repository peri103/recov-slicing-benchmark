{
    "java_code": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a map with some initial values\n        Map<Integer, String> initialMap = new HashMap<>();\n        initialMap.put(20, \"InitialValue1\");\n        initialMap.put(30, \"InitialValue2\");\n\n        // Add some more values to the map\n        for (int i = 40; i < 50; i++) {\n            initialMap.put(i, \"Value\" + i);\n        }\n\n        // Use the ImmutableRangeMap builder\n        ImmutableRangeMap.Builder<Integer, String> builder = ImmutableRangeMap.builder();\n        /* write */ builder.put(Range.closed(1, 10), \"Value1\");\n        \n        // Add additional ranges to the builder\n        builder.put(Range.closed(15, 20), \"Value2\");\n        builder.put(Range.closed(25, 30), \"Value3\");\n\n        // Build the ImmutableRangeMap\n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n\n        // Perform some operations on the initial map\n        for (Map.Entry<Integer, String> entry : initialMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Read from the ImmutableRangeMap\n        /* read */ String value = rangeMap.get(5);\n        System.out.println(value);\n\n        // Check values in the ImmutableRangeMap\n        for (int i = 1; i <= 30; i += 5) {\n            String mapValue = rangeMap.get(i);\n            if (mapValue != null) {\n                System.out.println(\"RangeMap Value at \" + i + \": \" + mapValue);\n            }\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableRangeMap;\nimport com.google.common.collect.Range;\n\npublic class Main {\n    public static void main(String[] args) {\n        ImmutableRangeMap.Builder<Integer, String> builder = ImmutableRangeMap.builder();\n        /* write */ builder.put(Range.closed(1, 10), \"Value1\");\n        \n        ImmutableRangeMap<Integer, String> rangeMap = builder.build();\n        /* read */ String value = rangeMap.get(5);\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableRangeMap",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableRangeMap",
        "read_method": "get"
    }
}