{
    "java_code": "import com.google.common.collect.LinkedListMultimap;\nimport com.google.common.collect.ArrayListMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the LinkedListMultimap\n        LinkedListMultimap<String, Integer> multimap = LinkedListMultimap.create();\n        \n        // Additional Multimap and operations\n        ArrayListMultimap<String, String> additionalMultimap = ArrayListMultimap.create();\n        additionalMultimap.put(\"fruit\", \"apple\");\n        additionalMultimap.put(\"fruit\", \"banana\");\n        \n        // Use the put method to write a value to the multimap\n        /* write */ multimap.put(\"key\", 42);\n        \n        // Perform operations on additionalMultimap\n        System.out.println(\"Fruits:\");\n        for (String fruit : additionalMultimap.get(\"fruit\")) {\n            System.out.println(fruit);\n        }\n        \n        // Additional logic to manipulate data\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n        \n        // Use the get method to read the value from the multimap\n        /* read */ Integer value = multimap.get(\"key\").get(0);\n        \n        // Print the value to verify the operation\n        System.out.println(\"Value from LinkedListMultimap: \" + value);\n        \n        // More complex logic\n        ArrayListMultimap<Integer, String> numberToWordMap = ArrayListMultimap.create();\n        numberToWordMap.put(1, \"one\");\n        numberToWordMap.put(2, \"two\");\n        numberToWordMap.put(3, \"three\");\n        \n        System.out.println(\"Number to words:\");\n        for (int number : numberToWordMap.keySet()) {\n            System.out.println(number + \" -> \" + numberToWordMap.get(number));\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.LinkedListMultimap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the LinkedListMultimap\n        LinkedListMultimap<String, Integer> multimap = LinkedListMultimap.create();\n        \n        // Use the put method to write a value to the multimap\n        /* write */ multimap.put(\"key\", 42);\n        \n        // Use the get method to read the value from the multimap\n        /* read */ Integer value = multimap.get(\"key\").get(0);\n        \n        // Print the value to verify the operation\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.LinkedListMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.LinkedListMultimap",
        "read_method": "get"
    }
}