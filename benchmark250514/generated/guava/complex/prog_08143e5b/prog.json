{
    "java_code": "import com.google.common.collect.ForwardingSet;\nimport com.google.common.collect.ForwardingList;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an anonymous class extending ForwardingSet\n        ForwardingSet<Integer> set = new ForwardingSet<Integer>() {\n            private final Set<Integer> delegate = new HashSet<Integer>();\n\n            @Override\n            protected Set<Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        // Create an anonymous class extending ForwardingList\n        ForwardingList<String> list = new ForwardingList<String>() {\n            private final List<String> delegate = new ArrayList<String>();\n\n            @Override\n            protected List<String> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ set.add(42); // Use the add method to write the value\n\n        // Add elements to the list\n        list.add(\"Hello\");\n        list.add(\"World\");\n        list.add(\"!\");\n\n        // Iterate over the list and print each element\n        for (String s : list) {\n            System.out.println(s);\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Use a different ForwardingSet to demonstrate similar functionality\n        ForwardingSet<String> stringSet = new ForwardingSet<String>() {\n            private final Set<String> delegate = new HashSet<String>();\n\n            @Override\n            protected Set<String> delegate() {\n                return delegate;\n            }\n        };\n\n        stringSet.add(\"Apple\");\n        stringSet.add(\"Banana\");\n\n        // Check if elements are in the stringSet\n        System.out.println(\"Contains Apple: \" + stringSet.contains(\"Apple\"));\n        System.out.println(\"Contains Banana: \" + stringSet.contains(\"Banana\"));\n\n        /* read */ boolean containsValue = set.contains(42); // Use the contains method to read the value\n\n        System.out.println(\"Contains 42: \" + containsValue);\n\n        // More unrelated operations\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 100);\n        }\n\n        for (int num : numbers) {\n            System.out.println(\"Number: \" + num);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ForwardingSet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an anonymous class extending ForwardingSet\n        ForwardingSet<Integer> set = new ForwardingSet<Integer>() {\n            private final Set<Integer> delegate = new HashSet<Integer>();\n\n            @Override\n            protected Set<Integer> delegate() {\n                return delegate;\n            }\n        };\n\n        /* write */ set.add(42); // Use the add method to write the value\n\n        /* read */ boolean containsValue = set.contains(42); // Use the contains method to read the value\n\n        System.out.println(\"Contains 42: \" + containsValue);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ForwardingSet",
        "write_method": "add",
        "read_class": "com.google.common.collect.ForwardingSet",
        "read_method": "contains"
    }
}