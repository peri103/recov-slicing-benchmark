{
    "java_code": "import com.google.common.collect.ImmutableTable;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableTable\n        ImmutableTable.Builder<String, String, Integer> builder = ImmutableTable.builder();\n\n        // Add a value to the table\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Create a complex data structure using ImmutableList and ImmutableMap\n        ImmutableList<String> list = ImmutableList.of(\"item1\", \"item2\", \"item3\");\n        ImmutableMap<String, Integer> map = ImmutableMap.of(\"key1\", 100, \"key2\", 200);\n\n        // Perform operations on the list\n        for (String item : list) {\n            System.out.println(\"List item: \" + item);\n        }\n\n        // Perform operations on the map\n        for (String key : map.keySet()) {\n            System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n        }\n\n        // Build the ImmutableTable\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            sum += i * 10;\n            System.out.println(\"Sum increment: \" + sum);\n        }\n\n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        System.out.println(\"Read value from table: \" + value);\n\n        // More complex operations\n        ImmutableList<Integer> numbers = ImmutableList.of(1, 2, 3, 4, 5);\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n            System.out.println(\"Product increment: \" + product);\n        }\n    }\n}",
    "java_code_simple": "import com.google.common.collect.ImmutableTable;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a builder for the ImmutableTable\n        ImmutableTable.Builder<String, String, Integer> builder = ImmutableTable.builder();\n\n        // Add a value to the table\n        /* write */ builder.put(\"row1\", \"column1\", 42);\n\n        // Build the ImmutableTable\n        ImmutableTable<String, String, Integer> table = builder.build();\n\n        // Read the value from the table\n        /* read */ Integer value = table.get(\"row1\", \"column1\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.ImmutableTable",
        "write_method": "builder",
        "read_class": "com.google.common.collect.ImmutableTable",
        "read_method": "get"
    }
}