{
    "java_code": "import com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.Cache;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.RemovalListener;\nimport com.google.common.cache.RemovalNotification;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a cache with CacheBuilder\n        LoadingCache<String, Integer> cache = CacheBuilder.newBuilder()\n            .maximumSize(100)\n            .removalListener(new RemovalListener<String, Integer>() {\n                @Override\n                public void onRemoval(RemovalNotification<String, Integer> notification) {\n                    System.out.println(\"Removed: \" + notification.getKey() + \", \" + notification.getValue());\n                }\n            })\n            .build(new CacheLoader<String, Integer>() {\n                @Override\n                public Integer load(String key) throws Exception {\n                    return 0;\n                }\n            });\n\n        // Write to the cache\n        /* write */ cache.put(\"key1\", 42);\n\n        // Read from the cache\n        try {\n            /* read */ int value = cache.get(\"key1\");\n            System.out.println(value);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.CacheBuilder",
        "write_method": "build",
        "read_class": "com.google.common.cache.Cache",
        "read_method": "get"
    }
}