{
    "java_code": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport com.google.common.cache.CacheLoader;\nimport com.google.common.cache.LoadingCache;\nimport com.google.common.cache.CacheLoader.InvalidCacheLoadException;\nimport java.util.concurrent.ExecutionException;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CacheLoader to load values into the cache\n        CacheLoader<String, String> loader = new CacheLoader<String, String>() {\n            @Override\n            public String load(String key) throws Exception {\n                return \"Value for \" + key;\n            }\n        };\n\n        // Use CacheBuilder to build a LoadingCache instance\n        /* write */ LoadingCache<String, String> cache = CacheBuilder.newBuilder().build(loader);\n\n        // Write a value into the cache\n        cache.put(\"key1\", \"value1\");\n\n        try {\n            // Read the value from the cache\n            /* read */ String value = cache.get(\"key1\");\n            System.out.println(value);\n        } catch (ExecutionException e) {\n            System.err.println(\"Error loading value from cache: \" + e.getMessage());\n        } catch (InvalidCacheLoadException e) {\n            System.err.println(\"Error: \" + e.getMessage());\n        }\n    }\n}",
    "pair": {
        "write_class": "com.google.common.cache.CacheBuilder",
        "write_method": "build",
        "read_class": "com.google.common.cache.Cache",
        "read_method": "get"
    }
}