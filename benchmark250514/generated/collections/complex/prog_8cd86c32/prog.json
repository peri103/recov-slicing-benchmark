{
    "java_code": "import org.apache.commons.collections4.map.TransformedMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing a map and transforming it\n        Map<String, Integer> map = new HashMap<>();\n        TransformedMap<String, Integer> transformedMap = TransformedMap.transformedMap(map, null, null);\n        \n        // Additional unrelated code to increase complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        \n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Write operation\n        /* write */ transformedMap.put(\"key\", 42);\n        \n        // More unrelated code\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"name\", \"Alice\");\n        stringMap.put(\"city\", \"Wonderland\");\n        \n        for (Map.Entry<String, String> entry : stringMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        // Read operation\n        /* read */ int value = transformedMap.get(\"key\");\n        \n        System.out.println(\"Value from transformedMap: \" + value);\n        \n        // Further complexity with additional operations on the numbers list\n        numbers.add(100);\n        numbers.remove(0);\n        \n        int max = Integer.MIN_VALUE;\n        for (int num : numbers) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        \n        System.out.println(\"Max number in the list: \" + max);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.TransformedMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Map<String, Integer> map = new HashMap<>();\n        TransformedMap<String, Integer> transformedMap = TransformedMap.transformedMap(map, null, null);\n        \n        /* write */ transformedMap.put(\"key\", 42);\n        /* read */ int value = transformedMap.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.TransformedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.TransformedMap",
        "read_method": "get"
    }
}