{
    "java_code": "import org.apache.commons.collections4.map.AbstractSortedMapDecorator;\nimport java.util.TreeMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the underlying map\n        TreeMap<String, Integer> underlyingMap = new TreeMap<>();\n        \n        // Create an instance of AbstractSortedMapDecorator\n        AbstractSortedMapDecorator<String, Integer> mapDecorator = new AbstractSortedMapDecorator<>(underlyingMap) {};\n\n        // Create another map for unrelated operations\n        HashMap<String, String> unrelatedMap = new HashMap<>();\n        unrelatedMap.put(\"A\", \"Apple\");\n        unrelatedMap.put(\"B\", \"Banana\");\n\n        // Iterate through unrelatedMap and print values\n        for (String key : unrelatedMap.keySet()) {\n            System.out.println(\"Unrelated Map Key: \" + key + \", Value: \" + unrelatedMap.get(key));\n        }\n\n        // Perform some unrelated computations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i * i;\n        }\n        System.out.println(\"Sum of squares: \" + sum);\n\n        // Use the write method to put a value\n        /* write */ mapDecorator.put(\"key\", 100);\n\n        // Perform more unrelated operations\n        HashMap<Integer, String> anotherMap = new HashMap<>();\n        for (int i = 0; i < 5; i++) {\n            anotherMap.put(i, \"Value\" + i);\n        }\n\n        for (Integer key : anotherMap.keySet()) {\n            System.out.println(\"Another Map Key: \" + key + \", Value: \" + anotherMap.get(key));\n        }\n\n        // Use the read method to get the value\n        /* read */ int value = mapDecorator.get(\"key\");\n\n        // Print the value to verify\n        System.out.println(value);\n\n        // Perform additional unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of first 5 numbers: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractSortedMapDecorator;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the underlying map\n        TreeMap<String, Integer> underlyingMap = new TreeMap<>();\n        \n        // Create an instance of AbstractSortedMapDecorator\n        AbstractSortedMapDecorator<String, Integer> mapDecorator = new AbstractSortedMapDecorator<>(underlyingMap) {};\n\n        // Use the write method to put a value\n        /* write */ mapDecorator.put(\"key\", 100);\n\n        // Use the read method to get the value\n        /* read */ int value = mapDecorator.get(\"key\");\n\n        // Print the value to verify\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
        "read_method": "get"
    }
}