{
    "java_code": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of a HashMap to use with AbstractMapDecorator\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        // Create an instance of AbstractMapDecorator using the HashMap\n        AbstractMapDecorator<String, Integer> mapDecorator = new AbstractMapDecorator<String, Integer>(hashMap) {};\n\n        // Use the write method to put a value in the map\n        /* write */ mapDecorator.put(\"key\", 42);\n\n        // Create another map and perform operations\n        Map<String, String> anotherMap = new HashMap<>();\n        anotherMap.put(\"name\", \"Alice\");\n        anotherMap.put(\"city\", \"Wonderland\");\n\n        // Perform some operations on anotherMap\n        if (anotherMap.containsKey(\"name\")) {\n            String name = anotherMap.get(\"name\");\n            System.out.println(\"Name: \" + name);\n        }\n\n        // Add more elements to the original mapDecorator\n        mapDecorator.put(\"anotherKey\", 99);\n        mapDecorator.put(\"thirdKey\", 123);\n\n        // Iterate over the mapDecorator and print keys and values\n        for (Map.Entry<String, Integer> entry : mapDecorator.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Perform calculations using values from anotherMap\n        int sum = 0;\n        for (Integer value : mapDecorator.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values: \" + sum);\n\n        // Use the read method to get the value from the map\n        /* read */ Integer value = mapDecorator.get(\"key\");\n\n        // Print the value to ensure the read method worked correctly\n        System.out.println(\"Read value: \" + value);\n\n        // Perform a final operation on the mapDecorator\n        mapDecorator.put(\"finalKey\", sum * 2);\n        System.out.println(\"Final Key Value: \" + mapDecorator.get(\"finalKey\"));\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create an instance of a HashMap to use with AbstractMapDecorator\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        // Create an instance of AbstractMapDecorator using the HashMap\n        AbstractMapDecorator<String, Integer> mapDecorator = new AbstractMapDecorator<String, Integer>(hashMap) {};\n\n        // Use the write method to put a value in the map\n        /* write */ mapDecorator.put(\"key\", 42);\n\n        // Use the read method to get the value from the map\n        /* read */ Integer value = mapDecorator.get(\"key\");\n\n        // Print the value to ensure the read method worked correctly\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractMapDecorator",
        "read_method": "get"
    }
}