{
    "java_code": "import org.apache.commons.collections4.map.AbstractReferenceMap;\nimport org.apache.commons.collections4.map.ReferenceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ReferenceMap instance\n        AbstractReferenceMap<String, Integer> map = new ReferenceMap<>(AbstractReferenceMap.ReferenceStrength.SOFT, AbstractReferenceMap.ReferenceStrength.SOFT);\n\n        // Write operation: put a key-value pair into the map\n        /* write */ map.put(\"key\", 42);\n\n        // Additional unrelated code to increase complexity\n        Map<String, String> hashMap = new HashMap<>();\n        hashMap.put(\"name\", \"Alice\");\n        hashMap.put(\"city\", \"Wonderland\");\n\n        // Iterate over the HashMap and print entries\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // More unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Another map for demonstrating similar operations\n        AbstractReferenceMap<String, Integer> anotherMap = new ReferenceMap<>(AbstractReferenceMap.ReferenceStrength.WEAK, AbstractReferenceMap.ReferenceStrength.WEAK);\n        anotherMap.put(\"one\", 1);\n        anotherMap.put(\"two\", 2);\n\n        // Retrieve and print values from anotherMap\n        System.out.println(\"Value for 'one': \" + anotherMap.get(\"one\"));\n        System.out.println(\"Value for 'two': \" + anotherMap.get(\"two\"));\n\n        // Read operation: get the value associated with the key\n        /* read */ Integer value = map.get(\"key\");\n\n        // Print the value to verify the operation\n        System.out.println(\"Value for 'key': \" + value);\n\n        // Additional operations to further increase complexity\n        for (int i = 0; i < 5; i++) {\n            map.put(\"key\" + i, i * 10);\n        }\n\n        // Iterate and print values from the original map\n        for (int i = 0; i < 5; i++) {\n            System.out.println(\"Value for 'key\" + i + \"': \" + map.get(\"key\" + i));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractReferenceMap;\nimport org.apache.commons.collections4.map.ReferenceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ReferenceMap instance\n        AbstractReferenceMap<String, Integer> map = new ReferenceMap<>(AbstractReferenceMap.ReferenceStrength.SOFT, AbstractReferenceMap.ReferenceStrength.SOFT);\n\n        // Write operation: put a key-value pair into the map\n        /* write */ map.put(\"key\", 42);\n\n        // Read operation: get the value associated with the key\n        /* read */ Integer value = map.get(\"key\");\n\n        // Print the value to verify the operation\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractReferenceMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractReferenceMap",
        "read_method": "get"
    }
}