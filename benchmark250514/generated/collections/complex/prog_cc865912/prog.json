{
    "java_code": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original map and unmodifiable wrapper\n        MultiValuedMap<String, Integer> originalMap = new ArrayListValuedHashMap<>();\n        UnmodifiableMultiValuedMap<String, Integer> map = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(originalMap);\n\n        // Additional map operations\n        Map<String, String> simpleMap = new HashMap<>();\n        simpleMap.put(\"A\", \"Apple\");\n        simpleMap.put(\"B\", \"Banana\");\n        simpleMap.put(\"C\", \"Cherry\");\n\n        // Iterate over the simple map and print entries\n        for (Map.Entry<String, String> entry : simpleMap.entrySet()) {\n            System.out.println(entry.getKey() + \" = \" + entry.getValue());\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (int i = 1; i <= 5; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 5 natural numbers: \" + sum);\n\n        // Write operation on the original multi-valued map\n        /* write */ originalMap.put(\"key\", 42); // The write operation should be done on the original map\n\n        // More complex operations\n        Set<String> keys = simpleMap.keySet();\n        for (String key : keys) {\n            System.out.println(\"Key: \" + key);\n        }\n\n        // Perform a task with a loop\n        for (int i = 0; i < 3; i++) {\n            System.out.println(\"Loop iteration: \" + i);\n        }\n\n        // Read operation from the unmodifiable multi-valued map\n        /* read */ Integer value = map.get(\"key\").iterator().next(); // Retrieve the value from the unmodifiable map\n        System.out.println(\"Read value from multi-valued map: \" + value);\n\n        // Additional logic to manipulate data\n        Map<String, Integer> numberMap = new HashMap<>();\n        numberMap.put(\"One\", 1);\n        numberMap.put(\"Two\", 2);\n        numberMap.put(\"Three\", 3);\n\n        // Print values from the number map\n        for (Map.Entry<String, Integer> entry : numberMap.entrySet()) {\n            System.out.println(entry.getKey() + \" -> \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.MultiValuedMap;\nimport org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap;\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        MultiValuedMap<String, Integer> originalMap = new ArrayListValuedHashMap<>();\n        UnmodifiableMultiValuedMap<String, Integer> map = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(originalMap);\n\n        /* write */ originalMap.put(\"key\", 42); // The write operation should be done on the original map\n\n        /* read */ Integer value = map.get(\"key\").iterator().next(); // Retrieve the value from the unmodifiable map\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap",
        "read_method": "get"
    }
}