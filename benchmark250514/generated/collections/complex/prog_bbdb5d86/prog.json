{
    "java_code": "import org.apache.commons.collections4.map.MultiKeyMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        MultiKeyMap<String, Integer> map = new MultiKeyMap<>();\n        HashMap<String, String> hashMap = new HashMap<>();\n        \n        // Add some initial data to the hashMap\n        hashMap.put(\"A\", \"Apple\");\n        hashMap.put(\"B\", \"Banana\");\n        hashMap.put(\"C\", \"Cherry\");\n\n        /* write */ map.put(\"key1\", \"key2\", 42);\n\n        // Perform some operations on hashMap\n        for (Map.Entry<String, String> entry : hashMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Add more entries to hashMap\n        hashMap.put(\"D\", \"Date\");\n        hashMap.put(\"E\", \"Elderberry\");\n\n        // Accessing a value from hashMap\n        String fruit = hashMap.get(\"B\");\n        System.out.println(\"Fruit with key 'B': \" + fruit);\n\n        // Add another entry to the MultiKeyMap\n        map.put(\"key3\", \"key4\", 100);\n\n        // Accessing a value from MultiKeyMap\n        Integer anotherValue = map.get(\"key3\", \"key4\");\n        System.out.println(\"Value for keys ('key3', 'key4'): \" + anotherValue);\n\n        // More operations on hashMap\n        if (hashMap.containsKey(\"A\")) {\n            System.out.println(\"HashMap contains key 'A'\");\n        }\n\n        /* read */ int value = map.get(\"key1\", \"key2\");\n        System.out.println(\"Value for keys ('key1', 'key2'): \" + value);\n\n        // Final operations on hashMap\n        hashMap.remove(\"C\");\n        System.out.println(\"HashMap size after removal: \" + hashMap.size());\n\n        for (String key : hashMap.keySet()) {\n            System.out.println(\"Remaining key: \" + key);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.MultiKeyMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        MultiKeyMap<String, Integer> map = new MultiKeyMap<>();\n        /* write */ map.put(\"key1\", \"key2\", 42);\n        /* read */ int value = map.get(\"key1\", \"key2\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.MultiKeyMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.MultiKeyMap",
        "read_method": "get"
    }
}