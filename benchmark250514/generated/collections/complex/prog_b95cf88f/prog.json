{
    "java_code": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a HashMap which will be decorated by AbstractMapDecorator\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        // Create an instance of AbstractMapDecorator to wrap the HashMap\n        AbstractMapDecorator<String, Integer> mapDecorator = new AbstractMapDecorator<String, Integer>(hashMap) {};\n        \n        /* write */ mapDecorator.put(\"key\", 42);\n        \n        // Initialize another map for additional complexity\n        Map<String, String> additionalMap = new HashMap<>();\n        additionalMap.put(\"name\", \"Alice\");\n        additionalMap.put(\"city\", \"Wonderland\");\n        \n        // Perform some operations on the additional map\n        String name = additionalMap.get(\"name\");\n        System.out.println(\"Name: \" + name);\n        \n        // Iterate over the entries of the additional map\n        for (Map.Entry<String, String> entry : additionalMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n        \n        // More complex operations\n        Map<Integer, String> numberMap = new HashMap<>();\n        for (int i = 0; i < 5; i++) {\n            numberMap.put(i, \"Number \" + i);\n        }\n        \n        for (int i = 0; i < numberMap.size(); i++) {\n            System.out.println(numberMap.get(i));\n        }\n        \n        /* read */ Integer value = mapDecorator.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a HashMap which will be decorated by AbstractMapDecorator\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        // Create an instance of AbstractMapDecorator to wrap the HashMap\n        AbstractMapDecorator<String, Integer> mapDecorator = new AbstractMapDecorator<String, Integer>(hashMap) {};\n        \n        /* write */ mapDecorator.put(\"key\", 42);\n        \n        /* read */ Integer value = mapDecorator.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractMapDecorator",
        "read_method": "get"
    }
}