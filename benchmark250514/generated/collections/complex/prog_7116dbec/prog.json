{
    "java_code": "import org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.bag.PredicatedBag;\nimport org.apache.commons.collections4.Predicate;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a predicate that always returns true (no filtering)\n        Predicate<Object> truePredicate = object -> true;\n        \n        // Create a HashBag instance\n        Bag<String> hashBag = new HashBag<>();\n        \n        // Wrap the HashBag with a PredicatedBag using the truePredicate\n        PredicatedBag<String> predicatedBag = PredicatedBag.predicatedBag(hashBag, truePredicate);\n        \n        /* write */ predicatedBag.add(\"example\");\n\n        // Additional code to make the program more complex\n        Bag<Integer> integerBag = new HashBag<>();\n        integerBag.add(1);\n        integerBag.add(2);\n        integerBag.add(3);\n\n        int sum = 0;\n        for (Integer number : integerBag) {\n            sum += number;\n        }\n        System.out.println(\"Sum of integers in integerBag: \" + sum);\n\n        Predicate<Integer> evenPredicate = number -> number % 2 == 0;\n        PredicatedBag<Integer> evenBag = PredicatedBag.predicatedBag(integerBag, evenPredicate);\n        evenBag.add(4); // This will be accepted\n        // evenBag.add(5); // This will throw an exception due to the predicate\n\n        int evenSum = 0;\n        for (Integer number : evenBag) {\n            evenSum += number;\n        }\n        System.out.println(\"Sum of even integers in evenBag: \" + evenSum);\n\n        /* read */ int count = predicatedBag.getCount(\"example\");\n        \n        System.out.println(count);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.bag.PredicatedBag;\nimport org.apache.commons.collections4.Predicate;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a predicate that always returns true (no filtering)\n        Predicate<Object> truePredicate = object -> true;\n        \n        // Create a HashBag instance\n        Bag<String> hashBag = new HashBag<>();\n        \n        // Wrap the HashBag with a PredicatedBag using the truePredicate\n        PredicatedBag<String> predicatedBag = PredicatedBag.predicatedBag(hashBag, truePredicate);\n        \n        /* write */ predicatedBag.add(\"example\");\n\n        /* read */ int count = predicatedBag.getCount(\"example\");\n        \n        System.out.println(count);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.bag.PredicatedBag",
        "write_method": "add",
        "read_class": "org.apache.commons.collections4.bag.PredicatedBag",
        "read_method": "getCount"
    }
}