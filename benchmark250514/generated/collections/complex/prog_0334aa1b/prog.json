{
    "java_code": "import org.apache.commons.collections4.map.PredicatedMap;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\nimport org.apache.commons.collections4.map.ListOrderedMap;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a PredicatedMap with TruePredicate to allow any key/value pairs\n        Map<Object, Object> baseMap = new HashMap<>();\n        Predicate<Object> keyPredicate = TruePredicate.truePredicate();\n        Predicate<Object> valuePredicate = TruePredicate.truePredicate();\n        PredicatedMap<Object, Object> predicatedMap = PredicatedMap.predicatedMap(baseMap, keyPredicate, valuePredicate);\n\n        /* write */ predicatedMap.put(\"key\", \"value\");\n\n        // Create a ListOrderedMap and perform operations\n        ListOrderedMap<String, Integer> orderedMap = new ListOrderedMap<>();\n        orderedMap.put(\"one\", 1);\n        orderedMap.put(\"two\", 2);\n        orderedMap.put(\"three\", 3);\n\n        // Iterate over the ListOrderedMap and print values\n        for (String key : orderedMap.keySet()) {\n            System.out.println(\"OrderedMap Key: \" + key + \", Value: \" + orderedMap.get(key));\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (Integer value : orderedMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in orderedMap: \" + sum);\n\n        // Manipulate the baseMap\n        baseMap.put(\"extraKey\", \"extraValue\");\n        System.out.println(\"BaseMap ExtraKey: \" + baseMap.get(\"extraKey\"));\n\n        // Further operations on PredicatedMap\n        if (predicatedMap.containsKey(\"key\")) {\n            System.out.println(\"PredicatedMap contains 'key'\");\n        }\n\n        /* read */ Object value = predicatedMap.get(\"key\");\n\n        System.out.println(\"Read value from PredicatedMap: \" + value);\n\n        // Additional unrelated operations\n        Map<String, String> simpleMap = new HashMap<>();\n        simpleMap.put(\"hello\", \"world\");\n        simpleMap.put(\"foo\", \"bar\");\n\n        for (String key : simpleMap.keySet()) {\n            System.out.println(\"SimpleMap Key: \" + key + \", Value: \" + simpleMap.get(key));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.PredicatedMap;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a PredicatedMap with TruePredicate to allow any key/value pairs\n        Map<Object, Object> baseMap = new HashMap<>();\n        Predicate<Object> keyPredicate = TruePredicate.truePredicate();\n        Predicate<Object> valuePredicate = TruePredicate.truePredicate();\n        PredicatedMap<Object, Object> predicatedMap = PredicatedMap.predicatedMap(baseMap, keyPredicate, valuePredicate);\n\n        /* write */ predicatedMap.put(\"key\", \"value\");\n\n        /* read */ Object value = predicatedMap.get(\"key\");\n\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.PredicatedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.PredicatedMap",
        "read_method": "get"
    }
}