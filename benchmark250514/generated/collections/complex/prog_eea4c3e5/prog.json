{
    "java_code": "import org.apache.commons.collections4.map.PassiveExpiringMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a PassiveExpiringMap with a default expiration period of 5 seconds\n        PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String> expirationPolicy = \n            new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(5, TimeUnit.SECONDS);\n        PassiveExpiringMap<String, String> map = new PassiveExpiringMap<>(expirationPolicy);\n\n        // Create another PassiveExpiringMap for unrelated operations\n        PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<Integer, String> unrelatedExpirationPolicy = \n            new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(10, TimeUnit.SECONDS);\n        PassiveExpiringMap<Integer, String> unrelatedMap = new PassiveExpiringMap<>(unrelatedExpirationPolicy);\n\n        // Perform unrelated operations\n        unrelatedMap.put(1, \"UnrelatedValue1\");\n        unrelatedMap.put(2, \"UnrelatedValue2\");\n        String unrelatedValue = unrelatedMap.get(1);\n        System.out.println(\"Unrelated value: \" + unrelatedValue);\n\n        // Write a value to the original map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Perform some unrelated computations\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"A\", 10);\n        hashMap.put(\"B\", 20);\n        hashMap.put(\"C\", 30);\n\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of values in HashMap: \" + sum);\n\n        // Perform unrelated operations on the unrelated map\n        unrelatedMap.put(3, \"UnrelatedValue3\");\n        unrelatedMap.put(4, \"UnrelatedValue4\");\n        String unrelatedValue2 = unrelatedMap.get(3);\n        System.out.println(\"Another unrelated value: \" + unrelatedValue2);\n\n        // Read the value from the original map\n        /* read */ String value = map.get(\"key\");\n\n        // Print the value\n        System.out.println(value);\n\n        // Perform more unrelated computations\n        HashMap<Integer, String> reverseMap = new HashMap<>();\n        for (int i = 1; i <= 4; i++) {\n            reverseMap.put(i, unrelatedMap.get(i));\n        }\n\n        for (Map.Entry<Integer, String> entry : reverseMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.PassiveExpiringMap;\nimport java.util.concurrent.TimeUnit;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a PassiveExpiringMap with a default expiration period of 5 seconds\n        PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String> expirationPolicy = \n            new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(5, TimeUnit.SECONDS);\n        PassiveExpiringMap<String, String> map = new PassiveExpiringMap<>(expirationPolicy);\n\n        // Write a value to the map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Read the value from the map\n        /* read */ String value = map.get(\"key\");\n\n        // Print the value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.PassiveExpiringMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.PassiveExpiringMap",
        "read_method": "get"
    }
}