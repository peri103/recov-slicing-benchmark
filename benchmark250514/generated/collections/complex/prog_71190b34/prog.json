{
    "java_code": "import org.apache.commons.collections4.map.AbstractSortedMapDecorator;\nimport java.util.TreeMap;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map using TreeMap as the concrete implementation\n        AbstractSortedMapDecorator<String, Integer> map = new AbstractSortedMapDecorator<>(new TreeMap<String, Integer>()) {};\n        \n        // Initialize another map using HashMap\n        HashMap<String, Integer> anotherMap = new HashMap<>();\n        anotherMap.put(\"anotherKey\", 200);\n        \n        // Perform some operations on anotherMap\n        Integer anotherValue = anotherMap.get(\"anotherKey\");\n        System.out.println(\"Value from anotherMap: \" + anotherValue);\n        \n        // Add some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        /* write */ map.put(\"key\", 100);\n        \n        // More unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n\n        // Perform operations on anotherMap\n        anotherMap.put(\"anotherKey2\", 300);\n        Integer anotherValue2 = anotherMap.get(\"anotherKey2\");\n        System.out.println(\"Value from anotherKey2: \" + anotherValue2);\n\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n        \n        // Additional operations\n        int difference = 1000;\n        for (int i = 0; i < 5; i++) {\n            difference -= i * 10;\n        }\n        System.out.println(\"Difference after subtracting multiples of 10: \" + difference);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractSortedMapDecorator;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map using TreeMap as the concrete implementation\n        AbstractSortedMapDecorator<String, Integer> map = new AbstractSortedMapDecorator<>(new TreeMap<String, Integer>()) {};\n\n        /* write */ map.put(\"key\", 100);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
        "read_method": "get"
    }
}