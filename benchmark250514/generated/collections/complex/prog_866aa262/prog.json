{
    "java_code": "import org.apache.commons.collections4.map.AbstractSortedMapDecorator;\nimport java.util.TreeMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the AbstractSortedMapDecorator with a TreeMap\n        AbstractSortedMapDecorator<String, Integer> map = new AbstractSortedMapDecorator<>(new TreeMap<>()) {};\n\n        // Initialize another map and perform operations\n        Map<String, Integer> anotherMap = new HashMap<>();\n        anotherMap.put(\"key2\", 84);\n        anotherMap.put(\"key3\", 126);\n        \n        // Perform some unrelated operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        /* write */ map.put(\"key1\", 42);\n        \n        // Perform more operations on the unrelated map\n        anotherMap.put(\"key4\", 168);\n        int valueFromAnotherMap = anotherMap.get(\"key2\");\n        System.out.println(\"Value from anotherMap with key 'key2': \" + valueFromAnotherMap);\n        \n        // Use the AbstractSortedMapDecorator to perform another operation\n        map.put(\"key5\", 210);\n        \n        // More unrelated operations\n        int product = 1;\n        for (int num : numbers) {\n            product *= num;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n\n        /* read */ int value = map.get(\"key1\");\n        System.out.println(value);\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractSortedMapDecorator;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the AbstractSortedMapDecorator with a TreeMap\n        AbstractSortedMapDecorator<String, Integer> map = new AbstractSortedMapDecorator<>(new TreeMap<>()) {};\n\n        /* write */ map.put(\"key1\", 42);\n        /* read */ int value = map.get(\"key1\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
        "read_method": "get"
    }
}