{
    "java_code": "import org.apache.commons.collections4.map.AbstractSortedMapDecorator;\nimport java.util.TreeMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize TreeMap and AbstractSortedMapDecorator\n        TreeMap<Integer, String> treeMap = new TreeMap<>();\n        AbstractSortedMapDecorator<Integer, String> mapDecorator = new AbstractSortedMapDecorator<>(treeMap) {};\n\n        // Initialize HashMap for additional complexity\n        HashMap<Integer, String> hashMap = new HashMap<>();\n        hashMap.put(2, \"World\");\n        hashMap.put(3, \"Java\");\n\n        // Add more elements to TreeMap through mapDecorator\n        mapDecorator.put(4, \"Programming\");\n        mapDecorator.put(5, \"Language\");\n\n        // Manipulate HashMap\n        for (Map.Entry<Integer, String> entry : hashMap.entrySet()) {\n            mapDecorator.put(entry.getKey() * 10, entry.getValue().toUpperCase());\n        }\n\n        // Perform operations on mapDecorator\n        mapDecorator.put(6, \"Complexity\");\n        mapDecorator.put(7, \"Increase\");\n\n        /* write */ mapDecorator.put(1, \"Hello\");\n\n        // Add some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n\n        // Perform more operations on mapDecorator\n        mapDecorator.put(8, \"Challenge\");\n        mapDecorator.put(9, \"Code\");\n\n        // Iterate over mapDecorator to print values\n        for (Map.Entry<Integer, String> entry : mapDecorator.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        /* read */ String value = mapDecorator.get(1);\n\n        // Print the value read from mapDecorator\n        System.out.println(value);\n\n        // Additional operations for complexity\n        mapDecorator.put(10, \"End\");\n        mapDecorator.put(11, \"Test\");\n        \n        // Final iteration over mapDecorator\n        for (Map.Entry<Integer, String> entry : mapDecorator.entrySet()) {\n            System.out.println(\"Final Key: \" + entry.getKey() + \", Final Value: \" + entry.getValue());\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractSortedMapDecorator;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeMap<Integer, String> treeMap = new TreeMap<>();\n        AbstractSortedMapDecorator<Integer, String> mapDecorator = new AbstractSortedMapDecorator<>(treeMap) {};\n        \n        /* write */ mapDecorator.put(1, \"Hello\");\n        /* read */ String value = mapDecorator.get(1);\n        \n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
        "read_method": "get"
    }
}