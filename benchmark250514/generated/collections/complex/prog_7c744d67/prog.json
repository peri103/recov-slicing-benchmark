{
    "java_code": "import org.apache.commons.collections4.map.PassiveExpiringMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a PassiveExpiringMap with a default expiration time of 5 seconds\n        PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String> expirationPolicy =\n                new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(5000);\n        PassiveExpiringMap<String, String> map = new PassiveExpiringMap<>(expirationPolicy);\n        \n        // Write a key-value pair to the map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Create another map to store additional data\n        Map<String, Integer> additionalData = new HashMap<>();\n        additionalData.put(\"count\", 10);\n        additionalData.put(\"limit\", 100);\n\n        // Perform some operations on the additional data\n        int count = additionalData.get(\"count\");\n        int limit = additionalData.get(\"limit\");\n        for (int i = 0; i < count; i++) {\n            if (i == limit) {\n                break;\n            }\n            System.out.println(\"Processing item: \" + i);\n        }\n\n        // Check if the original map contains the key\n        if (map.containsKey(\"key\")) {\n            // Read the value associated with the key from the map\n            /* read */ String value = map.get(\"key\");\n            // Print the value\n            System.out.println(\"Retrieved value: \" + value);\n        }\n\n        // Add more key-value pairs to the map\n        map.put(\"anotherKey\", \"anotherValue\");\n        map.put(\"yetAnotherKey\", \"yetAnotherValue\");\n\n        // Iterate over the map and print all key-value pairs\n        for (Map.Entry<String, String> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Perform a final operation on the additional data\n        additionalData.put(\"newCount\", count * 2);\n        System.out.println(\"New count: \" + additionalData.get(\"newCount\"));\n    }\n}",
    "java_code_simple": "import org.apache.commons.collections4.map.PassiveExpiringMap;\nimport java.util.concurrent.TimeUnit;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a PassiveExpiringMap with a default expiration time of 5 seconds\n        PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String> expirationPolicy =\n                new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(5000);\n        PassiveExpiringMap<String, String> map = new PassiveExpiringMap<>(expirationPolicy);\n\n        // Write a key-value pair to the map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Read the value associated with the key from the map\n        /* read */ String value = map.get(\"key\");\n\n        // Print the value\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.collections4.map.PassiveExpiringMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.PassiveExpiringMap",
        "read_method": "get"
    }
}