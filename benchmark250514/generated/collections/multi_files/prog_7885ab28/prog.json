{
    "files": {
        "MultiValueContainer.java": "import org.apache.commons.collections4.map.MultiValueMap;\n\npublic class MultiValueContainer {\n    private MultiValueMap<String, String> multiValueMap = new MultiValueMap<>();\n\n    public void addEntry(String key, String value) {\n        /* write */ multiValueMap.put(key, value);\n    }\n\n    public Object getEntry(String key) {\n        return multiValueMap.get(key);\n    }\n}\n",
        "Course.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Course {\n    private String courseName;\n    private Map<String, Integer> studentScores = new HashMap<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudentScore(String studentName, int score) {\n        studentScores.put(studentName, score);\n    }\n\n    public Map<String, Integer> getStudentScores() {\n        return studentScores;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        MultiValueContainer container = new MultiValueContainer();\n        Course course = new Course(\"Mathematics\");\n\n        container.addEntry(\"key\", \"value\");\n\n        course.addStudentScore(\"Alice\", 85);\n        course.addStudentScore(\"Bob\", 90);\n\n        System.out.println(\"Student Scores: \" + course.getStudentScores());\n\n        // Perform some operations on the course\n        int totalScore = 0;\n        for (int score : course.getStudentScores().values()) {\n            totalScore += score;\n        }\n        System.out.println(\"Total Score: \" + totalScore);\n\n        // Retrieve entry from MultiValueContainer\n        /* read */ Object value = container.getEntry(\"key\");\n        System.out.println(\"Retrieved Entry from MultiValueContainer: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.MultiValueMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.MultiValueMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.MultiValueMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        MultiValueMap<String, String> multiValueMap = new MultiValueMap<>();\n        \n        /* write */ multiValueMap.put(\"key\", \"value\");\n        \n        /* read */ Object value = multiValueMap.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.MultiValueMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        MultiValueMap<String, String> multiValueMap = new MultiValueMap<>();\n        Map<String, Integer> simpleMap = new HashMap<>();\n        \n        simpleMap.put(\"one\", 1);\n        simpleMap.put(\"two\", 2);\n        \n        /* write */ multiValueMap.put(\"key\", \"value\");\n        \n        for (Map.Entry<String, Integer> entry : simpleMap.entrySet()) {\n            System.out.println(\"SimpleMap Entry: \" + entry.getKey() + \" = \" + entry.getValue());\n        }\n        \n        int sum = 0;\n        for (Integer value : simpleMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in SimpleMap: \" + sum);\n        \n        // Complex operations on MultiValueMap\n        multiValueMap.put(\"key\", \"anotherValue\");\n        multiValueMap.put(\"anotherKey\", \"thirdValue\");\n        \n        for (String key : multiValueMap.keySet()) {\n            System.out.println(\"MultiValueMap Key: \" + key);\n        }\n        \n        /* read */ Object value = multiValueMap.get(\"key\");\n        \n        System.out.println(\"Read value from MultiValueMap: \" + value);\n        \n        // Additional logic\n        if (!simpleMap.containsKey(\"three\")) {\n            simpleMap.put(\"three\", 3);\n        }\n        \n        System.out.println(\"Updated SimpleMap: \" + simpleMap);\n    }\n}"
}