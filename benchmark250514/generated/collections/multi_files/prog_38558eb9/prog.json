{
    "files": {
        "MultiKeyValueStore.java": "import org.apache.commons.collections4.map.MultiKeyMap;\n\npublic class MultiKeyValueStore {\n    private MultiKeyMap<String, Integer> map = new MultiKeyMap<>();\n\n    public void putValue(String key1, String key2, Integer value) {\n        /* write */ map.put(key1, key2, value);\n    }\n\n    public Integer getValue(String key1, String key2) {\n        return map.get(key1, key2);\n    }\n}\n",
        "Course.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Course {\n    private String courseName;\n    private Map<String, String> students = new HashMap<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(String studentId, String studentName) {\n        students.put(studentId, studentName);\n    }\n\n    public void displayStudents() {\n        for (Map.Entry<String, String> entry : students.entrySet()) {\n            System.out.println(\"Student ID: \" + entry.getKey() + \", Name: \" + entry.getValue());\n        }\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        MultiKeyValueStore store = new MultiKeyValueStore();\n        Course course = new Course(\"Computer Science\");\n\n        course.addStudent(\"001\", \"Alice\");\n        course.addStudent(\"002\", \"Bob\");\n        course.displayStudents();\n\n        store.putValue(\"key1\", \"key2\", 42);\n\n        // Adding more values to the store\n        store.putValue(\"key3\", \"key4\", 84);\n        store.putValue(\"key5\", \"key6\", 126);\n\n        // Performing operations on the store\n        Integer retrievedValue1 = store.getValue(\"key3\", \"key4\");\n        System.out.println(\"Retrieved Value 1: \" + retrievedValue1);\n\n        Integer retrievedValue2 = store.getValue(\"key5\", \"key6\");\n        System.out.println(\"Retrieved Value 2: \" + retrievedValue2);\n\n        /* read */ Integer originalValue = store.getValue(\"key1\", \"key2\");\n        System.out.println(\"Original Value from write-read pair: \" + originalValue);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.MultiKeyMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.MultiKeyMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.MultiKeyMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        MultiKeyMap<String, Integer> map = new MultiKeyMap<>();\n\n        /* write */ map.put(\"key1\", \"key2\", 42);\n\n        /* read */ Integer value = map.get(\"key1\", \"key2\");\n\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.MultiKeyMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        MultiKeyMap<String, Integer> map = new MultiKeyMap<>();\n        Map<String, String> simpleMap = new HashMap<>();\n\n        // Using simpleMap to store some values\n        simpleMap.put(\"A\", \"Apple\");\n        simpleMap.put(\"B\", \"Banana\");\n\n        // Performing some operations on simpleMap\n        for (Map.Entry<String, String> entry : simpleMap.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Adding more complexity with a loop\n        for (int i = 0; i < 3; i++) {\n            map.put(\"key\" + i, \"subkey\" + i, i * 10);\n        }\n\n        // Performing some operations on map\n        Integer sum = 0;\n        for (int i = 0; i < 3; i++) {\n            sum += map.get(\"key\" + i, \"subkey\" + i);\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n\n        /* write */ map.put(\"key1\", \"key2\", 42);\n\n        // More operations with simpleMap\n        simpleMap.put(\"C\", \"Cherry\");\n        System.out.println(\"Updated simpleMap: \" + simpleMap);\n\n        // More operations on map\n        if (map.containsKey(\"key1\", \"key2\")) {\n            System.out.println(\"Map contains key1, key2\");\n        }\n\n        /* read */ Integer value = map.get(\"key1\", \"key2\");\n\n        System.out.println(\"Value from original write-read pair: \" + value);\n\n        // Final operations to make the program more complex\n        for (int i = 0; i < 3; i++) {\n            map.put(\"finalKey\" + i, \"finalSubkey\" + i, i * 100);\n        }\n        for (int i = 0; i < 3; i++) {\n            System.out.println(\"Final Map Value: \" + map.get(\"finalKey\" + i, \"finalSubkey\" + i));\n        }\n    }\n}"
}