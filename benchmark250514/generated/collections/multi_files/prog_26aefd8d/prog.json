{
    "files": {
        "ExpiringMapWrapper.java": "import org.apache.commons.collections4.map.PassiveExpiringMap;\nimport java.util.concurrent.TimeUnit;\n\npublic class ExpiringMapWrapper {\n    private PassiveExpiringMap<String, String> map;\n\n    public ExpiringMapWrapper() {\n        PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String> expirationPolicy = \n            new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(5, TimeUnit.SECONDS);\n        map = new PassiveExpiringMap<>(expirationPolicy);\n    }\n\n    public void putValue(String key, String value) {\n        /* write */ map.put(key, value);\n    }\n\n    public String getValue(String key) {\n        return map.get(key);\n    }\n}",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private ExpiringMapWrapper expiringMap;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n        this.expiringMap = new ExpiringMapWrapper();\n    }\n\n    public void enrollCourse(String courseName) {\n        expiringMap.putValue(courseName, \"Enrolled\");\n    }\n\n    public String getCourseStatus(String courseName) {\n        return expiringMap.getValue(courseName);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}",
        "Course.java": "public class Course {\n    private String courseName;\n    private String instructor;\n\n    public Course(String courseName, String instructor) {\n        this.courseName = courseName;\n        this.instructor = instructor;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public String getInstructor() {\n        return instructor;\n    }\n}",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Bob\", 20);\n        Course course = new Course(\"Mathematics\", \"Dr. Smith\");\n\n        student.enrollCourse(course.getCourseName());\n\n        // Simulate some unrelated operations\n        int a = 5, b = 10;\n        int sum = a + b;\n        System.out.println(\"Sum: \" + sum);\n\n        // More unrelated operations\n        int product = a * b;\n        System.out.println(\"Product: \" + product);\n\n        // Read the course status\n        /* read */ String courseStatus = student.getCourseStatus(course.getCourseName());\n        System.out.println(\"Course Status for \" + course.getCourseName() + \": \" + courseStatus);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.PassiveExpiringMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.PassiveExpiringMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.PassiveExpiringMap;\nimport java.util.concurrent.TimeUnit;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a PassiveExpiringMap with expiration time of 5 seconds for each entry\n        PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String> expirationPolicy = \n            new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(5, TimeUnit.SECONDS);\n        PassiveExpiringMap<String, String> map = new PassiveExpiringMap<>(expirationPolicy);\n\n        // Write a key-value pair to the map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Read the value back from the map using the key\n        /* read */ String value = map.get(\"key\");\n\n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.PassiveExpiringMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a PassiveExpiringMap with expiration time of 5 seconds for each entry\n        PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String> expirationPolicy = \n            new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(5, TimeUnit.SECONDS);\n        PassiveExpiringMap<String, String> map = new PassiveExpiringMap<>(expirationPolicy);\n\n        // Create a HashMap for additional complexity\n        Map<String, Integer> hashMap = new HashMap<>();\n        hashMap.put(\"one\", 1);\n        hashMap.put(\"two\", 2);\n        \n        // Perform operations on HashMap\n        for (Map.Entry<String, Integer> entry : hashMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        // Perform some calculations\n        int sum = 0;\n        for (Integer value : hashMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum: \" + sum);\n\n        // Write a key-value pair to the PassiveExpiringMap\n        /* write */ map.put(\"key\", \"value\");\n\n        // Perform more operations on HashMap\n        hashMap.put(\"three\", 3);\n        hashMap.put(\"four\", 4);\n\n        // Calculate product of HashMap values\n        int product = 1;\n        for (Integer value : hashMap.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product: \" + product);\n\n        // Read the value back from the PassiveExpiringMap using the key\n        /* read */ String value = map.get(\"key\");\n\n        // Print the value\n        System.out.println(value);\n\n        // Perform final operations on HashMap\n        hashMap.put(\"five\", 5);\n        for (String key : hashMap.keySet()) {\n            System.out.println(\"Key: \" + key);\n        }\n    }\n}"
}