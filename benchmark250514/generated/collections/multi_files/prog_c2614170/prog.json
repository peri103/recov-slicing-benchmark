{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private StudentScores scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new StudentScores();\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public StudentScores getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "StudentScores.java": "import org.apache.commons.collections4.list.CursorableLinkedList;\n\npublic class StudentScores {\n    private CursorableLinkedList<Integer> scores = new CursorableLinkedList<>();\n\n    public void addScore(int score) {\n        /* write */ scores.add(score);\n    }\n\n    public int getScore(int index) {\n        return scores.get(index);\n    }\n\n    public int totalScores() {\n        int total = 0;\n        for (Integer score : scores) {\n            total += score;\n        }\n        return total;\n    }\n\n    public int size() {\n        return scores.size();\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Bob\");\n\n        // Adding scores to the student\n        student.addScore(85);\n        student.addScore(90);\n        student.addScore(75);\n\n        // Calculate total scores\n        int total = student.getScores().totalScores();\n        System.out.println(\"Total Scores: \" + total);\n\n        // Access a specific score using the read method\n        /* read */ int firstScore = student.getScores().getScore(0);\n        System.out.println(\"First Score: \" + firstScore);\n\n        // Print all scores\n        for (int i = 0; i < student.getScores().size(); i++) {\n            System.out.println(\"Score \" + (i + 1) + \": \" + student.getScores().getScore(i));\n        }\n\n        // Checking the student's name\n        System.out.println(\"Student Name: \" + student.getName());\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.list.CursorableLinkedList",
        "write_method": "add",
        "read_class": "org.apache.commons.collections4.list.CursorableLinkedList",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.list.CursorableLinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CursorableLinkedList<Integer> list = new CursorableLinkedList<>();\n        /* write */ list.add(42);\n        /* read */ int value = list.get(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.list.CursorableLinkedList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        CursorableLinkedList<Integer> list = new CursorableLinkedList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        \n        // Adding elements to the map\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        \n        // Iterating over the map and adding its values to the list\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            list.add(entry.getValue());\n        }\n\n        // Performing some arithmetic operations\n        int sum = 0;\n        for (int i = 0; i < list.size(); i++) {\n            sum += list.get(i);\n        }\n        System.out.println(\"Sum: \" + sum);\n\n        // Adding more elements to the list\n        list.add(100);\n        list.add(200);\n\n        // Performing conditional checks\n        if (list.contains(100)) {\n            System.out.println(\"List contains 100\");\n        }\n\n        // Adding a specific value using the write method\n        /* write */ list.add(42);\n        \n        // More complex operations\n        int product = 1;\n        for (int i = 0; i < list.size(); i++) {\n            product *= list.get(i);\n        }\n        System.out.println(\"Product: \" + product);\n\n        // Retrieving the value using the read method\n        /* read */ int value = list.get(0);\n        System.out.println(value);\n\n        // Additional list operations\n        list.remove(Integer.valueOf(200));\n        System.out.println(\"Size after removal: \" + list.size());\n\n        // Iterating over the list and printing each element\n        for (Integer num : list) {\n            System.out.println(\"List element: \" + num);\n        }\n    }\n}"
}