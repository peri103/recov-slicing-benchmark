{
    "files": {
        "CustomMap.java": "import org.apache.commons.collections4.map.AbstractReferenceMap;\nimport org.apache.commons.collections4.map.ReferenceMap;\n\npublic class CustomMap {\n    private AbstractReferenceMap<String, String> map;\n\n    public CustomMap() {\n        map = new ReferenceMap<>(AbstractReferenceMap.ReferenceStrength.SOFT, AbstractReferenceMap.ReferenceStrength.SOFT);\n    }\n\n    public void putValue(String key, String value) {\n        /* write */ map.put(key, value);\n    }\n\n    public String getValue(String key) {\n        return map.get(key);\n    }\n}\n",
        "Student.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Student {\n    private String name;\n    private Map<String, Integer> courseScores;\n\n    public Student(String name) {\n        this.name = name;\n        this.courseScores = new HashMap<>();\n    }\n\n    public void addCourseScore(String course, int score) {\n        courseScores.put(course, score);\n    }\n\n    public int getCourseScore(String course) {\n        return courseScores.getOrDefault(course, 0);\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a CustomMap instance and perform write operation\n        CustomMap customMap = new CustomMap();\n        customMap.putValue(\"key\", \"value\");\n\n        // Create a Student instance and add course scores\n        Student student = new Student(\"John Doe\");\n        student.addCourseScore(\"Math\", 95);\n        student.addCourseScore(\"Science\", 88);\n\n        // Retrieve and print course scores\n        System.out.println(student.getName() + \"'s Math score: \" + student.getCourseScore(\"Math\"));\n        System.out.println(student.getName() + \"'s Science score: \" + student.getCourseScore(\"Science\"));\n\n        // Perform unrelated operations\n        Map<String, Integer> numberMap = Map.of(\"one\", 1, \"two\", 2, \"three\", 3);\n        int total = numberMap.values().stream().mapToInt(Integer::intValue).sum();\n        System.out.println(\"Total of numbers: \" + total);\n\n        // Perform read operation from CustomMap\n        /* read */ String retrievedValue = customMap.getValue(\"key\");\n        System.out.println(\"Retrieved value from CustomMap: \" + retrievedValue);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractReferenceMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractReferenceMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractReferenceMap;\nimport org.apache.commons.collections4.map.ReferenceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map with appropriate reference type\n        AbstractReferenceMap<String, String> map = new ReferenceMap<>(AbstractReferenceMap.ReferenceStrength.SOFT, AbstractReferenceMap.ReferenceStrength.SOFT);\n\n        // Use the write method to put a value in the map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Use the read method to retrieve the value from the map\n        /* read */ String retrievedValue = map.get(\"key\");\n\n        // Print the retrieved value to ensure the read method worked correctly\n        System.out.println(retrievedValue);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.AbstractReferenceMap;\nimport org.apache.commons.collections4.map.ReferenceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize the map with appropriate reference type\n        AbstractReferenceMap<String, String> map = new ReferenceMap<>(AbstractReferenceMap.ReferenceStrength.SOFT, AbstractReferenceMap.ReferenceStrength.SOFT);\n\n        // Use the write method to put a value in the map\n        /* write */ map.put(\"key\", \"value\");\n\n        // Create a separate map and add multiple entries\n        Map<String, Integer> numberMap = new HashMap<>();\n        numberMap.put(\"one\", 1);\n        numberMap.put(\"two\", 2);\n        numberMap.put(\"three\", 3);\n\n        // Perform operations on the numberMap\n        int sum = 0;\n        for (String key : numberMap.keySet()) {\n            sum += numberMap.get(key);\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Use the read method to retrieve the value from the map\n        /* read */ String retrievedValue = map.get(\"key\");\n\n        // Print the retrieved value to ensure the read method worked correctly\n        System.out.println(retrievedValue);\n\n        // Further operations with numberMap\n        numberMap.put(\"four\", 4);\n        numberMap.put(\"five\", 5);\n\n        int product = 1;\n        for (Integer value : numberMap.values()) {\n            product *= value;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n\n        // Additional unrelated operations\n        Map<String, String> stringMap = new HashMap<>();\n        stringMap.put(\"hello\", \"world\");\n        stringMap.put(\"foo\", \"bar\");\n\n        for (Map.Entry<String, String> entry : stringMap.entrySet()) {\n            System.out.println(entry.getKey() + \" -> \" + entry.getValue());\n        }\n    }\n}"
}