{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private Course course;\n\n    public Student(String name, int age, Course course) {\n        this.name = name;\n        this.age = age;\n        this.course = course;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n}\n",
        "Course.java": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport java.util.HashMap;\n\npublic class Course {\n    private String courseName;\n    private AbstractMapDecorator<String, Integer> grades;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.grades = new AbstractMapDecorator<String, Integer>(new HashMap<>()) {};\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public void addGrade(String studentName, int grade) {\n        /* write */ grades.put(studentName, grade);\n    }\n\n    public Integer getGrade(String studentName) {\n        return grades.get(studentName);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a course\n        Course course = new Course(\"Mathematics\");\n\n        // Create a student and enroll in the course\n        Student student = new Student(\"Alice\", 20, course);\n\n        // Add a grade for the student\n        course.addGrade(student.getName(), 95);\n\n        // Retrieve and print the grade\n        /* read */ Integer grade = course.getGrade(student.getName());\n        System.out.println(\"Grade for \" + student.getName() + \" in \" + student.getCourse().getCourseName() + \": \" + grade);\n\n        // Additional operations\n        Student anotherStudent = new Student(\"Bob\", 22, course);\n        course.addGrade(anotherStudent.getName(), 88);\n\n        Integer anotherGrade = course.getGrade(anotherStudent.getName());\n        System.out.println(\"Grade for \" + anotherStudent.getName() + \" in \" + anotherStudent.getCourse().getCourseName() + \": \" + anotherGrade);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.AbstractMapDecorator",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.AbstractMapDecorator",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a HashMap which will be decorated by AbstractMapDecorator\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        // Create an instance of AbstractMapDecorator to wrap the HashMap\n        AbstractMapDecorator<String, Integer> mapDecorator = new AbstractMapDecorator<String, Integer>(hashMap) {};\n        \n        /* write */ mapDecorator.put(\"key\", 42);\n        \n        /* read */ Integer value = mapDecorator.get(\"key\");\n        \n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.AbstractMapDecorator;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a HashMap which will be decorated by AbstractMapDecorator\n        HashMap<String, Integer> hashMap = new HashMap<>();\n        \n        // Create an instance of AbstractMapDecorator to wrap the HashMap\n        AbstractMapDecorator<String, Integer> mapDecorator = new AbstractMapDecorator<String, Integer>(hashMap) {};\n        \n        /* write */ mapDecorator.put(\"key\", 42);\n        \n        // Initialize another map for additional complexity\n        Map<String, String> additionalMap = new HashMap<>();\n        additionalMap.put(\"name\", \"Alice\");\n        additionalMap.put(\"city\", \"Wonderland\");\n        \n        // Perform some operations on the additional map\n        String name = additionalMap.get(\"name\");\n        System.out.println(\"Name: \" + name);\n        \n        // Iterate over the entries of the additional map\n        for (Map.Entry<String, String> entry : additionalMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        // Perform some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum: \" + sum);\n        \n        // More complex operations\n        Map<Integer, String> numberMap = new HashMap<>();\n        for (int i = 0; i < 5; i++) {\n            numberMap.put(i, \"Number \" + i);\n        }\n        \n        for (int i = 0; i < numberMap.size(); i++) {\n            System.out.println(numberMap.get(i));\n        }\n        \n        /* read */ Integer value = mapDecorator.get(\"key\");\n        \n        System.out.println(value);\n    }\n}"
}