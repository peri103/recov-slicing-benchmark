{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name) {\n        this.name = name;\n        this.course = new Course();\n    }\n\n    public void enrollInCourse(String courseName) {\n        course.setCourseName(courseName);\n    }\n\n    public String getCourseName() {\n        return course.getCourseName();\n    }\n\n    public void addScore(int score) {\n        course.addScore(score);\n    }\n\n    public int getScore(int index) {\n        return course.getScore(index);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public void setCourseName(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public void addScore(int score) {\n        /* write */ scores.add(score);\n    }\n\n    public int getScore(int index) {\n        return scores.get(index);\n    }\n}\n",
        "Main.java": "import org.apache.commons.collections4.map.PredicatedMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.map.ListOrderedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Predicate<Object> keyPredicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return object instanceof String;\n            }\n        };\n\n        Predicate<Object> valuePredicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return object instanceof Integer;\n            }\n        };\n\n        Map<String, Integer> baseMap = new HashMap<>();\n        PredicatedMap<String, Integer> predicatedMap = PredicatedMap.predicatedMap(baseMap, keyPredicate, valuePredicate);\n\n        ListOrderedMap<String, String> listOrderedMap = new ListOrderedMap<>();\n        listOrderedMap.put(\"first\", \"apple\");\n        listOrderedMap.put(\"second\", \"banana\");\n\n        Student student = new Student(\"Alice\");\n        student.enrollInCourse(\"Mathematics\");\n        student.addScore(85);\n\n        System.out.println(\"ListOrderedMap size: \" + listOrderedMap.size());\n\n        /* write */ predicatedMap.put(\"key\", 42);\n\n        for (Map.Entry<String, String> entry : listOrderedMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        Map<String, Integer> anotherMap = new HashMap<>();\n        anotherMap.put(\"alpha\", 10);\n        anotherMap.put(\"beta\", 20);\n        anotherMap.put(\"gamma\", 30);\n\n        for (Map.Entry<String, Integer> entry : anotherMap.entrySet()) {\n            predicatedMap.put(entry.getKey(), entry.getValue());\n        }\n\n        System.out.println(\"PredicatedMap size: \" + predicatedMap.size());\n\n        /* read */ int value = predicatedMap.get(\"key\");\n        System.out.println(\"Value from predicatedMap: \" + value);\n\n        for (Map.Entry<String, Integer> entry : predicatedMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        int studentScore = student.getScore(0);\n        System.out.println(\"Student Score: \" + studentScore);\n        System.out.println(\"Course Name: \" + student.getCourseName());\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.PredicatedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.PredicatedMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.PredicatedMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.apache.commons.collections4.Predicate;\n\npublic class Main {\n    public static void main(String[] args) {\n        Predicate<Object> keyPredicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return object instanceof String;\n            }\n        };\n\n        Predicate<Object> valuePredicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return object instanceof Integer;\n            }\n        };\n\n        Map<String, Integer> baseMap = new HashMap<>();\n        PredicatedMap<String, Integer> predicatedMap = PredicatedMap.predicatedMap(baseMap, keyPredicate, valuePredicate);\n\n        /* write */ predicatedMap.put(\"key\", 42);\n        /* read */ int value = predicatedMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.PredicatedMap;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.map.ListOrderedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Predicate<Object> keyPredicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return object instanceof String;\n            }\n        };\n\n        Predicate<Object> valuePredicate = new Predicate<Object>() {\n            @Override\n            public boolean evaluate(Object object) {\n                return object instanceof Integer;\n            }\n        };\n\n        Map<String, Integer> baseMap = new HashMap<>();\n        PredicatedMap<String, Integer> predicatedMap = PredicatedMap.predicatedMap(baseMap, keyPredicate, valuePredicate);\n\n        ListOrderedMap<String, String> listOrderedMap = new ListOrderedMap<>();\n        listOrderedMap.put(\"first\", \"apple\");\n        listOrderedMap.put(\"second\", \"banana\");\n\n        System.out.println(\"ListOrderedMap size: \" + listOrderedMap.size());\n\n        /* write */ predicatedMap.put(\"key\", 42);\n\n        for (Map.Entry<String, String> entry : listOrderedMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        Map<String, Integer> anotherMap = new HashMap<>();\n        anotherMap.put(\"alpha\", 10);\n        anotherMap.put(\"beta\", 20);\n        anotherMap.put(\"gamma\", 30);\n\n        for (Map.Entry<String, Integer> entry : anotherMap.entrySet()) {\n            predicatedMap.put(entry.getKey(), entry.getValue());\n        }\n\n        System.out.println(\"PredicatedMap size: \" + predicatedMap.size());\n\n        /* read */ int value = predicatedMap.get(\"key\");\n        System.out.println(\"Value from predicatedMap: \" + value);\n\n        for (Map.Entry<String, Integer> entry : predicatedMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}"
}