{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private StudentCourses courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new StudentCourses();\n    }\n\n    public void enrollCourse(String courseName) {\n        courses.addCourse(courseName);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public StudentCourses getCourses() {\n        return courses;\n    }\n}\n",
        "StudentCourses.java": "import org.apache.commons.collections4.list.CursorableLinkedList;\n\npublic class StudentCourses {\n    private CursorableLinkedList<String> courses = new CursorableLinkedList<>();\n\n    public void addCourse(String courseName) {\n        /* write */ courses.add(courseName);\n    }\n\n    public String getCourse(int index) {\n        /* read */ return courses.get(index);\n    }\n\n    public int getTotalCourses() {\n        return courses.size();\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int credits;\n\n    public Course(String courseName, int credits) {\n        this.courseName = courseName;\n        this.credits = credits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCredits() {\n        return credits;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"John Doe\");\n        student.enrollCourse(\"Mathematics\");\n        student.enrollCourse(\"Physics\");\n\n        Course mathCourse = new Course(\"Mathematics\", 3);\n        Course physicsCourse = new Course(\"Physics\", 4);\n\n        ArrayList<Course> courseList = new ArrayList<>();\n        courseList.add(mathCourse);\n        courseList.add(physicsCourse);\n\n        HashSet<String> enrolledCourses = new HashSet<>();\n        enrolledCourses.add(\"Mathematics\");\n        enrolledCourses.add(\"Physics\");\n\n        HashMap<String, Integer> courseCredits = new HashMap<>();\n        courseCredits.put(mathCourse.getCourseName(), mathCourse.getCredits());\n        courseCredits.put(physicsCourse.getCourseName(), physicsCourse.getCredits());\n\n        // Perform operations on courseList\n        for (Course course : courseList) {\n            System.out.println(\"Course: \" + course.getCourseName() + \", Credits: \" + course.getCredits());\n        }\n\n        // Perform operations on enrolledCourses\n        for (String courseName : enrolledCourses) {\n            System.out.println(\"Enrolled in: \" + courseName);\n        }\n\n        // Perform operations on courseCredits\n        int totalCredits = 0;\n        for (String courseName : courseCredits.keySet()) {\n            totalCredits += courseCredits.get(courseName);\n        }\n        System.out.println(\"Total Credits: \" + totalCredits);\n\n        // Read the first enrolled course\n        String firstCourse = student.getCourses().getCourse(0);\n        System.out.println(\"First enrolled course: \" + firstCourse);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.list.CursorableLinkedList",
        "write_method": "add",
        "read_class": "org.apache.commons.collections4.list.CursorableLinkedList",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.list.CursorableLinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CursorableLinkedList<Integer> list = new CursorableLinkedList<>();\n        /* write */ list.add(1);\n        /* read */ int value = list.get(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.list.CursorableLinkedList;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CursorableLinkedList<Integer> list = new CursorableLinkedList<>();\n        ArrayList<String> stringList = new ArrayList<>();\n        HashSet<Double> doubleSet = new HashSet<>();\n        HashMap<String, Integer> map = new HashMap<>();\n\n        // Adding elements to stringList\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n\n        // Adding elements to doubleSet\n        doubleSet.add(3.14);\n        doubleSet.add(2.71);\n\n        // Adding elements to map\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n\n        // Perform some operations on stringList\n        for (String s : stringList) {\n            System.out.println(s.toUpperCase());\n        }\n\n        // Perform some operations on doubleSet\n        double sum = 0;\n        for (Double d : doubleSet) {\n            sum += d;\n        }\n        System.out.println(\"Sum of doubles: \" + sum);\n\n        // Perform some operations on map\n        if (map.containsKey(\"one\")) {\n            System.out.println(\"Map contains key 'one' with value: \" + map.get(\"one\"));\n        }\n\n        // Original write operation\n        /* write */ list.add(1);\n\n        // Additional operations on the list\n        list.add(2);\n        list.add(3);\n\n        // Perform some operations on the list\n        int sumList = 0;\n        for (int i = 0; i < list.size(); i++) {\n            sumList += list.get(i);\n        }\n        System.out.println(\"Sum of list elements: \" + sumList);\n\n        // More unrelated operations\n        stringList.add(\"Java\");\n        doubleSet.add(1.41);\n        map.put(\"three\", 3);\n\n        // Original read operation\n        /* read */ int value = list.get(0);\n        System.out.println(\"Value from list: \" + value);\n\n        // Final operations\n        System.out.println(\"Final elements in stringList:\");\n        for (String s : stringList) {\n            System.out.println(s);\n        }\n\n        System.out.println(\"Final elements in doubleSet:\");\n        for (Double d : doubleSet) {\n            System.out.println(d);\n        }\n\n        System.out.println(\"Final elements in map:\");\n        for (String key : map.keySet()) {\n            System.out.println(key + \" -> \" + map.get(key));\n        }\n    }\n}"
}