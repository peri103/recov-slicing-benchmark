{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void enrollInCourse(Course newCourse) {\n        this.course = newCourse;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n}\n",
        "Course.java": "import org.apache.commons.collections4.list.NodeCachingLinkedList;\n\npublic class Course {\n    private String courseName;\n    private NodeCachingLinkedList<Integer> grades;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.grades = new NodeCachingLinkedList<>();\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public void addGrade(int grade) {\n        /* write */ grades.add(grade);\n    }\n\n    public int getGrade(int index) {\n        return grades.get(index);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course(\"Mathematics\");\n        mathCourse.addGrade(85);\n        mathCourse.addGrade(90);\n        mathCourse.addGrade(95);\n\n        Student student = new Student(\"John Doe\", mathCourse);\n        student.getCourse().addGrade(100);\n\n        // Retrieve the specific grade added in the Course class\n        /* read */ int retrievedGrade = student.getCourse().getGrade(3);\n        System.out.println(\"Retrieved Grade: \" + retrievedGrade);\n\n        // Additional operations to demonstrate complexity\n        Course scienceCourse = new Course(\"Science\");\n        student.enrollInCourse(scienceCourse);\n        scienceCourse.addGrade(88);\n        scienceCourse.addGrade(92);\n\n        System.out.println(\"Student: \" + student.getName());\n        System.out.println(\"Enrolled in: \" + student.getCourse().getCourseName());\n        System.out.println(\"Grades in Science Course:\");\n        for (int i = 0; i < 2; i++) {\n            System.out.println(student.getCourse().getGrade(i));\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.list.NodeCachingLinkedList",
        "write_method": "add",
        "read_class": "org.apache.commons.collections4.list.NodeCachingLinkedList",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.list.NodeCachingLinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        NodeCachingLinkedList list = new NodeCachingLinkedList();\n        /* write */ list.add(42);\n        /* read */ int value = (Integer) list.get(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.list.NodeCachingLinkedList;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        NodeCachingLinkedList list = new NodeCachingLinkedList();\n        ArrayList<Integer> auxiliaryList = new ArrayList<>();\n\n        // Insert some values into the auxiliary list\n        for (int i = 0; i < 5; i++) {\n            auxiliaryList.add(i * 10);\n        }\n\n        // Add elements from auxiliaryList to NodeCachingLinkedList\n        for (int val : auxiliaryList) {\n            list.add(val);\n        }\n\n        /* write */ list.add(42);\n\n        // Perform some operations on auxiliaryList\n        int sum = 0;\n        for (int num : auxiliaryList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of auxiliaryList: \" + sum);\n\n        // Use another list to store some values\n        NodeCachingLinkedList anotherList = new NodeCachingLinkedList();\n        anotherList.add(100);\n        anotherList.add(200);\n\n        // Retrieve and print values from anotherList\n        for (int i = 0; i < anotherList.size(); i++) {\n            System.out.println(\"Value from anotherList: \" + anotherList.get(i));\n        }\n\n        // Retrieve the value added to the original list\n        /* read */ int value = (Integer) list.get(5);\n        System.out.println(\"Retrieved value from NodeCachingLinkedList: \" + value);\n\n        // Further operations on the original list\n        list.add(84);\n        list.add(126);\n\n        // Print all values from the original list\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"Value from list: \" + list.get(i));\n        }\n    }\n}"
}