{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name) {\n        this.name = name;\n        this.course = new Course();\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n}\n",
        "Course.java": "import org.apache.commons.collections4.list.TreeList;\n\npublic class Course {\n    private String courseName;\n    private TreeList<Integer> grades;\n\n    public Course() {\n        this.courseName = \"Computer Science\";\n        this.grades = new TreeList<>();\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public void addGrade(int grade) {\n        /* write */ grades.add(0, grade);\n    }\n\n    public TreeList<Integer> getGrades() {\n        return grades;\n    }\n}\n",
        "Main.java": "import java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"John Doe\");\n        Course course = student.getCourse();\n        \n        // Adding grades for the student\n        course.addGrade(95);\n        course.addGrade(85);\n        course.addGrade(75);\n\n        // Performing some operations on a HashMap\n        HashMap<String, Integer> courseCredits = new HashMap<>();\n        courseCredits.put(\"Computer Science\", 4);\n        courseCredits.put(\"Mathematics\", 3);\n        courseCredits.put(\"Physics\", 4);\n\n        int totalCredits = 0;\n        for (int credits : courseCredits.values()) {\n            totalCredits += credits;\n        }\n        \n        // Complex operation with credits and grades\n        int calculatedValue = totalCredits * course.getGrades().get(1);\n        System.out.println(\"Calculated value: \" + calculatedValue);\n\n        // Reading the grade\n        /* read */ int firstGrade = course.getGrades().get(0);\n        System.out.println(\"First grade: \" + firstGrade);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.list.TreeList",
        "write_method": "add",
        "read_class": "org.apache.commons.collections4.list.TreeList",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.list.TreeList;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeList<Integer> list = new TreeList<>();\n        /* write */ list.add(0, 42);\n        /* read */ int value = list.get(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.list.TreeList;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeList<Integer> list = new TreeList<>();\n        ArrayList<Integer> arrayList = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        \n        // Adding elements to ArrayList\n        for (int i = 0; i < 5; i++) {\n            arrayList.add(i * 10);\n        }\n        \n        // Adding elements to HashMap\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n        \n        // Performing operations on HashMap\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n        \n        // Writing to TreeList\n        /* write */ list.add(0, 42);\n        \n        // Performing operations on ArrayList\n        for (int i = 0; i < arrayList.size(); i++) {\n            list.add(arrayList.get(i));\n        }\n        \n        // Some complex operations\n        int result = sum * list.get(1);\n        System.out.println(\"Result of complex operation: \" + result);\n        \n        // Reading from TreeList\n        /* read */ int value = list.get(0);\n        System.out.println(\"Read value: \" + value);\n        \n        // Further operations\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"TreeList element at index \" + i + \": \" + list.get(i));\n        }\n    }\n}"
}