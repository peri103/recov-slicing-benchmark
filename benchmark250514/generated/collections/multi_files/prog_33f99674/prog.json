{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name) {\n        this.name = name;\n        this.course = new Course(\"Math\");\n    }\n\n    public void enrollInCourse(String courseName) {\n        this.course = new Course(courseName);\n    }\n\n    public Course getCourse() {\n        return this.course;\n    }\n\n    public String getName() {\n        return this.name;\n    }\n}\n",
        "Course.java": "import org.apache.commons.collections4.map.LRUMap;\n\npublic class Course {\n    private String courseName;\n    private LRUMap<String, String> grades;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.grades = new LRUMap<>(5);\n    }\n\n    public void addGrade(String studentName, String grade) {\n        /* write */ grades.put(studentName, grade);\n    }\n\n    public String getGrade(String studentName) {\n        return grades.get(studentName);\n    }\n\n    public String getCourseName() {\n        return this.courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course mathCourse = student.getCourse();\n        mathCourse.addGrade(student.getName(), \"A\");\n\n        // Some unrelated operations\n        int[] numbers = {2, 4, 6, 8, 10};\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Retrieve and print the grade\n        /* read */ String grade = mathCourse.getGrade(student.getName());\n        System.out.println(student.getName() + \"'s grade in \" + mathCourse.getCourseName() + \": \" + grade);\n\n        // Further unrelated operations\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.LRUMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.LRUMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.LRUMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LRUMap<String, String> lruMap = new LRUMap<>(10);\n        /* write */ lruMap.put(\"key\", \"value\");\n        /* read */ String value = lruMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.LRUMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        LRUMap<String, String> lruMap = new LRUMap<>(10);\n        Map<String, Integer> hashMap = new HashMap<>();\n\n        // Using HashMap for additional operations\n        hashMap.put(\"a\", 1);\n        hashMap.put(\"b\", 2);\n        hashMap.put(\"c\", 3);\n\n        int sum = 0;\n        for (Integer value : hashMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of values in hashMap: \" + sum);\n\n        // Original write operation\n        /* write */ lruMap.put(\"key\", \"value\");\n\n        // Additional operations on LRUMap\n        lruMap.put(\"anotherKey\", \"anotherValue\");\n        String anotherValue = lruMap.get(\"anotherKey\");\n        System.out.println(\"Value for anotherKey: \" + anotherValue);\n\n        // Some unrelated operations\n        int[] numbers = {1, 2, 3, 4, 5};\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n        }\n        System.out.println(\"Product of numbers: \" + product);\n\n        // Original read operation\n        /* read */ String value = lruMap.get(\"key\");\n        System.out.println(value);\n\n        // Further operations on HashMap\n        hashMap.put(\"d\", 4);\n        hashMap.put(\"e\", 5);\n\n        int max = Integer.MIN_VALUE;\n        for (Integer value : hashMap.values()) {\n            if (value > max) {\n                max = value;\n            }\n        }\n        System.out.println(\"Max value in hashMap: \" + max);\n    }\n}"
}