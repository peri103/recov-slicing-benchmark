{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private Course course;\n\n    public Student(String name, Course course) {\n        this.name = name;\n        this.course = course;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Course getCourse() {\n        return course;\n    }\n}\n",
        "Course.java": "import org.apache.commons.collections4.map.ReferenceMap;\n\npublic class Course {\n    private String courseName;\n    private ReferenceMap<String, String> studentGrades;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.studentGrades = new ReferenceMap<>();\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public void addGrade(String studentName, String grade) {\n        /* write */ studentGrades.put(studentName, grade);\n    }\n\n    public String getGrade(String studentName) {\n        return studentGrades.get(studentName);\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course(\"Mathematics\");\n        Student student = new Student(\"John Doe\", mathCourse);\n\n        mathCourse.addGrade(student.getName(), \"A\");\n\n        // Perform some unrelated operations\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Retrieve the grade\n        /* read */ String grade = student.getCourse().getGrade(student.getName());\n        System.out.println(\"Grade for \" + student.getName() + \" in \" + student.getCourse().getCourseName() + \": \" + grade);\n\n        // More unrelated operations\n        String[] fruits = {\"apple\", \"banana\", \"cherry\"};\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.ReferenceMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.ReferenceMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.ReferenceMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ReferenceMap<String, String> map = new ReferenceMap<>();\n        /* write */ map.put(\"key\", \"value\");\n        /* read */ String value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.ReferenceMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original ReferenceMap\n        ReferenceMap<String, String> map = new ReferenceMap<>();\n        \n        // Adding some unrelated code to make the program more complex\n        Map<String, Integer> countMap = new HashMap<>();\n        countMap.put(\"apple\", 3);\n        countMap.put(\"banana\", 2);\n        countMap.put(\"cherry\", 5);\n\n        for (Map.Entry<String, Integer> entry : countMap.entrySet()) {\n            System.out.println(\"Fruit: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n\n        // Using the original write method\n        /* write */ map.put(\"key\", \"value\");\n        \n        // More unrelated code\n        int sum = 0;\n        for (Integer count : countMap.values()) {\n            sum += count;\n        }\n        System.out.println(\"Total fruits: \" + sum);\n\n        // Some operations with ReferenceMap before reading\n        map.put(\"anotherKey\", \"anotherValue\");\n        map.put(\"yetAnotherKey\", \"yetAnotherValue\");\n\n        // Using another map for additional complexity\n        ReferenceMap<String, Integer> numberMap = new ReferenceMap<>();\n        numberMap.put(\"one\", 1);\n        numberMap.put(\"two\", 2);\n        numberMap.put(\"three\", 3);\n\n        for (Map.Entry<String, Integer> entry : numberMap.entrySet()) {\n            System.out.println(\"Number: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Finally using the original read method\n        /* read */ String value = map.get(\"key\");\n        System.out.println(\"Retrieved value: \" + value);\n\n        // More operations with the numberMap\n        int total = 0;\n        for (Integer num : numberMap.values()) {\n            total += num;\n        }\n        System.out.println(\"Total of numbers: \" + total);\n    }\n}"
}