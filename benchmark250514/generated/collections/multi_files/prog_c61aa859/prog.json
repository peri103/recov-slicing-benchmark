{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private StudentScores scores = new StudentScores();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public int getScoreCount(int score) {\n        return scores.getScoreCount(score);\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "StudentScores.java": "import org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.bag.PredicatedBag;\nimport org.apache.commons.collections4.Predicate;\n\npublic class StudentScores {\n    private Bag<Integer> scoreBag;\n\n    public StudentScores() {\n        Predicate<Integer> predicate = new Predicate<Integer>() {\n            @Override\n            public boolean evaluate(Integer object) {\n                return object instanceof Integer;\n            }\n        };\n        scoreBag = PredicatedBag.predicatedBag(new HashBag<>(), predicate);\n    }\n\n    public void addScore(int score) {\n        /* write */ scoreBag.add(score);\n    }\n\n    public int getScoreCount(int score) {\n        /* read */ return scoreBag.getCount(score);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        student.addScore(42);\n\n        Course course = new Course(\"Math 101\");\n        course.enrollStudent(student);\n\n        for (Student s : course.getEnrolledStudents()) {\n            System.out.println(\"Student: \" + s.getName());\n            int scoreCount = s.getScoreCount(42);\n            System.out.println(\"Score 42 count: \" + scoreCount);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.bag.PredicatedBag",
        "write_method": "add",
        "read_class": "org.apache.commons.collections4.bag.PredicatedBag",
        "read_method": "getCount"
    },
    "java_code_simple": "import org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.bag.PredicatedBag;\nimport org.apache.commons.collections4.Predicate;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a predicate that allows all integers\n        Predicate<Integer> predicate = new Predicate<Integer>() {\n            @Override\n            public boolean evaluate(Integer object) {\n                return object instanceof Integer;\n            }\n        };\n\n        // Create a HashBag and wrap it with a PredicatedBag\n        Bag<Integer> hashBag = new HashBag<>();\n        PredicatedBag<Integer> predicatedBag = PredicatedBag.predicatedBag(hashBag, predicate);\n\n        /* write */ predicatedBag.add(42);\n\n        /* read */ int count = predicatedBag.getCount(42);\n        System.out.println(count);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.bag.PredicatedBag;\nimport org.apache.commons.collections4.Predicate;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Define a predicate that allows all integers\n        Predicate<Integer> predicate = new Predicate<Integer>() {\n            @Override\n            public boolean evaluate(Integer object) {\n                return object instanceof Integer;\n            }\n        };\n\n        // Create a HashBag and wrap it with a PredicatedBag\n        Bag<Integer> hashBag = new HashBag<>();\n        PredicatedBag<Integer> predicatedBag = PredicatedBag.predicatedBag(hashBag, predicate);\n\n        // Create another HashBag and PredicatedBag for demonstration\n        Bag<String> stringBag = new HashBag<>();\n        Predicate<String> stringPredicate = new Predicate<String>() {\n            @Override\n            public boolean evaluate(String object) {\n                return object instanceof String;\n            }\n        };\n        PredicatedBag<String> predicatedStringBag = PredicatedBag.predicatedBag(stringBag, stringPredicate);\n\n        // Add elements to the string PredicatedBag\n        predicatedStringBag.add(\"Hello\");\n        predicatedStringBag.add(\"World\");\n\n        // Use a HashMap to store counts of words\n        Map<String, Integer> wordCountMap = new HashMap<>();\n        for (String word : predicatedStringBag.uniqueSet()) {\n            wordCountMap.put(word, predicatedStringBag.getCount(word));\n        }\n\n        // Print word counts\n        for (Map.Entry<String, Integer> entry : wordCountMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n\n        /* write */ predicatedBag.add(42);\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Use the integer PredicatedBag\n        for (int i = 0; i < 5; i++) {\n            predicatedBag.add(i);\n        }\n\n        // Calculate total count of all integers in the bag\n        int totalCount = 0;\n        for (Integer number : predicatedBag.uniqueSet()) {\n            totalCount += predicatedBag.getCount(number);\n        }\n        System.out.println(\"Total count of integers: \" + totalCount);\n\n        /* read */ int count = predicatedBag.getCount(42);\n        System.out.println(\"Count of 42: \" + count);\n    }\n}"
}