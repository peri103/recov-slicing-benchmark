{
    "files": {
        "LinkedMapOperations.java": "import org.apache.commons.collections4.map.LinkedMap;\n\npublic class LinkedMapOperations {\n    private LinkedMap<String, Integer> linkedMap = new LinkedMap<>();\n\n    public void addEntry(String key, int value) {\n        /* write */ linkedMap.put(key, value);\n    }\n\n    public Integer getEntry(String key) {\n        return linkedMap.get(key);\n    }\n\n    public void removeEntry(String key) {\n        linkedMap.remove(key);\n    }\n\n    public void printEntries() {\n        for (String key : linkedMap.keySet()) {\n            System.out.println(\"LinkedMap: \" + key + \" -> \" + linkedMap.get(key));\n        }\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private LinkedMapOperations scores = new LinkedMapOperations();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(String subject, int score) {\n        scores.addEntry(subject, score);\n    }\n\n    public int getScore(String subject) {\n        return scores.getEntry(subject);\n    }\n\n    public void printScores() {\n        scores.printEntries();\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        student.addScore(\"Math\", 90);\n        student.addScore(\"Science\", 85);\n        student.printScores();\n\n        /* read */ int mathScore = student.getScore(\"Math\");\n        System.out.println(\"Math Score: \" + mathScore);\n\n        student.addScore(\"History\", 75);\n        student.printScores();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.map.LinkedMap",
        "write_method": "put",
        "read_class": "org.apache.commons.collections4.map.LinkedMap",
        "read_method": "get"
    },
    "java_code_simple": "import org.apache.commons.collections4.map.LinkedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedMap<String, Integer> linkedMap = new LinkedMap<>();\n        /* write */ linkedMap.put(\"key\", 42);\n        /* read */ int value = linkedMap.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.map.LinkedMap;\nimport org.apache.commons.collections4.map.HashedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedMap<String, Integer> linkedMap = new LinkedMap<>();\n        HashedMap<String, String> hashedMap = new HashedMap<>();\n        \n        // Adding some entries to the hashedMap\n        hashedMap.put(\"a\", \"apple\");\n        hashedMap.put(\"b\", \"banana\");\n        \n        // Print all entries in hashedMap\n        for (String key : hashedMap.keySet()) {\n            System.out.println(\"HashedMap: \" + key + \" -> \" + hashedMap.get(key));\n        }\n        \n        /* write */ linkedMap.put(\"key\", 42);\n        \n        // Perform some operations on linkedMap\n        linkedMap.put(\"anotherKey\", 100);\n        linkedMap.put(\"yetAnotherKey\", 200);\n        \n        // Print all entries in linkedMap\n        for (String key : linkedMap.keySet()) {\n            System.out.println(\"LinkedMap: \" + key + \" -> \" + linkedMap.get(key));\n        }\n        \n        // Remove an entry from linkedMap\n        linkedMap.remove(\"anotherKey\");\n        \n        // Print all entries after removal\n        for (String key : linkedMap.keySet()) {\n            System.out.println(\"LinkedMap after removal: \" + key + \" -> \" + linkedMap.get(key));\n        }\n        \n        /* read */ int value = linkedMap.get(\"key\");\n        System.out.println(\"Read value: \" + value);\n        \n        // More complex operations\n        for (int i = 0; i < 5; i++) {\n            linkedMap.put(\"key\" + i, i * 10);\n        }\n        \n        // Print all entries after adding more\n        for (String key : linkedMap.keySet()) {\n            System.out.println(\"LinkedMap after adding more: \" + key + \" -> \" + linkedMap.get(key));\n        }\n    }\n}"
}