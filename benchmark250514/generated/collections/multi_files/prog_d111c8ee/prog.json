{
    "files": {
        "QueueHandler.java": "import org.apache.commons.collections4.queue.CircularFifoQueue;\n\npublic class QueueHandler {\n    private CircularFifoQueue<Integer> queue = new CircularFifoQueue<>(10);\n\n    public void addToQueue(int value) {\n        /* write */ queue.add(value);\n    }\n\n    public Integer peekQueue() {\n        return queue.peek();\n    }\n\n    public Integer pollQueue() {\n        return queue.poll();\n    }\n\n    public boolean isQueueEmpty() {\n        return queue.isEmpty();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public ArrayList<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.HashMap;\n\npublic class Course {\n    private String courseName;\n    private HashMap<String, Student> students = new HashMap<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.put(student.getName(), student);\n    }\n\n    public Student getStudent(String name) {\n        return students.get(name);\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        QueueHandler queueHandler = new QueueHandler();\n        Course course = new Course(\"Mathematics\");\n        Student student = new Student(\"Alice\");\n\n        // Add scores to the student\n        student.addScore(85);\n        student.addScore(90);\n        student.addScore(75);\n\n        // Add student to the course\n        course.addStudent(student);\n\n        // Add a value to the queue\n        queueHandler.addToQueue(42);\n\n        // Operations with the queue\n        while (!queueHandler.isQueueEmpty()) {\n            Integer element = queueHandler.pollQueue();\n            if (element != null) {\n                System.out.println(\"Polled from queue: \" + element);\n            }\n        }\n\n        // Peek the value from the queue\n        /* read */ Integer peekedValue = queueHandler.peekQueue();\n        System.out.println(\"Peeked value: \" + peekedValue);\n\n        // Retrieve and print scores of the student\n        Student retrievedStudent = course.getStudent(\"Alice\");\n        if (retrievedStudent != null) {\n            System.out.println(\"Scores of \" + retrievedStudent.getName() + \": \" + retrievedStudent.getScores());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.collections4.queue.CircularFifoQueue",
        "write_method": "add",
        "read_class": "org.apache.commons.collections4.queue.CircularFifoQueue",
        "read_method": "peek"
    },
    "java_code_simple": "import org.apache.commons.collections4.queue.CircularFifoQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        CircularFifoQueue<Integer> queue = new CircularFifoQueue<>(10);\n        /* write */ queue.add(42);\n        /* read */ Integer value = queue.peek();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import org.apache.commons.collections4.queue.CircularFifoQueue;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        CircularFifoQueue<Integer> queue = new CircularFifoQueue<>(10);\n        ArrayList<Integer> list = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n\n        // Adding elements to the list\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Using HashMap to store some data\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n\n        // Performing some operations with the list\n        for (int i = 0; i < list.size(); i++) {\n            queue.add(list.get(i));\n        }\n\n        // Additional operations using HashMap\n        int sum = 0;\n        for (String key : map.keySet()) {\n            sum += map.get(key);\n        }\n\n        System.out.println(\"Sum of map values: \" + sum);\n\n        /* write */ queue.add(42);\n\n        // Further operations with the queue\n        while (!queue.isEmpty()) {\n            Integer element = queue.poll();\n            if (element != null) {\n                System.out.println(\"Polled from queue: \" + element);\n            }\n        }\n\n        // More complex operations\n        for (int i = 0; i < 3; i++) {\n            map.put(\"Key\" + i, i * 100);\n        }\n\n        // Ensure the original write-read pair is far apart\n        /* read */ Integer value = queue.peek();\n        System.out.println(\"Peeked value: \" + value);\n\n        // Final operations to make the program more complex\n        for (String key : map.keySet()) {\n            System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n        }\n    }\n}"
}