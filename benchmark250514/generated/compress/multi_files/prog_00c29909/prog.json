{
    "files": {
        "GzipConfig.java": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class GzipConfig {\n    private GzipParameters gzipParameters = new GzipParameters();\n\n    public void setOperatingSystem(int os) {\n        /* write */ gzipParameters.setOperatingSystem(os);\n    }\n\n    public int getOperatingSystem() {\n        return gzipParameters.getOperatingSystem();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n    private GzipConfig gzipConfig = new GzipConfig();\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void setStudentOperatingSystem(int os) {\n        gzipConfig.setOperatingSystem(os);\n    }\n\n    public int getStudentOperatingSystem() {\n        return gzipConfig.getOperatingSystem();\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"John Doe\", 20);\n        student.setStudentOperatingSystem(3);\n\n        // Additional code to manage a list of students\n        ArrayList<Student> students = new ArrayList<>();\n        students.add(student);\n        students.add(new Student(\"Jane Smith\", 22));\n\n        // Display student information\n        for (Student s : students) {\n            System.out.println(\"Name: \" + s.getName() + \", Age: \" + s.getAge());\n        }\n\n        // Access the operating system value for the student\n        /* read */ int osValue = student.getStudentOperatingSystem();\n        System.out.println(\"Operating System value for \" + student.getName() + \": \" + osValue);\n\n        // Additional code for processing student list\n        int totalAge = 0;\n        for (Student s : students) {\n            totalAge += s.getAge();\n        }\n        System.out.println(\"Total age of students: \" + totalAge);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setOperatingSystem",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getOperatingSystem"
    },
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        /* write */ gzipParameters.setOperatingSystem(3);\n        /* read */ int osValue = gzipParameters.getOperatingSystem();\n        System.out.println(osValue);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        \n        // Additional code using ArrayList for complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        // Some operations on the list\n        int sum = 0;\n        for (Integer number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        /* write */ gzipParameters.setOperatingSystem(3);\n        \n        // More operations on the list\n        int max = Integer.MIN_VALUE;\n        for (Integer number : numbers) {\n            if (number > max) {\n                max = number;\n            }\n        }\n        System.out.println(\"Max number: \" + max);\n\n        /* read */ int osValue = gzipParameters.getOperatingSystem();\n        System.out.println(\"Operating System value: \" + osValue);\n        \n        // Additional code to reverse the list\n        ArrayList<Integer> reversedNumbers = new ArrayList<>();\n        for (int i = numbers.size() - 1; i >= 0; i--) {\n            reversedNumbers.add(numbers.get(i));\n        }\n        \n        // Display the reversed list\n        System.out.println(\"Reversed numbers:\");\n        for (Integer number : reversedNumbers) {\n            System.out.println(number);\n        }\n    }\n}"
}