{
    "files": {
        "ZipAttributes.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class ZipAttributes {\n    private ZipArchiveEntry zipEntry;\n\n    public ZipAttributes(String fileName) {\n        this.zipEntry = new ZipArchiveEntry(fileName);\n    }\n\n    public void setAttributes(long attributes) {\n        /* write */ zipEntry.setExternalAttributes(attributes);\n    }\n\n    public long getAttributes() {\n        return zipEntry.getExternalAttributes();\n    }\n}\n",
        "FilePermissions.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class FilePermissions {\n    private Map<String, Integer> permissionsMap = new HashMap<>();\n\n    public void addPermission(String fileName, int permission) {\n        permissionsMap.put(fileName, permission);\n    }\n\n    public int getPermission(String fileName) {\n        return permissionsMap.getOrDefault(fileName, 0);\n    }\n\n    public void printPermissions() {\n        for (Map.Entry<String, Integer> entry : permissionsMap.entrySet()) {\n            System.out.println(\"File: \" + entry.getKey() + \", Permissions: \" + entry.getValue());\n        }\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Initialize FilePermissions and ZipAttributes\n        FilePermissions filePermissions = new FilePermissions();\n        ZipAttributes zipAttributes = new ZipAttributes(\"example.txt\");\n\n        // Add permissions\n        filePermissions.addPermission(\"example.txt\", 777);\n        filePermissions.addPermission(\"test.txt\", 644);\n\n        // Print permissions\n        filePermissions.printPermissions();\n\n        // Set attributes\n        zipAttributes.setAttributes(12345L);\n\n        // Perform some unrelated calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Read and print the attributes\n        /* read */ long attributes = zipAttributes.getAttributes();\n        System.out.println(\"External Attributes: \" + attributes);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setExternalAttributes",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getExternalAttributes"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ zipEntry.setExternalAttributes(12345L);\n        /* read */ long attributes = zipEntry.getExternalAttributes();\n        System.out.println(attributes);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ZipArchiveEntry\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        \n        // Create a map to simulate some complex logic\n        Map<String, Integer> filePermissions = new HashMap<>();\n        filePermissions.put(\"example.txt\", 777);\n        filePermissions.put(\"test.txt\", 644);\n        \n        // Perform some operations on the map\n        for (Map.Entry<String, Integer> entry : filePermissions.entrySet()) {\n            System.out.println(\"File: \" + entry.getKey() + \", Permissions: \" + entry.getValue());\n        }\n        \n        // Set external attributes using the write method\n        /* write */ zipEntry.setExternalAttributes(12345L);\n        \n        // Perform some unrelated calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n        \n        // Simulate some logic that uses the map\n        if (filePermissions.containsKey(\"example.txt\")) {\n            int permissions = filePermissions.get(\"example.txt\");\n            System.out.println(\"Permissions for example.txt: \" + permissions);\n        }\n        \n        // Read the external attributes using the read method\n        /* read */ long attributes = zipEntry.getExternalAttributes();\n        System.out.println(\"External Attributes: \" + attributes);\n        \n        // More complex logic with a different map\n        Map<String, String> fileTypes = new HashMap<>();\n        fileTypes.put(\"example.txt\", \"text\");\n        fileTypes.put(\"image.png\", \"image\");\n        \n        // Iterate and print file types\n        for (Map.Entry<String, String> entry : fileTypes.entrySet()) {\n            System.out.println(\"File: \" + entry.getKey() + \", Type: \" + entry.getValue());\n        }\n    }\n}"
}