{
    "files": {
        "DumpArchiveEntryWrapper.java": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class DumpArchiveEntryWrapper {\n    private DumpArchiveEntry entry;\n\n    public DumpArchiveEntryWrapper() {\n        entry = new DumpArchiveEntry();\n    }\n\n    public void setUserId(int userId) {\n        /* write */ entry.setUserId(userId);\n    }\n\n    public int getUserId() {\n        return entry.getUserId();\n    }\n}",
        "User.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class User {\n    private String name;\n    private int id;\n    private DumpArchiveEntryWrapper entryWrapper;\n\n    public User(String name, int id) {\n        this.name = name;\n        this.id = id;\n        this.entryWrapper = new DumpArchiveEntryWrapper();\n    }\n\n    public void assignUserIdInEntry(int userId) {\n        entryWrapper.setUserId(userId);\n    }\n\n    public int retrieveUserIdFromEntry() {\n        return entryWrapper.getUserId();\n    }\n\n    public static void printUserDetails(Map<String, Integer> userMap) {\n        for (Map.Entry<String, Integer> user : userMap.entrySet()) {\n            System.out.println(\"User: \" + user.getKey() + \", ID: \" + user.getValue());\n        }\n    }\n}",
        "Main.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        User user = new User(\"Charlie\", 303);\n        user.assignUserIdInEntry(12345);\n\n        // Additional unrelated code to increase complexity\n        Map<String, Integer> userMap = new HashMap<>();\n        userMap.put(\"Alice\", 101);\n        userMap.put(\"Bob\", 202);\n        userMap.put(\"Charlie\", 303);\n\n        User.printUserDetails(userMap);\n\n        // More complex logic\n        StringBuilder userInfo = new StringBuilder();\n        for (String name : userMap.keySet()) {\n            userInfo.append(name).append(\" \");\n        }\n        System.out.println(\"User names: \" + userInfo.toString().trim());\n\n        /* read */ int userId = user.retrieveUserIdFromEntry();\n        System.out.println(\"User ID from DumpArchiveEntry: \" + userId);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "write_method": "setUserId",
        "read_class": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
        "read_method": "getUserId"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        /* write */ entry.setUserId(12345);\n        /* read */ int userId = entry.getUserId();\n        System.out.println(userId);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        DumpArchiveEntry entry = new DumpArchiveEntry();\n        \n        // Additional unrelated code to increase complexity\n        Map<String, Integer> userMap = new HashMap<>();\n        userMap.put(\"Alice\", 101);\n        userMap.put(\"Bob\", 202);\n        \n        // Example of another write-read pair\n        DumpArchiveEntry anotherEntry = new DumpArchiveEntry();\n        anotherEntry.setGeneration(98765);\n        int generation = anotherEntry.getGeneration();\n        System.out.println(\"Generation: \" + generation);\n        \n        // More unrelated code\n        for (Map.Entry<String, Integer> user : userMap.entrySet()) {\n            System.out.println(\"User: \" + user.getKey() + \", ID: \" + user.getValue());\n        }\n        \n        /* write */ entry.setUserId(12345);\n        \n        // Additional logic to process data\n        int sum = 0;\n        for (int id : userMap.values()) {\n            sum += id;\n        }\n        System.out.println(\"Sum of User IDs: \" + sum);\n        \n        // More complex logic\n        StringBuilder userInfo = new StringBuilder();\n        for (String name : userMap.keySet()) {\n            userInfo.append(name).append(\" \");\n        }\n        System.out.println(\"User names: \" + userInfo.toString().trim());\n        \n        /* read */ int userId = entry.getUserId();\n        System.out.println(\"User ID from DumpArchiveEntry: \" + userId);\n    }\n}"
}