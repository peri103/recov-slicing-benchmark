{
    "files": {
        "ZipEntryManager.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.Arrays;\n\npublic class ZipEntryManager {\n    private ZipArchiveEntry entry;\n\n    public ZipEntryManager(String fileName) {\n        this.entry = new ZipArchiveEntry(fileName);\n    }\n\n    public void setExtraData(byte[] extraData) {\n        /* write */ entry.setExtra(extraData);\n    }\n\n    public byte[] getExtraData() {\n        return entry.getExtra();\n    }\n}\n",
        "ComplexOperations.java": "import java.util.Arrays;\n\npublic class ComplexOperations {\n    public static int calculateSum(byte[] data) {\n        int sum = 0;\n        for (byte b : data) {\n            sum += b;\n        }\n        return sum;\n    }\n\n    public static int calculateProduct(byte[] data) {\n        int product = 1;\n        for (byte b : data) {\n            product *= b;\n        }\n        return product;\n    }\n\n    public static byte[] manipulateData(byte[] data) {\n        byte[] manipulatedData = Arrays.copyOf(data, data.length);\n        for (int i = 0; i < manipulatedData.length; i++) {\n            manipulatedData[i] *= 2;\n        }\n        return manipulatedData;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        ZipEntryManager manager = new ZipEntryManager(\"example.txt\");\n        byte[] extraData = new byte[]{1, 2, 3, 4};\n        manager.setExtraData(extraData);\n\n        byte[] anotherExtraData = new byte[]{5, 6, 7, 8};\n        int sum = ComplexOperations.calculateSum(anotherExtraData);\n        System.out.println(\"Sum of anotherExtraData: \" + sum);\n\n        byte[] manipulatedData = ComplexOperations.manipulateData(extraData);\n        int product = ComplexOperations.calculateProduct(manipulatedData);\n        System.out.println(\"Product of manipulatedData: \" + product);\n\n        /* read */ byte[] readData = manager.getExtraData();\n\n        System.out.print(\"Read data from entry: \");\n        for (byte b : readData) {\n            System.out.print(b + \" \");\n        }\n        System.out.println();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setExtra",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getExtra"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        byte[] extraData = new byte[]{1, 2, 3, 4};\n        \n        /* write */ entry.setExtra(extraData);\n        /* read */ byte[] readData = entry.getExtra();\n        \n        for (byte b : readData) {\n            System.out.print(b + \" \");\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        byte[] extraData = new byte[]{1, 2, 3, 4};\n\n        // Additional code for complexity\n        ZipArchiveEntry anotherEntry = new ZipArchiveEntry(\"anotherExample.txt\");\n        byte[] anotherExtraData = new byte[]{5, 6, 7, 8};\n        anotherEntry.setExtra(anotherExtraData);\n\n        int sum = 0;\n        for (byte b : anotherEntry.getExtra()) {\n            sum += b;\n        }\n        System.out.println(\"Sum of anotherEntry extra data: \" + sum);\n\n        // Manipulating arrays\n        byte[] manipulatedData = Arrays.copyOf(extraData, extraData.length);\n        for (int i = 0; i < manipulatedData.length; i++) {\n            manipulatedData[i] *= 2;\n        }\n        \n        // Original write-read pair\n        /* write */ entry.setExtra(extraData);\n\n        // More operations\n        int product = 1;\n        for (byte b : manipulatedData) {\n            product *= b;\n        }\n        System.out.println(\"Product of manipulatedData: \" + product);\n\n        // Original read operation\n        /* read */ byte[] readData = entry.getExtra();\n\n        // Displaying read data\n        System.out.print(\"Read data from entry: \");\n        for (byte b : readData) {\n            System.out.print(b + \" \");\n        }\n        System.out.println();\n    }\n}"
}