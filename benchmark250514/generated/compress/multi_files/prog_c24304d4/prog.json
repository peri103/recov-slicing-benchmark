{
    "files": {
        "ZipEntryManager.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\n\npublic class ZipEntryManager {\n    private ArrayList<ZipArchiveEntry> entries = new ArrayList<>();\n\n    public void addEntry(String name, long size) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(name);\n        /* write */ entry.setSize(size);\n        entries.add(entry);\n    }\n\n    public ZipArchiveEntry getEntry(int index) {\n        return entries.get(index);\n    }\n\n    public ArrayList<ZipArchiveEntry> getAllEntries() {\n        return entries;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> grades = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addGrade(int grade) {\n        grades.add(grade);\n    }\n\n    public ArrayList<Integer> getGrades() {\n        return grades;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipEntryManager manager = new ZipEntryManager();\n        manager.addEntry(\"example.txt\", 1024);\n\n        Student student = new Student(\"John Doe\");\n        student.addGrade(85);\n        student.addGrade(90);\n\n        Course course = new Course(\"Computer Science\");\n        course.addStudent(student);\n\n        ZipArchiveEntry entry = manager.getEntry(0);\n        /* read */ long size = entry.getSize();\n        System.out.println(\"Size of example.txt: \" + size);\n\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student: \" + s.getName());\n            for (int grade : s.getGrades()) {\n                System.out.println(\"Grade: \" + grade);\n            }\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setSize",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getSize"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ zipEntry.setSize(1024);\n        /* read */ long size = zipEntry.getSize();\n        System.out.println(size);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        ZipArchiveEntry anotherEntry = new ZipArchiveEntry(\"another.txt\");\n        \n        /* write */ zipEntry.setSize(1024);\n        \n        ArrayList<ZipArchiveEntry> entries = new ArrayList<>();\n        entries.add(zipEntry);\n        entries.add(anotherEntry);\n        \n        anotherEntry.setSize(2048);\n        \n        ZipArchiveOutputStream zipOutputStream = new ZipArchiveOutputStream(System.out);\n        for (ZipArchiveEntry entry : entries) {\n            zipOutputStream.putArchiveEntry(entry);\n            zipOutputStream.closeArchiveEntry();\n        }\n        \n        /* read */ long size = zipEntry.getSize();\n        System.out.println(\"Size of example.txt: \" + size);\n        \n        long anotherSize = anotherEntry.getSize();\n        System.out.println(\"Size of another.txt: \" + anotherSize);\n        \n        ArrayList<Long> sizes = new ArrayList<>();\n        sizes.add(size);\n        sizes.add(anotherSize);\n        \n        for (Long s : sizes) {\n            System.out.println(\"Entry size: \" + s);\n        }\n    }\n}"
}