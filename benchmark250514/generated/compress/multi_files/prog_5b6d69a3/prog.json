{
    "files": {
        "ZipEntryManager.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\n\npublic class ZipEntryManager {\n    private ArrayList<ZipArchiveEntry> zipEntries = new ArrayList<>();\n\n    public void addEntry(String name, long size) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(name);\n        /* write */ entry.setSize(size);\n        zipEntries.add(entry);\n    }\n\n    public ZipArchiveEntry getEntry(String name) {\n        for (ZipArchiveEntry entry : zipEntries) {\n            if (entry.getName().equals(name)) {\n                return entry;\n            }\n        }\n        return null;\n    }\n\n    public ArrayList<ZipArchiveEntry> getAllEntries() {\n        return zipEntries;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<String> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(String studentName) {\n        students.add(studentName);\n    }\n\n    public ArrayList<String> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipEntryManager manager = new ZipEntryManager();\n        manager.addEntry(\"example.txt\", 1024L);\n        manager.addEntry(\"anotherExample.txt\", 2048L);\n        \n        Course course = new Course(\"Advanced Java Programming\");\n        course.addStudent(\"Alice\");\n        course.addStudent(\"Bob\");\n        \n        System.out.println(\"Course: \" + course.getCourseName());\n        for (String student : course.getStudents()) {\n            System.out.println(\"Student: \" + student);\n        }\n        \n        ZipArchiveEntry entry = manager.getEntry(\"example.txt\");\n        if (entry != null) {\n            /* read */ long size = entry.getSize();\n            System.out.println(\"Size of example.txt: \" + size);\n        }\n        \n        long totalSize = 0;\n        for (ZipArchiveEntry zipEntry : manager.getAllEntries()) {\n            totalSize += zipEntry.getSize();\n        }\n        \n        System.out.println(\"Total size of all entries: \" + totalSize);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setSize",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getSize"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ zipEntry.setSize(1024L);\n        /* read */ long size = zipEntry.getSize();\n        System.out.println(size);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        ArrayList<ZipArchiveEntry> zipEntries = new ArrayList<>();\n        \n        /* write */ zipEntry.setSize(1024L);\n        \n        zipEntries.add(zipEntry);\n        zipEntries.add(new ZipArchiveEntry(\"anotherExample.txt\"));\n        \n        for (ZipArchiveEntry entry : zipEntries) {\n            if (\"anotherExample.txt\".equals(entry.getName())) {\n                entry.setSize(2048L);\n            }\n        }\n        \n        long totalSize = 0;\n        for (ZipArchiveEntry entry : zipEntries) {\n            totalSize += entry.getSize();\n        }\n        \n        System.out.println(\"Total size of all entries: \" + totalSize);\n        \n        /* read */ long size = zipEntry.getSize();\n        System.out.println(\"Size of example.txt: \" + size);\n        \n        ArrayList<Long> sizes = new ArrayList<>();\n        for (ZipArchiveEntry entry : zipEntries) {\n            sizes.add(entry.getSize());\n        }\n        \n        long maxSize = 0;\n        for (Long entrySize : sizes) {\n            if (entrySize > maxSize) {\n                maxSize = entrySize;\n            }\n        }\n        \n        System.out.println(\"Maximum size of entries: \" + maxSize);\n    }\n}"
}