{
    "files": {
        "TarEntryManager.java": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.Date;\n\npublic class TarEntryManager {\n    private TarArchiveEntry entry;\n\n    public TarEntryManager(String fileName) {\n        entry = new TarArchiveEntry(fileName);\n    }\n\n    public void setModificationTime(Date modTime) {\n        /* write */ entry.setModTime(modTime);\n    }\n\n    public Date getModificationTime() {\n        return entry.getModTime();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Course> courses;\n\n    public Student(String name) {\n        this.name = name;\n        this.courses = new ArrayList<>();\n    }\n\n    public void enrollInCourse(Course course) {\n        courses.add(course);\n    }\n\n    public ArrayList<Course> getCourses() {\n        return courses;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "public class Course {\n    private String courseName;\n    private int courseCredits;\n\n    public Course(String courseName, int courseCredits) {\n        this.courseName = courseName;\n        this.courseCredits = courseCredits;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n\n    public int getCourseCredits() {\n        return courseCredits;\n    }\n}\n",
        "Main.java": "import java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a TarEntryManager and set modification time\n        TarEntryManager manager = new TarEntryManager(\"example.txt\");\n        Date modTime = new Date();\n        manager.setModificationTime(modTime);\n\n        // Create a Student and enroll in courses\n        Student student = new Student(\"John Doe\");\n        Course math = new Course(\"Mathematics\", 3);\n        Course science = new Course(\"Science\", 4);\n        student.enrollInCourse(math);\n        student.enrollInCourse(science);\n\n        // Display student's courses\n        for (Course course : student.getCourses()) {\n            System.out.println(\"Course: \" + course.getCourseName() + \", Credits: \" + course.getCourseCredits());\n        }\n\n        // Read modification time\n        /* read */ Date readModTime = manager.getModificationTime();\n        System.out.println(\"Modification Time: \" + readModTime);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "write_method": "setModTime",
        "read_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "read_method": "getModTime"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        TarArchiveEntry entry = new TarArchiveEntry(\"example.txt\");\n        Date modTime = new Date();\n        /* write */ entry.setModTime(modTime);\n        /* read */ Date readModTime = entry.getModTime();\n        System.out.println(readModTime);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a TarArchiveEntry\n        TarArchiveEntry entry = new TarArchiveEntry(\"example.txt\");\n        \n        // Set modification time\n        Date modTime = new Date();\n        /* write */ entry.setModTime(modTime);\n        \n        // Initialize a HashMap to simulate some operations\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        \n        // Perform some operations on the map\n        if (map.containsKey(\"key1\")) {\n            int value = map.get(\"key1\");\n            map.put(\"key1\", value + 50);\n        }\n        \n        // Initialize an ArrayList to perform additional operations\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Hello\");\n        list.add(\"World\");\n        \n        // Perform some operations on the list\n        for (String str : list) {\n            System.out.println(str.toUpperCase());\n        }\n        \n        // Read modification time\n        /* read */ Date readModTime = entry.getModTime();\n        System.out.println(\"Modification Time: \" + readModTime);\n        \n        // More operations on map and list to increase complexity\n        map.put(\"key3\", 300);\n        list.add(\"Complexity\");\n        \n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n        \n        for (String str : list) {\n            if (str.length() > 5) {\n                System.out.println(\"Long word: \" + str);\n            }\n        }\n    }\n}"
}