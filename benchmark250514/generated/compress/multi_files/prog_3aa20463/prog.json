{
    "files": {
        "CompressedFile.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class CompressedFile {\n    private ZipArchiveEntry zipEntry;\n\n    public CompressedFile(String fileName) {\n        this.zipEntry = new ZipArchiveEntry(fileName);\n    }\n\n    public void setCompressedSize(long size) {\n        /* write */ zipEntry.setCompressedSize(size);\n    }\n\n    public long getCompressedSize() {\n        return zipEntry.getCompressedSize();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setCompressedSize",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getCompressedSize"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ zipEntry.setCompressedSize(1024);\n        /* read */ long compressedSize = zipEntry.getCompressedSize();\n        System.out.println(compressedSize);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        Map<String, ZipArchiveEntry> zipMap = new HashMap<>();\n        \n        // Adding ZipArchiveEntry to a map\n        zipMap.put(\"entry1\", zipEntry);\n        \n        // Performing unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Manipulating map data\n        ZipArchiveEntry retrievedEntry = zipMap.get(\"entry1\");\n        retrievedEntry.setCompressedSize(2048);\n        \n        // More unrelated operations\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Hello, \");\n        sb.append(\"World!\");\n        System.out.println(sb.toString());\n        \n        /* write */ zipEntry.setCompressedSize(1024);\n        \n        // Using the map to retrieve and manipulate the ZipArchiveEntry\n        ZipArchiveEntry anotherEntry = zipMap.get(\"entry1\");\n        anotherEntry.setCompressedSize(4096);\n        \n        // Final unrelated operation\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n        \n        /* read */ long compressedSize = zipEntry.getCompressedSize();\n        System.out.println(\"Original Compressed Size: \" + compressedSize);\n        \n        // Output the manipulated compressed size from the map entry\n        long manipulatedCompressedSize = anotherEntry.getCompressedSize();\n        System.out.println(\"Manipulated Compressed Size: \" + manipulatedCompressedSize);\n    }\n}"
}