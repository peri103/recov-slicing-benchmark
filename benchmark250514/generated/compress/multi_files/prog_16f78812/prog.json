{
    "files": {
        "ZipEntryManager.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class ZipEntryManager {\n    private ZipArchiveEntry entry;\n\n    public ZipEntryManager(String fileName) {\n        this.entry = new ZipArchiveEntry(fileName);\n    }\n\n    public void setAttributes(long attributes) {\n        /* write */ entry.setExternalAttributes(attributes);\n    }\n\n    public long getAttributes() {\n        return entry.getExternalAttributes();\n    }\n}",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n}",
        "Student.java": "public class Student {\n    private String name;\n    private int studentId;\n\n    public Student(String name, int studentId) {\n        this.name = name;\n        this.studentId = studentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getStudentId() {\n        return studentId;\n    }\n}",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipEntryManager manager = new ZipEntryManager(\"example.txt\");\n        manager.setAttributes(0x20);\n\n        Course course = new Course(\"Computer Science\");\n        Student student1 = new Student(\"Alice\", 1);\n        Student student2 = new Student(\"Bob\", 2);\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        ArrayList<Student> students = course.getStudents();\n        for (Student student : students) {\n            System.out.println(\"Student Name: \" + student.getName() + \", ID: \" + student.getStudentId());\n        }\n\n        /* read */ long attributes = manager.getAttributes();\n        System.out.println(\"Original entry attributes: \" + attributes);\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setExternalAttributes",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getExternalAttributes"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        \n        /* write */ entry.setExternalAttributes(0x20);\n        \n        /* read */ long attributes = entry.getExternalAttributes();\n        \n        System.out.println(attributes);\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        ArrayList<Integer> attributeHistory = new ArrayList<>();\n\n        /* write */ entry.setExternalAttributes(0x20);\n\n        // Complex operations using ArrayList\n        for (int i = 0; i < 5; i++) {\n            attributeHistory.add(i * 10);\n        }\n\n        int sumOfAttributes = 0;\n        for (int attr : attributeHistory) {\n            sumOfAttributes += attr;\n        }\n\n        System.out.println(\"Sum of attributes: \" + sumOfAttributes);\n\n        // Additional operations on ZipArchiveEntry\n        ZipArchiveEntry anotherEntry = new ZipArchiveEntry(\"another_example.txt\");\n        anotherEntry.setExternalAttributes(0x40);\n        long anotherAttributes = anotherEntry.getExternalAttributes();\n        System.out.println(\"Another entry attributes: \" + anotherAttributes);\n\n        /* read */ long attributes = entry.getExternalAttributes();\n\n        System.out.println(\"Original entry attributes: \" + attributes);\n    }\n}"
}