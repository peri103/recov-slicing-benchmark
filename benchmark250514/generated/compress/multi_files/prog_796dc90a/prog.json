{
    "files": {
        "ZipEntryManager.java": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class ZipEntryManager {\n    private ZipArchiveEntry zipEntry;\n\n    public ZipEntryManager(String fileName) {\n        this.zipEntry = new ZipArchiveEntry(fileName);\n    }\n\n    public void setExtraData(byte[] extraData) {\n        /* write */ zipEntry.setExtra(extraData);\n    }\n\n    public byte[] getExtraData() {\n        return zipEntry.getExtra();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize ZipEntryManager\n        ZipEntryManager zipManager = new ZipEntryManager(\"example.txt\");\n\n        // Setting extra data\n        byte[] extraData = {0x05, 0x06, 0x07, 0x08};\n        zipManager.setExtraData(extraData);\n\n        // Create a course and add students\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(new Student(\"Alice\", 20));\n        course.addStudent(new Student(\"Bob\", 22));\n\n        // Display course information\n        System.out.println(\"Course: \" + course.getCourseName());\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n\n        // Perform some unrelated operations\n        Map<String, Integer> inventory = new HashMap<>();\n        inventory.put(\"Pencil\", 10);\n        inventory.put(\"Notebook\", 5);\n\n        for (Map.Entry<String, Integer> item : inventory.entrySet()) {\n            System.out.println(\"Item: \" + item.getKey() + \", Quantity: \" + item.getValue());\n        }\n\n        // Retrieve and display extra data\n        /* read */ byte[] retrievedData = zipManager.getExtraData();\n\n        for (byte b : retrievedData) {\n            System.out.printf(\"0x%02X \", b);\n        }\n        System.out.println();\n    }\n}"
    },
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setExtra",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getExtra"
    },
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        \n        byte[] extraData = {0x01, 0x02, 0x03, 0x04};\n        /* write */ zipEntry.setExtra(extraData);\n        \n        /* read */ byte[] retrievedData = zipEntry.getExtra();\n        \n        for (byte b : retrievedData) {\n            System.out.printf(\"0x%02X \", b);\n        }\n    }\n}",
    "java_code_complex": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initializing a ZipArchiveEntry\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n\n        // Some unrelated complex operations\n        Map<String, Integer> wordCount = new HashMap<>();\n        String text = \"This is a simple text with some simple words\";\n        String[] words = text.split(\" \");\n        \n        for (String word : words) {\n            wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);\n        }\n\n        // Display word count\n        for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {\n            System.out.println(\"Word: \" + entry.getKey() + \", Count: \" + entry.getValue());\n        }\n\n        // Original write operation\n        byte[] extraData = {0x01, 0x02, 0x03, 0x04};\n        /* write */ zipEntry.setExtra(extraData);\n\n        // More unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9 is: \" + sum);\n\n        // Complex nested loop\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                System.out.println(\"i: \" + i + \", j: \" + j);\n            }\n        }\n\n        // Original read operation\n        /* read */ byte[] retrievedData = zipEntry.getExtra();\n\n        // Display retrieved extra data\n        for (byte b : retrievedData) {\n            System.out.printf(\"0x%02X \", b);\n        }\n        System.out.println();\n\n        // Additional complex logic\n        int[][] matrix = new int[3][3];\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                matrix[i][j] = i * j;\n            }\n        }\n\n        // Display matrix\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                System.out.print(matrix[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}"
}