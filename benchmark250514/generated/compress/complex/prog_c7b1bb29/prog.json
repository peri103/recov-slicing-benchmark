{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a JarArchiveEntry and set its time\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        /* write */ entry.setTime(1625097600000L); // Setting time to a specific timestamp\n\n        // Create a map to store additional information about the archive\n        Map<String, Object> archiveInfo = new HashMap<>();\n        archiveInfo.put(\"name\", entry.getName());\n        archiveInfo.put(\"size\", entry.getSize());\n        \n        // Simulate processing the archive entry\n        processArchiveEntry(entry, archiveInfo);\n\n        // Perform some unrelated calculations\n        int result = performComplexCalculation(5, 3);\n        System.out.println(\"Complex calculation result: \" + result);\n\n        // Retrieve and print the time from the JarArchiveEntry\n        /* read */ long time = entry.getTime();\n        System.out.println(\"Entry time: \" + time);\n\n        // Additional operations with the map\n        archiveInfo.put(\"compressedSize\", entry.getCompressedSize());\n        for (Map.Entry<String, Object> info : archiveInfo.entrySet()) {\n            System.out.println(info.getKey() + \": \" + info.getValue());\n        }\n    }\n\n    private static void processArchiveEntry(JarArchiveEntry entry, Map<String, Object> archiveInfo) {\n        // Simulate some processing logic here\n        archiveInfo.put(\"processed\", true);\n    }\n\n    private static int performComplexCalculation(int a, int b) {\n        // Simulate a complex calculation\n        return a * a + b * b;\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        /* write */ entry.setTime(1625097600000L); // Setting time to a specific timestamp\n        /* read */ long time = entry.getTime();\n        System.out.println(time);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setTime",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getTime"
    }
}