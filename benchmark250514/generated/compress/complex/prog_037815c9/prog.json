{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        /* write */ entry.setComment(\"This is a comment.\");\n\n        // Additional complex code\n        ArrayList<String> stringList = new ArrayList<>();\n        stringList.add(\"First\");\n        stringList.add(\"Second\");\n        stringList.add(\"Third\");\n\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n\n        for (String str : stringList) {\n            System.out.println(\"Processing: \" + str);\n            if (map.containsKey(str)) {\n                System.out.println(\"Found in map: \" + map.get(str));\n            } else {\n                System.out.println(\"Not found in map.\");\n            }\n        }\n\n        // More unrelated code\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Reading the comment from the JarArchiveEntry\n        /* read */ String comment = entry.getComment();\n        System.out.println(\"Comment from JarArchiveEntry: \" + comment);\n\n        // Adding more complexity with nested loops\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                System.out.println(\"Nested loop iteration: \" + i + \", \" + j);\n            }\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        /* write */ entry.setComment(\"This is a comment.\");\n        /* read */ String comment = entry.getComment();\n        System.out.println(comment);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setComment",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getComment"
    }
}