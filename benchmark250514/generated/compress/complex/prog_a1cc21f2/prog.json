{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        \n        // Additional Code: Using HashMap to store and retrieve values\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"key1\", 100);\n        dataMap.put(\"key2\", 200);\n        \n        int retrievedValue = dataMap.get(\"key1\");\n        System.out.println(\"Retrieved value from map: \" + retrievedValue);\n        \n        // More complex operations\n        int sum = 0;\n        for (Map.Entry<String, Integer> entrySet : dataMap.entrySet()) {\n            sum += entrySet.getValue();\n        }\n        System.out.println(\"Sum of values in map: \" + sum);\n        \n        // Original write-read pair\n        /* write */ entry.setCrc(123456789L);\n        \n        // Additional Code: Conditional Logic\n        if (sum > 150) {\n            System.out.println(\"Sum is greater than 150\");\n        } else {\n            System.out.println(\"Sum is less or equal to 150\");\n        }\n        \n        // Original read operation\n        /* read */ long crcValue = entry.getCrc();\n        System.out.println(\"CRC value: \" + crcValue);\n        \n        // More complex operations with loops\n        for (int i = 0; i < 5; i++) {\n            int squared = i * i;\n            System.out.println(\"Square of \" + i + \": \" + squared);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ entry.setCrc(123456789L);\n        /* read */ long crcValue = entry.getCrc();\n        System.out.println(crcValue);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setCrc",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getCrc"
    }
}