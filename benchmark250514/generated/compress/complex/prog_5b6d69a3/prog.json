{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize ZipArchiveEntry\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        \n        // Initialize unrelated data structures\n        ArrayList<String> fileList = new ArrayList<>();\n        HashMap<String, Long> fileSizes = new HashMap<>();\n        \n        // Add file names to the list\n        fileList.add(\"example.txt\");\n        fileList.add(\"anotherFile.txt\");\n        \n        // Set the size for the zipEntry\n        /* write */ zipEntry.setSize(1024L);\n        \n        // Process the file list\n        for (String fileName : fileList) {\n            if (fileName.equals(\"example.txt\")) {\n                fileSizes.put(fileName, zipEntry.getSize());\n            } else {\n                fileSizes.put(fileName, 2048L); // Arbitrary size for other files\n            }\n        }\n        \n        // Perform additional operations\n        long totalSize = 0;\n        for (Long size : fileSizes.values()) {\n            totalSize += size;\n        }\n        \n        // Output the total size of all files\n        System.out.println(\"Total size of files: \" + totalSize);\n        \n        // Retrieve and print the size of the zipEntry\n        /* read */ long size = zipEntry.getSize();\n        System.out.println(\"Size of example.txt: \" + size);\n        \n        // Further operations to make the program more complex\n        for (String fileName : fileList) {\n            System.out.println(\"File: \" + fileName + \", Size: \" + fileSizes.get(fileName));\n        }\n        \n        // Additional computational logic\n        int count = 0;\n        for (String fileName : fileList) {\n            if (fileSizes.get(fileName) > 1000) {\n                count++;\n            }\n        }\n        System.out.println(\"Number of files larger than 1000 bytes: \" + count);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ zipEntry.setSize(1024L);\n        /* read */ long size = zipEntry.getSize();\n        System.out.println(size);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setSize",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getSize"
    }
}