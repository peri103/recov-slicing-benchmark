{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize ZipArchiveEntry\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.zip\");\n        \n        // Initialize an ArrayList to simulate additional operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        \n        // Add some numbers to the list\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        // Perform operations on the list\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        \n        // Output the sum of numbers\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Modify the ZipArchiveEntry's time\n        /* write */ zipEntry.setTime(System.currentTimeMillis());\n        \n        // Perform further operations unrelated to ZipArchiveEntry\n        int max = Integer.MIN_VALUE;\n        for (int num : numbers) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        \n        // Output the maximum number\n        System.out.println(\"Maximum number: \" + max);\n        \n        // Read the time from ZipArchiveEntry\n        /* read */ long time = zipEntry.getTime();\n        System.out.println(\"Time set in ZipArchiveEntry: \" + time);\n        \n        // Perform additional operations\n        ArrayList<String> strings = new ArrayList<>();\n        strings.add(\"Hello\");\n        strings.add(\"World\");\n        \n        for (String str : strings) {\n            System.out.println(str);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.zip\");\n        \n        /* write */ zipEntry.setTime(System.currentTimeMillis());\n        \n        /* read */ long time = zipEntry.getTime();\n        System.out.println(\"Time set in ZipArchiveEntry: \" + time);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setTime",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getTime"
    }
}