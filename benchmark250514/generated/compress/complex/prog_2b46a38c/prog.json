{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        byte[] extraData = {0x01, 0x02, 0x03, 0x04};\n        \n        /* write */ entry.setExtra(extraData);\n\n        // Using ArrayList to store some data\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numberList.add(i * 5);\n        }\n\n        // Using HashMap to store key-value pairs\n        HashMap<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < 5; i++) {\n            map.put(\"Key\" + i, i * 10);\n        }\n\n        // Processing data in numberList\n        int sum = 0;\n        for (int num : numberList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n\n        // Processing data in map\n        for (String key : map.keySet()) {\n            System.out.println(key + \": \" + map.get(key));\n        }\n\n        /* read */ byte[] retrievedData = entry.getExtra();\n        \n        for (byte b : retrievedData) {\n            System.out.printf(\"0x%02X \", b);\n        }\n        \n        // Adding more complexity with mathematical operations\n        double result = Math.pow(sum, 2) / 2.5;\n        System.out.println(\"\\nComplex result: \" + result);\n\n        // More operations on the numberList\n        numberList.add(sum);\n        numberList.remove(0);\n        System.out.println(\"Modified numberList: \" + numberList);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        byte[] extraData = {0x01, 0x02, 0x03, 0x04};\n        \n        /* write */ entry.setExtra(extraData);\n        /* read */ byte[] retrievedData = entry.getExtra();\n        \n        for (byte b : retrievedData) {\n            System.out.printf(\"0x%02X \", b);\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setExtra",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getExtra"
    }
}