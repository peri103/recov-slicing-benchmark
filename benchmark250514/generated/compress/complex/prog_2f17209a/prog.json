{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        byte[] extraData = {1, 2, 3, 4};\n\n        // Unrelated complex data structure\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"alpha\", 10);\n        dataMap.put(\"beta\", 20);\n        dataMap.put(\"gamma\", 30);\n\n        // More complex operations on dataMap\n        int sum = 0;\n        for (String key : dataMap.keySet()) {\n            sum += dataMap.get(key);\n        }\n        System.out.println(\"Sum of values in dataMap: \" + sum);\n\n        /* write */ entry.setExtra(extraData);\n\n        // Additional unrelated logic\n        int[] numbers = {5, 10, 15, 20};\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n        }\n        System.out.println(\"Product of numbers array: \" + product);\n\n        // More operations on dataMap\n        if (dataMap.containsKey(\"alpha\")) {\n            int value = dataMap.get(\"alpha\");\n            System.out.println(\"Value of 'alpha': \" + value);\n        }\n\n        /* read */ byte[] readExtraData = entry.getExtra();\n\n        // Print the read extra data\n        System.out.print(\"Read extra data: \");\n        for (byte b : readExtraData) {\n            System.out.print(b + \" \");\n        }\n\n        // Final operations on dataMap\n        dataMap.put(\"delta\", 40);\n        System.out.println(\"\\nUpdated dataMap: \" + dataMap);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        byte[] extraData = {1, 2, 3, 4};\n\n        /* write */ entry.setExtra(extraData);\n        /* read */ byte[] readExtraData = entry.getExtra();\n\n        for (byte b : readExtraData) {\n            System.out.print(b + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setExtra",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getExtra"
    }
}