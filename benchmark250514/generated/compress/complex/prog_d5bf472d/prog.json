{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipFile;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ZipArchiveEntry\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n\n        // Initialize a HashMap to simulate some complex operations\n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n\n        // Perform operations on HashMap\n        if (map.containsKey(\"Two\")) {\n            int val = map.get(\"Two\");\n            map.put(\"Two\", val + 5);\n        }\n\n        // Initialize an ArrayList and perform operations\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Alpha\");\n        list.add(\"Beta\");\n        list.add(\"Gamma\");\n\n        for (String str : list) {\n            System.out.println(\"Processing: \" + str);\n        }\n\n        /* write */ zipEntry.setTime(1625077800000L); // Set time using a sample timestamp\n\n        // Perform more operations with ArrayList\n        list.add(\"Delta\");\n        if (list.contains(\"Gamma\")) {\n            list.remove(\"Gamma\");\n        }\n\n        // Initialize another ZipArchiveEntry to simulate additional operations\n        ZipArchiveEntry anotherZipEntry = new ZipArchiveEntry(\"another_example.txt\");\n        anotherZipEntry.setSize(1024);\n\n        // Perform operations with the second ZipArchiveEntry\n        long size = anotherZipEntry.getSize();\n        System.out.println(\"Size of another entry: \" + size);\n\n        // More complex operations with HashMap\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        /* read */ long time = zipEntry.getTime(); // Read the time set previously\n\n        System.out.println(\"Time: \" + time);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        \n        /* write */ zipEntry.setTime(1625077800000L); // Set time using a sample timestamp\n        \n        /* read */ long time = zipEntry.getTime(); // Read the time set previously\n        \n        System.out.println(\"Time: \" + time);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setTime",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getTime"
    }
}