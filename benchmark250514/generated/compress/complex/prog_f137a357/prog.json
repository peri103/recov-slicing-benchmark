{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        HashMap<String, Integer> map = new HashMap<>();\n        ArrayList<String> list = new ArrayList<>();\n        \n        // Simulate some unrelated operations\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        list.add(\"First\");\n        list.add(\"Second\");\n\n        /* write */ entry.setTime(1609459200000L); // Set time to January 1, 2021\n\n        // Perform some operations on the map\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n\n        // Perform some operations on the list\n        for (String item : list) {\n            System.out.println(\"List item: \" + item);\n        }\n\n        // Additional logic using another JarArchiveEntry\n        JarArchiveEntry anotherEntry = new JarArchiveEntry(\"anotherExample.jar\");\n        anotherEntry.setTime(1622505600000L); // Set time to June 1, 2021\n        long anotherTime = anotherEntry.getTime();\n        System.out.println(\"Another entry time: \" + anotherTime);\n\n        /* read */ long time = entry.getTime();\n        System.out.println(\"Original entry time: \" + time);\n\n        // More complex logic\n        if (time < anotherTime) {\n            System.out.println(\"The original entry time is earlier than the another entry time.\");\n        } else {\n            System.out.println(\"The original entry time is later or equal to the another entry time.\");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        /* write */ entry.setTime(1609459200000L); // Set time to January 1, 2021\n        /* read */ long time = entry.getTime();\n        System.out.println(time);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setTime",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getTime"
    }
}