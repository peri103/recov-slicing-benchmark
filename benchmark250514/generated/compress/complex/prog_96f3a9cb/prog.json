{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"test.zip\");\n        long currentTime = System.currentTimeMillis();\n\n        ArrayList<String> fileList = new ArrayList<>();\n        fileList.add(\"file1.txt\");\n        fileList.add(\"file2.txt\");\n        fileList.add(\"file3.txt\");\n\n        HashMap<String, Long> fileTimeMap = new HashMap<>();\n        for (String fileName : fileList) {\n            fileTimeMap.put(fileName, System.currentTimeMillis());\n        }\n\n        /* write */ zipEntry.setTime(currentTime);\n\n        for (String fileName : fileTimeMap.keySet()) {\n            System.out.println(\"File: \" + fileName + \", Time: \" + fileTimeMap.get(fileName));\n        }\n\n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 99: \" + sum);\n\n        /* read */ long readTime = zipEntry.getTime();\n\n        System.out.println(\"Time set: \" + currentTime);\n        System.out.println(\"Time read: \" + readTime);\n\n        ArrayList<Integer> numberList = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numberList.add(i * 10);\n        }\n\n        for (Integer number : numberList) {\n            System.out.println(\"Number: \" + number);\n        }\n\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers from 1 to 5: \" + product);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"test.zip\");\n        long currentTime = System.currentTimeMillis();\n        \n        /* write */ zipEntry.setTime(currentTime);\n        /* read */ long readTime = zipEntry.getTime();\n        \n        System.out.println(\"Time set: \" + currentTime);\n        System.out.println(\"Time read: \" + readTime);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setTime",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getTime"
    }
}