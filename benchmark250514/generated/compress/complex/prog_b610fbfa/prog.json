{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original JarArchiveEntry operations\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"example.jar\");\n        byte[] extraData = new byte[] {1, 2, 3, 4, 5};\n        \n        /* write */ jarEntry.setExtra(extraData);\n\n        // Additional unrelated code to increase complexity\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.zip\");\n        zipEntry.setComment(\"This is a zip entry comment\");\n        \n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        \n        System.out.println(\"Sum of numbers from 0 to 9 is: \" + sum);\n\n        // More complex operations using ZipArchiveEntry\n        byte[] zipExtraData = new byte[] {10, 20, 30};\n        zipEntry.setExtra(zipExtraData);\n        \n        String comment = zipEntry.getComment();\n        System.out.println(\"Zip entry comment: \" + comment);\n\n        // Continue with original JarArchiveEntry operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        \n        System.out.println(\"Product of numbers from 1 to 5 is: \" + product);\n        \n        /* read */ byte[] readExtraData = jarEntry.getExtra();\n        \n        System.out.print(\"Jar entry extra data: \");\n        for (byte b : readExtraData) {\n            System.out.print(b + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry entry = new JarArchiveEntry(\"example.jar\");\n        byte[] extraData = new byte[] {1, 2, 3, 4, 5};\n        \n        /* write */ entry.setExtra(extraData);\n        \n        /* read */ byte[] readExtraData = entry.getExtra();\n        \n        for (byte b : readExtraData) {\n            System.out.print(b + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setExtra",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getExtra"
    }
}