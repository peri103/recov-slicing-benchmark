{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n\n        // Create a HashMap to simulate some complex operation\n        Map<String, Integer> attributeMap = new HashMap<>();\n        attributeMap.put(\"example.txt\", 12345);\n        attributeMap.put(\"anotherFile.txt\", 67890);\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : attributeMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        System.out.println(\"Sum of all attributes: \" + sum);\n\n        // Set external attributes using the map\n        if (attributeMap.containsKey(\"example.txt\")) {\n            /* write */ zipEntry.setExternalAttributes(attributeMap.get(\"example.txt\"));\n        }\n\n        // More unrelated operations\n        int product = 1;\n        for (int i = 1; i <= 5; i++) {\n            product *= i;\n        }\n        System.out.println(\"Product of numbers 1 to 5: \" + product);\n\n        // Retrieve and print the external attributes\n        /* read */ long externalAttributes = zipEntry.getExternalAttributes();\n        System.out.println(\"External attributes of example.txt: \" + externalAttributes);\n\n        // Continue with some additional logic\n        if (externalAttributes == 12345) {\n            System.out.println(\"Attributes match expected value.\");\n        } else {\n            System.out.println(\"Attributes do not match expected value.\");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ zipEntry.setExternalAttributes(12345);\n        /* read */ long externalAttributes = zipEntry.getExternalAttributes();\n        System.out.println(externalAttributes);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setExternalAttributes",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getExternalAttributes"
    }
}