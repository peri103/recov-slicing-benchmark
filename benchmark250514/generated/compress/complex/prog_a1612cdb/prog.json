{
    "java_code": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        TarArchiveEntry entry = new TarArchiveEntry(\"example\");\n        Random random = new Random();\n        Map<String, Integer> userIdMap = new HashMap<>();\n        \n        // Initialize some user data\n        for (int i = 0; i < 5; i++) {\n            userIdMap.put(\"user\" + i, random.nextInt(1000));\n        }\n        \n        // Perform some operations on the user data\n        for (Map.Entry<String, Integer> userEntry : userIdMap.entrySet()) {\n            System.out.println(\"User: \" + userEntry.getKey() + \", ID: \" + userEntry.getValue());\n        }\n        \n        // Set the user ID using the TarArchiveEntry API\n        /* write */ entry.setUserId(1234);\n        \n        // More complex logic\n        int sum = 0;\n        for (int value : userIdMap.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of user IDs: \" + sum);\n        \n        // Retrieve the user ID using the TarArchiveEntry API\n        /* read */ int userId = entry.getUserId();\n        System.out.println(\"Retrieved User ID: \" + userId);\n        \n        // Further processing\n        if (userId > 1000) {\n            System.out.println(\"User ID is greater than 1000.\");\n        } else {\n            System.out.println(\"User ID is less than or equal to 1000.\");\n        }\n        \n        // Additional unrelated logic\n        int maxId = Integer.MIN_VALUE;\n        for (int id : userIdMap.values()) {\n            if (id > maxId) {\n                maxId = id;\n            }\n        }\n        System.out.println(\"Maximum User ID in map: \" + maxId);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        TarArchiveEntry entry = new TarArchiveEntry(\"example\");\n        /* write */ entry.setUserId(1234);\n        /* read */ int userId = entry.getUserId();\n        System.out.println(userId);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "write_method": "setUserId",
        "read_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "read_method": "getUserId"
    }
}