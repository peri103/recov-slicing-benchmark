{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize ZipArchiveEntry\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n\n        // Perform some unrelated operations\n        ArrayList<String> fileNames = new ArrayList<>();\n        fileNames.add(\"file1.txt\");\n        fileNames.add(\"file2.txt\");\n        fileNames.add(\"file3.txt\");\n\n        for (String fileName : fileNames) {\n            System.out.println(\"Processing: \" + fileName);\n        }\n\n        // Set Unix mode for the ZipArchiveEntry\n        /* write */ entry.setUnixMode(0755);\n\n        // More unrelated operations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 1 to 10: \" + sum);\n\n        // Read the Unix mode from the ZipArchiveEntry\n        /* read */ int mode = entry.getUnixMode();\n        System.out.println(\"Unix mode of example.txt: \" + mode);\n\n        // Another unrelated operation\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            numbers.add(i * 10);\n        }\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry entry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ entry.setUnixMode(0755);\n        /* read */ int mode = entry.getUnixMode();\n        System.out.println(mode);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setUnixMode",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getUnixMode"
    }
}