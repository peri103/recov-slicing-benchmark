{
    "java_code": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        HashMap<String, String> map = new HashMap<>();\n        ArrayList<String> commentsList = new ArrayList<>();\n        \n        /* write */ gzipParameters.setComment(\"This is a comment\");\n        \n        // Adding some dummy data to the map\n        map.put(\"Key1\", \"Value1\");\n        map.put(\"Key2\", \"Value2\");\n        map.put(\"Key3\", \"Value3\");\n        \n        // Iterate over the map and print the key-value pairs\n        for (String key : map.keySet()) {\n            System.out.println(key + \": \" + map.get(key));\n        }\n        \n        // Adding some comments to the list\n        commentsList.add(\"Comment 1\");\n        commentsList.add(\"Comment 2\");\n        commentsList.add(\"Comment 3\");\n        \n        // Performing operations on the comments list\n        for (String comment : commentsList) {\n            System.out.println(\"Processing: \" + comment);\n        }\n        \n        // Additional logic to demonstrate complexity\n        if (map.containsKey(\"Key2\")) {\n            System.out.println(\"Key2 exists in the map\");\n        }\n        \n        // Retrieve the comment from the gzipParameters\n        /* read */ String comment = gzipParameters.getComment();\n        System.out.println(comment);\n        \n        // Further operations on the comments list\n        commentsList.add(comment);\n        for (String comm : commentsList) {\n            System.out.println(\"Final Comment List: \" + comm);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParameters = new GzipParameters();\n        /* write */ gzipParameters.setComment(\"This is a comment\");\n        /* read */ String comment = gzipParameters.getComment();\n        System.out.println(comment);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setComment",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getComment"
    }
}