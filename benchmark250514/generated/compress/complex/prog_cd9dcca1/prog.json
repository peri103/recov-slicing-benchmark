{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"example.jar\");\n        \n        byte[] extraData = {1, 2, 3, 4, 5};\n        /* write */ jarEntry.setExtra(extraData);\n        \n        // Additional complex logic using a HashMap\n        Map<String, Integer> dataMap = new HashMap<>();\n        dataMap.put(\"One\", 1);\n        dataMap.put(\"Two\", 2);\n        dataMap.put(\"Three\", 3);\n\n        int sum = 0;\n        for (Map.Entry<String, Integer> entry : dataMap.entrySet()) {\n            sum += entry.getValue();\n        }\n        \n        // Some unrelated operations\n        int[] numbers = {10, 20, 30, 40, 50};\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n        }\n\n        // More complex operations\n        String[] strings = {\"Hello\", \"World\", \"Java\"};\n        StringBuilder sb = new StringBuilder();\n        for (String str : strings) {\n            sb.append(str).append(\" \");\n        }\n        \n        // Retrieve the extra data from jarEntry\n        /* read */ byte[] retrievedData = jarEntry.getExtra();\n        \n        for (byte b : retrievedData) {\n            System.out.print(b + \" \");\n        }\n        \n        // Print results of additional operations\n        System.out.println(\"\\nSum: \" + sum);\n        System.out.println(\"Product: \" + product);\n        System.out.println(\"Concatenated String: \" + sb.toString().trim());\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"example.jar\");\n        \n        byte[] extraData = {1, 2, 3, 4, 5};\n        /* write */ jarEntry.setExtra(extraData);\n        \n        /* read */ byte[] retrievedData = jarEntry.getExtra();\n        \n        for (byte b : retrievedData) {\n            System.out.print(b + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setExtra",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getExtra"
    }
}