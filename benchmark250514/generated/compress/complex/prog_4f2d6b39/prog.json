{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        Map<String, Integer> compressionMethods = new HashMap<>();\n        compressionMethods.put(\"STORED\", ZipArchiveEntry.STORED);\n        compressionMethods.put(\"DEFLATED\", ZipArchiveEntry.DEFLATED);\n        \n        // Set method for the zip entry\n        /* write */ zipEntry.setMethod(compressionMethods.get(\"DEFLATED\"));\n\n        // Simulate some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // More unrelated logic\n        for (Map.Entry<String, Integer> entry : compressionMethods.entrySet()) {\n            System.out.println(\"Method: \" + entry.getKey() + \", Code: \" + entry.getValue());\n        }\n\n        // Now read the method set earlier\n        /* read */ int method = zipEntry.getMethod();\n        System.out.println(\"Compression method: \" + method);\n\n        // Additional complexity with another ZipArchiveEntry\n        ZipArchiveEntry zipEntry2 = new ZipArchiveEntry(\"another_example.txt\");\n        zipEntry2.setMethod(ZipArchiveEntry.STORED);\n        int method2 = zipEntry2.getMethod();\n        System.out.println(\"Compression method for another_example.txt: \" + method2);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ zipEntry.setMethod(ZipArchiveEntry.DEFLATED);\n        /* read */ int method = zipEntry.getMethod();\n        System.out.println(\"Compression method: \" + method);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setMethod",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getMethod"
    }
}