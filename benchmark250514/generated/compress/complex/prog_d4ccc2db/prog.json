{
    "java_code": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParams = new GzipParameters();\n        Map<String, String> metadata = new HashMap<>();\n        \n        // Add some dummy metadata\n        metadata.put(\"Author\", \"John Doe\");\n        metadata.put(\"Version\", \"1.0.2\");\n        \n        // Perform some operations on metadata\n        for (Map.Entry<String, String> entry : metadata.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        // Set some parameters\n        gzipParams.setCompressionLevel(5);\n        /* write */ gzipParams.setComment(\"This is a comment\");\n        \n        // More operations\n        if (metadata.containsKey(\"Version\")) {\n            System.out.println(\"Version found: \" + metadata.get(\"Version\"));\n        }\n        \n        // Some calculations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n        \n        // Read the comment\n        /* read */ String comment = gzipParams.getComment();\n        System.out.println(comment);\n        \n        // Additional operations on metadata\n        metadata.put(\"License\", \"MIT\");\n        for (String key : metadata.keySet()) {\n            System.out.println(\"Metadata key: \" + key);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters gzipParams = new GzipParameters();\n        /* write */ gzipParams.setComment(\"This is a comment\");\n        /* read */ String comment = gzipParams.getComment();\n        System.out.println(comment);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setComment",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getComment"
    }
}