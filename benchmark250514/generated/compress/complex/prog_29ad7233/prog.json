{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Original write-read pair\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        long timeToSet = 1609459200000L; // Example timestamp (January 1, 2021)\n        /* write */ zipEntry.setTime(timeToSet);\n\n        // Additional complex code\n        Map<String, List<Integer>> dataMap = new HashMap<>();\n        List<Integer> numberList = new ArrayList<>();\n        \n        for (int i = 0; i < 5; i++) {\n            numberList.add(i * 10);\n        }\n        \n        dataMap.put(\"numbers\", numberList);\n        \n        int sum = 0;\n        for (Integer number : dataMap.get(\"numbers\")) {\n            sum += number;\n        }\n        \n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        // Some more unrelated code\n        int max = Integer.MIN_VALUE;\n        for (Integer number : numberList) {\n            if (number > max) {\n                max = number;\n            }\n        }\n        System.out.println(\"Max number: \" + max);\n\n        // Read operation from the original write-read pair\n        /* read */ long retrievedTime = zipEntry.getTime();\n        \n        System.out.println(\"Time set in ZipArchiveEntry: \" + retrievedTime);\n\n        // Additional logic to further increase complexity\n        List<String> stringList = new ArrayList<>();\n        stringList.add(\"apple\");\n        stringList.add(\"banana\");\n        stringList.add(\"cherry\");\n        \n        for (String fruit : stringList) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        \n        long timeToSet = 1609459200000L; // Example timestamp (January 1, 2021)\n        /* write */ zipEntry.setTime(timeToSet);\n        \n        /* read */ long retrievedTime = zipEntry.getTime();\n        \n        System.out.println(\"Time set in ZipArchiveEntry: \" + retrievedTime);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setTime",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getTime"
    }
}