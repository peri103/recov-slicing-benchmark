{
    "java_code": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"example.jar\");\n        byte[] extraData = new byte[]{1, 2, 3, 4, 5};\n        \n        /* write */ jarEntry.setExtra(extraData);\n\n        // Additional unrelated code to make the program more complex\n        Map<String, Integer> map = new HashMap<>();\n        map.put(\"One\", 1);\n        map.put(\"Two\", 2);\n        map.put(\"Three\", 3);\n\n        int sum = 0;\n        for (Integer value : map.values()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of map values: \" + sum);\n\n        // Another unrelated code block\n        int[] numbers = {10, 20, 30, 40, 50};\n        int total = 0;\n        for (int number : numbers) {\n            total += number;\n        }\n        System.out.println(\"Total of numbers array: \" + total);\n\n        // Complex operations with a different JarArchiveEntry\n        JarArchiveEntry anotherJarEntry = new JarArchiveEntry(\"anotherExample.jar\");\n        byte[] otherExtraData = new byte[]{6, 7, 8, 9, 10};\n        anotherJarEntry.setExtra(otherExtraData);\n        byte[] readOtherExtraData = anotherJarEntry.getExtra();\n        System.out.print(\"Other extra data: \");\n        for (byte b : readOtherExtraData) {\n            System.out.print(b + \" \");\n        }\n        System.out.println();\n\n        // Reading the original extra data\n        /* read */ byte[] readExtraData = jarEntry.getExtra();\n        System.out.print(\"Original extra data: \");\n        for (byte b : readExtraData) {\n            System.out.print(b + \" \");\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        JarArchiveEntry jarEntry = new JarArchiveEntry(\"example.jar\");\n        byte[] extraData = new byte[]{1, 2, 3, 4, 5};\n        \n        /* write */ jarEntry.setExtra(extraData);\n        /* read */ byte[] readExtraData = jarEntry.getExtra();\n        \n        for (byte b : readExtraData) {\n            System.out.print(b + \" \");\n        }\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "write_method": "setExtra",
        "read_class": "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
        "read_method": "getExtra"
    }
}