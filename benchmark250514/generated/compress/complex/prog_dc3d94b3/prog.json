{
    "java_code": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.Date;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        TarArchiveEntry entry = new TarArchiveEntry(\"example.txt\");\n        Date now = new Date();\n        \n        // Some unrelated complex operations\n        ArrayList<String> fileNames = new ArrayList<>();\n        fileNames.add(\"file1.txt\");\n        fileNames.add(\"file2.txt\");\n        fileNames.add(\"file3.txt\");\n        \n        for (String fileName : fileNames) {\n            TarArchiveEntry tempEntry = new TarArchiveEntry(fileName);\n            Date tempDate = new Date(System.currentTimeMillis() - 100000);\n            tempEntry.setModTime(tempDate);\n            System.out.println(\"Temporary entry mod time: \" + tempEntry.getModTime());\n        }\n        \n        /* write */ entry.setModTime(now);\n        \n        // More unrelated operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n        \n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        System.out.println(\"Sum of numbers: \" + sum);\n        \n        /* read */ Date modTime = entry.getModTime();\n        System.out.println(\"Original entry mod time: \" + modTime);\n        \n        // Further unrelated operations\n        int max = Integer.MIN_VALUE;\n        for (int number : numbers) {\n            if (number > max) {\n                max = number;\n            }\n        }\n        System.out.println(\"Max number: \" + max);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport java.util.Date;\n\npublic class Main {\n    public static void main(String[] args) {\n        TarArchiveEntry entry = new TarArchiveEntry(\"example.txt\");\n        Date now = new Date();\n        /* write */ entry.setModTime(now);\n        /* read */ Date modTime = entry.getModTime();\n        System.out.println(modTime);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "write_method": "setModTime",
        "read_class": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
        "read_method": "getModTime"
    }
}