{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        ArrayList<String> fileNames = new ArrayList<>();\n        HashMap<String, Long> fileTimes = new HashMap<>();\n\n        // Adding some file names to the list\n        fileNames.add(\"example.txt\");\n        fileNames.add(\"document.pdf\");\n        fileNames.add(\"image.png\");\n\n        // Processing each file\n        for (String fileName : fileNames) {\n            ZipArchiveEntry entry = new ZipArchiveEntry(fileName);\n            long currentTime = System.currentTimeMillis();\n            entry.setTime(currentTime); // Set current time\n            fileTimes.put(fileName, entry.getTime());\n        }\n\n        /* write */ zipEntry.setTime(1622505600000L); // Set time to a specific timestamp\n\n        // Additional processing\n        for (String fileName : fileNames) {\n            if (fileTimes.containsKey(fileName)) {\n                System.out.println(\"File: \" + fileName + \", Time: \" + fileTimes.get(fileName));\n            }\n        }\n\n        // Unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // More unrelated operations\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 1; i <= 5; i++) {\n            numbers.add(i * 5);\n        }\n        for (int number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n\n        /* read */ long time = zipEntry.getTime();\n        System.out.println(\"Time for example.txt: \" + time);\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        /* write */ zipEntry.setTime(1622505600000L); // Set time to a specific timestamp\n        /* read */ long time = zipEntry.getTime();\n        System.out.println(time);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setTime",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getTime"
    }
}