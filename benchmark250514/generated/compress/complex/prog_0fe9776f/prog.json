{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ZipArchiveEntry object\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n\n        // Initialize additional data structures\n        ArrayList<String> fileNames = new ArrayList<>();\n        HashMap<String, Long> fileSizes = new HashMap<>();\n\n        // Add file names to the list\n        fileNames.add(\"example.txt\");\n        fileNames.add(\"document.pdf\");\n        fileNames.add(\"image.png\");\n\n        // Use the write method to set the size of the ZipArchiveEntry\n        /* write */ zipEntry.setSize(1024);\n\n        // Add file sizes to the map\n        fileSizes.put(\"example.txt\", zipEntry.getSize()); // Use the size set by the write method\n        fileSizes.put(\"document.pdf\", 2048L);\n        fileSizes.put(\"image.png\", 512L);\n\n        // Perform operations on the list and map\n        for (String fileName : fileNames) {\n            if (fileSizes.containsKey(fileName)) {\n                System.out.println(\"File: \" + fileName + \", Size: \" + fileSizes.get(fileName));\n            }\n        }\n\n        // Calculate total size of files\n        long totalSize = 0;\n        for (Long size : fileSizes.values()) {\n            totalSize += size;\n        }\n        System.out.println(\"Total size of files: \" + totalSize);\n\n        // Use the read method to get the size of the ZipArchiveEntry\n        /* read */ long size = zipEntry.getSize();\n\n        // Print the size to verify the read operation\n        System.out.println(\"Size of the ZipArchiveEntry: \" + size);\n\n        // Additional computations\n        int fileCount = fileNames.size();\n        System.out.println(\"Number of files: \" + fileCount);\n\n        // Simulate updating file sizes\n        for (String fileName : fileNames) {\n            fileSizes.put(fileName, fileSizes.get(fileName) + 100);\n        }\n\n        // Print updated file sizes\n        for (String fileName : fileNames) {\n            System.out.println(\"Updated size of \" + fileName + \": \" + fileSizes.get(fileName));\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize a ZipArchiveEntry object\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n\n        // Use the write method to set the size of the ZipArchiveEntry\n        /* write */ zipEntry.setSize(1024);\n\n        // Use the read method to get the size of the ZipArchiveEntry\n        /* read */ long size = zipEntry.getSize();\n\n        // Print the size to verify the read operation\n        System.out.println(\"Size of the ZipArchiveEntry: \" + size);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setSize",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getSize"
    }
}