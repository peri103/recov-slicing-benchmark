{
    "java_code": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters parameters = new GzipParameters();\n        Map<String, String> metadata = new HashMap<>();\n        metadata.put(\"Author\", \"John Doe\");\n        metadata.put(\"Version\", \"1.0\");\n        \n        /* write */ parameters.setComment(\"This is a test comment\");\n\n        // Additional operations on metadata\n        for (Map.Entry<String, String> entry : metadata.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // Performing some calculations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n\n        // Adding more metadata\n        metadata.put(\"License\", \"Apache 2.0\");\n        metadata.put(\"Date\", \"2023-10-01\");\n\n        // Complex logic involving metadata\n        if (metadata.containsKey(\"License\")) {\n            System.out.println(\"License information is available.\");\n        }\n\n        // Reading the comment after performing other operations\n        /* read */ String comment = parameters.getComment();\n        System.out.println(\"Gzip comment: \" + comment);\n\n        // Further operations with metadata\n        for (String key : metadata.keySet()) {\n            System.out.println(\"Metadata Key: \" + key);\n        }\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.compressors.gzip.GzipParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n        GzipParameters parameters = new GzipParameters();\n        /* write */ parameters.setComment(\"This is a test comment\");\n        /* read */ String comment = parameters.getComment();\n        System.out.println(comment);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "write_method": "setComment",
        "read_class": "org.apache.commons.compress.compressors.gzip.GzipParameters",
        "read_method": "getComment"
    }
}