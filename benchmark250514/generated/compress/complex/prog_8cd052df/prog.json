{
    "java_code": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipFile;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipOutputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        \n        /* write */ zipEntry.setExternalAttributes(12345);\n        \n        // Additional code to increase complexity\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        try {\n            ZipOutputStream zos = new ZipOutputStream(baos);\n            ZipEntry entry = new ZipEntry(\"example.txt\");\n            entry.setComment(\"This is a test comment.\");\n            zos.putNextEntry(entry);\n            zos.write(\"Hello, World!\".getBytes());\n            zos.closeEntry();\n            zos.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        // Simulate some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of numbers from 0 to 9: \" + sum);\n        \n        // More unrelated operations\n        String[] fruits = {\"Apple\", \"Banana\", \"Cherry\"};\n        for (String fruit : fruits) {\n            System.out.println(\"Fruit: \" + fruit);\n        }\n        \n        /* read */ long externalAttributes = zipEntry.getExternalAttributes();\n        \n        System.out.println(\"External Attributes: \" + externalAttributes);\n        \n        // Additional code to further increase complexity\n        String message = \"Complexity added!\";\n        StringBuilder sb = new StringBuilder();\n        for (char c : message.toCharArray()) {\n            sb.append(c).append('-');\n        }\n        System.out.println(sb.toString());\n    }\n}",
    "java_code_simple": "import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZipArchiveEntry zipEntry = new ZipArchiveEntry(\"example.txt\");\n        \n        /* write */ zipEntry.setExternalAttributes(12345);\n        /* read */ long externalAttributes = zipEntry.getExternalAttributes();\n        \n        System.out.println(externalAttributes);\n    }\n}",
    "pair": {
        "write_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "write_method": "setExternalAttributes",
        "read_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
        "read_method": "getExternalAttributes"
    }
}