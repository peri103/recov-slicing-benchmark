{
    "Code": "import java.util.LinkedHashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedHashSet<Integer> set = new LinkedHashSet<>();\n        \n        int seed = 1234 * 4321 + 777 + 888 + 999;\n        int ambiguousNumber = seed % 10; // Irrelevant computation\n\n        set.add(5); // Add some initial elements\n        set.add(10);\n        set.add(15);\n\n        for (int i = 0; i < ambiguousNumber; i++) {\n            set.add(i * 3); // Filling set with irrelevant elements\n        }\n        \n        if (set.size() > 20) { // Misleading condition\n            set.add(20);\n        }\n        \n        ambiguousNumber += 1; // More unrelated operations\n        \n        if (ambiguousNumber == 5) {\n            /* write */ set.add(25); // This write point affects the read\n        } else {\n            set.add(30);\n        }\n\n        set.add(10); // Duplicate adds\n        set.remove(10); // Irrelevant remove operation\n\n        /* read */ Integer ret = null;\n        for (Integer num : set) {\n            if (num == 25) {\n                ret = num;\n                break;\n            }\n        }\n\n        System.out.println(\"Retrieved value: \" + ret); // This output will tease out set's internal behavior\n    }\n}\n",
    "Internal Variable": "LinkedHashSet.Node[?]"
}