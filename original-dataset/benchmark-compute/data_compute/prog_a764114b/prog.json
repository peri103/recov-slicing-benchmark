{
  "Code": "import java.util.Hashtable;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<Integer, String> table = new Hashtable<>();\n        // Initialize the hashtable with some misleading values.\n        table.put(10, \"Hello\");\n        table.put(20, \"World\");\n        table.put(30, \"Java\");\n\n        // A computed index that will decide the behavior.\n        int index = (10 * 5) - 40 + 2; // Index calculation (equals 12)\n\n        // Perform operations that do not affect the final read.\n        if (index % 2 == 0) {\n            table.put(15, \"NotAffectingValue\"); // Misleading, does not affect the read.\n            table.put(12, \"ConfusingValue\"); // Another misleading write.\n        } else {\n            table.put(25, \"StillDoesNotAffect\");\n        }\n\n        // This is the actual affecting write point.\n        /* write */ table.put(12, \"AffectingValue\");\n\n        // More operations that further obscure the critical write point.\n        table.put(13, \"AnotherValue\");\n        table.remove(30); // Remove an unrelated value.\n\n        // Misleading read operation, retrieve an unrelated value.\n        String unrelatedRead = table.get(15);\n\n        // A final operation that alters an irrelevant part of the table.\n        table.put(14, unrelatedRead);\n\n        // The critical read operation.\n        /* read */ String ret = table.get(12);\n\n        // Print to verify the read point gets the right value.\n        System.out.println(\"Retrieved value: \" + ret);\n    }\n}\n",
  "Internal Variable": "buckets[12]"
}