{
    "java_code": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            // Initialize the BlockingQueue\n            BlockingQueue<Integer> queue = new LinkedBlockingQueue<>();\n            List<Integer> list = new ArrayList<>();\n\n            // Add some elements to the list\n            for (int i = 0; i < 5; i++) {\n                list.add(i * 10);\n            }\n\n            // Perform operations on the list\n            for (int i = 0; i < list.size(); i++) {\n                queue.put(list.get(i));\n            }\n\n            // Insert an unrelated operation\n            int sum = 0;\n            for (int num : list) {\n                sum += num;\n            }\n            System.out.println(\"Sum of list elements: \" + sum);\n\n            // Perform some operations before the original read\n            BlockingQueue<String> stringQueue = new LinkedBlockingQueue<>();\n            stringQueue.put(\"Hello\");\n            stringQueue.put(\"World\");\n            String firstString = stringQueue.take();\n            System.out.println(\"First string from stringQueue: \" + firstString);\n\n            // Original write operation\n            /* write */ queue.put(42);\n\n            // Perform more operations\n            for (int i = 0; i < 3; i++) {\n                stringQueue.put(\"Message \" + i);\n            }\n            String secondString = stringQueue.take();\n            System.out.println(\"Second string from stringQueue: \" + secondString);\n\n            // Original read operation\n            /* read */ int value = queue.take();\n            System.out.println(\"Value from queue: \" + value);\n\n            // Additional operations\n            for (int i = 0; i < list.size(); i++) {\n                System.out.println(\"List element: \" + list.get(i));\n            }\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_simple": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            BlockingQueue<Integer> queue = new LinkedBlockingQueue<>();\n            /* write */ queue.put(42);\n            /* read */ int value = queue.take();\n            System.out.println(value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.BlockingQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.BlockingQueue",
        "read_method": "take"
    }
}