{
    "java_code": "import java.util.SortedSet;\nimport java.util.TreeSet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedSet<Integer> sortedSet = new TreeSet<>();\n        Set<String> hashSet = new HashSet<>();\n        \n        // Add elements to the HashSet\n        hashSet.add(\"Hello\");\n        hashSet.add(\"World\");\n        \n        // Add elements to the SortedSet\n        /* write */ sortedSet.add(42);\n        sortedSet.add(15);\n        sortedSet.add(30);\n        \n        // Print elements of the HashSet\n        for (String str : hashSet) {\n            System.out.println(\"HashSet contains: \" + str);\n        }\n        \n        // Use a loop to perform some operations\n        for (int i = 0; i < 5; i++) {\n            sortedSet.add(i * 10);\n        }\n        \n        // Check if an element exists in the SortedSet\n        int checkValue = 42;\n        /* read */ boolean containsValue = sortedSet.contains(checkValue);\n        \n        // Print result of the contains check\n        System.out.println(\"SortedSet contains \" + checkValue + \": \" + containsValue);\n        \n        // Print all elements in the SortedSet\n        for (Integer num : sortedSet) {\n            System.out.println(\"SortedSet element: \" + num);\n        }\n        \n        // Perform additional operations on HashSet\n        if (hashSet.contains(\"Hello\")) {\n            System.out.println(\"HashSet contains 'Hello'\");\n        }\n        \n        // Remove an element from the HashSet\n        hashSet.remove(\"World\");\n        System.out.println(\"HashSet after removal: \" + hashSet);\n    }\n}",
    "java_code_simple": "import java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedSet<Integer> sortedSet = new TreeSet<>();\n        /* write */ sortedSet.add(42);\n        /* read */ boolean containsValue = sortedSet.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "java.util.SortedSet",
        "write_method": "add",
        "read_class": "java.util.SortedSet",
        "read_method": "contains"
    }
}