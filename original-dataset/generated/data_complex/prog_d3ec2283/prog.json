{
    "java_code": "import java.util.concurrent.ConcurrentSkipListMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListMap<String, Integer> map = new ConcurrentSkipListMap<>();\n        ConcurrentHashMap<String, String> hashMap = new ConcurrentHashMap<>();\n        \n        ArrayList<String> keys = new ArrayList<>();\n        keys.add(\"key1\");\n        keys.add(\"key2\");\n        keys.add(\"key3\");\n        \n        // Adding elements to hashMap\n        for (String key : keys) {\n            hashMap.put(key, \"value_\" + key);\n        }\n        \n        // Operations on hashMap\n        for (String key : keys) {\n            System.out.println(\"HashMap value for \" + key + \": \" + hashMap.get(key));\n        }\n        \n        // Write operation on ConcurrentSkipListMap\n        /* write */ map.put(\"key\", 42);\n        \n        // Additional operations\n        map.put(\"anotherKey\", 100);\n        map.put(\"yetAnotherKey\", 200);\n        \n        // Iterating over ConcurrentSkipListMap\n        for (String key : map.keySet()) {\n            System.out.println(\"ConcurrentSkipListMap value for \" + key + \": \" + map.get(key));\n        }\n        \n        // Read operation on ConcurrentSkipListMap\n        /* read */ Integer value = map.get(\"key\");\n        \n        // Output the value read from ConcurrentSkipListMap\n        System.out.println(\"Value for 'key': \" + value);\n        \n        // Further manipulation\n        map.put(\"newKey\", 300);\n        map.put(\"oldKey\", 400);\n        \n        for (String key : map.keySet()) {\n            System.out.println(\"Updated ConcurrentSkipListMap value for \" + key + \": \" + map.get(key));\n        }\n    }\n}",
    "java_code_simple": "import java.util.concurrent.ConcurrentSkipListMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListMap<String, Integer> map = new ConcurrentSkipListMap<>();\n        /* write */ map.put(\"key\", 42);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentSkipListMap",
        "write_method": "put",
        "read_class": "java.util.concurrent.ConcurrentSkipListMap",
        "read_method": "get"
    }
}