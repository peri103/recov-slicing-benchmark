{
    "java_code": "import java.util.Hashtable;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Hashtable for original write-read pair\n        Hashtable<String, Integer> table = new Hashtable<>();\n        \n        // Additional data structures\n        ArrayList<String> names = new ArrayList<>();\n        LinkedList<Double> scores = new LinkedList<>();\n        \n        // Adding values to the additional data structures\n        names.add(\"Alice\");\n        names.add(\"Bob\");\n        scores.add(95.5);\n        scores.add(87.3);\n        \n        // Original write operation\n        /* write */ table.put(\"key\", 42);\n        \n        // Simulate complex operations\n        for (String name : names) {\n            System.out.println(\"Processing name: \" + name);\n        }\n        \n        for (Double score : scores) {\n            System.out.println(\"Processing score: \" + score);\n        }\n        \n        // Adding more values to the hashtable\n        table.put(\"anotherKey\", 100);\n        \n        // Additional read operations\n        Integer anotherValue = table.get(\"anotherKey\");\n        System.out.println(\"Another value: \" + anotherValue);\n        \n        // Original read operation\n        /* read */ int value = table.get(\"key\");\n        System.out.println(\"Original value: \" + value);\n        \n        // Further complex operations\n        names.add(\"Charlie\");\n        scores.add(92.0);\n        \n        for (String name : names) {\n            System.out.println(\"Final name list: \" + name);\n        }\n        \n        for (Double score : scores) {\n            System.out.println(\"Final score list: \" + score);\n        }\n    }\n}",
    "java_code_simple": "import java.util.Hashtable;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<String, Integer> table = new Hashtable<>();\n        /* write */ table.put(\"key\", 42);\n        /* read */ int value = table.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.Hashtable",
        "write_method": "put",
        "read_class": "java.util.Hashtable",
        "read_method": "get"
    }
}