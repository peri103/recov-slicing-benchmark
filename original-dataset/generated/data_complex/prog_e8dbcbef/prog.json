{
    "java_code": "import java.util.Stack;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Stack<Integer> stack = new Stack<>();\n        ArrayList<Integer> arrayList = new ArrayList<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n\n        // Add elements to the arrayList\n        for (int i = 0; i < 5; i++) {\n            arrayList.add(i * 5);\n        }\n\n        // Add elements to the linkedList\n        for (int i = 0; i < 3; i++) {\n            linkedList.add(i * 10);\n        }\n\n        // Process arrayList\n        for (int value : arrayList) {\n            stack.push(value);\n        }\n\n        // Process linkedList\n        for (int value : linkedList) {\n            stack.push(value * 2);\n        }\n\n        // Adding a new element to stack\n        /* write */ stack.push(42);\n\n        // Perform additional operations\n        int sum = 0;\n        while (!stack.isEmpty()) {\n            sum += stack.pop();\n        }\n        System.out.println(\"Sum of all elements: \" + sum);\n\n        // Repopulate stack for demonstration\n        for (int i = 1; i <= 5; i++) {\n            stack.push(i);\n        }\n\n        // Further operations\n        int max = Integer.MIN_VALUE;\n        while (!stack.isEmpty()) {\n            int current = stack.pop();\n            if (current > max) {\n                max = current;\n            }\n        }\n        System.out.println(\"Maximum value: \" + max);\n\n        // Repopulate stack to demonstrate original read\n        stack.push(100);\n        stack.push(200);\n        stack.push(300);\n\n        // Finally read the value\n        /* read */ int value = stack.pop();\n        System.out.println(\"Popped value: \" + value);\n    }\n}",
    "java_code_simple": "import java.util.Stack;\n\npublic class Main {\n    public static void main(String[] args) {\n        Stack<Integer> stack = new Stack<>();\n        /* write */ stack.push(42);\n        /* read */ int value = stack.pop();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.Stack",
        "write_method": "push",
        "read_class": "java.util.Stack",
        "read_method": "pop"
    }
}