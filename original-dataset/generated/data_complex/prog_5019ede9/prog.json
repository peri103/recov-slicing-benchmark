{
    "java_code": "import java.util.concurrent.SynchronousQueue;\nimport java.util.concurrent.ArrayBlockingQueue;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> synchronousQueue = new SynchronousQueue<>();\n        ArrayBlockingQueue<Integer> arrayBlockingQueue = new ArrayBlockingQueue<>(10);\n        LinkedList<Integer> linkedList = new LinkedList<>();\n\n        // Create a new thread to perform the write operation on the SynchronousQueue\n        new Thread(() -> {\n            try {\n                /* write */ synchronousQueue.put(42);\n                System.out.println(\"Value written to the SynchronousQueue.\");\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                System.out.println(\"Write operation interrupted.\");\n            }\n        }).start();\n\n        // Create another thread to perform operations on ArrayBlockingQueue\n        new Thread(() -> {\n            try {\n                arrayBlockingQueue.put(100);\n                System.out.println(\"Value written to the ArrayBlockingQueue.\");\n                int value = arrayBlockingQueue.take();\n                System.out.println(\"Value read from the ArrayBlockingQueue: \" + value);\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                System.out.println(\"ArrayBlockingQueue operation interrupted.\");\n            }\n        }).start();\n\n        // Create another thread to perform operations on LinkedList\n        new Thread(() -> {\n            linkedList.add(200);\n            linkedList.add(300);\n            System.out.println(\"Values written to the LinkedList.\");\n            int value = linkedList.remove();\n            System.out.println(\"Value read from the LinkedList: \" + value);\n        }).start();\n\n        // Create a new thread to perform the read operation on the SynchronousQueue\n        new Thread(() -> {\n            try {\n                /* read */ int value = synchronousQueue.take();\n                System.out.println(\"Value read from the SynchronousQueue: \" + value);\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                System.out.println(\"Read operation interrupted.\");\n            }\n        }).start();\n    }\n}",
    "java_code_simple": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n\n        // Create a new thread to perform the write operation\n        new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n                System.out.println(\"Value written to the queue.\");\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                System.out.println(\"Write operation interrupted.\");\n            }\n        }).start();\n\n        // Create a new thread to perform the read operation\n        new Thread(() -> {\n            try {\n                /* read */ int value = queue.take();\n                System.out.println(\"Value read from the queue: \" + value);\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                System.out.println(\"Read operation interrupted.\");\n            }\n        }).start();\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.SynchronousQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.SynchronousQueue",
        "read_method": "take"
    }
}