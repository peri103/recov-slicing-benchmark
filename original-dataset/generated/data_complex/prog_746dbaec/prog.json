{
    "java_code": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.HashMap;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.TimeUnit;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<Integer> set = new CopyOnWriteArraySet<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        ExecutorService executor = Executors.newFixedThreadPool(3);\n\n        // Adding elements to the map\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n\n        // Using executor to simulate complex operations\n        executor.submit(() -> {\n            for (int i = 0; i < 5; i++) {\n                set.add(i * 10); // Adding multiple elements to the set\n            }\n        });\n\n        executor.submit(() -> {\n            for (String key : map.keySet()) {\n                System.out.println(\"Map value for \" + key + \": \" + map.get(key));\n            }\n        });\n\n        // Main thread adding a value to the set\n        /* write */ set.add(42);\n\n        executor.submit(() -> {\n            try {\n                Thread.sleep(100); // Simulate some delay\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n            // Check if the set contains specific values\n            System.out.println(\"Set contains 20: \" + set.contains(20));\n        });\n\n        // Shutdown the executor service\n        executor.shutdown();\n        try {\n            executor.awaitTermination(1, TimeUnit.SECONDS);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        // Final check for the original write-read pair\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"Set contains 42: \" + containsValue);\n    }\n}",
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<Integer> set = new CopyOnWriteArraySet<>();\n        /* write */ set.add(42);\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    }
}