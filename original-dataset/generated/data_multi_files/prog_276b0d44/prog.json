{
    "files": {
        "LinkedListManager.java": "import java.util.LinkedList;\n\npublic class LinkedListManager {\n    private LinkedList<Integer> list = new LinkedList<>();\n\n    public void addToEnd(int value) {\n        /* write */ list.addLast(value);\n    }\n\n    public LinkedList<Integer> getList() {\n        return list;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private LinkedListManager linkedListManager = new LinkedListManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        linkedListManager.addToEnd(score);\n    }\n\n    public LinkedList<Integer> getScores() {\n        return linkedListManager.getList();\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a course\n        Course course = new Course(\"Math\");\n\n        // Create students\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        // Add scores to students\n        student1.addScore(85);\n        student1.addScore(90);\n        student2.addScore(75);\n        student2.addScore(80);\n\n        // Add students to course\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        // Retrieve scores and print them\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Scores for \" + student.getScores());\n            /* read */ int lastScore = student.getScores().getLast();\n            System.out.println(\"Last score: \" + lastScore);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.LinkedList",
        "write_method": "addLast",
        "read_class": "java.util.LinkedList",
        "read_method": "getLast"
    },
    "java_code_simple": "import java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedList<Integer> list = new LinkedList<>();\n        /* write */ list.addLast(42);\n        /* read */ int value = list.getLast();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.LinkedList;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedList<Integer> list = new LinkedList<>();\n        ArrayList<String> stringList = new ArrayList<>();\n        ArrayList<Double> doubleList = new ArrayList<>();\n\n        // Some unrelated operations with stringList\n        stringList.add(\"Hello\");\n        stringList.add(\"World\");\n        for (String str : stringList) {\n            System.out.println(\"StringList contains: \" + str);\n        }\n\n        // Adding elements to doubleList\n        for (double i = 0.5; i <= 2.5; i += 0.5) {\n            doubleList.add(i);\n        }\n        System.out.println(\"DoubleList size: \" + doubleList.size());\n\n        // Adding elements to list\n        list.add(10);\n        list.add(20);\n        /* write */ list.addLast(42);\n        list.add(30);\n\n        // Performing some operations on the list\n        if (!list.isEmpty()) {\n            int firstElement = list.getFirst();\n            System.out.println(\"First element in list: \" + firstElement);\n        }\n\n        // Unrelated loop operation\n        for (int i = 0; i < 3; i++) {\n            System.out.println(\"Loop iteration: \" + i);\n        }\n\n        // Reading the last element\n        /* read */ int value = list.getLast();\n        System.out.println(\"Last element in list: \" + value);\n\n        // More operations on doubleList\n        for (Double d : doubleList) {\n            System.out.println(\"DoubleList element: \" + d);\n        }\n\n        // Final summary of all elements in list\n        System.out.println(\"All elements in list:\");\n        for (Integer num : list) {\n            System.out.println(num);\n        }\n    }\n}"
}