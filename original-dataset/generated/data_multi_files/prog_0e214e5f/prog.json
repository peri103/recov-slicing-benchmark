{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private StudentScores scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new StudentScores();\n    }\n\n    public void addScore(int score) {\n        scores.addScore(score);\n    }\n\n    public StudentScores getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "StudentScores.java": "import java.util.Hashtable;\n\npublic class StudentScores {\n    private Hashtable<String, Integer> scores = new Hashtable<>();\n\n    public void addScore(String subject, int score) {\n        /* write */ scores.put(subject, score);\n    }\n\n    public int getScore(String subject) {\n        return scores.get(subject);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students;\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n        this.students = new ArrayList<>();\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        // Create a new course\n        Course course = new Course(\"Mathematics\");\n\n        // Create students\n        Student alice = new Student(\"Alice\");\n        Student bob = new Student(\"Bob\");\n\n        // Add scores for students\n        alice.addScore(\"Algebra\", 95);\n        bob.addScore(\"Geometry\", 88);\n\n        // Add students to the course\n        course.addStudent(alice);\n        course.addStudent(bob);\n\n        // Retrieve and print scores\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Scores for \" + student.getName() + \":\");\n            // Original read operation\n            /* read */ int score = student.getScores().getScore(\"Algebra\");\n            System.out.println(\"Algebra: \" + score);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.Hashtable",
        "write_method": "put",
        "read_class": "java.util.Hashtable",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.Hashtable;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<String, Integer> table = new Hashtable<>();\n        /* write */ table.put(\"key\", 42);\n        /* read */ int value = table.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.Hashtable;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Hashtable for original write-read pair\n        Hashtable<String, Integer> table = new Hashtable<>();\n        \n        // Additional data structures\n        ArrayList<String> names = new ArrayList<>();\n        LinkedList<Double> scores = new LinkedList<>();\n        \n        // Adding values to the additional data structures\n        names.add(\"Alice\");\n        names.add(\"Bob\");\n        scores.add(95.5);\n        scores.add(87.3);\n        \n        // Original write operation\n        /* write */ table.put(\"key\", 42);\n        \n        // Simulate complex operations\n        for (String name : names) {\n            System.out.println(\"Processing name: \" + name);\n        }\n        \n        for (Double score : scores) {\n            System.out.println(\"Processing score: \" + score);\n        }\n        \n        // Adding more values to the hashtable\n        table.put(\"anotherKey\", 100);\n        \n        // Additional read operations\n        Integer anotherValue = table.get(\"anotherKey\");\n        System.out.println(\"Another value: \" + anotherValue);\n        \n        // Original read operation\n        /* read */ int value = table.get(\"key\");\n        System.out.println(\"Original value: \" + value);\n        \n        // Further complex operations\n        names.add(\"Charlie\");\n        scores.add(92.0);\n        \n        for (String name : names) {\n            System.out.println(\"Final name list: \" + name);\n        }\n        \n        for (Double score : scores) {\n            System.out.println(\"Final score list: \" + score);\n        }\n    }\n}"
}