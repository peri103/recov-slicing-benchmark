{
    "files": {
        "CustomSet.java": "import java.util.TreeSet;\n\npublic class CustomSet {\n    private TreeSet<Integer> set = new TreeSet<>();\n\n    public void addElement(int element) {\n        /* write */ set.add(element);\n    }\n\n    public boolean containsElement(int element) {\n        return set.contains(element);\n    }\n\n    public TreeSet<Integer> getSet() {\n        return set;\n    }\n}\n",
        "Student.java": "import java.util.HashMap;\n\npublic class Student {\n    private String name;\n    private HashMap<String, Integer> courseScores;\n\n    public Student(String name) {\n        this.name = name;\n        this.courseScores = new HashMap<>();\n    }\n\n    public void addCourseScore(String course, int score) {\n        courseScores.put(course, score);\n    }\n\n    public int getCourseScore(String course) {\n        return courseScores.getOrDefault(course, 0);\n    }\n\n    public HashMap<String, Integer> getCourseScores() {\n        return courseScores;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        CustomSet customSet = new CustomSet();\n        Student student = new Student(\"Bob\");\n\n        // Adding elements to the set\n        customSet.addElement(10);\n        customSet.addElement(20);\n        customSet.addElement(30);\n        \n        // Adding course scores for the student\n        student.addCourseScore(\"Math\", 95);\n        student.addCourseScore(\"Science\", 88);\n        student.addCourseScore(\"History\", 76);\n\n        // Check if the set contains a specific element\n        boolean containsValue = customSet.containsElement(20);\n        System.out.println(\"Set contains 20: \" + containsValue);\n\n        // Check if the set contains the element added in CustomSet class\n        boolean contains42 = customSet.containsElement(42);\n        System.out.println(\"Set contains 42: \" + contains42);\n\n        // Display student's scores\n        System.out.println(\"Scores for \" + student.getCourseScores());\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.TreeSet",
        "write_method": "add",
        "read_class": "java.util.TreeSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeSet<Integer> set = new TreeSet<>();\n        /* write */ set.add(42);\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.TreeSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeSet<Integer> set = new TreeSet<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        \n        // Adding elements to the map\n        map.put(\"first\", 1);\n        map.put(\"second\", 2);\n        map.put(\"third\", 3);\n        \n        // Iterating over the map and adding values to the set\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            set.add(entry.getValue() * 10);\n        }\n        \n        // Additional operations with the set\n        set.add(100);\n        set.add(200);\n        \n        // Performing a complex calculation\n        int sum = 0;\n        for (Integer num : set) {\n            sum += num;\n        }\n        \n        System.out.println(\"Sum of elements in the set: \" + sum);\n        \n        /* write */ set.add(42);\n        \n        // Performing operations unrelated to the TreeSet\n        int product = 1;\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            product *= entry.getValue();\n        }\n        \n        System.out.println(\"Product of map values: \" + product);\n        \n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(containsValue);\n        \n        // Additional logic to manipulate the map\n        map.put(\"fourth\", product);\n        map.remove(\"third\");\n        \n        // Displaying the map contents\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}"
}