{
    "java_code": "import java.util.concurrent.SynchronousQueue;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.TimeUnit;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        ExecutorService executor = Executors.newFixedThreadPool(2);\n\n        // Create a thread to write to the queue\n        executor.submit(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Create a thread to read from the queue\n        executor.submit(() -> {\n            try {\n                /* read */ int value = queue.take();\n                System.out.println(value);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Shutdown the executor and wait for tasks to complete\n        executor.shutdown();\n        executor.awaitTermination(1, TimeUnit.MINUTES);\n\n        // Additional code to make the program more complex\n        SynchronousQueue<String> anotherQueue = new SynchronousQueue<>();\n        executor = Executors.newFixedThreadPool(2);\n\n        // Write a string to another queue\n        executor.submit(() -> {\n            try {\n                anotherQueue.put(\"Hello\");\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Read the string from another queue\n        executor.submit(() -> {\n            try {\n                String message = anotherQueue.take();\n                System.out.println(message);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Shutdown the executor and wait for tasks to complete\n        executor.shutdown();\n        executor.awaitTermination(1, TimeUnit.MINUTES);\n    }\n}",
    "java_code_simple": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        \n        // Create a thread to write to the queue\n        Thread writer = new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        \n        // Create a thread to read from the queue\n        Thread reader = new Thread(() -> {\n            try {\n                /* read */ int value = queue.take();\n                System.out.println(value);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        \n        // Start the threads\n        writer.start();\n        reader.start();\n        \n        // Wait for the threads to finish\n        writer.join();\n        reader.join();\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.SynchronousQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.SynchronousQueue",
        "read_method": "take"
    }
}