{
    "java_code": "import java.util.concurrent.SynchronousQueue;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        List<Integer> list = new ArrayList<>();\n\n        // Writer thread\n        Thread writerThread = new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Reader thread\n        Thread readerThread = new Thread(() -> {\n            try {\n                /* read */ int value = queue.take();\n                list.add(value);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        writerThread.start();\n        readerThread.start();\n\n        writerThread.join();\n        readerThread.join();\n\n        // Additional code to make the program more complex\n        List<Integer> anotherList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            anotherList.add(i * 10);\n        }\n\n        System.out.println(\"List after adding elements: \" + anotherList);\n\n        int sum = 0;\n        for (int num : anotherList) {\n            sum += num;\n        }\n\n        System.out.println(\"Sum of elements in anotherList: \" + sum);\n\n        // Print the value read from the queue\n        System.out.println(\"Value read from the queue: \" + list.get(0));\n    }\n}",
    "java_code_simple": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        \n        // Writer thread\n        Thread writerThread = new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        // Reader thread\n        Thread readerThread = new Thread(() -> {\n            try {\n                /* read */ int value = queue.take();\n                System.out.println(value);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        writerThread.start();\n        readerThread.start();\n\n        writerThread.join();\n        readerThread.join();\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.SynchronousQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.SynchronousQueue",
        "read_method": "take"
    }
}