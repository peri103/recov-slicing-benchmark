{
    "java_code": "import java.util.concurrent.SynchronousQueue;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.TimeUnit;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        ExecutorService executor = Executors.newFixedThreadPool(2);\n\n        executor.submit(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        executor.submit(() -> {\n            try {\n                TimeUnit.MILLISECONDS.sleep(500); // Simulate some delay\n                /* read */ int value = queue.take();\n                System.out.println(\"Read value: \" + value);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        executor.shutdown();\n        executor.awaitTermination(1, TimeUnit.SECONDS);\n\n        // Additional unrelated code to make the program more complex\n        SynchronousQueue<String> stringQueue = new SynchronousQueue<>();\n        executor = Executors.newFixedThreadPool(2);\n\n        executor.submit(() -> {\n            try {\n                stringQueue.put(\"Hello\");\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        executor.submit(() -> {\n            try {\n                String message = stringQueue.take();\n                System.out.println(\"Message: \" + message);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        executor.shutdown();\n        executor.awaitTermination(1, TimeUnit.SECONDS);\n\n        // More unrelated code\n        SynchronousQueue<Double> doubleQueue = new SynchronousQueue<>();\n        executor = Executors.newFixedThreadPool(2);\n\n        executor.submit(() -> {\n            try {\n                doubleQueue.put(3.14);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        executor.submit(() -> {\n            try {\n                Double pi = doubleQueue.take();\n                System.out.println(\"Pi: \" + pi);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        executor.shutdown();\n        executor.awaitTermination(1, TimeUnit.SECONDS);\n    }\n}",
    "java_code_simple": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        Thread writer = new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        writer.start();\n        /* read */ int value = queue.take();\n        writer.join();\n        System.out.println(value);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.SynchronousQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.SynchronousQueue",
        "read_method": "take"
    }
}