{
    "java_code": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList and LinkedList\n        list.add(10);\n        list.add(20);\n        linkedList.add(\"First\");\n        linkedList.add(\"Second\");\n\n        /* write */ set.add(\"example\");\n\n        // Iterating over the ArrayList and printing elements\n        for (Integer num : list) {\n            System.out.println(\"ArrayList element: \" + num);\n        }\n\n        // Iterating over the LinkedList and printing elements\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList element: \" + str);\n        }\n\n        /* read */ boolean contains = set.contains(\"example\");\n        System.out.println(\"Set contains 'example': \" + contains);\n\n        // Adding more elements to the ArrayList\n        list.add(30);\n        list.add(40);\n\n        // Printing the updated ArrayList\n        for (Integer num : list) {\n            System.out.println(\"Updated ArrayList element: \" + num);\n        }\n\n        // Adding more elements to the LinkedList\n        linkedList.add(\"Third\");\n        linkedList.add(\"Fourth\");\n\n        // Printing the updated LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"Updated LinkedList element: \" + str);\n        }\n    }\n}",
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        /* write */ set.add(\"example\");\n        /* read */ boolean contains = set.contains(\"example\");\n        System.out.println(contains);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    }
}