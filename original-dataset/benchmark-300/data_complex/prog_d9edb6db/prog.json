{
    "java_code": "import java.util.concurrent.ConcurrentSkipListSet;\nimport java.util.HashSet;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<Integer> set = new ConcurrentSkipListSet<>();\n        HashSet<Integer> hashSet = new HashSet<>();\n        Random random = new Random();\n\n        // Add some random values to the hashSet\n        for (int i = 0; i < 10; i++) {\n            int randomValue = random.nextInt(100);\n            hashSet.add(randomValue);\n        }\n\n        // Print the hashSet\n        System.out.println(\"HashSet contents: \" + hashSet);\n\n        // Add a specific value to the ConcurrentSkipListSet\n        /* write */ set.add(42);\n\n        // Check if the value exists in the set\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"ConcurrentSkipListSet contains 42: \" + containsValue);\n\n        // Add all elements from hashSet to the ConcurrentSkipListSet\n        set.addAll(hashSet);\n\n        // Print the ConcurrentSkipListSet\n        System.out.println(\"ConcurrentSkipListSet contents: \" + set);\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 100 integers: \" + sum);\n\n        // Check if the ConcurrentSkipListSet contains a random value from hashSet\n        int randomElement = hashSet.iterator().next();\n        boolean containsRandomElement = set.contains(randomElement);\n        System.out.println(\"ConcurrentSkipListSet contains \" + randomElement + \": \" + containsRandomElement);\n    }\n}",
    "java_code_simple": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<Integer> set = new ConcurrentSkipListSet<>();\n        /* write */ set.add(42);\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentSkipListSet",
        "write_method": "add",
        "read_class": "java.util.concurrent.ConcurrentSkipListSet",
        "read_method": "contains"
    }
}