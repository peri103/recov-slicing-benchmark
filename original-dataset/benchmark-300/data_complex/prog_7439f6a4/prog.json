{
    "java_code": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<Integer> set = new CopyOnWriteArraySet<>();\n        ConcurrentHashMap<String, Integer> map = new ConcurrentHashMap<>();\n        List<String> list = new ArrayList<>();\n\n        // Adding some initial data to the map and list\n        map.put(\"key1\", 100);\n        map.put(\"key2\", 200);\n        list.add(\"item1\");\n        list.add(\"item2\");\n\n        // Performing some operations on the map and list\n        map.compute(\"key1\", (k, v) -> v + 50);\n        list.add(\"item3\");\n\n        /* write */ set.add(42);\n\n        // More operations on the map and list\n        map.put(\"key3\", 300);\n        list.remove(\"item1\");\n\n        // Iterating over the map and list\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        for (String item : list) {\n            System.out.println(\"List Item: \" + item);\n        }\n\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"Contains 42: \" + containsValue);\n\n        // Additional complex operations\n        map.forEach((k, v) -> {\n            if (v > 150) {\n                System.out.println(\"High value key: \" + k);\n            }\n        });\n\n        list.forEach(item -> {\n            if (item.startsWith(\"item\")) {\n                System.out.println(\"Filtered item: \" + item);\n            }\n        });\n    }\n}",
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<Integer> set = new CopyOnWriteArraySet<>();\n        /* write */ set.add(42);\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"Contains 42: \" + containsValue);\n    }\n}",
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    }
}