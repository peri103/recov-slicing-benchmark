{
    "files": {
        "QueueManager.java": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\n\npublic class QueueManager {\n    private BlockingQueue<Integer> queue = new LinkedBlockingQueue<>();\n\n    public void writeToQueue(int value) throws InterruptedException {\n        /* write */ queue.put(value);\n    }\n\n    public int readFromQueue() throws InterruptedException {\n        return queue.take();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        QueueManager queueManager = new QueueManager();\n        Student student = new Student(\"Alice\");\n        \n        // Writing to the queue\n        queueManager.writeToQueue(1);\n        \n        // Adding scores to the student\n        student.addScore(90);\n        student.addScore(85);\n        \n        // Reading from the queue\n        int value = queueManager.readFromQueue();\n        System.out.println(\"Value read from queue: \" + value);\n        \n        // Displaying student scores\n        System.out.println(\"Student scores: \" + student.getScores());\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.BlockingQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.BlockingQueue",
        "read_method": "take"
    },
    "java_code_simple": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        BlockingQueue<Integer> queue = new LinkedBlockingQueue<>();\n        /* write */ queue.put(1);\n        /* read */ int value = queue.take();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        BlockingQueue<Integer> queue = new LinkedBlockingQueue<>();\n        List<Integer> list = new ArrayList<>();\n        \n        // Adding elements to the list\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n        \n        // Writing to the queue\n        /* write */ queue.put(1);\n        \n        // Processing the list\n        for (Integer num : list) {\n            System.out.println(\"Processing number: \" + num);\n        }\n        \n        // Reading from the queue\n        /* read */ int value = queue.take();\n        System.out.println(\"Value read from queue: \" + value);\n        \n        // Additional unrelated operations\n        BlockingQueue<String> stringQueue = new LinkedBlockingQueue<>();\n        stringQueue.put(\"Hello\");\n        stringQueue.put(\"World\");\n        \n        while (!stringQueue.isEmpty()) {\n            System.out.println(stringQueue.take());\n        }\n    }\n}"
}