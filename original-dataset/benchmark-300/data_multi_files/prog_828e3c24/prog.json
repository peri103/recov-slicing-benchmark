{
    "files": {
        "DataProcessor.java": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class DataProcessor {\n    private LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n\n    public void processData(int data) throws InterruptedException {\n        /* write */ queue.put(data);\n    }\n\n    public int getProcessedData() throws InterruptedException {\n        return queue.take();\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            DataProcessor processor = new DataProcessor();\n            Course course = new Course(\"Advanced Programming\");\n\n            // Adding some students to the course\n            course.addStudent(new Student(\"Alice\", 20));\n            course.addStudent(new Student(\"Bob\", 21));\n            course.addStudent(new Student(\"Charlie\", 22));\n\n            // Processing data\n            processor.processData(100);\n\n            // Displaying course information\n            System.out.println(\"Course: \" + course.getCourseName());\n            for (Student student : course.getStudents()) {\n                System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n            }\n\n            // Reading processed data\n            int processedData = processor.getProcessedData();\n            System.out.println(\"Processed Data: \" + processedData);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.LinkedTransferQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.LinkedTransferQueue",
        "read_method": "take"
    },
    "java_code_simple": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n            /* write */ queue.put(42);\n            /* read */ int value = queue.take();\n            System.out.println(value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import java.util.concurrent.LinkedTransferQueue;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        try {\n            LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n            List<Integer> list = new ArrayList<>();\n            /* write */ queue.put(42);\n\n            // Adding some unrelated code to make the program more complex\n            for (int i = 0; i < 10; i++) {\n                list.add(i * 2);\n            }\n\n            // Performing some operations on the list\n            int sum = 0;\n            for (int num : list) {\n                sum += num;\n            }\n            System.out.println(\"Sum of list elements: \" + sum);\n\n            // Another unrelated operation\n            String message = \"Hello, World!\";\n            System.out.println(message);\n\n            // Reading the value from the queue\n            /* read */ int value = queue.take();\n            System.out.println(\"Value read from queue: \" + value);\n\n            // More unrelated code\n            List<String> stringList = new ArrayList<>();\n            stringList.add(\"Java\");\n            stringList.add(\"Programming\");\n            stringList.add(\"is\");\n            stringList.add(\"fun\");\n\n            for (String str : stringList) {\n                System.out.println(str);\n            }\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}"
}