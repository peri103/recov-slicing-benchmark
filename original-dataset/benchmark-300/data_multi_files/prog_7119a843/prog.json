{
    "files": {
        "Student.java": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class Student {\n    private String name;\n    private ConcurrentSkipListSet<Integer> scores = new ConcurrentSkipListSet<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public ConcurrentSkipListSet<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course course = new Course(\"Math\");\n\n        course.addStudent(student);\n\n        /* write */ student.addScore(95);\n\n        // Adding more students and scores\n        Student student2 = new Student(\"Bob\");\n        student2.addScore(85);\n        course.addStudent(student2);\n\n        Student student3 = new Student(\"Charlie\");\n        student3.addScore(90);\n        course.addStudent(student3);\n\n        // Iterating over the students in the course\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student: \" + s.getScores());\n        }\n\n        /* read */ boolean contains = student.getScores().contains(95);\n        System.out.println(\"Does Alice have a score of 95? \" + contains);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentSkipListSet",
        "write_method": "add",
        "read_class": "java.util.concurrent.ConcurrentSkipListSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentSkipListSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<Integer> set = new ConcurrentSkipListSet<>();\n        /* write */ set.add(10);\n        /* read */ boolean contains = set.contains(10);\n        System.out.println(contains);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentSkipListSet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentSkipListSet<Integer> set = new ConcurrentSkipListSet<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n\n        // Adding elements to the list and linkedList\n        list.add(20);\n        list.add(30);\n        linkedList.add(40);\n        linkedList.add(50);\n\n        /* write */ set.add(10);\n\n        // Iterating over the list and adding elements to the set\n        for (Integer num : list) {\n            set.add(num);\n        }\n\n        // Iterating over the linkedList and adding elements to the set\n        for (Integer num : linkedList) {\n            set.add(num);\n        }\n\n        // Printing elements from the set\n        for (Integer num : set) {\n            System.out.println(num);\n        }\n\n        /* read */ boolean contains = set.contains(10);\n        System.out.println(\"Set contains 10: \" + contains);\n\n        // Adding more elements to the list and linkedList\n        list.add(60);\n        linkedList.add(70);\n\n        // Iterating over the list and adding elements to the set\n        for (Integer num : list) {\n            set.add(num);\n        }\n\n        // Iterating over the linkedList and adding elements to the set\n        for (Integer num : linkedList) {\n            set.add(num);\n        }\n\n        // Printing elements from the set again\n        for (Integer num : set) {\n            System.out.println(num);\n        }\n    }\n}"
}