{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private PriorityQueue<Integer> grades = new PriorityQueue<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addGrade(int grade) {\n        grades.offer(grade);\n    }\n\n    public PriorityQueue<Integer> getGrades() {\n        return grades;\n    }\n}\n",
        "Course.java": "import java.util.PriorityQueue;\n\npublic class Course {\n    private String courseName;\n    private PriorityQueue<Student> students = new PriorityQueue<>((s1, s2) -> s1.getGrades().peek() - s2.getGrades().peek());\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.offer(student);\n    }\n\n    public PriorityQueue<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.PriorityQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        /* write */ student.addGrade(85);\n\n        Course course = new Course(\"Mathematics\");\n        course.addStudent(student);\n\n        // Perform some unrelated operations\n        PriorityQueue<Integer> randomNumbers = new PriorityQueue<>();\n        randomNumbers.offer(10);\n        randomNumbers.offer(20);\n        randomNumbers.offer(30);\n\n        while (!randomNumbers.isEmpty()) {\n            System.out.println(\"Polled number: \" + randomNumbers.poll());\n        }\n\n        // Retrieve the original grade\n        PriorityQueue<Integer> grades = student.getGrades();\n        /* read */ int grade = grades.poll();\n        System.out.println(\"Original grade: \" + grade);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.PriorityQueue",
        "write_method": "offer",
        "read_class": "java.util.PriorityQueue",
        "read_method": "poll"
    },
    "java_code_simple": "import java.util.PriorityQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        PriorityQueue<Integer> queue = new PriorityQueue<>();\n        /* write */ queue.offer(10);\n        /* read */ Integer value = queue.poll();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.PriorityQueue;\nimport java.util.LinkedList;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        PriorityQueue<Integer> queue = new PriorityQueue<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n        Random random = new Random();\n\n        // Adding some random numbers to the linked list\n        for (int i = 0; i < 5; i++) {\n            linkedList.add(random.nextInt(100));\n        }\n\n        // Processing the linked list and adding elements to the priority queue\n        for (Integer num : linkedList) {\n            queue.offer(num * 2);\n        }\n\n        /* write */ queue.offer(10); // Original write operation\n\n        // Performing some unrelated operations\n        int sum = 0;\n        for (Integer num : linkedList) {\n            sum += num;\n        }\n        System.out.println(\"Sum of linked list elements: \" + sum);\n\n        // Polling elements from the priority queue\n        while (!queue.isEmpty()) {\n            System.out.println(\"Polled element: \" + queue.poll());\n        }\n\n        /* read */ Integer value = queue.poll(); // Original read operation\n        System.out.println(\"Original read value: \" + value);\n    }\n}"
}