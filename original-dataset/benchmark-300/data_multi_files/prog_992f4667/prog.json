{
    "files": {
        "DataManager.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class DataManager {\n    private CopyOnWriteArraySet<Integer> dataSet = new CopyOnWriteArraySet<>();\n\n    public void addData(int value) {\n        /* write */ dataSet.add(value);\n    }\n\n    public boolean containsData(int value) {\n        return dataSet.contains(value);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addData(int value) {\n        dataManager.addData(value);\n    }\n\n    public boolean checkData(int value) {\n        return dataManager.containsData(value);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Computer Science\");\n        Student student = new Student(\"Alice\");\n        course.addStudent(student);\n\n        student.addData(100);\n\n        List<Student> students = course.getStudents();\n        for (Student s : students) {\n            /* read */ boolean containsValue = s.checkData(100);\n            System.out.println(\"Student \" + s + \" contains 100: \" + containsValue);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet set = new CopyOnWriteArraySet();\n        /* write */ set.add(1);\n        /* read */ boolean containsValue = set.contains(1);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<Integer> set = new CopyOnWriteArraySet<>();\n        Set<Integer> hashSet = new HashSet<>();\n\n        // Adding elements to hashSet\n        for (int i = 0; i < 5; i++) {\n            hashSet.add(i * 10);\n        }\n\n        // Adding all elements from hashSet to set\n        set.addAll(hashSet);\n\n        // Printing elements from set\n        for (Integer num : set) {\n            System.out.println(num);\n        }\n\n        // Writing a specific value to set\n        /* write */ set.add(100);\n\n        // Performing some operations on hashSet\n        hashSet.remove(0);\n        hashSet.add(50);\n\n        // Reading from set\n        /* read */ boolean containsValue = set.contains(100);\n        System.out.println(\"Set contains 100: \" + containsValue);\n\n        // Adding more elements to set\n        for (int i = 6; i < 10; i++) {\n            set.add(i * 10);\n        }\n\n        // Printing all elements from set\n        for (Integer num : set) {\n            System.out.println(num);\n        }\n\n        // Checking if set contains all elements from hashSet\n        boolean containsAll = set.containsAll(hashSet);\n        System.out.println(\"Set contains all elements from hashSet: \" + containsAll);\n    }\n}"
}