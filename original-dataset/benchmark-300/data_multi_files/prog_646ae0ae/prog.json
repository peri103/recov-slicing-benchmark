{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private CopyOnWriteArrayList<String> notes = new CopyOnWriteArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addNote(String note) {\n        /* write */ notes.add(note);\n    }\n\n    public CopyOnWriteArrayList<String> getNotes() {\n        return notes;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Java Programming\");\n        Student student = new Student(\"Alice\");\n        course.addStudent(student);\n\n        student.addNote(\"First note added by Alice\");\n\n        // Adding more students and notes\n        Student student2 = new Student(\"Bob\");\n        course.addStudent(student2);\n        student2.addNote(\"Bob's first note\");\n\n        // Retrieving the first note added by Alice\n        CopyOnWriteArrayList<String> notes = student.getNotes();\n        /* read */ String firstNote = notes.get(0);\n        System.out.println(\"First note by \" + student.getName() + \": \" + firstNote);\n\n        // Printing all students in the course\n        System.out.println(\"Students in \" + course.getCourseName() + \":\");\n        for (Student s : course.getStudents()) {\n            System.out.println(s.getName());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArrayList",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArrayList",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArrayList<String> list = new CopyOnWriteArrayList<>();\n        /* write */ list.add(\"Hello, World!\");\n        /* read */ String value = list.get(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArrayList;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArrayList<String> list = new CopyOnWriteArrayList<>();\n        ArrayList<Integer> list2 = new ArrayList<>();\n        LinkedList<Double> list3 = new LinkedList<>();\n\n        // Adding elements to list2 and list3\n        list2.add(10);\n        list2.add(20);\n        list3.add(3.14);\n        list3.add(2.71);\n\n        /* write */ list.add(\"Hello, World!\");\n\n        // Performing some operations on list2 and list3\n        for (int i = 0; i < list2.size(); i++) {\n            System.out.println(\"List2 element: \" + list2.get(i));\n        }\n\n        for (Double d : list3) {\n            System.out.println(\"List3 element: \" + d);\n        }\n\n        // Adding more elements to list\n        list.add(\"Java\");\n        list.add(\"Programming\");\n\n        /* read */ String value = list.get(0);\n        System.out.println(\"Read value: \" + value);\n\n        // Iterating through the list and printing elements\n        for (String s : list) {\n            System.out.println(\"List element: \" + s);\n        }\n\n        // Adding more elements to list2 and list3\n        list2.add(30);\n        list3.add(1.618);\n\n        // Printing the final state of list2 and list3\n        System.out.println(\"Final List2: \" + list2);\n        System.out.println(\"Final List3: \" + list3);\n    }\n}"
}