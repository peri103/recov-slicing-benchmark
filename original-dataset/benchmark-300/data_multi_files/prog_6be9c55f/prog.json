{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n",
        "Course.java": "import java.util.PriorityQueue;\n\npublic class Course {\n    private PriorityQueue<Student> students = new PriorityQueue<>((s1, s2) -> s1.getAge() - s2.getAge());\n\n    public void addStudent(Student student) {\n        /* write */ students.offer(student);\n    }\n\n    public PriorityQueue<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.PriorityQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course();\n        course.addStudent(new Student(\"Alice\", 20));\n        course.addStudent(new Student(\"Bob\", 22));\n        course.addStudent(new Student(\"Charlie\", 19));\n\n        PriorityQueue<Student> students = course.getStudents();\n        /* read */ Student youngestStudent = students.peek();\n        System.out.println(\"Youngest student: \" + youngestStudent.getName() + \", Age: \" + youngestStudent.getAge());\n\n        while (!students.isEmpty()) {\n            Student student = students.poll();\n            System.out.println(\"Student: \" + student.getName() + \", Age: \" + student.getAge());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.PriorityQueue",
        "write_method": "offer",
        "read_class": "java.util.PriorityQueue",
        "read_method": "peek"
    },
    "java_code_simple": "import java.util.PriorityQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        PriorityQueue<Integer> priorityQueue = new PriorityQueue<>();\n        /* write */ priorityQueue.offer(42);\n        /* read */ Integer value = priorityQueue.peek();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.PriorityQueue;\nimport java.util.Stack;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        PriorityQueue<Integer> priorityQueue = new PriorityQueue<>();\n        Stack<Integer> stack = new Stack<>();\n        Random random = new Random();\n\n        // Adding some random numbers to the stack\n        for (int i = 0; i < 5; i++) {\n            stack.push(random.nextInt(100));\n        }\n\n        // Performing some operations on the stack\n        while (!stack.isEmpty()) {\n            System.out.println(\"Popped from stack: \" + stack.pop());\n        }\n\n        /* write */ priorityQueue.offer(42);\n\n        // Adding more elements to the priority queue\n        for (int i = 0; i < 3; i++) {\n            priorityQueue.offer(random.nextInt(100));\n        }\n\n        // Performing some operations on the priority queue\n        while (!priorityQueue.isEmpty()) {\n            System.out.println(\"Polled from priority queue: \" + priorityQueue.poll());\n        }\n\n        /* read */ Integer value = priorityQueue.peek();\n        System.out.println(\"Peeked value from priority queue: \" + value);\n    }\n}"
}