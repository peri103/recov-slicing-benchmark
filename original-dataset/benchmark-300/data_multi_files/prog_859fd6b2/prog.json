{
    "files": {
        "DataProcessor.java": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class DataProcessor {\n    private LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n\n    public void addData(int data) {\n        /* write */ queue.put(data);\n    }\n\n    public int getData() throws InterruptedException {\n        return queue.take();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        DataProcessor processor = new DataProcessor();\n        Student student = new Student(\"Alice\");\n\n        // Adding scores to the student\n        student.addScore(85);\n        student.addScore(90);\n        student.addScore(95);\n\n        // Writing data to the queue\n        processor.addData(1);\n\n        // Processing student scores\n        for (int score : student.getScores()) {\n            System.out.println(\"Student score: \" + score);\n        }\n\n        // Reading data from the queue\n        /* read */ int value = processor.getData();\n        System.out.println(\"Processed value: \" + value);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.LinkedTransferQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.LinkedTransferQueue",
        "read_method": "take"
    },
    "java_code_simple": "import java.util.concurrent.LinkedTransferQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n        /* write */ queue.put(1);\n        /* read */ int value = queue.take();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.LinkedTransferQueue;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedTransferQueue<Integer> queue = new LinkedTransferQueue<>();\n        List<Integer> list = new ArrayList<>();\n        \n        // Adding some initial values to the list\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n        \n        // Writing to the queue\n        /* write */ queue.put(1);\n        \n        // Processing the list\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"List value: \" + list.get(i));\n        }\n        \n        // Reading from the queue\n        /* read */ int value = queue.take();\n        System.out.println(\"Queue value: \" + value);\n        \n        // Adding more values to the list\n        for (int i = 5; i < 10; i++) {\n            list.add(i * 10);\n        }\n        \n        // Processing the list again\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"List value after addition: \" + list.get(i));\n        }\n    }\n}"
}