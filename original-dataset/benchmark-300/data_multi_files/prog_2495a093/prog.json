{
    "files": {
        "Course.java": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Course {\n    private String courseName;\n    private CopyOnWriteArrayList<Integer> studentIds = new CopyOnWriteArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudentId(int id) {\n        /* write */ studentIds.add(id);\n    }\n\n    public CopyOnWriteArrayList<Integer> getStudentIds() {\n        return studentIds;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Student.java": "public class Student {\n    private int id;\n    private String name;\n\n    public Student(int id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course(\"Mathematics\");\n        Student student1 = new Student(1, \"Alice\");\n        Student student2 = new Student(2, \"Bob\");\n\n        // Adding student IDs to the course\n        mathCourse.addStudentId(student1.getId());\n        mathCourse.addStudentId(student2.getId());\n\n        // Reading the first student ID from the course\n        CopyOnWriteArrayList<Integer> studentIds = mathCourse.getStudentIds();\n        /* read */ int firstStudentId = studentIds.get(0);\n\n        System.out.println(\"Course: \" + mathCourse.getCourseName());\n        System.out.println(\"First Student ID: \" + firstStudentId);\n\n        // Printing all student IDs in the course\n        System.out.println(\"All Student IDs in the course:\");\n        for (Integer id : studentIds) {\n            System.out.println(id);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArrayList",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArrayList",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArrayList<Integer> list = new CopyOnWriteArrayList<>();\n        /* write */ list.add(42);\n        /* read */ int value = list.get(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArrayList;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArrayList<Integer> list = new CopyOnWriteArrayList<>();\n        ArrayList<Integer> list2 = new ArrayList<>();\n        LinkedList<Integer> list3 = new LinkedList<>();\n\n        // Adding elements to list2 and list3\n        list2.add(10);\n        list2.add(20);\n        list3.add(30);\n        list3.add(40);\n\n        // Writing to the original list\n        /* write */ list.add(42);\n\n        // Performing some operations with list2 and list3\n        for (Integer num : list2) {\n            list.add(num);\n        }\n\n        for (Integer num : list3) {\n            list.add(num);\n        }\n\n        // Reading from the original list\n        /* read */ int value = list.get(0);\n        System.out.println(\"Value read from the original list: \" + value);\n\n        // Printing all elements in the list\n        System.out.println(\"All elements in the list:\");\n        for (Integer num : list) {\n            System.out.println(num);\n        }\n\n        // Additional operations with list2 and list3\n        list2.add(50);\n        list3.add(60);\n\n        // Printing elements from list2 and list3\n        System.out.println(\"Elements in list2:\");\n        for (Integer num : list2) {\n            System.out.println(num);\n        }\n\n        System.out.println(\"Elements in list3:\");\n        for (Integer num : list3) {\n            System.out.println(num);\n        }\n    }\n}"
}