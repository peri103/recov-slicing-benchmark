{
    "files": {
        "MessageQueue.java": "import java.util.concurrent.ConcurrentLinkedDeque;\n\npublic class MessageQueue {\n    private ConcurrentLinkedDeque<String> queue = new ConcurrentLinkedDeque<>();\n\n    public void addMessage(String message) {\n        /* write */ queue.addFirst(message);\n    }\n\n    public String getMessage() {\n        return queue.peekFirst();\n    }\n}\n",
        "User.java": "public class User {\n    private String name;\n    private MessageQueue messageQueue = new MessageQueue();\n\n    public User(String name) {\n        this.name = name;\n    }\n\n    public void sendMessage(String message) {\n        messageQueue.addMessage(message);\n    }\n\n    public String receiveMessage() {\n        return messageQueue.getMessage();\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        User user = new User(\"Alice\");\n        ArrayList<String> messages = new ArrayList<>();\n        LinkedList<Integer> numbers = new LinkedList<>();\n\n        // Adding messages to the ArrayList\n        messages.add(\"Hi there!\");\n        messages.add(\"How are you?\");\n\n        // Adding numbers to the LinkedList\n        numbers.add(10);\n        numbers.add(20);\n\n        // Sending a message\n        user.sendMessage(\"Hello, Bob!\");\n\n        // Iterating through the messages and sending them\n        for (String message : messages) {\n            user.sendMessage(message);\n        }\n\n        // Iterating through the numbers and sending them as messages\n        for (Integer number : numbers) {\n            user.sendMessage(number.toString());\n        }\n\n        // Performing some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        // Receiving the first message\n        /* read */ String message = user.receiveMessage();\n        System.out.println(\"First message received: \" + message);\n\n        // Printing all messages\n        System.out.println(\"All messages:\");\n        for (String msg : user.messageQueue.getQueue()) {\n            System.out.println(msg);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentLinkedDeque",
        "write_method": "addFirst",
        "read_class": "java.util.concurrent.ConcurrentLinkedDeque",
        "read_method": "peekFirst"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentLinkedDeque;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedDeque<String> deque = new ConcurrentLinkedDeque<>();\n        /* write */ deque.addFirst(\"Hello\");\n        /* read */ String value = deque.peekFirst();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentLinkedDeque;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedDeque<String> deque = new ConcurrentLinkedDeque<>();\n        ArrayList<String> list = new ArrayList<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        list.add(\"World\");\n        list.add(\"Java\");\n\n        // Adding elements to the LinkedList\n        linkedList.add(100);\n        linkedList.add(200);\n\n        /* write */ deque.addFirst(\"Hello\");\n\n        // Iterating through the ArrayList and adding elements to the deque\n        for (String element : list) {\n            deque.addLast(element);\n        }\n\n        // Iterating through the LinkedList and adding elements to the deque\n        for (Integer number : linkedList) {\n            deque.addLast(number.toString());\n        }\n\n        // Performing some unrelated operations\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 numbers: \" + sum);\n\n        /* read */ String value = deque.peekFirst();\n        System.out.println(\"First element in deque: \" + value);\n\n        // Printing all elements in the deque\n        System.out.println(\"All elements in deque:\");\n        for (String element : deque) {\n            System.out.println(element);\n        }\n    }\n}"
}