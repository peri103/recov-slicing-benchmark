{
    "files": {
        "DataProcessor.java": "import java.util.concurrent.SynchronousQueue;\n\npublic class DataProcessor {\n    private SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n\n    public void writeData(int data) {\n        try {\n            /* write */ queue.put(data);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public int readData() {\n        try {\n            /* read */ return queue.take();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n            return -1; // Return a default value in case of error\n        }\n    }\n}\n",
        "StringProcessor.java": "import java.util.concurrent.SynchronousQueue;\n\npublic class StringProcessor {\n    private SynchronousQueue<String> queue = new SynchronousQueue<>();\n\n    public void writeString(String message) {\n        try {\n            queue.put(message);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String readString() {\n        try {\n            return queue.take();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n            return null; // Return a default value in case of error\n        }\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        DataProcessor dataProcessor = new DataProcessor();\n        StringProcessor stringProcessor = new StringProcessor();\n        List<Integer> numbers = new ArrayList<>();\n\n        // Adding some unrelated code\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        // Writing to the original queue\n        Thread writerThread = new Thread(() -> dataProcessor.writeData(42));\n        writerThread.start();\n\n        // Using the StringProcessor for a different purpose\n        Thread stringWriterThread = new Thread(() -> stringProcessor.writeString(\"Hello, World!\"));\n        stringWriterThread.start();\n\n        // Reading from the original queue\n        int value = dataProcessor.readData();\n        System.out.println(\"Value from queue: \" + value);\n\n        // Reading from the string queue\n        String message = stringProcessor.readString();\n        System.out.println(\"Message from stringQueue: \" + message);\n\n        // More unrelated code\n        System.out.println(\"Numbers list:\");\n        for (int num : numbers) {\n            System.out.println(num);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.SynchronousQueue",
        "write_method": "put",
        "read_class": "java.util.concurrent.SynchronousQueue",
        "read_method": "take"
    },
    "java_code_simple": "import java.util.concurrent.SynchronousQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        Thread writerThread = new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        writerThread.start();\n\n        try {\n            /* read */ int value = queue.take();\n            System.out.println(value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "java_code_complex": "import java.util.concurrent.SynchronousQueue;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        SynchronousQueue<Integer> queue = new SynchronousQueue<>();\n        SynchronousQueue<String> stringQueue = new SynchronousQueue<>();\n        List<Integer> numbers = new ArrayList<>();\n\n        // Adding some unrelated code\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        // Writing to the original queue\n        Thread writerThread = new Thread(() -> {\n            try {\n                /* write */ queue.put(42);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        writerThread.start();\n\n        // Using another SynchronousQueue for a different purpose\n        Thread stringWriterThread = new Thread(() -> {\n            try {\n                stringQueue.put(\"Hello, World!\");\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        stringWriterThread.start();\n\n        // Reading from the original queue\n        try {\n            /* read */ int value = queue.take();\n            System.out.println(\"Value from queue: \" + value);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        // Reading from the string queue\n        try {\n            String message = stringQueue.take();\n            System.out.println(\"Message from stringQueue: \" + message);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        // More unrelated code\n        System.out.println(\"Numbers list:\");\n        for (int num : numbers) {\n            System.out.println(num);\n        }\n    }\n}"
}