{
    "files": {
        "TreeSetManager.java": "import java.util.TreeSet;\n\npublic class TreeSetManager {\n    private TreeSet<Integer> treeSet = new TreeSet<>();\n\n    public void addValue(int value) {\n        /* write */ treeSet.add(value);\n    }\n\n    public boolean containsValue(int value) {\n        return treeSet.contains(value);\n    }\n\n    public TreeSet<Integer> getTreeSet() {\n        return treeSet;\n    }\n}\n",
        "Student.java": "import java.util.HashSet;\nimport java.util.Random;\n\npublic class Student {\n    private String name;\n    private HashSet<Integer> grades = new HashSet<>();\n    private Random random = new Random();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addRandomGrades(int count) {\n        for (int i = 0; i < count; i++) {\n            grades.add(random.nextInt(100));\n        }\n    }\n\n    public HashSet<Integer> getGrades() {\n        return grades;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeSetManager treeSetManager = new TreeSetManager();\n        Student student = new Student(\"Alice\");\n\n        // Adding random grades to the student\n        student.addRandomGrades(10);\n\n        // Copying grades from student to TreeSetManager\n        for (int grade : student.getGrades()) {\n            treeSetManager.addValue(grade);\n        }\n\n        // Writing a specific value to the TreeSetManager\n        treeSetManager.addValue(10);\n\n        // Performing some unrelated operations\n        int sum = 0;\n        for (int value : treeSetManager.getTreeSet()) {\n            sum += value;\n        }\n        System.out.println(\"Sum of all elements in TreeSet: \" + sum);\n\n        // Checking if the TreeSetManager contains the written value\n        /* read */ boolean containsValue = treeSetManager.containsValue(10);\n        System.out.println(\"TreeSet contains 10: \" + containsValue);\n\n        // Printing the final state of the TreeSet\n        System.out.println(\"Final TreeSet: \" + treeSetManager.getTreeSet());\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.TreeSet",
        "write_method": "add",
        "read_class": "java.util.TreeSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeSet<Integer> treeSet = new TreeSet<>();\n        /* write */ treeSet.add(10);\n        /* read */ boolean containsValue = treeSet.contains(10);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.TreeSet;\nimport java.util.HashSet;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeSet<Integer> treeSet = new TreeSet<>();\n        HashSet<Integer> hashSet = new HashSet<>();\n        Random random = new Random();\n\n        // Adding random numbers to the HashSet\n        for (int i = 0; i < 10; i++) {\n            int randomNumber = random.nextInt(100);\n            hashSet.add(randomNumber);\n        }\n\n        // Copying values from HashSet to TreeSet\n        for (int num : hashSet) {\n            treeSet.add(num);\n        }\n\n        // Writing a specific value to the TreeSet\n        /* write */ treeSet.add(10);\n\n        // Performing some unrelated operations\n        int sum = 0;\n        for (int num : treeSet) {\n            sum += num;\n        }\n        System.out.println(\"Sum of all elements in TreeSet: \" + sum);\n\n        // Checking if the TreeSet contains the written value\n        /* read */ boolean containsValue = treeSet.contains(10);\n        System.out.println(\"TreeSet contains 10: \" + containsValue);\n\n        // Adding more elements to the TreeSet\n        for (int i = 0; i < 5; i++) {\n            treeSet.add(random.nextInt(50));\n        }\n\n        // Printing the final state of the TreeSet\n        System.out.println(\"Final TreeSet: \" + treeSet);\n    }\n}"
}