{
    "files": {
        "DataStorage.java": "import java.util.Hashtable;\n\npublic class DataStorage {\n    private Hashtable<String, Integer> hashtable = new Hashtable<>();\n\n    public void storeData(String key, int value) {\n        /* write */ hashtable.put(key, value);\n    }\n\n    public Integer retrieveData(String key) {\n        return hashtable.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataStorage dataStorage = new DataStorage();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void storeScore(String key, int score) {\n        dataStorage.storeData(key, score);\n    }\n\n    public Integer getScore(String key) {\n        return dataStorage.retrieveData(key);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Computer Science\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        student1.storeScore(\"Math\", 95);\n        student2.storeScore(\"Math\", 85);\n\n        for (Student student : course.getStudents()) {\n            /* read */ Integer score = student.getScore(\"Math\");\n            System.out.println(student + \" scored \" + score + \" in Math\");\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.Hashtable",
        "write_method": "put",
        "read_class": "java.util.Hashtable",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.Hashtable;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<String, Integer> hashtable = new Hashtable<>();\n        /* write */ hashtable.put(\"key\", 123);\n        /* read */ Integer value = hashtable.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.Hashtable;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Hashtable<String, Integer> hashtable = new Hashtable<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Adding elements to the LinkedList\n        linkedList.add(\"First\");\n        linkedList.add(\"Second\");\n        linkedList.add(\"Third\");\n\n        /* write */ hashtable.put(\"key\", 123);\n\n        // Processing the ArrayList\n        for (Integer num : list) {\n            System.out.println(\"ArrayList value: \" + num);\n        }\n\n        // Processing the LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList value: \" + str);\n        }\n\n        /* read */ Integer value = hashtable.get(\"key\");\n        System.out.println(\"Hashtable value: \" + value);\n\n        // Additional complex operations\n        Hashtable<String, String> anotherHashtable = new Hashtable<>();\n        anotherHashtable.put(\"anotherKey\", \"AnotherValue\");\n        String anotherValue = anotherHashtable.get(\"anotherKey\");\n        System.out.println(\"Another Hashtable value: \" + anotherValue);\n\n        ArrayList<Double> doubleList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            doubleList.add(i * 1.5);\n        }\n\n        for (Double d : doubleList) {\n            System.out.println(\"Double ArrayList value: \" + d);\n        }\n    }\n}"
}