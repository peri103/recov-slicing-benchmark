{
    "files": {
        "DataManager.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class DataManager {\n    private CopyOnWriteArraySet<String> dataSet = new CopyOnWriteArraySet<>();\n\n    public void addData(String data) {\n        /* write */ dataSet.add(data);\n    }\n\n    public CopyOnWriteArraySet<String> getDataSet() {\n        return dataSet;\n    }\n}\n",
        "User.java": "public class User {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public User(String name) {\n        this.name = name;\n    }\n\n    public void addData(String data) {\n        dataManager.addData(data);\n    }\n\n    public CopyOnWriteArraySet<String> getDataSet() {\n        return dataManager.getDataSet();\n    }\n}\n",
        "Main.java": "import java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        User user = new User(\"JohnDoe\");\n        \n        // Adding some data to the user's DataManager\n        user.addData(\"initialData\");\n        \n        // Creating and populating a HashSet\n        Set<Integer> numbers = new HashSet<>();\n        numbers.add(100);\n        numbers.add(200);\n        numbers.add(300);\n        \n        // Iterating through the HashSet and printing elements\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n        \n        // Checking if the user's DataManager contains the added data\n        /* read */ boolean containsData = user.getDataSet().contains(\"initialData\");\n        System.out.println(\"Contains 'initialData': \" + containsData);\n        \n        // Adding more data to the user's DataManager\n        user.addData(\"additionalData\");\n        user.addData(\"moreData\");\n        \n        // Iterating through the user's DataManager and printing elements\n        for (String data : user.getDataSet()) {\n            System.out.println(\"Data: \" + data);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        /* write */ set.add(\"example\");\n        /* read */ boolean containsValue = set.contains(\"example\");\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        Set<Integer> numbers = new HashSet<>();\n        \n        // Adding elements to the HashSet\n        numbers.add(10);\n        numbers.add(20);\n        numbers.add(30);\n        \n        // Adding an element to the CopyOnWriteArraySet\n        /* write */ set.add(\"example\");\n        \n        // Iterating through the HashSet and printing elements\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n        \n        // Checking if the CopyOnWriteArraySet contains the added element\n        /* read */ boolean containsValue = set.contains(\"example\");\n        System.out.println(\"Contains 'example': \" + containsValue);\n        \n        // Adding more elements to the CopyOnWriteArraySet\n        set.add(\"anotherExample\");\n        set.add(\"yetAnotherExample\");\n        \n        // Iterating through the CopyOnWriteArraySet and printing elements\n        for (String element : set) {\n            System.out.println(\"Set Element: \" + element);\n        }\n    }\n}"
}