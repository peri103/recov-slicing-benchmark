{
    "files": {
        "DataManager.java": "import java.util.HashSet;\n\npublic class DataManager {\n    private HashSet<String> dataSet = new HashSet<>();\n\n    public void addData(String data) {\n        /* write */ dataSet.add(data);\n    }\n\n    public boolean containsData(String data) {\n        return dataSet.contains(data);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addData(String data) {\n        dataManager.addData(data);\n    }\n\n    public boolean checkData(String data) {\n        return dataManager.containsData(data);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Computer Science\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        student1.addData(\"Data1\");\n        student2.addData(\"Data2\");\n\n        List<Student> students = course.getStudents();\n        for (Student student : students) {\n            System.out.println(\"Student: \" + student);\n        }\n\n        /* read */ boolean containsData1 = student1.checkData(\"Data1\");\n        System.out.println(\"Student1 contains 'Data1': \" + containsData1);\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.HashSet",
        "write_method": "add",
        "read_class": "java.util.HashSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashSet set = new HashSet();\n        /* write */ set.add(\"example\");\n        /* read */ boolean contains = set.contains(\"example\");\n        System.out.println(contains);\n    }\n}",
    "java_code_complex": "import java.util.HashSet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashSet set = new HashSet();\n        ArrayList list = new ArrayList();\n        LinkedList linkedList = new LinkedList();\n\n        // Adding elements to the ArrayList and LinkedList\n        list.add(\"item1\");\n        list.add(\"item2\");\n        linkedList.add(\"linkedItem1\");\n        linkedList.add(\"linkedItem2\");\n\n        /* write */ set.add(\"example\");\n\n        // Adding elements from ArrayList and LinkedList to the HashSet\n        for (Object item : list) {\n            set.add(item);\n        }\n        for (Object item : linkedList) {\n            set.add(item);\n        }\n\n        // Performing some operations with the ArrayList and LinkedList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"ArrayList item: \" + list.get(i));\n        }\n        for (int i = 0; i < linkedList.size(); i++) {\n            System.out.println(\"LinkedList item: \" + linkedList.get(i));\n        }\n\n        /* read */ boolean contains = set.contains(\"example\");\n        System.out.println(\"Contains 'example': \" + contains);\n\n        // Adding more elements to the HashSet\n        set.add(\"additionalItem1\");\n        set.add(\"additionalItem2\");\n\n        // Checking if the HashSet contains the additional items\n        System.out.println(\"Contains 'additionalItem1': \" + set.contains(\"additionalItem1\"));\n        System.out.println(\"Contains 'additionalItem2': \" + set.contains(\"additionalItem2\"));\n    }\n}"
}