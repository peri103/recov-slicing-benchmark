{
    "files": {
        "DataStorage.java": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class DataStorage {\n    private CopyOnWriteArrayList<Integer> data = new CopyOnWriteArrayList<>();\n\n    public void addData(int value) {\n        /* write */ data.add(value);\n    }\n\n    public CopyOnWriteArrayList<Integer> getData() {\n        return data;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataStorage storage = new DataStorage();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        storage.addData(score);\n    }\n\n    public CopyOnWriteArrayList<Integer> getScores() {\n        return storage.getData();\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public ArrayList<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Computer Science\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        course.addStudent(student1);\n        course.addStudent(student2);\n\n        student1.addScore(90);\n        student2.addScore(85);\n\n        CopyOnWriteArrayList<Integer> scores = student1.getScores();\n        /* read */ int score = scores.get(0);\n        System.out.println(\"Alice's score: \" + score);\n\n        for (Student student : course.getStudents()) {\n            System.out.println(\"Student: \" + student.getScores());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArrayList",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArrayList",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArrayList list = new CopyOnWriteArrayList();\n        /* write */ list.add(1);\n        /* read */ int value = (Integer) list.get(0);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArrayList;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArrayList<Integer> list = new CopyOnWriteArrayList<>();\n        ArrayList<Integer> list2 = new ArrayList<>();\n        LinkedList<Integer> list3 = new LinkedList<>();\n\n        // Adding elements to list2 and list3\n        list2.add(10);\n        list2.add(20);\n        list3.add(100);\n        list3.add(200);\n\n        /* write */ list.add(1);\n\n        // Iterating through list2 and adding elements to list\n        for (Integer num : list2) {\n            list.add(num);\n        }\n\n        // Getting the first element from list3\n        int x = list3.get(0);\n        System.out.println(\"First element from list3: \" + x);\n\n        /* read */ int value = list.get(0);\n        System.out.println(\"Value read from list: \" + value);\n\n        // Adding more elements to list\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Iterating through list and printing elements\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"Element at index \" + i + \": \" + list.get(i));\n        }\n    }\n}"
}