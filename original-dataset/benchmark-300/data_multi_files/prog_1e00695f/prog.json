{
    "files": {
        "Course.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Course {\n    private String courseName;\n    private CopyOnWriteArraySet<Integer> studentIds = new CopyOnWriteArraySet<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(int studentId) {\n        /* write */ studentIds.add(studentId);\n    }\n\n    public CopyOnWriteArraySet<Integer> getStudentIds() {\n        return studentIds;\n    }\n}\n",
        "Student.java": "public class Student {\n    private int id;\n    private String name;\n\n    public Student(int id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course(\"Mathematics\");\n        Student student1 = new Student(1, \"Alice\");\n        Student student2 = new Student(2, \"Bob\");\n\n        mathCourse.enrollStudent(student1.getId());\n        mathCourse.enrollStudent(student2.getId());\n\n        CopyOnWriteArraySet<Integer> studentIds = mathCourse.getStudentIds();\n        /* read */ boolean isAliceEnrolled = studentIds.contains(student1.getId());\n        System.out.println(\"Is Alice enrolled in the course? \" + isAliceEnrolled);\n\n        // Adding more students\n        Student student3 = new Student(3, \"Charlie\");\n        mathCourse.enrollStudent(student3.getId());\n\n        // Printing all enrolled students\n        for (Integer id : studentIds) {\n            System.out.println(\"Student ID: \" + id);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet set = new CopyOnWriteArraySet();\n        /* write */ set.add(1);\n        /* read */ boolean value = set.contains(1);\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet set = new CopyOnWriteArraySet();\n        ArrayList list = new ArrayList();\n        LinkedList list2 = new LinkedList();\n\n        // Adding elements to the list and list2\n        list.add(10);\n        list.add(20);\n        list2.add(30);\n        list2.add(40);\n\n        /* write */ set.add(1);\n\n        // Iterating over list and adding elements to set\n        for (Object obj : list) {\n            set.add(obj);\n        }\n\n        // Iterating over list2 and adding elements to set\n        for (Object obj : list2) {\n            set.add(obj);\n        }\n\n        // Printing elements from list and list2\n        for (Object obj : list) {\n            System.out.println(obj);\n        }\n        for (Object obj : list2) {\n            System.out.println(obj);\n        }\n\n        /* read */ boolean value = set.contains(1);\n        System.out.println(value);\n\n        // Adding more elements to set\n        set.add(50);\n        set.add(60);\n\n        // Printing all elements in set\n        for (Object obj : set) {\n            System.out.println(obj);\n        }\n    }\n}"
}