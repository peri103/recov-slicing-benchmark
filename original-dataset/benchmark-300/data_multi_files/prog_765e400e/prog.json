{
    "files": {
        "DataProcessor.java": "import java.util.concurrent.ConcurrentLinkedQueue;\n\npublic class DataProcessor {\n    private ConcurrentLinkedQueue<Integer> queue = new ConcurrentLinkedQueue<>();\n\n    public void addData(int data) {\n        /* write */ queue.offer(data);\n    }\n\n    public Integer getData() {\n        return queue.poll();\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public ArrayList<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Main.java": "import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        DataProcessor processor = new DataProcessor();\n        Student student = new Student(\"Alice\");\n\n        // Adding scores to the student\n        student.addScore(85);\n        student.addScore(90);\n        student.addScore(95);\n\n        // Adding data to the processor\n        processor.addData(42);\n\n        // Retrieving and printing scores\n        ArrayList<Integer> scores = student.getScores();\n        for (Integer score : scores) {\n            System.out.println(\"Student score: \" + score);\n        }\n\n        // Retrieving data from the processor\n        /* read */ Integer value = processor.getData();\n        System.out.println(\"Value from processor: \" + value);\n\n        // Additional operations\n        student.addScore(100);\n        System.out.println(\"Updated scores:\");\n        for (Integer score : student.getScores()) {\n            System.out.println(\"Student score: \" + score);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentLinkedQueue",
        "write_method": "offer",
        "read_class": "java.util.concurrent.ConcurrentLinkedQueue",
        "read_method": "poll"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentLinkedQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedQueue<Integer> queue = new ConcurrentLinkedQueue<>();\n        /* write */ queue.offer(42);\n        /* read */ Integer value = queue.poll();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentLinkedQueue;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedQueue<Integer> queue = new ConcurrentLinkedQueue<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Adding elements to the LinkedList\n        for (int i = 0; i < 5; i++) {\n            linkedList.add(i * 20);\n        }\n\n        /* write */ queue.offer(42);\n\n        // Processing the ArrayList\n        for (Integer num : list) {\n            System.out.println(\"ArrayList element: \" + num);\n        }\n\n        // Processing the LinkedList\n        for (Integer num : linkedList) {\n            System.out.println(\"LinkedList element: \" + num);\n        }\n\n        /* read */ Integer value = queue.poll();\n        System.out.println(\"Value from queue: \" + value);\n\n        // Additional operations\n        list.add(100);\n        linkedList.add(200);\n\n        for (Integer num : list) {\n            System.out.println(\"Updated ArrayList element: \" + num);\n        }\n\n        for (Integer num : linkedList) {\n            System.out.println(\"Updated LinkedList element: \" + num);\n        }\n    }\n}"
}