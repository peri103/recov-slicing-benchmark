{
    "files": {
        "Student.java": "import java.util.SortedMap;\nimport java.util.TreeMap;\n\npublic class Student {\n    private String name;\n    private SortedMap<String, Integer> scores = new TreeMap<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(String subject, int score) {\n        /* write */ scores.put(subject, score);\n    }\n\n    public SortedMap<String, Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Course.java": "import java.util.List;\nimport java.util.ArrayList;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n}\n",
        "Main.java": "import java.util.SortedMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course mathCourse = new Course(\"Mathematics\");\n\n        mathCourse.enrollStudent(student);\n        student.addScore(\"Math\", 95);\n\n        // Enroll another student\n        Student bob = new Student(\"Bob\");\n        mathCourse.enrollStudent(bob);\n        bob.addScore(\"Math\", 85);\n\n        // Retrieve and print Alice's score\n        SortedMap<String, Integer> aliceScores = student.getScores();\n        /* read */ int aliceMathScore = aliceScores.get(\"Math\");\n        System.out.println(\"Alice's Math score: \" + aliceMathScore);\n\n        // Print all enrolled students\n        for (Student enrolledStudent : mathCourse.getEnrolledStudents()) {\n            System.out.println(\"Enrolled student: \" + enrolledStudent.getScores());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.SortedMap",
        "write_method": "put",
        "read_class": "java.util.SortedMap",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.SortedMap;\nimport java.util.TreeMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMap<String, Integer> map = new TreeMap<>();\n        /* write */ map.put(\"key\", 123);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.SortedMap;\nimport java.util.TreeMap;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedMap<String, Integer> map = new TreeMap<>();\n        List<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the list and linkedList\n        for (int i = 0; i < 10; i++) {\n            list.add(i * 10);\n            linkedList.add(\"Element \" + i);\n        }\n\n        /* write */ map.put(\"key\", 123);\n\n        // Processing the list and linkedList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"List element: \" + list.get(i));\n        }\n\n        for (String element : linkedList) {\n            System.out.println(\"LinkedList element: \" + element);\n        }\n\n        // Adding more elements to the map\n        map.put(\"anotherKey\", 456);\n        map.put(\"yetAnotherKey\", 789);\n\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(\"Value from map: \" + value);\n\n        // Additional complex operations\n        SortedMap<String, Integer> anotherMap = new TreeMap<>();\n        anotherMap.put(\"newKey\", 999);\n        anotherMap.put(\"anotherNewKey\", 111);\n\n        for (String key : anotherMap.keySet()) {\n            System.out.println(\"Another map key: \" + key + \", value: \" + anotherMap.get(key));\n        }\n\n        // More complex operations with list and linkedList\n        List<Integer> newList = new ArrayList<>(list);\n        newList.addAll(anotherMap.values());\n\n        for (int i = 0; i < newList.size(); i++) {\n            System.out.println(\"New list element: \" + newList.get(i));\n        }\n    }\n}"
}