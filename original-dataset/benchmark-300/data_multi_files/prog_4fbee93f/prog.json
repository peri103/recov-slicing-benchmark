{
    "files": {
        "DataManager.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class DataManager {\n    private CopyOnWriteArraySet<String> dataSet = new CopyOnWriteArraySet<>();\n\n    public void addData(String value) {\n        /* write */ dataSet.add(value);\n    }\n\n    public boolean containsData(String value) {\n        return dataSet.contains(value);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addData(String value) {\n        dataManager.addData(value);\n    }\n\n    public boolean checkData(String value) {\n        return dataManager.containsData(value);\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course course = new Course(\"Computer Science\");\n\n        course.enrollStudent(student);\n        student.addData(\"CS101\");\n\n        /* read */ boolean isEnrolled = student.checkData(\"CS101\");\n        System.out.println(\"Is Alice enrolled in CS101? \" + isEnrolled);\n\n        for (Student enrolledStudent : course.getEnrolledStudents()) {\n            System.out.println(\"Student: \" + enrolledStudent.getName() + \" is enrolled in \" + course.getCourseName());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        /* write */ set.add(\"value\");\n        /* read */ boolean containsValue = set.contains(\"value\");\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        ConcurrentHashMap<String, Integer> map = new ConcurrentHashMap<>();\n        List<Integer> numbers = new ArrayList<>();\n\n        // Adding elements to the list\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i);\n        }\n\n        // Adding elements to the map\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n\n        /* write */ set.add(\"value\");\n\n        // Iterating through the list and printing elements\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n\n        // Iterating through the map and printing key-value pairs\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        /* read */ boolean containsValue = set.contains(\"value\");\n        System.out.println(\"Contains 'value': \" + containsValue);\n\n        // Adding more elements to the set\n        set.add(\"anotherValue\");\n        set.add(\"yetAnotherValue\");\n\n        // Checking if the set contains the new elements\n        System.out.println(\"Contains 'anotherValue': \" + set.contains(\"anotherValue\"));\n        System.out.println(\"Contains 'yetAnotherValue': \" + set.contains(\"yetAnotherValue\"));\n    }\n}"
}