{
    "files": {
        "Student.java": "public class Student {\n    private String name;\n    private ConcurrentLinkedDeque<Integer> scores = new ConcurrentLinkedDeque<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.addFirst(score);\n    }\n\n    public ConcurrentLinkedDeque<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "import java.util.concurrent.ConcurrentLinkedDeque;\n\npublic class Main {\n    public static void main(String[] args) {\n        Course course = new Course(\"Computer Science\");\n        Student student = new Student(\"Alice\");\n        course.addStudent(student);\n\n        student.addScore(95);\n        ConcurrentLinkedDeque<Integer> scores = student.getScores();\n        /* read */ Integer score = scores.peekFirst();\n        System.out.println(\"Alice's score: \" + score);\n\n        // Adding more students and scores\n        Student student2 = new Student(\"Bob\");\n        course.addStudent(student2);\n        student2.addScore(85);\n\n        // Printing all students and their scores\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student: \" + s.getScores().peekFirst());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentLinkedDeque",
        "write_method": "addFirst",
        "read_class": "java.util.concurrent.ConcurrentLinkedDeque",
        "read_method": "peekFirst"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentLinkedDeque;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedDeque<Integer> deque = new ConcurrentLinkedDeque<>();\n        /* write */ deque.addFirst(42);\n        /* read */ Integer value = deque.peekFirst();\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentLinkedDeque;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentLinkedDeque<Integer> deque = new ConcurrentLinkedDeque<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Adding elements to the LinkedList\n        linkedList.add(\"Hello\");\n        linkedList.add(\"World\");\n\n        // Performing operations on the ArrayList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"ArrayList element: \" + list.get(i));\n        }\n\n        // Performing operations on the LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList element: \" + str);\n        }\n\n        /* write */ deque.addFirst(42);\n\n        // Adding more elements to the deque\n        deque.addLast(100);\n        deque.addLast(200);\n\n        // Performing operations on the deque\n        for (Integer num : deque) {\n            System.out.println(\"Deque element: \" + num);\n        }\n\n        /* read */ Integer value = deque.peekFirst();\n        System.out.println(\"Peeked value from deque: \" + value);\n\n        // Adding more elements to the ArrayList\n        list.add(50);\n        list.add(60);\n\n        // Performing final operations on the ArrayList\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(\"Final ArrayList element: \" + list.get(i));\n        }\n    }\n}"
}