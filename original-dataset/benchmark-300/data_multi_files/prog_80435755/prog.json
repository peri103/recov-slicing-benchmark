{
    "files": {
        "DataManager.java": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class DataManager {\n    private CopyOnWriteArraySet<String> dataSet = new CopyOnWriteArraySet<>();\n\n    public void addData(String data) {\n        /* write */ dataSet.add(data);\n    }\n\n    public boolean containsData(String data) {\n        return dataSet.contains(data);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addData(String data) {\n        dataManager.addData(data);\n    }\n\n    public boolean checkData(String data) {\n        return dataManager.containsData(data);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> enrolledStudents = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public List<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course course = new Course(\"Computer Science\");\n\n        // Enroll the student in the course\n        course.enrollStudent(student);\n\n        // Add data to the student's data manager\n        student.addData(\"example\");\n\n        // Check if the data exists in the student's data manager\n        boolean contains = student.checkData(\"example\");\n        System.out.println(\"Student contains 'example': \" + contains);\n\n        // Print enrolled students in the course\n        for (Student enrolledStudent : course.getEnrolledStudents()) {\n            System.out.println(\"Enrolled student: \" + enrolledStudent);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.CopyOnWriteArraySet",
        "write_method": "add",
        "read_class": "java.util.concurrent.CopyOnWriteArraySet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        /* write */ set.add(\"example\");\n        /* read */ boolean contains = set.contains(\"example\");\n        System.out.println(contains);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<String> set = new CopyOnWriteArraySet<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList and LinkedList\n        list.add(10);\n        list.add(20);\n        linkedList.add(\"First\");\n        linkedList.add(\"Second\");\n\n        /* write */ set.add(\"example\");\n\n        // Iterating over the ArrayList and printing elements\n        for (Integer num : list) {\n            System.out.println(\"ArrayList element: \" + num);\n        }\n\n        // Iterating over the LinkedList and printing elements\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList element: \" + str);\n        }\n\n        /* read */ boolean contains = set.contains(\"example\");\n        System.out.println(\"Set contains 'example': \" + contains);\n\n        // Adding more elements to the ArrayList\n        list.add(30);\n        list.add(40);\n\n        // Printing the updated ArrayList\n        for (Integer num : list) {\n            System.out.println(\"Updated ArrayList element: \" + num);\n        }\n\n        // Adding more elements to the LinkedList\n        linkedList.add(\"Third\");\n        linkedList.add(\"Fourth\");\n\n        // Printing the updated LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"Updated LinkedList element: \" + str);\n        }\n    }\n}"
}