{
    "files": {
        "DataManager.java": "import java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class DataManager {\n    private SortedSet<Integer> dataSet = new TreeSet<>();\n\n    public void addData(int value) {\n        /* write */ dataSet.add(value);\n    }\n\n    public SortedSet<Integer> getDataSet() {\n        return dataSet;\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataManager dataManager = new DataManager();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        dataManager.addData(score);\n    }\n\n    public SortedSet<Integer> getScores() {\n        return dataManager.getDataSet();\n    }\n}\n",
        "Course.java": "import java.util.HashSet;\nimport java.util.Set;\n\npublic class Course {\n    private String courseName;\n    private Set<Student> enrolledStudents = new HashSet<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void enrollStudent(Student student) {\n        enrolledStudents.add(student);\n    }\n\n    public Set<Student> getEnrolledStudents() {\n        return enrolledStudents;\n    }\n}\n",
        "Main.java": "import java.util.SortedSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        Student student = new Student(\"Alice\");\n        Course course = new Course(\"Mathematics\");\n\n        // Enroll the student in the course\n        course.enrollStudent(student);\n\n        // Add a score to the student\n        student.addScore(42);\n\n        // Get the student's scores\n        SortedSet<Integer> scores = student.getScores();\n\n        // Check if the score exists\n        /* read */ boolean containsValue = scores.contains(42);\n        System.out.println(\"Contains 42: \" + containsValue);\n\n        // Print all scores\n        System.out.println(\"Student's scores:\");\n        for (Integer score : scores) {\n            System.out.println(score);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.SortedSet",
        "write_method": "add",
        "read_class": "java.util.SortedSet",
        "read_method": "contains"
    },
    "java_code_simple": "import java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedSet<Integer> set = new TreeSet<>();\n        /* write */ set.add(42);\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(containsValue);\n    }\n}",
    "java_code_complex": "import java.util.SortedSet;\nimport java.util.TreeSet;\nimport java.util.HashSet;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        SortedSet<Integer> set = new TreeSet<>();\n        HashSet<Integer> hashSet = new HashSet<>();\n        Random random = new Random();\n\n        // Add some random values to the HashSet\n        for (int i = 0; i < 10; i++) {\n            int randomValue = random.nextInt(100);\n            hashSet.add(randomValue);\n        }\n\n        // Add a specific value to the SortedSet\n        /* write */ set.add(42);\n\n        // Perform some operations on the HashSet\n        for (Integer value : hashSet) {\n            if (value % 2 == 0) {\n                set.add(value);\n            }\n        }\n\n        // Check if the SortedSet contains the specific value\n        /* read */ boolean containsValue = set.contains(42);\n        System.out.println(\"Contains 42: \" + containsValue);\n\n        // Print all elements in the SortedSet\n        System.out.println(\"SortedSet elements:\");\n        for (Integer value : set) {\n            System.out.println(value);\n        }\n\n        // Perform some unrelated operations\n        int sum = 0;\n        for (Integer value : hashSet) {\n            sum += value;\n        }\n        System.out.println(\"Sum of HashSet elements: \" + sum);\n    }\n}"
}