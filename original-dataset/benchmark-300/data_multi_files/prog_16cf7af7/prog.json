{
    "files": {
        "DataStorage.java": "import java.util.concurrent.ConcurrentHashMap;\n\npublic class DataStorage {\n    private ConcurrentHashMap<String, Integer> storage = new ConcurrentHashMap<>();\n\n    public void storeData(String key, int value) {\n        /* write */ storage.put(key, value);\n    }\n\n    public Integer retrieveData(String key) {\n        return storage.get(key);\n    }\n}\n",
        "Student.java": "public class Student {\n    private String name;\n    private DataStorage dataStorage = new DataStorage();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void storeGrade(String subject, int grade) {\n        dataStorage.storeData(subject, grade);\n    }\n\n    public Integer getGrade(String subject) {\n        return dataStorage.retrieveData(subject);\n    }\n}\n",
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private List<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Main.java": "public class Main {\n    public static void main(String[] args) {\n        Course mathCourse = new Course(\"Mathematics\");\n        Student student1 = new Student(\"Alice\");\n        Student student2 = new Student(\"Bob\");\n\n        mathCourse.addStudent(student1);\n        mathCourse.addStudent(student2);\n\n        student1.storeGrade(\"Math\", 95);\n        student2.storeGrade(\"Math\", 85);\n\n        for (Student student : mathCourse.getStudents()) {\n            /* read */ Integer grade = student.getGrade(\"Math\");\n            System.out.println(student.getName() + \"'s grade in Math: \" + grade);\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "java.util.concurrent.ConcurrentHashMap",
        "write_method": "put",
        "read_class": "java.util.concurrent.ConcurrentHashMap",
        "read_method": "get"
    },
    "java_code_simple": "import java.util.concurrent.ConcurrentHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentHashMap<String, Integer> map = new ConcurrentHashMap<>();\n        /* write */ map.put(\"key\", 123);\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import java.util.concurrent.ConcurrentHashMap;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ConcurrentHashMap<String, Integer> map = new ConcurrentHashMap<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        LinkedList<String> linkedList = new LinkedList<>();\n\n        // Adding elements to the ArrayList\n        for (int i = 0; i < 5; i++) {\n            list.add(i * 10);\n        }\n\n        // Adding elements to the LinkedList\n        linkedList.add(\"First\");\n        linkedList.add(\"Second\");\n        linkedList.add(\"Third\");\n\n        /* write */ map.put(\"key\", 123);\n\n        // Processing the ArrayList\n        for (Integer num : list) {\n            System.out.println(\"ArrayList value: \" + num);\n        }\n\n        // Processing the LinkedList\n        for (String str : linkedList) {\n            System.out.println(\"LinkedList value: \" + str);\n        }\n\n        /* read */ Integer value = map.get(\"key\");\n        System.out.println(\"Value from ConcurrentHashMap: \" + value);\n\n        // Additional operations\n        ConcurrentHashMap<String, String> anotherMap = new ConcurrentHashMap<>();\n        anotherMap.put(\"anotherKey\", \"anotherValue\");\n        System.out.println(\"Value from another ConcurrentHashMap: \" + anotherMap.get(\"anotherKey\"));\n    }\n}"
}