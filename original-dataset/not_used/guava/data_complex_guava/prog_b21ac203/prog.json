{
    "java_code": "import com.google.common.util.concurrent.AtomicDouble;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        AtomicDouble atomicDouble = new AtomicDouble(0.0);\n        Map<String, Integer> map = new HashMap<>();\n        \n        // Adding some values to the map\n        map.put(\"A\", 1);\n        map.put(\"B\", 2);\n        map.put(\"C\", 3);\n        \n        // Modifying the map\n        for (String key : map.keySet()) {\n            map.put(key, map.get(key) * 2);\n        }\n        \n        /* write */ double newValue = atomicDouble.addAndGet(5.0);\n        \n        // Using the map after writing\n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // Performing some unrelated calculations\n        int sum = 0;\n        for (int i = 1; i <= 10; i++) {\n            sum += i;\n        }\n        System.out.println(\"Sum of first 10 natural numbers: \" + sum);\n        \n        /* read */ double value = atomicDouble.get();\n        System.out.println(\"Value after write: \" + newValue);\n        System.out.println(\"Value read: \" + value);\n    }\n}",
    "java_code_simple": "import com.google.common.util.concurrent.AtomicDouble;\n\npublic class Main {\n    public static void main(String[] args) {\n        AtomicDouble atomicDouble = new AtomicDouble(0.0);\n        /* write */ double newValue = atomicDouble.addAndGet(5.0);\n        /* read */ double value = atomicDouble.get();\n        System.out.println(\"Value after write: \" + newValue);\n        System.out.println(\"Value read: \" + value);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.util.concurrent.AtomicDouble",
        "write_method": "addAndGet",
        "read_class": "com.google.common.util.concurrent.AtomicDouble",
        "read_method": "get"
    }
}