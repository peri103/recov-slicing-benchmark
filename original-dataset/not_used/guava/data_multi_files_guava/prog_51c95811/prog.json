{
    "files": {
        "Course.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Course {\n    private String courseName;\n    private ArrayList<Student> students = new ArrayList<>();\n\n    public Course(String courseName) {\n        this.courseName = courseName;\n    }\n\n    public void addStudent(Student student) {\n        students.add(student);\n    }\n\n    public List<Student> getStudents() {\n        return students;\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private ArrayList<Integer> scores = new ArrayList<>();\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n}\n",
        "Main.java": "import com.google.common.collect.TreeMultimap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeMultimap<String, Integer> multimap = TreeMultimap.create();\n        Course course = new Course(\"Mathematics\");\n        Student student = new Student(\"Alice\");\n\n        /* write */ multimap.put(\"key1\", 10);\n        \n        // Adding a student and their score\n        student.addScore(95);\n        course.addStudent(student);\n        \n        // Displaying student scores\n        for (Integer score : student.getScores()) {\n            System.out.println(\"Student Score: \" + score);\n        }\n        \n        /* read */ Collection<Integer> values = multimap.get(\"key1\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n        \n        // Displaying students in the course\n        for (Student s : course.getStudents()) {\n            System.out.println(\"Student in Course: \" + s.getScores());\n        }\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.collect.TreeMultimap",
        "write_method": "put",
        "read_class": "com.google.common.collect.TreeMultimap",
        "read_method": "get"
    },
    "java_code_simple": "import com.google.common.collect.TreeMultimap;\nimport java.util.Collection;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeMultimap<String, Integer> multimap = TreeMultimap.create();\n        /* write */ multimap.put(\"key1\", 10);\n        /* read */ Collection<Integer> values = multimap.get(\"key1\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n    }\n}",
    "java_code_complex": "import com.google.common.collect.TreeMultimap;\nimport java.util.Collection;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        TreeMultimap<String, Integer> multimap = TreeMultimap.create();\n        HashMap<String, Integer> map = new HashMap<>();\n        ArrayList<String> list = new ArrayList<>();\n        \n        /* write */ multimap.put(\"key1\", 10);\n        \n        // Additional unrelated code to increase complexity\n        map.put(\"one\", 1);\n        map.put(\"two\", 2);\n        list.add(\"item1\");\n        list.add(\"item2\");\n        \n        for (String item : list) {\n            System.out.println(\"List item: \" + item);\n        }\n        \n        // More operations on the map\n        for (String key : map.keySet()) {\n            System.out.println(\"Map key: \" + key + \", value: \" + map.get(key));\n        }\n        \n        /* read */ Collection<Integer> values = multimap.get(\"key1\");\n        for (Integer value : values) {\n            System.out.println(value);\n        }\n        \n        // Further operations to enhance complexity\n        for (int i = 0; i < 5; i++) {\n            multimap.put(\"key\" + i, i * 10);\n        }\n        \n        // Displaying the contents of the multimap\n        for (String key : multimap.asMap().keySet()) {\n            System.out.println(\"Key: \" + key + \", Values: \" + multimap.get(key));\n        }\n    }\n}"
}