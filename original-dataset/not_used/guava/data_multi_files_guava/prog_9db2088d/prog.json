{
    "files": {
        "CacheManager.java": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\n\npublic class CacheManager {\n    private Cache<Integer, String> cache;\n\n    public CacheManager() {\n        cache = CacheBuilder.newBuilder().build();\n    }\n\n    public void addValue(int key, String value) {\n        /* write */ cache.put(key, value);\n    }\n\n    public String getValue(int key) {\n        return cache.getIfPresent(key);\n    }\n}\n",
        "Student.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private List<Integer> scores;\n\n    public Student(String name) {\n        this.name = name;\n        this.scores = new ArrayList<>();\n    }\n\n    public void addScore(int score) {\n        scores.add(score);\n    }\n\n    public List<Integer> getScores() {\n        return scores;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
        "Main.java": "import java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Initialize CacheManager\n        CacheManager cacheManager = new CacheManager();\n        \n        // Add value to the cache\n        cacheManager.addValue(1, \"Hello, World!\");\n\n        // Create a Student object\n        Student student = new Student(\"Alice\");\n        student.addScore(95);\n        student.addScore(88);\n\n        // Retrieve scores\n        List<Integer> scores = student.getScores();\n        \n        // Read from cache\n        /* read */ String value = cacheManager.getValue(1);\n        \n        // Print the value retrieved from the cache and the first score\n        System.out.println(value);\n        System.out.println(\"Student: \" + student.getName() + \", First Score: \" + scores.get(0));\n    }\n}"
    },
    "pair": {
        "write_class": "com.google.common.cache.CacheBuilder",
        "write_method": "build",
        "read_class": "com.google.common.cache.Cache",
        "read_method": "getIfPresent"
    },
    "java_code_simple": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Build a cache instance\n        Cache<Integer, String> cache = CacheBuilder.newBuilder().build();\n        \n        // Write to the cache\n        /* write */ cache.put(1, \"Hello, World!\");\n\n        // Read from the cache\n        /* read */ String value = cache.getIfPresent(1);\n        \n        // Print the value\n        System.out.println(value);\n    }\n}",
    "java_code_complex": "import com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Build a cache instance\n        Cache<Integer, String> cache = CacheBuilder.newBuilder().build();\n        \n        // Write to the cache\n        /* write */ cache.put(1, \"Hello, World!\");\n\n        // Create an ArrayList to hold some values\n        List<Integer> numbers = new ArrayList<>();\n        for (int i = 0; i < 10; i++) {\n            numbers.add(i * 2);\n        }\n\n        // Perform some unrelated operations\n        List<String> messages = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            messages.add(\"Message \" + i);\n        }\n        \n        // Print messages\n        for (String message : messages) {\n            System.out.println(message);\n        }\n\n        // Read from the cache\n        /* read */ String value = cache.getIfPresent(1);\n        \n        // Print the value retrieved from the cache\n        System.out.println(value);\n\n        // Add more complexity with the numbers list\n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n    }\n}"
}