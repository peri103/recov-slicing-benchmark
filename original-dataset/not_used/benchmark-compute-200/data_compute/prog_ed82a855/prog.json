{
  "Code": "import java.util.ArrayDeque;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArrayDeque<Integer> deque = new ArrayDeque<>();\n\n        // Initialize deque with some values\n        for (int i = 0; i < 5; i++) {\n            deque.addLast(i + 10);\n        }\n\n        // Misleading operations\n        deque.addFirst(100);\n        deque.addLast(200);\n        deque.offerFirst(300);\n        deque.offerLast(400);\n\n        // Some unrelated calculations\n        int x = 5 * 42 / 3 + 19;\n\n        // More deque operations\n        if (x % 5 == 0) {\n            deque.removeFirst();\n            deque.addLast(500);\n        } else {\n            deque.pollFirst();\n            deque.offerLast(600);\n        }\n\n        /* other operations */\n        int y = x * 2 - 99;\n\n        // Conditional affecting whether the write is executed\n        if (y % 2 == 0) {\n            /* write */ deque.addFirst(1);\n        } else {\n            deque.addLast(700);\n        }\n\n        // More misleading operations\n        deque.removeLast();\n        deque.addFirst(800);\n\n        // Unrelated computations\n        int z = y + x - 73;\n\n        // Ensure we're pulling the correct value at read point\n        int indexOfInterest = 0;\n        while (!deque.isEmpty() && indexOfInterest < 3) {\n            Integer temp = deque.poll();\n            if (temp == null || temp == 1) { // Artificial condition to preserve value\n                deque.addFirst(temp);\n                break;\n            }\n            indexOfInterest++;\n        }\n\n        /* read */ int ret = deque.peekFirst();\n\n        // Outputting the result to observe the effect\n        System.out.println(\"Retrieved value: \" + ret);\n    }\n}\n",
  "Internal Variable": "elements[0]"
}