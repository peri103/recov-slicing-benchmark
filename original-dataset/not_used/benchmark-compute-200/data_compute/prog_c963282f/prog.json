{
  "Code": "import java.util.PriorityQueue;\n\npublic class Main {\n    public static void main(String[] args) {\n        PriorityQueue<Integer> pq = new PriorityQueue<>();\n        \n        pq.add(100);\n        pq.add(50);\n        pq.add(150);\n\n        // Some unrelated operations\n        if (Math.random() > 0.5) {\n            pq.remove(50);  // Misleading modification, won't affect the read\n        } else {\n            pq.peek();  // Another misleading operation\n        }\n\n        // Dummy calculations\n        int result = (int)(Math.pow(5, 3) + 42);\n        result = result % 5;\n\n        /* write */ pq.add(25);  // This ensures 25 is the smallest element\n\n        // More unrelated PriorityQueue operations\n        pq.add(200); \n        pq.add(75); \n        pq.poll();  // Removes another element, making sure 25 stays as the minimum\n\n        // Here's an operation that appears similar to the read\n        pq.peek();  // This won't influence the final read\n\n        /* read */ int ret = pq.peek();  // Retrieves and stores the smallest element\n\n        // Output\n        System.out.println(\"The read value is: \" + ret);\n    }\n}",
  "Internal Variable": "PriorityQueue.heap[0]"
}