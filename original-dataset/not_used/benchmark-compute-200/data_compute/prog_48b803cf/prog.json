{
    "Code": "import java.util.concurrent.CopyOnWriteArrayList;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArrayList<Integer> list = new CopyOnWriteArrayList<>();\n\n        // Initial set of elements\n        list.addAll(Arrays.asList(10, 20, 30, 40));\n\n        /* misleading operations */\n        list.set(2, 35); // Change an unrelated index\n\n        /* other operations */\n        int randomProduct = (5 * list.size()) + (list.get(0) * 2);\n\n        // Confusing logic that doesn't affect the read target directly\n        /* write */ list.add(randomProduct % 10 == 0 ? 50 : 45);\n\n        /* other operations */\n        if (randomProduct % 5 != 0) {\n            list.add(randomProduct / 2);\n        } else {\n            list.add(0, randomProduct + 1);\n        }\n\n        /* misleading operations */\n        list.removeIf(x -> x % 15 == 0);\n\n        /* already added operations but still misleading */\n        if (list.contains(42)) {\n            list.add(randomProduct % 6);\n        }\n\n        // Read point targeting the value defined at write point\n        /* read */ int ret = list.get(4);  // The index here is affected by the write\n\n        System.out.println(\"Read value: \" + ret);\n    }\n}",
    "Internal Variable": "array[4]"
}