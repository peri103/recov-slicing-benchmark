{
  "Code": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<Integer> set = new CopyOnWriteArraySet<>();\n        // Initialize set with misleading entries\n        set.add(3);\n        set.add(5);\n        set.add(7);\n\n        // Intermediate computations\n        int hash = 0;\n        for (int i = 0; i < 100; i++) {\n            hash += i;\n        }\n\n        // Conditional logic for obfuscation\n        boolean condition = (hash % 2 == 0);\n        \n        // Write point\n        if (condition) {\n            /* write */ set.add(42); // Only this affects read\n        } else {\n            set.add(100);\n        }\n\n        // More unrelated operations\n        set.add(99);\n        set.add(101);\n\n        // Remove some elements that do not affect the read value\n        set.remove(3);\n        set.remove(5);\n\n        // This read point retrieves '42'\n        /* read */ boolean exists = set.contains(42);\n\n        // Print to verify\n        System.out.println(\"Read value: \" + exists);\n    }\n}\n",
  "Internal Variable": "set[] - under the hood CopyOnWriteArraySet relies on an array in CopyOnWriteArrayList"
}