{
    "Code": "import java.util.concurrent.CopyOnWriteArraySet;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<Integer> set = new CopyOnWriteArraySet<>();\n        \n        set.add(5);\n        set.add(10);\n        int sum = 0;\n        for (int i = 0; i < 5; i++) { // Unrelated loop\n            sum += i;\n        }\n\n        if (sum % 2 == 0) { // Misleading conditional\n            set.add(15); // This does not affect the read value\n        } else {\n            set.add(20);\n        }\n\n        /* write */ set.add(sum + 25); // This affects the read point\n\n        int misleadingValue = set.contains(10) ? 100 : 200; \n        for (int i : set) { // Misleading iteration\n            misleadingValue += i;\n        }\n\n        int uselessVar = misleadingValue / 5; // Another layer of obfuscation\n        uselessVar *= 2;\n\n        /* read */ int ret = set.stream().filter(x -> x > 29).findFirst().orElse(0);\n        System.out.println(ret);\n    }\n}\n",
    "Internal Variable": "backingArray[2]"
}