{
  "Code": "import java.util.Vector;\n\npublic class Main {\n    public static void main(String[] args) {\n        Vector<Integer> vector = new Vector<>();\n        \n        // Fill the vector with initial values\n        vector.add(10);\n        vector.add(20);\n        vector.add(30);\n        vector.add(40);\n        vector.add(50);\n\n        // Additional unrelated logic\n        int indexToRead = (int) Math.sqrt(49);  // Will evaluate to 7\n        int falseCondition = indexToRead % 2;  // Will be 1 (true)\n\n        // Add more misleading operations on vector\n        if (falseCondition == 0) {\n            vector.set(0, 100);  // Won't be executed\n        } else {\n            vector.set(1, 200);  // Execution mislead\n        }\n\n        // A conditional block that governs the \"write\" point\n        if (indexToRead > 5) {\n            /* write */ vector.add(1, 99); // Correct write that affects the \"read\" point\n        } else {\n            vector.add(0, 88);  // Misleading write\n        }\n\n        vector.add(2);  // Another unrelated addition\n        vector.add(3);  // Another unrelated addition\n        vector.remove(0); // Misleading operation\n\n        // Further alterations to confuse static analysis\n        int check = vector.indexOf(200); // Always -1 when misleading block\n        if (check < 0) {\n            vector.set(3, 250);\n        }\n\n        // Correct read point\n        /* read */ int ret = vector.get(1);\n\n        // Print the retrieved value for demonstration (though not required)\n        System.out.println(ret);\n    }\n}\n",
  "Internal Variable": "elementData[1]"
}