{
  "Code": "import java.util.EnumMap;\nimport java.util.Map;\n\npublic class Main {\n    enum Day {\n        MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY\n    }\n\n    public static void main(String[] args) {\n        Map<Day, Integer> weekMap = new EnumMap<>(Day.class);\n\n        // Populate with initial values\n        for (Day day : Day.values()) {\n            weekMap.put(day, 0);\n        }\n\n        // Other operations\n        int misleadingVal = complexCalculation();\n\n        // condition triggers write point indirectly\n        if (misleadingVal % 2 == 0) {\n            /* other write */ weekMap.put(Day.MONDAY, 100);\n        } else {\n            /* write */ weekMap.put(Day.WEDNESDAY, 25);\n        }\n\n        // More operations that shouldn't affect the read\n        misleadingModifications(weekMap);\n\n        // The exact point which affects the read\n        weekMap.put(Day.FRIDAY, 1000); // misleading write\n\n        /* read */ int ret = weekMap.get(Day.WEDNESDAY);\n        System.out.println(\"The value retrieved is: \" + ret);\n    }\n\n    private static int complexCalculation() {\n        int result = 0;\n        for (int i = 0; i < 100; i++) {\n            result += (i * i - i) % 7; // some complex computation\n        }\n        return result;\n    }\n\n    private static void misleadingModifications(Map<Day, Integer> map) {\n        map.put(Day.TUESDAY, 200); // unrelated\n        map.put(Day.THURSDAY, 300); // unrelated\n        map.remove(Day.SATURDAY); // does not affect WEDNESDAY\n\n        // Inserting a value and then removing it\n        map.put(Day.SUNDAY, 500);\n        map.remove(Day.SUNDAY);\n    }\n}",
  "Internal Variable": "weekMap[Day.WEDNESDAY]"
}