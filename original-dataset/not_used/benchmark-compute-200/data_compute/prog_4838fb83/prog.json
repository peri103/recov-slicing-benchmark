{
    "Code": "import java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArrayList<Integer> list = new CopyOnWriteArrayList<>();\n        list.add(5);\n        list.add(10);\n        int x = complexCalculation(42);\n\n        /* Interleaved operations that don't affect read result directly */\n        if (x > 100) {\n            list.add(20);\n        }\n        list.add(x);\n        \n        /* Misleading modification */\n        list.set(1, 50);\n        list.add(4, 30);\n        list.add(2, 15);\n\n        // This doesn't affect the read, as it operates on the wrong index\n        list.remove(2);\n\n        /* write */ list.add(1, 25); // Write that affects the read point\n\n        /* read */ int ret = list.get(2);\n        System.out.println(\"Ret value: \" + ret);\n    }\n\n    private static int complexCalculation(int input) {\n        return input * 3 + (input / 2) - (input % 3);\n    }\n}\n",
    "Internal Variable": "array[2]"
}