{
  "Code": "import java.util.Map;\nimport java.util.WeakHashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        Map<Key, Integer> map = new WeakHashMap<>();\n        Key key1 = new Key(\"key1\");\n        Key key2 = new Key(\"key2\");\n        \n        /* other operations */\n        int sum = 0;\n        for (int i = 0; i < 100; i++) {\n            sum += i;\n        }\n\n        /* other operations */\n        map.put(key1, 10);\n        map.put(new Key(\"key3\"), 30);\n\n        /* misleading operation */\n        if (sum % 2 == 0) {\n            map.put(key2, 20);\n        }\n\n        /* write */ map.put(key1, 42);\n        \n        // Perform some intermediate operations that should not change the outcome\n        map.put(new Key(\"key4\"), 40);\n        map.remove(new Key(\"key3\"));\n\n        /* misleading operation */\n        if (sum % 2 == 0) {\n            map.put(key2, 25);\n        }\n\n        /* read */ int ret = map.get(key1);\n\n        System.out.println(\"The value at read point is: \" + ret);\n    }\n\n    static class Key {\n        private String id;\n\n        Key(String id) {\n            this.id = id;\n        }\n\n        @Override\n        public int hashCode() {\n            return id.hashCode();\n        }\n\n        @Override\n        public boolean equals(Object obj) {\n            if (this == obj) return true;\n            if (obj == null || getClass() != obj.getClass()) return false;\n            Key key = (Key) obj;\n            return id.equals(key.id);\n        }\n    }\n}",
  "Internal Variable": "Entry with key1 in WeakHashMap"
}