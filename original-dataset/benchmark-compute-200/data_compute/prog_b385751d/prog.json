{
  "Code": "import java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.Random;\n\npublic class Main {\n    public static void main(String[] args) {\n        CopyOnWriteArraySet<Integer> set = new CopyOnWriteArraySet<>();\n        Random random = new Random();\n\n        // Populating the set with initial values\n        for (int i = 0; i < 5; i++) {\n            set.add(i * 2);\n        }\n\n        // Other operations that do not affect the read point\n        int randomCheck = random.nextInt(10);\n        if (randomCheck > 5) {\n            set.add(100); // misleading addition\n        } else {\n            set.add(101); // another misleading addition\n        }\n\n        // Calculating the index to read and a complex variable\n        Integer[] setArray = set.toArray(new Integer[0]);\n        int calculatedIndex;\n        if (setArray.length > 10) {\n            calculatedIndex = 4;\n        } else {\n            calculatedIndex = 2;\n        }\n\n        // The actual operation affecting the read value\n        /* write */ set.add(calculatedIndex * 10 + 1);\n\n        // More unrelated complex manipulations\n        if (set.contains(5)) {\n            set.remove(4);\n        } else {\n            set.add(5);\n        }\n\n        set.add(20); // More misleading additions\n        set.remove(3); // and removals\n\n        // Additional operations that do not affect the relevant read\n        if (randomCheck % 2 == 0) {\n            set.add(30);\n        } else {\n            set.remove(20);\n        }\n\n        // Finally reading from the array form of the set\n        /* read */ int ret = setArray[1];  // Based on the retrieval index and calculated operations\n        System.out.println(ret);\n    }\n}\n",
  "Internal Variable": "array[1]"
}