{
  "Code": "import java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashSet<Integer> set = new HashSet<>();\n\n        // Adding elements that don't matter to the read point\n        set.add(50);\n        set.add(75);\n\n        // Variables for misleading computations\n        int misleadingValue = 100 + 50 * 2;\n\n        // Conditional logic\n        if (misleadingValue % 3 == 0) { // False condition\n            set.add(200);\n        } else {\n            // Write point before read affecting ret\n            /* write */ set.add(100);\n        }\n\n        // Other operations on HashSet, unrelated\n        set.remove(50);\n        set.add(misleadingValue);\n\n        // Intermediate computation\n        int complexCalculation = (misleadingValue / 2) * 3;\n\n        // Additional unrelated operations\n        set.add(complexCalculation);\n\n        // Obfuscated but still affecting the ultimate result\n        if (set.contains(75)) {\n            set.add(101);\n        } else {\n            set.add(102);\n        }\n\n        /* read */ boolean ret = set.contains(100); // This read point is determined by the write\n\n        // Printing the result for demonstration purposes\n        System.out.println(\"Value read: \" + ret);\n    }\n}",
  "Internal Variable": "table[hash(100) & (n - 1)]"
}