{
    "java_code": "import com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a Table using HashBasedTable\n        Table<String, String, Integer> table = HashBasedTable.create();\n        \n        // Initialize the keys and value\n        String rowKey = \"row1\";\n        String columnKey = \"column1\";\n        Integer valueToWrite = 42;\n        \n        /* write */ table.put(rowKey, columnKey, valueToWrite);\n        \n        // Additional unrelated code for complexity\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"Hello\");\n        list.add(\"World\");\n        \n        HashMap<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < list.size(); i++) {\n            map.put(list.get(i), i);\n        }\n        \n        for (Map.Entry<String, Integer> entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n        \n        // More unrelated complexity\n        ArrayList<Integer> numbers = new ArrayList<>();\n        for (int i = 1; i <= 5; i++) {\n            numbers.add(i * 10);\n        }\n        \n        for (Integer number : numbers) {\n            System.out.println(\"Number: \" + number);\n        }\n\n        /* read */ Integer valueRead = table.get(rowKey, columnKey);\n        \n        System.out.println(\"Value read from table: \" + valueRead);\n    }\n}",
    "java_code_simple": "import com.google.common.collect.HashBasedTable;\nimport com.google.common.collect.Table;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a Table using HashBasedTable\n        Table<String, String, Integer> table = HashBasedTable.create();\n        \n        // Initialize the keys and value\n        String rowKey = \"row1\";\n        String columnKey = \"column1\";\n        Integer valueToWrite = 42;\n        \n        /* write */ table.put(rowKey, columnKey, valueToWrite);\n        \n        /* read */ Integer valueRead = table.get(rowKey, columnKey);\n        \n        System.out.println(valueRead);\n    }\n}",
    "pair": {
        "write_class": "com.google.common.collect.TableBuilder",
        "write_method": "put",
        "read_class": "com.google.common.collect.Table",
        "read_method": "get"
    }
}